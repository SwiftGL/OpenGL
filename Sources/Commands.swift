// WARNING: This file is generated. Modifications will be lost.

// Copyright (c) 2015-2016 David Turnbull
// Copyright (c) 2013-2016 The Khronos Group Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and/or associated documentation files (the
// "Materials"), to deal in the Materials without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Materials, and to
// permit persons to whom the Materials are furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Materials.
//
// THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.


public func glAccum(_ op:GLenum, _ value:GLfloat) {glAccum_P(op, value)}
public func glAccum(op:GLenum, value:GLfloat) {glAccum_P(op, value)}
var glAccum_P:@convention(c)(GLenum, GLfloat) -> Void = glAccum_L
public func glAccumxOES(_ op:GLenum, _ value:GLfixed) {glAccumxOES_P(op, value)}
public func glAccumxOES(op:GLenum, value:GLfixed) {glAccumxOES_P(op, value)}
var glAccumxOES_P:@convention(c)(GLenum, GLfixed) -> Void = glAccumxOES_L
public func glActiveProgramEXT(_ program:GLuint) {glActiveProgramEXT_P(program)}
public func glActiveProgramEXT(program:GLuint) {glActiveProgramEXT_P(program)}
var glActiveProgramEXT_P:@convention(c)(GLuint) -> Void = glActiveProgramEXT_L
public func glActiveShaderProgram(_ pipeline:GLuint, _ program:GLuint) {glActiveShaderProgram_P(pipeline, program)}
public func glActiveShaderProgram(pipeline:GLuint, program:GLuint) {glActiveShaderProgram_P(pipeline, program)}
var glActiveShaderProgram_P:@convention(c)(GLuint, GLuint) -> Void = glActiveShaderProgram_L
public func glActiveShaderProgramEXT(_ pipeline:GLuint, _ program:GLuint) {glActiveShaderProgramEXT_P(pipeline, program)}
public func glActiveShaderProgramEXT(pipeline:GLuint, program:GLuint) {glActiveShaderProgramEXT_P(pipeline, program)}
var glActiveShaderProgramEXT_P:@convention(c)(GLuint, GLuint) -> Void = glActiveShaderProgramEXT_L
public func glActiveStencilFaceEXT(_ face:GLenum) {glActiveStencilFaceEXT_P(face)}
public func glActiveStencilFaceEXT(face:GLenum) {glActiveStencilFaceEXT_P(face)}
var glActiveStencilFaceEXT_P:@convention(c)(GLenum) -> Void = glActiveStencilFaceEXT_L
public func glActiveTexture(_ texture:GLenum) {glActiveTexture_P(texture)}
public func glActiveTexture(texture:GLenum) {glActiveTexture_P(texture)}
var glActiveTexture_P:@convention(c)(GLenum) -> Void = glActiveTexture_L
public func glActiveTextureARB(_ texture:GLenum) {glActiveTextureARB_P(texture)}
public func glActiveTextureARB(texture:GLenum) {glActiveTextureARB_P(texture)}
var glActiveTextureARB_P:@convention(c)(GLenum) -> Void = glActiveTextureARB_L
public func glActiveVaryingNV(_ program:GLuint, _ name:UnsafePointer<GLchar>) {glActiveVaryingNV_P(program, name)}
public func glActiveVaryingNV(program:GLuint, name:UnsafePointer<GLchar>) {glActiveVaryingNV_P(program, name)}
var glActiveVaryingNV_P:@convention(c)(GLuint, UnsafePointer<GLchar>) -> Void = glActiveVaryingNV_L
public func glAlphaFragmentOp1ATI(_ op:GLenum, _ dst:GLuint, _ dstMod:GLuint, _ arg1:GLuint, _ arg1Rep:GLuint, _ arg1Mod:GLuint) {glAlphaFragmentOp1ATI_P(op, dst, dstMod, arg1, arg1Rep, arg1Mod)}
public func glAlphaFragmentOp1ATI(op:GLenum, dst:GLuint, dstMod:GLuint, arg1:GLuint, arg1Rep:GLuint, arg1Mod:GLuint) {glAlphaFragmentOp1ATI_P(op, dst, dstMod, arg1, arg1Rep, arg1Mod)}
var glAlphaFragmentOp1ATI_P:@convention(c)(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint) -> Void = glAlphaFragmentOp1ATI_L
public func glAlphaFragmentOp2ATI(_ op:GLenum, _ dst:GLuint, _ dstMod:GLuint, _ arg1:GLuint, _ arg1Rep:GLuint, _ arg1Mod:GLuint, _ arg2:GLuint, _ arg2Rep:GLuint, _ arg2Mod:GLuint) {glAlphaFragmentOp2ATI_P(op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod)}
public func glAlphaFragmentOp2ATI(op:GLenum, dst:GLuint, dstMod:GLuint, arg1:GLuint, arg1Rep:GLuint, arg1Mod:GLuint, arg2:GLuint, arg2Rep:GLuint, arg2Mod:GLuint) {glAlphaFragmentOp2ATI_P(op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod)}
var glAlphaFragmentOp2ATI_P:@convention(c)(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) -> Void = glAlphaFragmentOp2ATI_L
public func glAlphaFragmentOp3ATI(_ op:GLenum, _ dst:GLuint, _ dstMod:GLuint, _ arg1:GLuint, _ arg1Rep:GLuint, _ arg1Mod:GLuint, _ arg2:GLuint, _ arg2Rep:GLuint, _ arg2Mod:GLuint, _ arg3:GLuint, _ arg3Rep:GLuint, _ arg3Mod:GLuint) {glAlphaFragmentOp3ATI_P(op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod)}
public func glAlphaFragmentOp3ATI(op:GLenum, dst:GLuint, dstMod:GLuint, arg1:GLuint, arg1Rep:GLuint, arg1Mod:GLuint, arg2:GLuint, arg2Rep:GLuint, arg2Mod:GLuint, arg3:GLuint, arg3Rep:GLuint, arg3Mod:GLuint) {glAlphaFragmentOp3ATI_P(op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod)}
var glAlphaFragmentOp3ATI_P:@convention(c)(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) -> Void = glAlphaFragmentOp3ATI_L
public func glAlphaFunc(_ fn:GLenum, _ ref:GLfloat) {glAlphaFunc_P(fn, ref)}
public func glAlphaFunc(fn:GLenum, ref:GLfloat) {glAlphaFunc_P(fn, ref)}
var glAlphaFunc_P:@convention(c)(GLenum, GLfloat) -> Void = glAlphaFunc_L
public func glAlphaFuncQCOM(_ fn:GLenum, _ ref:GLclampf) {glAlphaFuncQCOM_P(fn, ref)}
public func glAlphaFuncQCOM(fn:GLenum, ref:GLclampf) {glAlphaFuncQCOM_P(fn, ref)}
var glAlphaFuncQCOM_P:@convention(c)(GLenum, GLclampf) -> Void = glAlphaFuncQCOM_L
public func glAlphaFuncx(_ fn:GLenum, _ ref:GLfixed) {glAlphaFuncx_P(fn, ref)}
public func glAlphaFuncx(fn:GLenum, ref:GLfixed) {glAlphaFuncx_P(fn, ref)}
var glAlphaFuncx_P:@convention(c)(GLenum, GLfixed) -> Void = glAlphaFuncx_L
public func glAlphaFuncxOES(_ fn:GLenum, _ ref:GLfixed) {glAlphaFuncxOES_P(fn, ref)}
public func glAlphaFuncxOES(fn:GLenum, ref:GLfixed) {glAlphaFuncxOES_P(fn, ref)}
var glAlphaFuncxOES_P:@convention(c)(GLenum, GLfixed) -> Void = glAlphaFuncxOES_L
public func glApplyFramebufferAttachmentCMAAINTEL() {glApplyFramebufferAttachmentCMAAINTEL_P()}
var glApplyFramebufferAttachmentCMAAINTEL_P:@convention(c)() -> Void = glApplyFramebufferAttachmentCMAAINTEL_L
public func glApplyTextureEXT(_ mode:GLenum) {glApplyTextureEXT_P(mode)}
public func glApplyTextureEXT(mode:GLenum) {glApplyTextureEXT_P(mode)}
var glApplyTextureEXT_P:@convention(c)(GLenum) -> Void = glApplyTextureEXT_L
public func glAreProgramsResidentNV(_ n:GLsizei, _ programs:UnsafePointer<GLuint>, _ residences:UnsafeMutablePointer<GLboolean>) -> GLboolean {return glAreProgramsResidentNV_P(n, programs, residences)}
public func glAreProgramsResidentNV(n:GLsizei, programs:UnsafePointer<GLuint>, residences:UnsafeMutablePointer<GLboolean>) -> GLboolean {return glAreProgramsResidentNV_P(n, programs, residences)}
var glAreProgramsResidentNV_P:@convention(c)(GLsizei, UnsafePointer<GLuint>, UnsafeMutablePointer<GLboolean>) -> GLboolean = glAreProgramsResidentNV_L
public func glAreTexturesResident(_ n:GLsizei, _ textures:UnsafePointer<GLuint>, _ residences:UnsafeMutablePointer<GLboolean>) -> GLboolean {return glAreTexturesResident_P(n, textures, residences)}
public func glAreTexturesResident(n:GLsizei, textures:UnsafePointer<GLuint>, residences:UnsafeMutablePointer<GLboolean>) -> GLboolean {return glAreTexturesResident_P(n, textures, residences)}
var glAreTexturesResident_P:@convention(c)(GLsizei, UnsafePointer<GLuint>, UnsafeMutablePointer<GLboolean>) -> GLboolean = glAreTexturesResident_L
public func glAreTexturesResidentEXT(_ n:GLsizei, _ textures:UnsafePointer<GLuint>, _ residences:UnsafeMutablePointer<GLboolean>) -> GLboolean {return glAreTexturesResidentEXT_P(n, textures, residences)}
public func glAreTexturesResidentEXT(n:GLsizei, textures:UnsafePointer<GLuint>, residences:UnsafeMutablePointer<GLboolean>) -> GLboolean {return glAreTexturesResidentEXT_P(n, textures, residences)}
var glAreTexturesResidentEXT_P:@convention(c)(GLsizei, UnsafePointer<GLuint>, UnsafeMutablePointer<GLboolean>) -> GLboolean = glAreTexturesResidentEXT_L
public func glArrayElement(_ i:GLint) {glArrayElement_P(i)}
public func glArrayElement(i:GLint) {glArrayElement_P(i)}
var glArrayElement_P:@convention(c)(GLint) -> Void = glArrayElement_L
public func glArrayElementEXT(_ i:GLint) {glArrayElementEXT_P(i)}
public func glArrayElementEXT(i:GLint) {glArrayElementEXT_P(i)}
var glArrayElementEXT_P:@convention(c)(GLint) -> Void = glArrayElementEXT_L
public func glArrayObjectATI(_ array:GLenum, _ size:GLint, _ type:GLenum, _ stride:GLsizei, _ buffer:GLuint, _ offset:GLuint) {glArrayObjectATI_P(array, size, type, stride, buffer, offset)}
public func glArrayObjectATI(array:GLenum, size:GLint, type:GLenum, stride:GLsizei, buffer:GLuint, offset:GLuint) {glArrayObjectATI_P(array, size, type, stride, buffer, offset)}
var glArrayObjectATI_P:@convention(c)(GLenum, GLint, GLenum, GLsizei, GLuint, GLuint) -> Void = glArrayObjectATI_L
public func glAsyncMarkerSGIX(_ marker:GLuint) {glAsyncMarkerSGIX_P(marker)}
public func glAsyncMarkerSGIX(marker:GLuint) {glAsyncMarkerSGIX_P(marker)}
var glAsyncMarkerSGIX_P:@convention(c)(GLuint) -> Void = glAsyncMarkerSGIX_L
public func glAttachObjectARB(_ containerObj:GLhandleARB, _ obj:GLhandleARB) {glAttachObjectARB_P(containerObj, obj)}
public func glAttachObjectARB(containerObj:GLhandleARB, obj:GLhandleARB) {glAttachObjectARB_P(containerObj, obj)}
var glAttachObjectARB_P:@convention(c)(GLhandleARB, GLhandleARB) -> Void = glAttachObjectARB_L
public func glAttachShader(_ program:GLuint, _ shader:GLuint) {glAttachShader_P(program, shader)}
public func glAttachShader(program:GLuint, shader:GLuint) {glAttachShader_P(program, shader)}
var glAttachShader_P:@convention(c)(GLuint, GLuint) -> Void = glAttachShader_L
public func glBegin(_ mode:GLenum) {glBegin_P(mode)}
public func glBegin(mode:GLenum) {glBegin_P(mode)}
var glBegin_P:@convention(c)(GLenum) -> Void = glBegin_L
public func glBeginConditionalRender(_ id:GLuint, _ mode:GLenum) {glBeginConditionalRender_P(id, mode)}
public func glBeginConditionalRender(id:GLuint, mode:GLenum) {glBeginConditionalRender_P(id, mode)}
var glBeginConditionalRender_P:@convention(c)(GLuint, GLenum) -> Void = glBeginConditionalRender_L
public func glBeginConditionalRenderNV(_ id:GLuint, _ mode:GLenum) {glBeginConditionalRenderNV_P(id, mode)}
public func glBeginConditionalRenderNV(id:GLuint, mode:GLenum) {glBeginConditionalRenderNV_P(id, mode)}
var glBeginConditionalRenderNV_P:@convention(c)(GLuint, GLenum) -> Void = glBeginConditionalRenderNV_L
public func glBeginConditionalRenderNVX(_ id:GLuint) {glBeginConditionalRenderNVX_P(id)}
public func glBeginConditionalRenderNVX(id:GLuint) {glBeginConditionalRenderNVX_P(id)}
var glBeginConditionalRenderNVX_P:@convention(c)(GLuint) -> Void = glBeginConditionalRenderNVX_L
public func glBeginFragmentShaderATI() {glBeginFragmentShaderATI_P()}
var glBeginFragmentShaderATI_P:@convention(c)() -> Void = glBeginFragmentShaderATI_L
public func glBeginOcclusionQueryNV(_ id:GLuint) {glBeginOcclusionQueryNV_P(id)}
public func glBeginOcclusionQueryNV(id:GLuint) {glBeginOcclusionQueryNV_P(id)}
var glBeginOcclusionQueryNV_P:@convention(c)(GLuint) -> Void = glBeginOcclusionQueryNV_L
public func glBeginPerfMonitorAMD(_ monitor:GLuint) {glBeginPerfMonitorAMD_P(monitor)}
public func glBeginPerfMonitorAMD(monitor:GLuint) {glBeginPerfMonitorAMD_P(monitor)}
var glBeginPerfMonitorAMD_P:@convention(c)(GLuint) -> Void = glBeginPerfMonitorAMD_L
public func glBeginPerfQueryINTEL(_ queryHandle:GLuint) {glBeginPerfQueryINTEL_P(queryHandle)}
public func glBeginPerfQueryINTEL(queryHandle:GLuint) {glBeginPerfQueryINTEL_P(queryHandle)}
var glBeginPerfQueryINTEL_P:@convention(c)(GLuint) -> Void = glBeginPerfQueryINTEL_L
public func glBeginQuery(_ target:GLenum, _ id:GLuint) {glBeginQuery_P(target, id)}
public func glBeginQuery(target:GLenum, id:GLuint) {glBeginQuery_P(target, id)}
var glBeginQuery_P:@convention(c)(GLenum, GLuint) -> Void = glBeginQuery_L
public func glBeginQueryARB(_ target:GLenum, _ id:GLuint) {glBeginQueryARB_P(target, id)}
public func glBeginQueryARB(target:GLenum, id:GLuint) {glBeginQueryARB_P(target, id)}
var glBeginQueryARB_P:@convention(c)(GLenum, GLuint) -> Void = glBeginQueryARB_L
public func glBeginQueryEXT(_ target:GLenum, _ id:GLuint) {glBeginQueryEXT_P(target, id)}
public func glBeginQueryEXT(target:GLenum, id:GLuint) {glBeginQueryEXT_P(target, id)}
var glBeginQueryEXT_P:@convention(c)(GLenum, GLuint) -> Void = glBeginQueryEXT_L
public func glBeginQueryIndexed(_ target:GLenum, _ index:GLuint, _ id:GLuint) {glBeginQueryIndexed_P(target, index, id)}
public func glBeginQueryIndexed(target:GLenum, index:GLuint, id:GLuint) {glBeginQueryIndexed_P(target, index, id)}
var glBeginQueryIndexed_P:@convention(c)(GLenum, GLuint, GLuint) -> Void = glBeginQueryIndexed_L
public func glBeginTransformFeedback(_ primitiveMode:GLenum) {glBeginTransformFeedback_P(primitiveMode)}
public func glBeginTransformFeedback(primitiveMode:GLenum) {glBeginTransformFeedback_P(primitiveMode)}
var glBeginTransformFeedback_P:@convention(c)(GLenum) -> Void = glBeginTransformFeedback_L
public func glBeginTransformFeedbackEXT(_ primitiveMode:GLenum) {glBeginTransformFeedbackEXT_P(primitiveMode)}
public func glBeginTransformFeedbackEXT(primitiveMode:GLenum) {glBeginTransformFeedbackEXT_P(primitiveMode)}
var glBeginTransformFeedbackEXT_P:@convention(c)(GLenum) -> Void = glBeginTransformFeedbackEXT_L
public func glBeginTransformFeedbackNV(_ primitiveMode:GLenum) {glBeginTransformFeedbackNV_P(primitiveMode)}
public func glBeginTransformFeedbackNV(primitiveMode:GLenum) {glBeginTransformFeedbackNV_P(primitiveMode)}
var glBeginTransformFeedbackNV_P:@convention(c)(GLenum) -> Void = glBeginTransformFeedbackNV_L
public func glBeginVertexShaderEXT() {glBeginVertexShaderEXT_P()}
var glBeginVertexShaderEXT_P:@convention(c)() -> Void = glBeginVertexShaderEXT_L
public func glBeginVideoCaptureNV(_ video_capture_slot:GLuint) {glBeginVideoCaptureNV_P(video_capture_slot)}
public func glBeginVideoCaptureNV(video_capture_slot:GLuint) {glBeginVideoCaptureNV_P(video_capture_slot)}
var glBeginVideoCaptureNV_P:@convention(c)(GLuint) -> Void = glBeginVideoCaptureNV_L
public func glBindAttribLocation(_ program:GLuint, _ index:GLuint, _ name:UnsafePointer<GLchar>) {glBindAttribLocation_P(program, index, name)}
public func glBindAttribLocation(program:GLuint, index:GLuint, name:UnsafePointer<GLchar>) {glBindAttribLocation_P(program, index, name)}
var glBindAttribLocation_P:@convention(c)(GLuint, GLuint, UnsafePointer<GLchar>) -> Void = glBindAttribLocation_L
public func glBindAttribLocationARB(_ programObj:GLhandleARB, _ index:GLuint, _ name:UnsafePointer<GLcharARB>) {glBindAttribLocationARB_P(programObj, index, name)}
public func glBindAttribLocationARB(programObj:GLhandleARB, index:GLuint, name:UnsafePointer<GLcharARB>) {glBindAttribLocationARB_P(programObj, index, name)}
var glBindAttribLocationARB_P:@convention(c)(GLhandleARB, GLuint, UnsafePointer<GLcharARB>) -> Void = glBindAttribLocationARB_L
public func glBindBuffer(_ target:GLenum, _ buffer:GLuint) {glBindBuffer_P(target, buffer)}
public func glBindBuffer(target:GLenum, buffer:GLuint) {glBindBuffer_P(target, buffer)}
var glBindBuffer_P:@convention(c)(GLenum, GLuint) -> Void = glBindBuffer_L
public func glBindBufferARB(_ target:GLenum, _ buffer:GLuint) {glBindBufferARB_P(target, buffer)}
public func glBindBufferARB(target:GLenum, buffer:GLuint) {glBindBufferARB_P(target, buffer)}
var glBindBufferARB_P:@convention(c)(GLenum, GLuint) -> Void = glBindBufferARB_L
public func glBindBufferBase(_ target:GLenum, _ index:GLuint, _ buffer:GLuint) {glBindBufferBase_P(target, index, buffer)}
public func glBindBufferBase(target:GLenum, index:GLuint, buffer:GLuint) {glBindBufferBase_P(target, index, buffer)}
var glBindBufferBase_P:@convention(c)(GLenum, GLuint, GLuint) -> Void = glBindBufferBase_L
public func glBindBufferBaseEXT(_ target:GLenum, _ index:GLuint, _ buffer:GLuint) {glBindBufferBaseEXT_P(target, index, buffer)}
public func glBindBufferBaseEXT(target:GLenum, index:GLuint, buffer:GLuint) {glBindBufferBaseEXT_P(target, index, buffer)}
var glBindBufferBaseEXT_P:@convention(c)(GLenum, GLuint, GLuint) -> Void = glBindBufferBaseEXT_L
public func glBindBufferBaseNV(_ target:GLenum, _ index:GLuint, _ buffer:GLuint) {glBindBufferBaseNV_P(target, index, buffer)}
public func glBindBufferBaseNV(target:GLenum, index:GLuint, buffer:GLuint) {glBindBufferBaseNV_P(target, index, buffer)}
var glBindBufferBaseNV_P:@convention(c)(GLenum, GLuint, GLuint) -> Void = glBindBufferBaseNV_L
public func glBindBufferOffsetEXT(_ target:GLenum, _ index:GLuint, _ buffer:GLuint, _ offset:GLintptr) {glBindBufferOffsetEXT_P(target, index, buffer, offset)}
public func glBindBufferOffsetEXT(target:GLenum, index:GLuint, buffer:GLuint, offset:GLintptr) {glBindBufferOffsetEXT_P(target, index, buffer, offset)}
var glBindBufferOffsetEXT_P:@convention(c)(GLenum, GLuint, GLuint, GLintptr) -> Void = glBindBufferOffsetEXT_L
public func glBindBufferOffsetNV(_ target:GLenum, _ index:GLuint, _ buffer:GLuint, _ offset:GLintptr) {glBindBufferOffsetNV_P(target, index, buffer, offset)}
public func glBindBufferOffsetNV(target:GLenum, index:GLuint, buffer:GLuint, offset:GLintptr) {glBindBufferOffsetNV_P(target, index, buffer, offset)}
var glBindBufferOffsetNV_P:@convention(c)(GLenum, GLuint, GLuint, GLintptr) -> Void = glBindBufferOffsetNV_L
public func glBindBufferRange(_ target:GLenum, _ index:GLuint, _ buffer:GLuint, _ offset:GLintptr, _ size:GLsizeiptr) {glBindBufferRange_P(target, index, buffer, offset, size)}
public func glBindBufferRange(target:GLenum, index:GLuint, buffer:GLuint, offset:GLintptr, size:GLsizeiptr) {glBindBufferRange_P(target, index, buffer, offset, size)}
var glBindBufferRange_P:@convention(c)(GLenum, GLuint, GLuint, GLintptr, GLsizeiptr) -> Void = glBindBufferRange_L
public func glBindBufferRangeEXT(_ target:GLenum, _ index:GLuint, _ buffer:GLuint, _ offset:GLintptr, _ size:GLsizeiptr) {glBindBufferRangeEXT_P(target, index, buffer, offset, size)}
public func glBindBufferRangeEXT(target:GLenum, index:GLuint, buffer:GLuint, offset:GLintptr, size:GLsizeiptr) {glBindBufferRangeEXT_P(target, index, buffer, offset, size)}
var glBindBufferRangeEXT_P:@convention(c)(GLenum, GLuint, GLuint, GLintptr, GLsizeiptr) -> Void = glBindBufferRangeEXT_L
public func glBindBufferRangeNV(_ target:GLenum, _ index:GLuint, _ buffer:GLuint, _ offset:GLintptr, _ size:GLsizeiptr) {glBindBufferRangeNV_P(target, index, buffer, offset, size)}
public func glBindBufferRangeNV(target:GLenum, index:GLuint, buffer:GLuint, offset:GLintptr, size:GLsizeiptr) {glBindBufferRangeNV_P(target, index, buffer, offset, size)}
var glBindBufferRangeNV_P:@convention(c)(GLenum, GLuint, GLuint, GLintptr, GLsizeiptr) -> Void = glBindBufferRangeNV_L
public func glBindBuffersBase(_ target:GLenum, _ first:GLuint, _ count:GLsizei, _ buffers:UnsafePointer<GLuint>) {glBindBuffersBase_P(target, first, count, buffers)}
public func glBindBuffersBase(target:GLenum, first:GLuint, count:GLsizei, buffers:UnsafePointer<GLuint>) {glBindBuffersBase_P(target, first, count, buffers)}
var glBindBuffersBase_P:@convention(c)(GLenum, GLuint, GLsizei, UnsafePointer<GLuint>) -> Void = glBindBuffersBase_L
public func glBindBuffersRange(_ target:GLenum, _ first:GLuint, _ count:GLsizei, _ buffers:UnsafePointer<GLuint>, _ offsets:UnsafePointer<GLintptr>, _ sizes:UnsafePointer<GLsizeiptr>) {glBindBuffersRange_P(target, first, count, buffers, offsets, sizes)}
public func glBindBuffersRange(target:GLenum, first:GLuint, count:GLsizei, buffers:UnsafePointer<GLuint>, offsets:UnsafePointer<GLintptr>, sizes:UnsafePointer<GLsizeiptr>) {glBindBuffersRange_P(target, first, count, buffers, offsets, sizes)}
var glBindBuffersRange_P:@convention(c)(GLenum, GLuint, GLsizei, UnsafePointer<GLuint>, UnsafePointer<GLintptr>, UnsafePointer<GLsizeiptr>) -> Void = glBindBuffersRange_L
public func glBindFragDataLocation(_ program:GLuint, _ color:GLuint, _ name:UnsafePointer<GLchar>) {glBindFragDataLocation_P(program, color, name)}
public func glBindFragDataLocation(program:GLuint, color:GLuint, name:UnsafePointer<GLchar>) {glBindFragDataLocation_P(program, color, name)}
var glBindFragDataLocation_P:@convention(c)(GLuint, GLuint, UnsafePointer<GLchar>) -> Void = glBindFragDataLocation_L
public func glBindFragDataLocationEXT(_ program:GLuint, _ color:GLuint, _ name:UnsafePointer<GLchar>) {glBindFragDataLocationEXT_P(program, color, name)}
public func glBindFragDataLocationEXT(program:GLuint, color:GLuint, name:UnsafePointer<GLchar>) {glBindFragDataLocationEXT_P(program, color, name)}
var glBindFragDataLocationEXT_P:@convention(c)(GLuint, GLuint, UnsafePointer<GLchar>) -> Void = glBindFragDataLocationEXT_L
public func glBindFragDataLocationIndexed(_ program:GLuint, _ colorNumber:GLuint, _ index:GLuint, _ name:UnsafePointer<GLchar>) {glBindFragDataLocationIndexed_P(program, colorNumber, index, name)}
public func glBindFragDataLocationIndexed(program:GLuint, colorNumber:GLuint, index:GLuint, name:UnsafePointer<GLchar>) {glBindFragDataLocationIndexed_P(program, colorNumber, index, name)}
var glBindFragDataLocationIndexed_P:@convention(c)(GLuint, GLuint, GLuint, UnsafePointer<GLchar>) -> Void = glBindFragDataLocationIndexed_L
public func glBindFragDataLocationIndexedEXT(_ program:GLuint, _ colorNumber:GLuint, _ index:GLuint, _ name:UnsafePointer<GLchar>) {glBindFragDataLocationIndexedEXT_P(program, colorNumber, index, name)}
public func glBindFragDataLocationIndexedEXT(program:GLuint, colorNumber:GLuint, index:GLuint, name:UnsafePointer<GLchar>) {glBindFragDataLocationIndexedEXT_P(program, colorNumber, index, name)}
var glBindFragDataLocationIndexedEXT_P:@convention(c)(GLuint, GLuint, GLuint, UnsafePointer<GLchar>) -> Void = glBindFragDataLocationIndexedEXT_L
public func glBindFragmentShaderATI(_ id:GLuint) {glBindFragmentShaderATI_P(id)}
public func glBindFragmentShaderATI(id:GLuint) {glBindFragmentShaderATI_P(id)}
var glBindFragmentShaderATI_P:@convention(c)(GLuint) -> Void = glBindFragmentShaderATI_L
public func glBindFramebuffer(_ target:GLenum, _ framebuffer:GLuint) {glBindFramebuffer_P(target, framebuffer)}
public func glBindFramebuffer(target:GLenum, framebuffer:GLuint) {glBindFramebuffer_P(target, framebuffer)}
var glBindFramebuffer_P:@convention(c)(GLenum, GLuint) -> Void = glBindFramebuffer_L
public func glBindFramebufferEXT(_ target:GLenum, _ framebuffer:GLuint) {glBindFramebufferEXT_P(target, framebuffer)}
public func glBindFramebufferEXT(target:GLenum, framebuffer:GLuint) {glBindFramebufferEXT_P(target, framebuffer)}
var glBindFramebufferEXT_P:@convention(c)(GLenum, GLuint) -> Void = glBindFramebufferEXT_L
public func glBindFramebufferOES(_ target:GLenum, _ framebuffer:GLuint) {glBindFramebufferOES_P(target, framebuffer)}
public func glBindFramebufferOES(target:GLenum, framebuffer:GLuint) {glBindFramebufferOES_P(target, framebuffer)}
var glBindFramebufferOES_P:@convention(c)(GLenum, GLuint) -> Void = glBindFramebufferOES_L
public func glBindImageTexture(_ unit:GLuint, _ texture:GLuint, _ level:GLint, _ layered:GLboolean, _ layer:GLint, _ access:GLenum, _ format:GLenum) {glBindImageTexture_P(unit, texture, level, layered, layer, access, format)}
public func glBindImageTexture(unit:GLuint, texture:GLuint, level:GLint, layered:GLboolean, layer:GLint, access:GLenum, format:GLenum) {glBindImageTexture_P(unit, texture, level, layered, layer, access, format)}
var glBindImageTexture_P:@convention(c)(GLuint, GLuint, GLint, GLboolean, GLint, GLenum, GLenum) -> Void = glBindImageTexture_L
public func glBindImageTextureEXT(_ index:GLuint, _ texture:GLuint, _ level:GLint, _ layered:GLboolean, _ layer:GLint, _ access:GLenum, _ format:GLint) {glBindImageTextureEXT_P(index, texture, level, layered, layer, access, format)}
public func glBindImageTextureEXT(index:GLuint, texture:GLuint, level:GLint, layered:GLboolean, layer:GLint, access:GLenum, format:GLint) {glBindImageTextureEXT_P(index, texture, level, layered, layer, access, format)}
var glBindImageTextureEXT_P:@convention(c)(GLuint, GLuint, GLint, GLboolean, GLint, GLenum, GLint) -> Void = glBindImageTextureEXT_L
public func glBindImageTextures(_ first:GLuint, _ count:GLsizei, _ textures:UnsafePointer<GLuint>) {glBindImageTextures_P(first, count, textures)}
public func glBindImageTextures(first:GLuint, count:GLsizei, textures:UnsafePointer<GLuint>) {glBindImageTextures_P(first, count, textures)}
var glBindImageTextures_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLuint>) -> Void = glBindImageTextures_L
public func glBindLightParameterEXT(_ light:GLenum, _ value:GLenum) -> GLuint {return glBindLightParameterEXT_P(light, value)}
public func glBindLightParameterEXT(light:GLenum, value:GLenum) -> GLuint {return glBindLightParameterEXT_P(light, value)}
var glBindLightParameterEXT_P:@convention(c)(GLenum, GLenum) -> GLuint = glBindLightParameterEXT_L
public func glBindMaterialParameterEXT(_ face:GLenum, _ value:GLenum) -> GLuint {return glBindMaterialParameterEXT_P(face, value)}
public func glBindMaterialParameterEXT(face:GLenum, value:GLenum) -> GLuint {return glBindMaterialParameterEXT_P(face, value)}
var glBindMaterialParameterEXT_P:@convention(c)(GLenum, GLenum) -> GLuint = glBindMaterialParameterEXT_L
public func glBindMultiTextureEXT(_ texunit:GLenum, _ target:GLenum, _ texture:GLuint) {glBindMultiTextureEXT_P(texunit, target, texture)}
public func glBindMultiTextureEXT(texunit:GLenum, target:GLenum, texture:GLuint) {glBindMultiTextureEXT_P(texunit, target, texture)}
var glBindMultiTextureEXT_P:@convention(c)(GLenum, GLenum, GLuint) -> Void = glBindMultiTextureEXT_L
public func glBindParameterEXT(_ value:GLenum) -> GLuint {return glBindParameterEXT_P(value)}
public func glBindParameterEXT(value:GLenum) -> GLuint {return glBindParameterEXT_P(value)}
var glBindParameterEXT_P:@convention(c)(GLenum) -> GLuint = glBindParameterEXT_L
public func glBindProgramARB(_ target:GLenum, _ program:GLuint) {glBindProgramARB_P(target, program)}
public func glBindProgramARB(target:GLenum, program:GLuint) {glBindProgramARB_P(target, program)}
var glBindProgramARB_P:@convention(c)(GLenum, GLuint) -> Void = glBindProgramARB_L
public func glBindProgramNV(_ target:GLenum, _ id:GLuint) {glBindProgramNV_P(target, id)}
public func glBindProgramNV(target:GLenum, id:GLuint) {glBindProgramNV_P(target, id)}
var glBindProgramNV_P:@convention(c)(GLenum, GLuint) -> Void = glBindProgramNV_L
public func glBindProgramPipeline(_ pipeline:GLuint) {glBindProgramPipeline_P(pipeline)}
public func glBindProgramPipeline(pipeline:GLuint) {glBindProgramPipeline_P(pipeline)}
var glBindProgramPipeline_P:@convention(c)(GLuint) -> Void = glBindProgramPipeline_L
public func glBindProgramPipelineEXT(_ pipeline:GLuint) {glBindProgramPipelineEXT_P(pipeline)}
public func glBindProgramPipelineEXT(pipeline:GLuint) {glBindProgramPipelineEXT_P(pipeline)}
var glBindProgramPipelineEXT_P:@convention(c)(GLuint) -> Void = glBindProgramPipelineEXT_L
public func glBindRenderbuffer(_ target:GLenum, _ renderbuffer:GLuint) {glBindRenderbuffer_P(target, renderbuffer)}
public func glBindRenderbuffer(target:GLenum, renderbuffer:GLuint) {glBindRenderbuffer_P(target, renderbuffer)}
var glBindRenderbuffer_P:@convention(c)(GLenum, GLuint) -> Void = glBindRenderbuffer_L
public func glBindRenderbufferEXT(_ target:GLenum, _ renderbuffer:GLuint) {glBindRenderbufferEXT_P(target, renderbuffer)}
public func glBindRenderbufferEXT(target:GLenum, renderbuffer:GLuint) {glBindRenderbufferEXT_P(target, renderbuffer)}
var glBindRenderbufferEXT_P:@convention(c)(GLenum, GLuint) -> Void = glBindRenderbufferEXT_L
public func glBindRenderbufferOES(_ target:GLenum, _ renderbuffer:GLuint) {glBindRenderbufferOES_P(target, renderbuffer)}
public func glBindRenderbufferOES(target:GLenum, renderbuffer:GLuint) {glBindRenderbufferOES_P(target, renderbuffer)}
var glBindRenderbufferOES_P:@convention(c)(GLenum, GLuint) -> Void = glBindRenderbufferOES_L
public func glBindSampler(_ unit:GLuint, _ sampler:GLuint) {glBindSampler_P(unit, sampler)}
public func glBindSampler(unit:GLuint, sampler:GLuint) {glBindSampler_P(unit, sampler)}
var glBindSampler_P:@convention(c)(GLuint, GLuint) -> Void = glBindSampler_L
public func glBindSamplers(_ first:GLuint, _ count:GLsizei, _ samplers:UnsafePointer<GLuint>) {glBindSamplers_P(first, count, samplers)}
public func glBindSamplers(first:GLuint, count:GLsizei, samplers:UnsafePointer<GLuint>) {glBindSamplers_P(first, count, samplers)}
var glBindSamplers_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLuint>) -> Void = glBindSamplers_L
public func glBindTexGenParameterEXT(_ unit:GLenum, _ coord:GLenum, _ value:GLenum) -> GLuint {return glBindTexGenParameterEXT_P(unit, coord, value)}
public func glBindTexGenParameterEXT(unit:GLenum, coord:GLenum, value:GLenum) -> GLuint {return glBindTexGenParameterEXT_P(unit, coord, value)}
var glBindTexGenParameterEXT_P:@convention(c)(GLenum, GLenum, GLenum) -> GLuint = glBindTexGenParameterEXT_L
public func glBindTexture(_ target:GLenum, _ texture:GLuint) {glBindTexture_P(target, texture)}
public func glBindTexture(target:GLenum, texture:GLuint) {glBindTexture_P(target, texture)}
var glBindTexture_P:@convention(c)(GLenum, GLuint) -> Void = glBindTexture_L
public func glBindTextureEXT(_ target:GLenum, _ texture:GLuint) {glBindTextureEXT_P(target, texture)}
public func glBindTextureEXT(target:GLenum, texture:GLuint) {glBindTextureEXT_P(target, texture)}
var glBindTextureEXT_P:@convention(c)(GLenum, GLuint) -> Void = glBindTextureEXT_L
public func glBindTextureUnit(_ unit:GLuint, _ texture:GLuint) {glBindTextureUnit_P(unit, texture)}
public func glBindTextureUnit(unit:GLuint, texture:GLuint) {glBindTextureUnit_P(unit, texture)}
var glBindTextureUnit_P:@convention(c)(GLuint, GLuint) -> Void = glBindTextureUnit_L
public func glBindTextureUnitParameterEXT(_ unit:GLenum, _ value:GLenum) -> GLuint {return glBindTextureUnitParameterEXT_P(unit, value)}
public func glBindTextureUnitParameterEXT(unit:GLenum, value:GLenum) -> GLuint {return glBindTextureUnitParameterEXT_P(unit, value)}
var glBindTextureUnitParameterEXT_P:@convention(c)(GLenum, GLenum) -> GLuint = glBindTextureUnitParameterEXT_L
public func glBindTextures(_ first:GLuint, _ count:GLsizei, _ textures:UnsafePointer<GLuint>) {glBindTextures_P(first, count, textures)}
public func glBindTextures(first:GLuint, count:GLsizei, textures:UnsafePointer<GLuint>) {glBindTextures_P(first, count, textures)}
var glBindTextures_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLuint>) -> Void = glBindTextures_L
public func glBindTransformFeedback(_ target:GLenum, _ id:GLuint) {glBindTransformFeedback_P(target, id)}
public func glBindTransformFeedback(target:GLenum, id:GLuint) {glBindTransformFeedback_P(target, id)}
var glBindTransformFeedback_P:@convention(c)(GLenum, GLuint) -> Void = glBindTransformFeedback_L
public func glBindTransformFeedbackNV(_ target:GLenum, _ id:GLuint) {glBindTransformFeedbackNV_P(target, id)}
public func glBindTransformFeedbackNV(target:GLenum, id:GLuint) {glBindTransformFeedbackNV_P(target, id)}
var glBindTransformFeedbackNV_P:@convention(c)(GLenum, GLuint) -> Void = glBindTransformFeedbackNV_L
public func glBindVertexArray(_ array:GLuint) {glBindVertexArray_P(array)}
public func glBindVertexArray(array:GLuint) {glBindVertexArray_P(array)}
var glBindVertexArray_P:@convention(c)(GLuint) -> Void = glBindVertexArray_L
public func glBindVertexArrayAPPLE(_ array:GLuint) {glBindVertexArrayAPPLE_P(array)}
public func glBindVertexArrayAPPLE(array:GLuint) {glBindVertexArrayAPPLE_P(array)}
var glBindVertexArrayAPPLE_P:@convention(c)(GLuint) -> Void = glBindVertexArrayAPPLE_L
public func glBindVertexArrayOES(_ array:GLuint) {glBindVertexArrayOES_P(array)}
public func glBindVertexArrayOES(array:GLuint) {glBindVertexArrayOES_P(array)}
var glBindVertexArrayOES_P:@convention(c)(GLuint) -> Void = glBindVertexArrayOES_L
public func glBindVertexBuffer(_ bindingindex:GLuint, _ buffer:GLuint, _ offset:GLintptr, _ stride:GLsizei) {glBindVertexBuffer_P(bindingindex, buffer, offset, stride)}
public func glBindVertexBuffer(bindingindex:GLuint, buffer:GLuint, offset:GLintptr, stride:GLsizei) {glBindVertexBuffer_P(bindingindex, buffer, offset, stride)}
var glBindVertexBuffer_P:@convention(c)(GLuint, GLuint, GLintptr, GLsizei) -> Void = glBindVertexBuffer_L
public func glBindVertexBuffers(_ first:GLuint, _ count:GLsizei, _ buffers:UnsafePointer<GLuint>, _ offsets:UnsafePointer<GLintptr>, _ strides:UnsafePointer<GLsizei>) {glBindVertexBuffers_P(first, count, buffers, offsets, strides)}
public func glBindVertexBuffers(first:GLuint, count:GLsizei, buffers:UnsafePointer<GLuint>, offsets:UnsafePointer<GLintptr>, strides:UnsafePointer<GLsizei>) {glBindVertexBuffers_P(first, count, buffers, offsets, strides)}
var glBindVertexBuffers_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLuint>, UnsafePointer<GLintptr>, UnsafePointer<GLsizei>) -> Void = glBindVertexBuffers_L
public func glBindVertexShaderEXT(_ id:GLuint) {glBindVertexShaderEXT_P(id)}
public func glBindVertexShaderEXT(id:GLuint) {glBindVertexShaderEXT_P(id)}
var glBindVertexShaderEXT_P:@convention(c)(GLuint) -> Void = glBindVertexShaderEXT_L
public func glBindVideoCaptureStreamBufferNV(_ video_capture_slot:GLuint, _ stream:GLuint, _ frame_region:GLenum, _ offset:GLintptrARB) {glBindVideoCaptureStreamBufferNV_P(video_capture_slot, stream, frame_region, offset)}
public func glBindVideoCaptureStreamBufferNV(video_capture_slot:GLuint, stream:GLuint, frame_region:GLenum, offset:GLintptrARB) {glBindVideoCaptureStreamBufferNV_P(video_capture_slot, stream, frame_region, offset)}
var glBindVideoCaptureStreamBufferNV_P:@convention(c)(GLuint, GLuint, GLenum, GLintptrARB) -> Void = glBindVideoCaptureStreamBufferNV_L
public func glBindVideoCaptureStreamTextureNV(_ video_capture_slot:GLuint, _ stream:GLuint, _ frame_region:GLenum, _ target:GLenum, _ texture:GLuint) {glBindVideoCaptureStreamTextureNV_P(video_capture_slot, stream, frame_region, target, texture)}
public func glBindVideoCaptureStreamTextureNV(video_capture_slot:GLuint, stream:GLuint, frame_region:GLenum, target:GLenum, texture:GLuint) {glBindVideoCaptureStreamTextureNV_P(video_capture_slot, stream, frame_region, target, texture)}
var glBindVideoCaptureStreamTextureNV_P:@convention(c)(GLuint, GLuint, GLenum, GLenum, GLuint) -> Void = glBindVideoCaptureStreamTextureNV_L
public func glBinormal3bEXT(_ bx:GLbyte, _ by:GLbyte, _ bz:GLbyte) {glBinormal3bEXT_P(bx, by, bz)}
public func glBinormal3bEXT(bx:GLbyte, by:GLbyte, bz:GLbyte) {glBinormal3bEXT_P(bx, by, bz)}
var glBinormal3bEXT_P:@convention(c)(GLbyte, GLbyte, GLbyte) -> Void = glBinormal3bEXT_L
public func glBinormal3bvEXT(_ v:UnsafePointer<GLbyte>) {glBinormal3bvEXT_P(v)}
public func glBinormal3bvEXT(v:UnsafePointer<GLbyte>) {glBinormal3bvEXT_P(v)}
var glBinormal3bvEXT_P:@convention(c)(UnsafePointer<GLbyte>) -> Void = glBinormal3bvEXT_L
public func glBinormal3dEXT(_ bx:GLdouble, _ by:GLdouble, _ bz:GLdouble) {glBinormal3dEXT_P(bx, by, bz)}
public func glBinormal3dEXT(bx:GLdouble, by:GLdouble, bz:GLdouble) {glBinormal3dEXT_P(bx, by, bz)}
var glBinormal3dEXT_P:@convention(c)(GLdouble, GLdouble, GLdouble) -> Void = glBinormal3dEXT_L
public func glBinormal3dvEXT(_ v:UnsafePointer<GLdouble>) {glBinormal3dvEXT_P(v)}
public func glBinormal3dvEXT(v:UnsafePointer<GLdouble>) {glBinormal3dvEXT_P(v)}
var glBinormal3dvEXT_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glBinormal3dvEXT_L
public func glBinormal3fEXT(_ bx:GLfloat, _ by:GLfloat, _ bz:GLfloat) {glBinormal3fEXT_P(bx, by, bz)}
public func glBinormal3fEXT(bx:GLfloat, by:GLfloat, bz:GLfloat) {glBinormal3fEXT_P(bx, by, bz)}
var glBinormal3fEXT_P:@convention(c)(GLfloat, GLfloat, GLfloat) -> Void = glBinormal3fEXT_L
public func glBinormal3fvEXT(_ v:UnsafePointer<GLfloat>) {glBinormal3fvEXT_P(v)}
public func glBinormal3fvEXT(v:UnsafePointer<GLfloat>) {glBinormal3fvEXT_P(v)}
var glBinormal3fvEXT_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glBinormal3fvEXT_L
public func glBinormal3iEXT(_ bx:GLint, _ by:GLint, _ bz:GLint) {glBinormal3iEXT_P(bx, by, bz)}
public func glBinormal3iEXT(bx:GLint, by:GLint, bz:GLint) {glBinormal3iEXT_P(bx, by, bz)}
var glBinormal3iEXT_P:@convention(c)(GLint, GLint, GLint) -> Void = glBinormal3iEXT_L
public func glBinormal3ivEXT(_ v:UnsafePointer<GLint>) {glBinormal3ivEXT_P(v)}
public func glBinormal3ivEXT(v:UnsafePointer<GLint>) {glBinormal3ivEXT_P(v)}
var glBinormal3ivEXT_P:@convention(c)(UnsafePointer<GLint>) -> Void = glBinormal3ivEXT_L
public func glBinormal3sEXT(_ bx:GLshort, _ by:GLshort, _ bz:GLshort) {glBinormal3sEXT_P(bx, by, bz)}
public func glBinormal3sEXT(bx:GLshort, by:GLshort, bz:GLshort) {glBinormal3sEXT_P(bx, by, bz)}
var glBinormal3sEXT_P:@convention(c)(GLshort, GLshort, GLshort) -> Void = glBinormal3sEXT_L
public func glBinormal3svEXT(_ v:UnsafePointer<GLshort>) {glBinormal3svEXT_P(v)}
public func glBinormal3svEXT(v:UnsafePointer<GLshort>) {glBinormal3svEXT_P(v)}
var glBinormal3svEXT_P:@convention(c)(UnsafePointer<GLshort>) -> Void = glBinormal3svEXT_L
public func glBinormalPointerEXT(_ type:GLenum, _ stride:GLsizei, _ pointer:UnsafeRawPointer) {glBinormalPointerEXT_P(type, stride, pointer)}
public func glBinormalPointerEXT(type:GLenum, stride:GLsizei, pointer:UnsafeRawPointer) {glBinormalPointerEXT_P(type, stride, pointer)}
var glBinormalPointerEXT_P:@convention(c)(GLenum, GLsizei, UnsafeRawPointer) -> Void = glBinormalPointerEXT_L
public func glBitmap(_ width:GLsizei, _ height:GLsizei, _ xorig:GLfloat, _ yorig:GLfloat, _ xmove:GLfloat, _ ymove:GLfloat, _ bitmap:UnsafePointer<GLubyte>) {glBitmap_P(width, height, xorig, yorig, xmove, ymove, bitmap)}
public func glBitmap(width:GLsizei, height:GLsizei, xorig:GLfloat, yorig:GLfloat, xmove:GLfloat, ymove:GLfloat, bitmap:UnsafePointer<GLubyte>) {glBitmap_P(width, height, xorig, yorig, xmove, ymove, bitmap)}
var glBitmap_P:@convention(c)(GLsizei, GLsizei, GLfloat, GLfloat, GLfloat, GLfloat, UnsafePointer<GLubyte>) -> Void = glBitmap_L
public func glBitmapxOES(_ width:GLsizei, _ height:GLsizei, _ xorig:GLfixed, _ yorig:GLfixed, _ xmove:GLfixed, _ ymove:GLfixed, _ bitmap:UnsafePointer<GLubyte>) {glBitmapxOES_P(width, height, xorig, yorig, xmove, ymove, bitmap)}
public func glBitmapxOES(width:GLsizei, height:GLsizei, xorig:GLfixed, yorig:GLfixed, xmove:GLfixed, ymove:GLfixed, bitmap:UnsafePointer<GLubyte>) {glBitmapxOES_P(width, height, xorig, yorig, xmove, ymove, bitmap)}
var glBitmapxOES_P:@convention(c)(GLsizei, GLsizei, GLfixed, GLfixed, GLfixed, GLfixed, UnsafePointer<GLubyte>) -> Void = glBitmapxOES_L
public func glBlendBarrier() {glBlendBarrier_P()}
var glBlendBarrier_P:@convention(c)() -> Void = glBlendBarrier_L
public func glBlendBarrierKHR() {glBlendBarrierKHR_P()}
var glBlendBarrierKHR_P:@convention(c)() -> Void = glBlendBarrierKHR_L
public func glBlendBarrierNV() {glBlendBarrierNV_P()}
var glBlendBarrierNV_P:@convention(c)() -> Void = glBlendBarrierNV_L
public func glBlendColor(_ red:GLfloat, _ green:GLfloat, _ blue:GLfloat, _ alpha:GLfloat) {glBlendColor_P(red, green, blue, alpha)}
public func glBlendColor(red:GLfloat, green:GLfloat, blue:GLfloat, alpha:GLfloat) {glBlendColor_P(red, green, blue, alpha)}
var glBlendColor_P:@convention(c)(GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glBlendColor_L
public func glBlendColorEXT(_ red:GLfloat, _ green:GLfloat, _ blue:GLfloat, _ alpha:GLfloat) {glBlendColorEXT_P(red, green, blue, alpha)}
public func glBlendColorEXT(red:GLfloat, green:GLfloat, blue:GLfloat, alpha:GLfloat) {glBlendColorEXT_P(red, green, blue, alpha)}
var glBlendColorEXT_P:@convention(c)(GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glBlendColorEXT_L
public func glBlendColorxOES(_ red:GLfixed, _ green:GLfixed, _ blue:GLfixed, _ alpha:GLfixed) {glBlendColorxOES_P(red, green, blue, alpha)}
public func glBlendColorxOES(red:GLfixed, green:GLfixed, blue:GLfixed, alpha:GLfixed) {glBlendColorxOES_P(red, green, blue, alpha)}
var glBlendColorxOES_P:@convention(c)(GLfixed, GLfixed, GLfixed, GLfixed) -> Void = glBlendColorxOES_L
public func glBlendEquation(_ mode:GLenum) {glBlendEquation_P(mode)}
public func glBlendEquation(mode:GLenum) {glBlendEquation_P(mode)}
var glBlendEquation_P:@convention(c)(GLenum) -> Void = glBlendEquation_L
public func glBlendEquationEXT(_ mode:GLenum) {glBlendEquationEXT_P(mode)}
public func glBlendEquationEXT(mode:GLenum) {glBlendEquationEXT_P(mode)}
var glBlendEquationEXT_P:@convention(c)(GLenum) -> Void = glBlendEquationEXT_L
public func glBlendEquationIndexedAMD(_ buf:GLuint, _ mode:GLenum) {glBlendEquationIndexedAMD_P(buf, mode)}
public func glBlendEquationIndexedAMD(buf:GLuint, mode:GLenum) {glBlendEquationIndexedAMD_P(buf, mode)}
var glBlendEquationIndexedAMD_P:@convention(c)(GLuint, GLenum) -> Void = glBlendEquationIndexedAMD_L
public func glBlendEquationOES(_ mode:GLenum) {glBlendEquationOES_P(mode)}
public func glBlendEquationOES(mode:GLenum) {glBlendEquationOES_P(mode)}
var glBlendEquationOES_P:@convention(c)(GLenum) -> Void = glBlendEquationOES_L
public func glBlendEquationSeparate(_ modeRGB:GLenum, _ modeAlpha:GLenum) {glBlendEquationSeparate_P(modeRGB, modeAlpha)}
public func glBlendEquationSeparate(modeRGB:GLenum, modeAlpha:GLenum) {glBlendEquationSeparate_P(modeRGB, modeAlpha)}
var glBlendEquationSeparate_P:@convention(c)(GLenum, GLenum) -> Void = glBlendEquationSeparate_L
public func glBlendEquationSeparateEXT(_ modeRGB:GLenum, _ modeAlpha:GLenum) {glBlendEquationSeparateEXT_P(modeRGB, modeAlpha)}
public func glBlendEquationSeparateEXT(modeRGB:GLenum, modeAlpha:GLenum) {glBlendEquationSeparateEXT_P(modeRGB, modeAlpha)}
var glBlendEquationSeparateEXT_P:@convention(c)(GLenum, GLenum) -> Void = glBlendEquationSeparateEXT_L
public func glBlendEquationSeparateIndexedAMD(_ buf:GLuint, _ modeRGB:GLenum, _ modeAlpha:GLenum) {glBlendEquationSeparateIndexedAMD_P(buf, modeRGB, modeAlpha)}
public func glBlendEquationSeparateIndexedAMD(buf:GLuint, modeRGB:GLenum, modeAlpha:GLenum) {glBlendEquationSeparateIndexedAMD_P(buf, modeRGB, modeAlpha)}
var glBlendEquationSeparateIndexedAMD_P:@convention(c)(GLuint, GLenum, GLenum) -> Void = glBlendEquationSeparateIndexedAMD_L
public func glBlendEquationSeparateOES(_ modeRGB:GLenum, _ modeAlpha:GLenum) {glBlendEquationSeparateOES_P(modeRGB, modeAlpha)}
public func glBlendEquationSeparateOES(modeRGB:GLenum, modeAlpha:GLenum) {glBlendEquationSeparateOES_P(modeRGB, modeAlpha)}
var glBlendEquationSeparateOES_P:@convention(c)(GLenum, GLenum) -> Void = glBlendEquationSeparateOES_L
public func glBlendEquationSeparatei(_ buf:GLuint, _ modeRGB:GLenum, _ modeAlpha:GLenum) {glBlendEquationSeparatei_P(buf, modeRGB, modeAlpha)}
public func glBlendEquationSeparatei(buf:GLuint, modeRGB:GLenum, modeAlpha:GLenum) {glBlendEquationSeparatei_P(buf, modeRGB, modeAlpha)}
var glBlendEquationSeparatei_P:@convention(c)(GLuint, GLenum, GLenum) -> Void = glBlendEquationSeparatei_L
public func glBlendEquationSeparateiARB(_ buf:GLuint, _ modeRGB:GLenum, _ modeAlpha:GLenum) {glBlendEquationSeparateiARB_P(buf, modeRGB, modeAlpha)}
public func glBlendEquationSeparateiARB(buf:GLuint, modeRGB:GLenum, modeAlpha:GLenum) {glBlendEquationSeparateiARB_P(buf, modeRGB, modeAlpha)}
var glBlendEquationSeparateiARB_P:@convention(c)(GLuint, GLenum, GLenum) -> Void = glBlendEquationSeparateiARB_L
public func glBlendEquationSeparateiEXT(_ buf:GLuint, _ modeRGB:GLenum, _ modeAlpha:GLenum) {glBlendEquationSeparateiEXT_P(buf, modeRGB, modeAlpha)}
public func glBlendEquationSeparateiEXT(buf:GLuint, modeRGB:GLenum, modeAlpha:GLenum) {glBlendEquationSeparateiEXT_P(buf, modeRGB, modeAlpha)}
var glBlendEquationSeparateiEXT_P:@convention(c)(GLuint, GLenum, GLenum) -> Void = glBlendEquationSeparateiEXT_L
public func glBlendEquationSeparateiOES(_ buf:GLuint, _ modeRGB:GLenum, _ modeAlpha:GLenum) {glBlendEquationSeparateiOES_P(buf, modeRGB, modeAlpha)}
public func glBlendEquationSeparateiOES(buf:GLuint, modeRGB:GLenum, modeAlpha:GLenum) {glBlendEquationSeparateiOES_P(buf, modeRGB, modeAlpha)}
var glBlendEquationSeparateiOES_P:@convention(c)(GLuint, GLenum, GLenum) -> Void = glBlendEquationSeparateiOES_L
public func glBlendEquationi(_ buf:GLuint, _ mode:GLenum) {glBlendEquationi_P(buf, mode)}
public func glBlendEquationi(buf:GLuint, mode:GLenum) {glBlendEquationi_P(buf, mode)}
var glBlendEquationi_P:@convention(c)(GLuint, GLenum) -> Void = glBlendEquationi_L
public func glBlendEquationiARB(_ buf:GLuint, _ mode:GLenum) {glBlendEquationiARB_P(buf, mode)}
public func glBlendEquationiARB(buf:GLuint, mode:GLenum) {glBlendEquationiARB_P(buf, mode)}
var glBlendEquationiARB_P:@convention(c)(GLuint, GLenum) -> Void = glBlendEquationiARB_L
public func glBlendEquationiEXT(_ buf:GLuint, _ mode:GLenum) {glBlendEquationiEXT_P(buf, mode)}
public func glBlendEquationiEXT(buf:GLuint, mode:GLenum) {glBlendEquationiEXT_P(buf, mode)}
var glBlendEquationiEXT_P:@convention(c)(GLuint, GLenum) -> Void = glBlendEquationiEXT_L
public func glBlendEquationiOES(_ buf:GLuint, _ mode:GLenum) {glBlendEquationiOES_P(buf, mode)}
public func glBlendEquationiOES(buf:GLuint, mode:GLenum) {glBlendEquationiOES_P(buf, mode)}
var glBlendEquationiOES_P:@convention(c)(GLuint, GLenum) -> Void = glBlendEquationiOES_L
public func glBlendFunc(_ sfactor:GLenum, _ dfactor:GLenum) {glBlendFunc_P(sfactor, dfactor)}
public func glBlendFunc(sfactor:GLenum, dfactor:GLenum) {glBlendFunc_P(sfactor, dfactor)}
var glBlendFunc_P:@convention(c)(GLenum, GLenum) -> Void = glBlendFunc_L
public func glBlendFuncIndexedAMD(_ buf:GLuint, _ src:GLenum, _ dst:GLenum) {glBlendFuncIndexedAMD_P(buf, src, dst)}
public func glBlendFuncIndexedAMD(buf:GLuint, src:GLenum, dst:GLenum) {glBlendFuncIndexedAMD_P(buf, src, dst)}
var glBlendFuncIndexedAMD_P:@convention(c)(GLuint, GLenum, GLenum) -> Void = glBlendFuncIndexedAMD_L
public func glBlendFuncSeparate(_ sfactorRGB:GLenum, _ dfactorRGB:GLenum, _ sfactorAlpha:GLenum, _ dfactorAlpha:GLenum) {glBlendFuncSeparate_P(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha)}
public func glBlendFuncSeparate(sfactorRGB:GLenum, dfactorRGB:GLenum, sfactorAlpha:GLenum, dfactorAlpha:GLenum) {glBlendFuncSeparate_P(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha)}
var glBlendFuncSeparate_P:@convention(c)(GLenum, GLenum, GLenum, GLenum) -> Void = glBlendFuncSeparate_L
public func glBlendFuncSeparateEXT(_ sfactorRGB:GLenum, _ dfactorRGB:GLenum, _ sfactorAlpha:GLenum, _ dfactorAlpha:GLenum) {glBlendFuncSeparateEXT_P(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha)}
public func glBlendFuncSeparateEXT(sfactorRGB:GLenum, dfactorRGB:GLenum, sfactorAlpha:GLenum, dfactorAlpha:GLenum) {glBlendFuncSeparateEXT_P(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha)}
var glBlendFuncSeparateEXT_P:@convention(c)(GLenum, GLenum, GLenum, GLenum) -> Void = glBlendFuncSeparateEXT_L
public func glBlendFuncSeparateINGR(_ sfactorRGB:GLenum, _ dfactorRGB:GLenum, _ sfactorAlpha:GLenum, _ dfactorAlpha:GLenum) {glBlendFuncSeparateINGR_P(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha)}
public func glBlendFuncSeparateINGR(sfactorRGB:GLenum, dfactorRGB:GLenum, sfactorAlpha:GLenum, dfactorAlpha:GLenum) {glBlendFuncSeparateINGR_P(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha)}
var glBlendFuncSeparateINGR_P:@convention(c)(GLenum, GLenum, GLenum, GLenum) -> Void = glBlendFuncSeparateINGR_L
public func glBlendFuncSeparateIndexedAMD(_ buf:GLuint, _ srcRGB:GLenum, _ dstRGB:GLenum, _ srcAlpha:GLenum, _ dstAlpha:GLenum) {glBlendFuncSeparateIndexedAMD_P(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)}
public func glBlendFuncSeparateIndexedAMD(buf:GLuint, srcRGB:GLenum, dstRGB:GLenum, srcAlpha:GLenum, dstAlpha:GLenum) {glBlendFuncSeparateIndexedAMD_P(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)}
var glBlendFuncSeparateIndexedAMD_P:@convention(c)(GLuint, GLenum, GLenum, GLenum, GLenum) -> Void = glBlendFuncSeparateIndexedAMD_L
public func glBlendFuncSeparateOES(_ srcRGB:GLenum, _ dstRGB:GLenum, _ srcAlpha:GLenum, _ dstAlpha:GLenum) {glBlendFuncSeparateOES_P(srcRGB, dstRGB, srcAlpha, dstAlpha)}
public func glBlendFuncSeparateOES(srcRGB:GLenum, dstRGB:GLenum, srcAlpha:GLenum, dstAlpha:GLenum) {glBlendFuncSeparateOES_P(srcRGB, dstRGB, srcAlpha, dstAlpha)}
var glBlendFuncSeparateOES_P:@convention(c)(GLenum, GLenum, GLenum, GLenum) -> Void = glBlendFuncSeparateOES_L
public func glBlendFuncSeparatei(_ buf:GLuint, _ srcRGB:GLenum, _ dstRGB:GLenum, _ srcAlpha:GLenum, _ dstAlpha:GLenum) {glBlendFuncSeparatei_P(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)}
public func glBlendFuncSeparatei(buf:GLuint, srcRGB:GLenum, dstRGB:GLenum, srcAlpha:GLenum, dstAlpha:GLenum) {glBlendFuncSeparatei_P(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)}
var glBlendFuncSeparatei_P:@convention(c)(GLuint, GLenum, GLenum, GLenum, GLenum) -> Void = glBlendFuncSeparatei_L
public func glBlendFuncSeparateiARB(_ buf:GLuint, _ srcRGB:GLenum, _ dstRGB:GLenum, _ srcAlpha:GLenum, _ dstAlpha:GLenum) {glBlendFuncSeparateiARB_P(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)}
public func glBlendFuncSeparateiARB(buf:GLuint, srcRGB:GLenum, dstRGB:GLenum, srcAlpha:GLenum, dstAlpha:GLenum) {glBlendFuncSeparateiARB_P(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)}
var glBlendFuncSeparateiARB_P:@convention(c)(GLuint, GLenum, GLenum, GLenum, GLenum) -> Void = glBlendFuncSeparateiARB_L
public func glBlendFuncSeparateiEXT(_ buf:GLuint, _ srcRGB:GLenum, _ dstRGB:GLenum, _ srcAlpha:GLenum, _ dstAlpha:GLenum) {glBlendFuncSeparateiEXT_P(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)}
public func glBlendFuncSeparateiEXT(buf:GLuint, srcRGB:GLenum, dstRGB:GLenum, srcAlpha:GLenum, dstAlpha:GLenum) {glBlendFuncSeparateiEXT_P(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)}
var glBlendFuncSeparateiEXT_P:@convention(c)(GLuint, GLenum, GLenum, GLenum, GLenum) -> Void = glBlendFuncSeparateiEXT_L
public func glBlendFuncSeparateiOES(_ buf:GLuint, _ srcRGB:GLenum, _ dstRGB:GLenum, _ srcAlpha:GLenum, _ dstAlpha:GLenum) {glBlendFuncSeparateiOES_P(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)}
public func glBlendFuncSeparateiOES(buf:GLuint, srcRGB:GLenum, dstRGB:GLenum, srcAlpha:GLenum, dstAlpha:GLenum) {glBlendFuncSeparateiOES_P(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)}
var glBlendFuncSeparateiOES_P:@convention(c)(GLuint, GLenum, GLenum, GLenum, GLenum) -> Void = glBlendFuncSeparateiOES_L
public func glBlendFunci(_ buf:GLuint, _ src:GLenum, _ dst:GLenum) {glBlendFunci_P(buf, src, dst)}
public func glBlendFunci(buf:GLuint, src:GLenum, dst:GLenum) {glBlendFunci_P(buf, src, dst)}
var glBlendFunci_P:@convention(c)(GLuint, GLenum, GLenum) -> Void = glBlendFunci_L
public func glBlendFunciARB(_ buf:GLuint, _ src:GLenum, _ dst:GLenum) {glBlendFunciARB_P(buf, src, dst)}
public func glBlendFunciARB(buf:GLuint, src:GLenum, dst:GLenum) {glBlendFunciARB_P(buf, src, dst)}
var glBlendFunciARB_P:@convention(c)(GLuint, GLenum, GLenum) -> Void = glBlendFunciARB_L
public func glBlendFunciEXT(_ buf:GLuint, _ src:GLenum, _ dst:GLenum) {glBlendFunciEXT_P(buf, src, dst)}
public func glBlendFunciEXT(buf:GLuint, src:GLenum, dst:GLenum) {glBlendFunciEXT_P(buf, src, dst)}
var glBlendFunciEXT_P:@convention(c)(GLuint, GLenum, GLenum) -> Void = glBlendFunciEXT_L
public func glBlendFunciOES(_ buf:GLuint, _ src:GLenum, _ dst:GLenum) {glBlendFunciOES_P(buf, src, dst)}
public func glBlendFunciOES(buf:GLuint, src:GLenum, dst:GLenum) {glBlendFunciOES_P(buf, src, dst)}
var glBlendFunciOES_P:@convention(c)(GLuint, GLenum, GLenum) -> Void = glBlendFunciOES_L
public func glBlendParameteriNV(_ pname:GLenum, _ value:GLint) {glBlendParameteriNV_P(pname, value)}
public func glBlendParameteriNV(pname:GLenum, value:GLint) {glBlendParameteriNV_P(pname, value)}
var glBlendParameteriNV_P:@convention(c)(GLenum, GLint) -> Void = glBlendParameteriNV_L
public func glBlitFramebuffer(_ srcX0:GLint, _ srcY0:GLint, _ srcX1:GLint, _ srcY1:GLint, _ dstX0:GLint, _ dstY0:GLint, _ dstX1:GLint, _ dstY1:GLint, _ mask:GLbitfield, _ filter:GLenum) {glBlitFramebuffer_P(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)}
public func glBlitFramebuffer(srcX0:GLint, srcY0:GLint, srcX1:GLint, srcY1:GLint, dstX0:GLint, dstY0:GLint, dstX1:GLint, dstY1:GLint, mask:GLbitfield, filter:GLenum) {glBlitFramebuffer_P(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)}
var glBlitFramebuffer_P:@convention(c)(GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) -> Void = glBlitFramebuffer_L
public func glBlitFramebufferANGLE(_ srcX0:GLint, _ srcY0:GLint, _ srcX1:GLint, _ srcY1:GLint, _ dstX0:GLint, _ dstY0:GLint, _ dstX1:GLint, _ dstY1:GLint, _ mask:GLbitfield, _ filter:GLenum) {glBlitFramebufferANGLE_P(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)}
public func glBlitFramebufferANGLE(srcX0:GLint, srcY0:GLint, srcX1:GLint, srcY1:GLint, dstX0:GLint, dstY0:GLint, dstX1:GLint, dstY1:GLint, mask:GLbitfield, filter:GLenum) {glBlitFramebufferANGLE_P(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)}
var glBlitFramebufferANGLE_P:@convention(c)(GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) -> Void = glBlitFramebufferANGLE_L
public func glBlitFramebufferEXT(_ srcX0:GLint, _ srcY0:GLint, _ srcX1:GLint, _ srcY1:GLint, _ dstX0:GLint, _ dstY0:GLint, _ dstX1:GLint, _ dstY1:GLint, _ mask:GLbitfield, _ filter:GLenum) {glBlitFramebufferEXT_P(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)}
public func glBlitFramebufferEXT(srcX0:GLint, srcY0:GLint, srcX1:GLint, srcY1:GLint, dstX0:GLint, dstY0:GLint, dstX1:GLint, dstY1:GLint, mask:GLbitfield, filter:GLenum) {glBlitFramebufferEXT_P(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)}
var glBlitFramebufferEXT_P:@convention(c)(GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) -> Void = glBlitFramebufferEXT_L
public func glBlitFramebufferNV(_ srcX0:GLint, _ srcY0:GLint, _ srcX1:GLint, _ srcY1:GLint, _ dstX0:GLint, _ dstY0:GLint, _ dstX1:GLint, _ dstY1:GLint, _ mask:GLbitfield, _ filter:GLenum) {glBlitFramebufferNV_P(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)}
public func glBlitFramebufferNV(srcX0:GLint, srcY0:GLint, srcX1:GLint, srcY1:GLint, dstX0:GLint, dstY0:GLint, dstX1:GLint, dstY1:GLint, mask:GLbitfield, filter:GLenum) {glBlitFramebufferNV_P(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)}
var glBlitFramebufferNV_P:@convention(c)(GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) -> Void = glBlitFramebufferNV_L
public func glBlitNamedFramebuffer(_ readFramebuffer:GLuint, _ drawFramebuffer:GLuint, _ srcX0:GLint, _ srcY0:GLint, _ srcX1:GLint, _ srcY1:GLint, _ dstX0:GLint, _ dstY0:GLint, _ dstX1:GLint, _ dstY1:GLint, _ mask:GLbitfield, _ filter:GLenum) {glBlitNamedFramebuffer_P(readFramebuffer, drawFramebuffer, srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)}
public func glBlitNamedFramebuffer(readFramebuffer:GLuint, drawFramebuffer:GLuint, srcX0:GLint, srcY0:GLint, srcX1:GLint, srcY1:GLint, dstX0:GLint, dstY0:GLint, dstX1:GLint, dstY1:GLint, mask:GLbitfield, filter:GLenum) {glBlitNamedFramebuffer_P(readFramebuffer, drawFramebuffer, srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)}
var glBlitNamedFramebuffer_P:@convention(c)(GLuint, GLuint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) -> Void = glBlitNamedFramebuffer_L
public func glBufferAddressRangeNV(_ pname:GLenum, _ index:GLuint, _ address:GLuint64EXT, _ length:GLsizeiptr) {glBufferAddressRangeNV_P(pname, index, address, length)}
public func glBufferAddressRangeNV(pname:GLenum, index:GLuint, address:GLuint64EXT, length:GLsizeiptr) {glBufferAddressRangeNV_P(pname, index, address, length)}
var glBufferAddressRangeNV_P:@convention(c)(GLenum, GLuint, GLuint64EXT, GLsizeiptr) -> Void = glBufferAddressRangeNV_L
public func glBufferData(_ target:GLenum, _ size:GLsizeiptr, _ data:UnsafeRawPointer, _ usage:GLenum) {glBufferData_P(target, size, data, usage)}
public func glBufferData(target:GLenum, size:GLsizeiptr, data:UnsafeRawPointer, usage:GLenum) {glBufferData_P(target, size, data, usage)}
var glBufferData_P:@convention(c)(GLenum, GLsizeiptr, UnsafeRawPointer, GLenum) -> Void = glBufferData_L
public func glBufferDataARB(_ target:GLenum, _ size:GLsizeiptrARB, _ data:UnsafeRawPointer, _ usage:GLenum) {glBufferDataARB_P(target, size, data, usage)}
public func glBufferDataARB(target:GLenum, size:GLsizeiptrARB, data:UnsafeRawPointer, usage:GLenum) {glBufferDataARB_P(target, size, data, usage)}
var glBufferDataARB_P:@convention(c)(GLenum, GLsizeiptrARB, UnsafeRawPointer, GLenum) -> Void = glBufferDataARB_L
public func glBufferPageCommitmentARB(_ target:GLenum, _ offset:GLintptr, _ size:GLsizeiptr, _ commit:GLboolean) {glBufferPageCommitmentARB_P(target, offset, size, commit)}
public func glBufferPageCommitmentARB(target:GLenum, offset:GLintptr, size:GLsizeiptr, commit:GLboolean) {glBufferPageCommitmentARB_P(target, offset, size, commit)}
var glBufferPageCommitmentARB_P:@convention(c)(GLenum, GLintptr, GLsizeiptr, GLboolean) -> Void = glBufferPageCommitmentARB_L
public func glBufferParameteriAPPLE(_ target:GLenum, _ pname:GLenum, _ param:GLint) {glBufferParameteriAPPLE_P(target, pname, param)}
public func glBufferParameteriAPPLE(target:GLenum, pname:GLenum, param:GLint) {glBufferParameteriAPPLE_P(target, pname, param)}
var glBufferParameteriAPPLE_P:@convention(c)(GLenum, GLenum, GLint) -> Void = glBufferParameteriAPPLE_L
public func glBufferStorage(_ target:GLenum, _ size:GLsizeiptr, _ data:UnsafeRawPointer, _ flags:GLbitfield) {glBufferStorage_P(target, size, data, flags)}
public func glBufferStorage(target:GLenum, size:GLsizeiptr, data:UnsafeRawPointer, flags:GLbitfield) {glBufferStorage_P(target, size, data, flags)}
var glBufferStorage_P:@convention(c)(GLenum, GLsizeiptr, UnsafeRawPointer, GLbitfield) -> Void = glBufferStorage_L
public func glBufferStorageEXT(_ target:GLenum, _ size:GLsizeiptr, _ data:UnsafeRawPointer, _ flags:GLbitfield) {glBufferStorageEXT_P(target, size, data, flags)}
public func glBufferStorageEXT(target:GLenum, size:GLsizeiptr, data:UnsafeRawPointer, flags:GLbitfield) {glBufferStorageEXT_P(target, size, data, flags)}
var glBufferStorageEXT_P:@convention(c)(GLenum, GLsizeiptr, UnsafeRawPointer, GLbitfield) -> Void = glBufferStorageEXT_L
public func glBufferSubData(_ target:GLenum, _ offset:GLintptr, _ size:GLsizeiptr, _ data:UnsafeRawPointer) {glBufferSubData_P(target, offset, size, data)}
public func glBufferSubData(target:GLenum, offset:GLintptr, size:GLsizeiptr, data:UnsafeRawPointer) {glBufferSubData_P(target, offset, size, data)}
var glBufferSubData_P:@convention(c)(GLenum, GLintptr, GLsizeiptr, UnsafeRawPointer) -> Void = glBufferSubData_L
public func glBufferSubDataARB(_ target:GLenum, _ offset:GLintptrARB, _ size:GLsizeiptrARB, _ data:UnsafeRawPointer) {glBufferSubDataARB_P(target, offset, size, data)}
public func glBufferSubDataARB(target:GLenum, offset:GLintptrARB, size:GLsizeiptrARB, data:UnsafeRawPointer) {glBufferSubDataARB_P(target, offset, size, data)}
var glBufferSubDataARB_P:@convention(c)(GLenum, GLintptrARB, GLsizeiptrARB, UnsafeRawPointer) -> Void = glBufferSubDataARB_L
public func glCallCommandListNV(_ list:GLuint) {glCallCommandListNV_P(list)}
public func glCallCommandListNV(list:GLuint) {glCallCommandListNV_P(list)}
var glCallCommandListNV_P:@convention(c)(GLuint) -> Void = glCallCommandListNV_L
public func glCallList(_ list:GLuint) {glCallList_P(list)}
public func glCallList(list:GLuint) {glCallList_P(list)}
var glCallList_P:@convention(c)(GLuint) -> Void = glCallList_L
public func glCallLists(_ n:GLsizei, _ type:GLenum, _ lists:UnsafeRawPointer) {glCallLists_P(n, type, lists)}
public func glCallLists(n:GLsizei, type:GLenum, lists:UnsafeRawPointer) {glCallLists_P(n, type, lists)}
var glCallLists_P:@convention(c)(GLsizei, GLenum, UnsafeRawPointer) -> Void = glCallLists_L
public func glCheckFramebufferStatus(_ target:GLenum) -> GLenum {return glCheckFramebufferStatus_P(target)}
public func glCheckFramebufferStatus(target:GLenum) -> GLenum {return glCheckFramebufferStatus_P(target)}
var glCheckFramebufferStatus_P:@convention(c)(GLenum) -> GLenum = glCheckFramebufferStatus_L
public func glCheckFramebufferStatusEXT(_ target:GLenum) -> GLenum {return glCheckFramebufferStatusEXT_P(target)}
public func glCheckFramebufferStatusEXT(target:GLenum) -> GLenum {return glCheckFramebufferStatusEXT_P(target)}
var glCheckFramebufferStatusEXT_P:@convention(c)(GLenum) -> GLenum = glCheckFramebufferStatusEXT_L
public func glCheckFramebufferStatusOES(_ target:GLenum) -> GLenum {return glCheckFramebufferStatusOES_P(target)}
public func glCheckFramebufferStatusOES(target:GLenum) -> GLenum {return glCheckFramebufferStatusOES_P(target)}
var glCheckFramebufferStatusOES_P:@convention(c)(GLenum) -> GLenum = glCheckFramebufferStatusOES_L
public func glCheckNamedFramebufferStatus(_ framebuffer:GLuint, _ target:GLenum) -> GLenum {return glCheckNamedFramebufferStatus_P(framebuffer, target)}
public func glCheckNamedFramebufferStatus(framebuffer:GLuint, target:GLenum) -> GLenum {return glCheckNamedFramebufferStatus_P(framebuffer, target)}
var glCheckNamedFramebufferStatus_P:@convention(c)(GLuint, GLenum) -> GLenum = glCheckNamedFramebufferStatus_L
public func glCheckNamedFramebufferStatusEXT(_ framebuffer:GLuint, _ target:GLenum) -> GLenum {return glCheckNamedFramebufferStatusEXT_P(framebuffer, target)}
public func glCheckNamedFramebufferStatusEXT(framebuffer:GLuint, target:GLenum) -> GLenum {return glCheckNamedFramebufferStatusEXT_P(framebuffer, target)}
var glCheckNamedFramebufferStatusEXT_P:@convention(c)(GLuint, GLenum) -> GLenum = glCheckNamedFramebufferStatusEXT_L
public func glClampColor(_ target:GLenum, _ clamp:GLenum) {glClampColor_P(target, clamp)}
public func glClampColor(target:GLenum, clamp:GLenum) {glClampColor_P(target, clamp)}
var glClampColor_P:@convention(c)(GLenum, GLenum) -> Void = glClampColor_L
public func glClampColorARB(_ target:GLenum, _ clamp:GLenum) {glClampColorARB_P(target, clamp)}
public func glClampColorARB(target:GLenum, clamp:GLenum) {glClampColorARB_P(target, clamp)}
var glClampColorARB_P:@convention(c)(GLenum, GLenum) -> Void = glClampColorARB_L
public func glClear(_ mask:GLbitfield) {glClear_P(mask)}
public func glClear(mask:GLbitfield) {glClear_P(mask)}
var glClear_P:@convention(c)(GLbitfield) -> Void = glClear_L
public func glClearAccum(_ red:GLfloat, _ green:GLfloat, _ blue:GLfloat, _ alpha:GLfloat) {glClearAccum_P(red, green, blue, alpha)}
public func glClearAccum(red:GLfloat, green:GLfloat, blue:GLfloat, alpha:GLfloat) {glClearAccum_P(red, green, blue, alpha)}
var glClearAccum_P:@convention(c)(GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glClearAccum_L
public func glClearAccumxOES(_ red:GLfixed, _ green:GLfixed, _ blue:GLfixed, _ alpha:GLfixed) {glClearAccumxOES_P(red, green, blue, alpha)}
public func glClearAccumxOES(red:GLfixed, green:GLfixed, blue:GLfixed, alpha:GLfixed) {glClearAccumxOES_P(red, green, blue, alpha)}
var glClearAccumxOES_P:@convention(c)(GLfixed, GLfixed, GLfixed, GLfixed) -> Void = glClearAccumxOES_L
public func glClearBufferData(_ target:GLenum, _ internalformat:GLenum, _ format:GLenum, _ type:GLenum, _ data:UnsafeRawPointer) {glClearBufferData_P(target, internalformat, format, type, data)}
public func glClearBufferData(target:GLenum, internalformat:GLenum, format:GLenum, type:GLenum, data:UnsafeRawPointer) {glClearBufferData_P(target, internalformat, format, type, data)}
var glClearBufferData_P:@convention(c)(GLenum, GLenum, GLenum, GLenum, UnsafeRawPointer) -> Void = glClearBufferData_L
public func glClearBufferSubData(_ target:GLenum, _ internalformat:GLenum, _ offset:GLintptr, _ size:GLsizeiptr, _ format:GLenum, _ type:GLenum, _ data:UnsafeRawPointer) {glClearBufferSubData_P(target, internalformat, offset, size, format, type, data)}
public func glClearBufferSubData(target:GLenum, internalformat:GLenum, offset:GLintptr, size:GLsizeiptr, format:GLenum, type:GLenum, data:UnsafeRawPointer) {glClearBufferSubData_P(target, internalformat, offset, size, format, type, data)}
var glClearBufferSubData_P:@convention(c)(GLenum, GLenum, GLintptr, GLsizeiptr, GLenum, GLenum, UnsafeRawPointer) -> Void = glClearBufferSubData_L
public func glClearBufferfi(_ buffer:GLenum, _ drawbuffer:GLint, _ depth:GLfloat, _ stencil:GLint) {glClearBufferfi_P(buffer, drawbuffer, depth, stencil)}
public func glClearBufferfi(buffer:GLenum, drawbuffer:GLint, depth:GLfloat, stencil:GLint) {glClearBufferfi_P(buffer, drawbuffer, depth, stencil)}
var glClearBufferfi_P:@convention(c)(GLenum, GLint, GLfloat, GLint) -> Void = glClearBufferfi_L
public func glClearBufferfv(_ buffer:GLenum, _ drawbuffer:GLint, _ value:UnsafePointer<GLfloat>) {glClearBufferfv_P(buffer, drawbuffer, value)}
public func glClearBufferfv(buffer:GLenum, drawbuffer:GLint, value:UnsafePointer<GLfloat>) {glClearBufferfv_P(buffer, drawbuffer, value)}
var glClearBufferfv_P:@convention(c)(GLenum, GLint, UnsafePointer<GLfloat>) -> Void = glClearBufferfv_L
public func glClearBufferiv(_ buffer:GLenum, _ drawbuffer:GLint, _ value:UnsafePointer<GLint>) {glClearBufferiv_P(buffer, drawbuffer, value)}
public func glClearBufferiv(buffer:GLenum, drawbuffer:GLint, value:UnsafePointer<GLint>) {glClearBufferiv_P(buffer, drawbuffer, value)}
var glClearBufferiv_P:@convention(c)(GLenum, GLint, UnsafePointer<GLint>) -> Void = glClearBufferiv_L
public func glClearBufferuiv(_ buffer:GLenum, _ drawbuffer:GLint, _ value:UnsafePointer<GLuint>) {glClearBufferuiv_P(buffer, drawbuffer, value)}
public func glClearBufferuiv(buffer:GLenum, drawbuffer:GLint, value:UnsafePointer<GLuint>) {glClearBufferuiv_P(buffer, drawbuffer, value)}
var glClearBufferuiv_P:@convention(c)(GLenum, GLint, UnsafePointer<GLuint>) -> Void = glClearBufferuiv_L
public func glClearColor(_ red:GLfloat, _ green:GLfloat, _ blue:GLfloat, _ alpha:GLfloat) {glClearColor_P(red, green, blue, alpha)}
public func glClearColor(red:GLfloat, green:GLfloat, blue:GLfloat, alpha:GLfloat) {glClearColor_P(red, green, blue, alpha)}
var glClearColor_P:@convention(c)(GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glClearColor_L
public func glClearColorIiEXT(_ red:GLint, _ green:GLint, _ blue:GLint, _ alpha:GLint) {glClearColorIiEXT_P(red, green, blue, alpha)}
public func glClearColorIiEXT(red:GLint, green:GLint, blue:GLint, alpha:GLint) {glClearColorIiEXT_P(red, green, blue, alpha)}
var glClearColorIiEXT_P:@convention(c)(GLint, GLint, GLint, GLint) -> Void = glClearColorIiEXT_L
public func glClearColorIuiEXT(_ red:GLuint, _ green:GLuint, _ blue:GLuint, _ alpha:GLuint) {glClearColorIuiEXT_P(red, green, blue, alpha)}
public func glClearColorIuiEXT(red:GLuint, green:GLuint, blue:GLuint, alpha:GLuint) {glClearColorIuiEXT_P(red, green, blue, alpha)}
var glClearColorIuiEXT_P:@convention(c)(GLuint, GLuint, GLuint, GLuint) -> Void = glClearColorIuiEXT_L
public func glClearColorx(_ red:GLfixed, _ green:GLfixed, _ blue:GLfixed, _ alpha:GLfixed) {glClearColorx_P(red, green, blue, alpha)}
public func glClearColorx(red:GLfixed, green:GLfixed, blue:GLfixed, alpha:GLfixed) {glClearColorx_P(red, green, blue, alpha)}
var glClearColorx_P:@convention(c)(GLfixed, GLfixed, GLfixed, GLfixed) -> Void = glClearColorx_L
public func glClearColorxOES(_ red:GLfixed, _ green:GLfixed, _ blue:GLfixed, _ alpha:GLfixed) {glClearColorxOES_P(red, green, blue, alpha)}
public func glClearColorxOES(red:GLfixed, green:GLfixed, blue:GLfixed, alpha:GLfixed) {glClearColorxOES_P(red, green, blue, alpha)}
var glClearColorxOES_P:@convention(c)(GLfixed, GLfixed, GLfixed, GLfixed) -> Void = glClearColorxOES_L
public func glClearDepth(_ depth:GLdouble) {glClearDepth_P(depth)}
public func glClearDepth(depth:GLdouble) {glClearDepth_P(depth)}
var glClearDepth_P:@convention(c)(GLdouble) -> Void = glClearDepth_L
public func glClearDepthdNV(_ depth:GLdouble) {glClearDepthdNV_P(depth)}
public func glClearDepthdNV(depth:GLdouble) {glClearDepthdNV_P(depth)}
var glClearDepthdNV_P:@convention(c)(GLdouble) -> Void = glClearDepthdNV_L
public func glClearDepthf(_ d:GLfloat) {glClearDepthf_P(d)}
public func glClearDepthf(d:GLfloat) {glClearDepthf_P(d)}
var glClearDepthf_P:@convention(c)(GLfloat) -> Void = glClearDepthf_L
public func glClearDepthfOES(_ depth:GLclampf) {glClearDepthfOES_P(depth)}
public func glClearDepthfOES(depth:GLclampf) {glClearDepthfOES_P(depth)}
var glClearDepthfOES_P:@convention(c)(GLclampf) -> Void = glClearDepthfOES_L
public func glClearDepthx(_ depth:GLfixed) {glClearDepthx_P(depth)}
public func glClearDepthx(depth:GLfixed) {glClearDepthx_P(depth)}
var glClearDepthx_P:@convention(c)(GLfixed) -> Void = glClearDepthx_L
public func glClearDepthxOES(_ depth:GLfixed) {glClearDepthxOES_P(depth)}
public func glClearDepthxOES(depth:GLfixed) {glClearDepthxOES_P(depth)}
var glClearDepthxOES_P:@convention(c)(GLfixed) -> Void = glClearDepthxOES_L
public func glClearIndex(_ c:GLfloat) {glClearIndex_P(c)}
public func glClearIndex(c:GLfloat) {glClearIndex_P(c)}
var glClearIndex_P:@convention(c)(GLfloat) -> Void = glClearIndex_L
public func glClearNamedBufferData(_ buffer:GLuint, _ internalformat:GLenum, _ format:GLenum, _ type:GLenum, _ data:UnsafeRawPointer) {glClearNamedBufferData_P(buffer, internalformat, format, type, data)}
public func glClearNamedBufferData(buffer:GLuint, internalformat:GLenum, format:GLenum, type:GLenum, data:UnsafeRawPointer) {glClearNamedBufferData_P(buffer, internalformat, format, type, data)}
var glClearNamedBufferData_P:@convention(c)(GLuint, GLenum, GLenum, GLenum, UnsafeRawPointer) -> Void = glClearNamedBufferData_L
public func glClearNamedBufferDataEXT(_ buffer:GLuint, _ internalformat:GLenum, _ format:GLenum, _ type:GLenum, _ data:UnsafeRawPointer) {glClearNamedBufferDataEXT_P(buffer, internalformat, format, type, data)}
public func glClearNamedBufferDataEXT(buffer:GLuint, internalformat:GLenum, format:GLenum, type:GLenum, data:UnsafeRawPointer) {glClearNamedBufferDataEXT_P(buffer, internalformat, format, type, data)}
var glClearNamedBufferDataEXT_P:@convention(c)(GLuint, GLenum, GLenum, GLenum, UnsafeRawPointer) -> Void = glClearNamedBufferDataEXT_L
public func glClearNamedBufferSubData(_ buffer:GLuint, _ internalformat:GLenum, _ offset:GLintptr, _ size:GLsizeiptr, _ format:GLenum, _ type:GLenum, _ data:UnsafeRawPointer) {glClearNamedBufferSubData_P(buffer, internalformat, offset, size, format, type, data)}
public func glClearNamedBufferSubData(buffer:GLuint, internalformat:GLenum, offset:GLintptr, size:GLsizeiptr, format:GLenum, type:GLenum, data:UnsafeRawPointer) {glClearNamedBufferSubData_P(buffer, internalformat, offset, size, format, type, data)}
var glClearNamedBufferSubData_P:@convention(c)(GLuint, GLenum, GLintptr, GLsizeiptr, GLenum, GLenum, UnsafeRawPointer) -> Void = glClearNamedBufferSubData_L
public func glClearNamedBufferSubDataEXT(_ buffer:GLuint, _ internalformat:GLenum, _ offset:GLsizeiptr, _ size:GLsizeiptr, _ format:GLenum, _ type:GLenum, _ data:UnsafeRawPointer) {glClearNamedBufferSubDataEXT_P(buffer, internalformat, offset, size, format, type, data)}
public func glClearNamedBufferSubDataEXT(buffer:GLuint, internalformat:GLenum, offset:GLsizeiptr, size:GLsizeiptr, format:GLenum, type:GLenum, data:UnsafeRawPointer) {glClearNamedBufferSubDataEXT_P(buffer, internalformat, offset, size, format, type, data)}
var glClearNamedBufferSubDataEXT_P:@convention(c)(GLuint, GLenum, GLsizeiptr, GLsizeiptr, GLenum, GLenum, UnsafeRawPointer) -> Void = glClearNamedBufferSubDataEXT_L
public func glClearNamedFramebufferfi(_ framebuffer:GLuint, _ buffer:GLenum, _ drawbuffer:GLint, _ depth:GLfloat, _ stencil:GLint) {glClearNamedFramebufferfi_P(framebuffer, buffer, drawbuffer, depth, stencil)}
public func glClearNamedFramebufferfi(framebuffer:GLuint, buffer:GLenum, drawbuffer:GLint, depth:GLfloat, stencil:GLint) {glClearNamedFramebufferfi_P(framebuffer, buffer, drawbuffer, depth, stencil)}
var glClearNamedFramebufferfi_P:@convention(c)(GLuint, GLenum, GLint, GLfloat, GLint) -> Void = glClearNamedFramebufferfi_L
public func glClearNamedFramebufferfv(_ framebuffer:GLuint, _ buffer:GLenum, _ drawbuffer:GLint, _ value:UnsafePointer<GLfloat>) {glClearNamedFramebufferfv_P(framebuffer, buffer, drawbuffer, value)}
public func glClearNamedFramebufferfv(framebuffer:GLuint, buffer:GLenum, drawbuffer:GLint, value:UnsafePointer<GLfloat>) {glClearNamedFramebufferfv_P(framebuffer, buffer, drawbuffer, value)}
var glClearNamedFramebufferfv_P:@convention(c)(GLuint, GLenum, GLint, UnsafePointer<GLfloat>) -> Void = glClearNamedFramebufferfv_L
public func glClearNamedFramebufferiv(_ framebuffer:GLuint, _ buffer:GLenum, _ drawbuffer:GLint, _ value:UnsafePointer<GLint>) {glClearNamedFramebufferiv_P(framebuffer, buffer, drawbuffer, value)}
public func glClearNamedFramebufferiv(framebuffer:GLuint, buffer:GLenum, drawbuffer:GLint, value:UnsafePointer<GLint>) {glClearNamedFramebufferiv_P(framebuffer, buffer, drawbuffer, value)}
var glClearNamedFramebufferiv_P:@convention(c)(GLuint, GLenum, GLint, UnsafePointer<GLint>) -> Void = glClearNamedFramebufferiv_L
public func glClearNamedFramebufferuiv(_ framebuffer:GLuint, _ buffer:GLenum, _ drawbuffer:GLint, _ value:UnsafePointer<GLuint>) {glClearNamedFramebufferuiv_P(framebuffer, buffer, drawbuffer, value)}
public func glClearNamedFramebufferuiv(framebuffer:GLuint, buffer:GLenum, drawbuffer:GLint, value:UnsafePointer<GLuint>) {glClearNamedFramebufferuiv_P(framebuffer, buffer, drawbuffer, value)}
var glClearNamedFramebufferuiv_P:@convention(c)(GLuint, GLenum, GLint, UnsafePointer<GLuint>) -> Void = glClearNamedFramebufferuiv_L
public func glClearStencil(_ s:GLint) {glClearStencil_P(s)}
public func glClearStencil(s:GLint) {glClearStencil_P(s)}
var glClearStencil_P:@convention(c)(GLint) -> Void = glClearStencil_L
public func glClearTexImage(_ texture:GLuint, _ level:GLint, _ format:GLenum, _ type:GLenum, _ data:UnsafeRawPointer) {glClearTexImage_P(texture, level, format, type, data)}
public func glClearTexImage(texture:GLuint, level:GLint, format:GLenum, type:GLenum, data:UnsafeRawPointer) {glClearTexImage_P(texture, level, format, type, data)}
var glClearTexImage_P:@convention(c)(GLuint, GLint, GLenum, GLenum, UnsafeRawPointer) -> Void = glClearTexImage_L
public func glClearTexSubImage(_ texture:GLuint, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ zoffset:GLint, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ format:GLenum, _ type:GLenum, _ data:UnsafeRawPointer) {glClearTexSubImage_P(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, data)}
public func glClearTexSubImage(texture:GLuint, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, format:GLenum, type:GLenum, data:UnsafeRawPointer) {glClearTexSubImage_P(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, data)}
var glClearTexSubImage_P:@convention(c)(GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, UnsafeRawPointer) -> Void = glClearTexSubImage_L
public func glClientActiveTexture(_ texture:GLenum) {glClientActiveTexture_P(texture)}
public func glClientActiveTexture(texture:GLenum) {glClientActiveTexture_P(texture)}
var glClientActiveTexture_P:@convention(c)(GLenum) -> Void = glClientActiveTexture_L
public func glClientActiveTextureARB(_ texture:GLenum) {glClientActiveTextureARB_P(texture)}
public func glClientActiveTextureARB(texture:GLenum) {glClientActiveTextureARB_P(texture)}
var glClientActiveTextureARB_P:@convention(c)(GLenum) -> Void = glClientActiveTextureARB_L
public func glClientActiveVertexStreamATI(_ stream:GLenum) {glClientActiveVertexStreamATI_P(stream)}
public func glClientActiveVertexStreamATI(stream:GLenum) {glClientActiveVertexStreamATI_P(stream)}
var glClientActiveVertexStreamATI_P:@convention(c)(GLenum) -> Void = glClientActiveVertexStreamATI_L
public func glClientAttribDefaultEXT(_ mask:GLbitfield) {glClientAttribDefaultEXT_P(mask)}
public func glClientAttribDefaultEXT(mask:GLbitfield) {glClientAttribDefaultEXT_P(mask)}
var glClientAttribDefaultEXT_P:@convention(c)(GLbitfield) -> Void = glClientAttribDefaultEXT_L
public func glClientWaitSync(_ sync:GLsync, _ flags:GLbitfield, _ timeout:GLuint64) -> GLenum {return glClientWaitSync_P(sync, flags, timeout)}
public func glClientWaitSync(sync:GLsync, flags:GLbitfield, timeout:GLuint64) -> GLenum {return glClientWaitSync_P(sync, flags, timeout)}
var glClientWaitSync_P:@convention(c)(GLsync, GLbitfield, GLuint64) -> GLenum = glClientWaitSync_L
public func glClientWaitSyncAPPLE(_ sync:GLsync, _ flags:GLbitfield, _ timeout:GLuint64) -> GLenum {return glClientWaitSyncAPPLE_P(sync, flags, timeout)}
public func glClientWaitSyncAPPLE(sync:GLsync, flags:GLbitfield, timeout:GLuint64) -> GLenum {return glClientWaitSyncAPPLE_P(sync, flags, timeout)}
var glClientWaitSyncAPPLE_P:@convention(c)(GLsync, GLbitfield, GLuint64) -> GLenum = glClientWaitSyncAPPLE_L
public func glClipControl(_ origin:GLenum, _ depth:GLenum) {glClipControl_P(origin, depth)}
public func glClipControl(origin:GLenum, depth:GLenum) {glClipControl_P(origin, depth)}
var glClipControl_P:@convention(c)(GLenum, GLenum) -> Void = glClipControl_L
public func glClipPlane(_ plane:GLenum, _ equation:UnsafePointer<GLdouble>) {glClipPlane_P(plane, equation)}
public func glClipPlane(plane:GLenum, equation:UnsafePointer<GLdouble>) {glClipPlane_P(plane, equation)}
var glClipPlane_P:@convention(c)(GLenum, UnsafePointer<GLdouble>) -> Void = glClipPlane_L
public func glClipPlanef(_ p:GLenum, _ eqn:UnsafePointer<GLfloat>) {glClipPlanef_P(p, eqn)}
public func glClipPlanef(p:GLenum, eqn:UnsafePointer<GLfloat>) {glClipPlanef_P(p, eqn)}
var glClipPlanef_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glClipPlanef_L
public func glClipPlanefIMG(_ p:GLenum, _ eqn:UnsafePointer<GLfloat>) {glClipPlanefIMG_P(p, eqn)}
public func glClipPlanefIMG(p:GLenum, eqn:UnsafePointer<GLfloat>) {glClipPlanefIMG_P(p, eqn)}
var glClipPlanefIMG_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glClipPlanefIMG_L
public func glClipPlanefOES(_ plane:GLenum, _ equation:UnsafePointer<GLfloat>) {glClipPlanefOES_P(plane, equation)}
public func glClipPlanefOES(plane:GLenum, equation:UnsafePointer<GLfloat>) {glClipPlanefOES_P(plane, equation)}
var glClipPlanefOES_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glClipPlanefOES_L
public func glClipPlanex(_ plane:GLenum, _ equation:UnsafePointer<GLfixed>) {glClipPlanex_P(plane, equation)}
public func glClipPlanex(plane:GLenum, equation:UnsafePointer<GLfixed>) {glClipPlanex_P(plane, equation)}
var glClipPlanex_P:@convention(c)(GLenum, UnsafePointer<GLfixed>) -> Void = glClipPlanex_L
public func glClipPlanexIMG(_ p:GLenum, _ eqn:UnsafePointer<GLfixed>) {glClipPlanexIMG_P(p, eqn)}
public func glClipPlanexIMG(p:GLenum, eqn:UnsafePointer<GLfixed>) {glClipPlanexIMG_P(p, eqn)}
var glClipPlanexIMG_P:@convention(c)(GLenum, UnsafePointer<GLfixed>) -> Void = glClipPlanexIMG_L
public func glClipPlanexOES(_ plane:GLenum, _ equation:UnsafePointer<GLfixed>) {glClipPlanexOES_P(plane, equation)}
public func glClipPlanexOES(plane:GLenum, equation:UnsafePointer<GLfixed>) {glClipPlanexOES_P(plane, equation)}
var glClipPlanexOES_P:@convention(c)(GLenum, UnsafePointer<GLfixed>) -> Void = glClipPlanexOES_L
public func glColor3b(_ red:GLbyte, _ green:GLbyte, _ blue:GLbyte) {glColor3b_P(red, green, blue)}
public func glColor3b(red:GLbyte, green:GLbyte, blue:GLbyte) {glColor3b_P(red, green, blue)}
var glColor3b_P:@convention(c)(GLbyte, GLbyte, GLbyte) -> Void = glColor3b_L
public func glColor3bv(_ v:UnsafePointer<GLbyte>) {glColor3bv_P(v)}
public func glColor3bv(v:UnsafePointer<GLbyte>) {glColor3bv_P(v)}
var glColor3bv_P:@convention(c)(UnsafePointer<GLbyte>) -> Void = glColor3bv_L
public func glColor3d(_ red:GLdouble, _ green:GLdouble, _ blue:GLdouble) {glColor3d_P(red, green, blue)}
public func glColor3d(red:GLdouble, green:GLdouble, blue:GLdouble) {glColor3d_P(red, green, blue)}
var glColor3d_P:@convention(c)(GLdouble, GLdouble, GLdouble) -> Void = glColor3d_L
public func glColor3dv(_ v:UnsafePointer<GLdouble>) {glColor3dv_P(v)}
public func glColor3dv(v:UnsafePointer<GLdouble>) {glColor3dv_P(v)}
var glColor3dv_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glColor3dv_L
public func glColor3f(_ red:GLfloat, _ green:GLfloat, _ blue:GLfloat) {glColor3f_P(red, green, blue)}
public func glColor3f(red:GLfloat, green:GLfloat, blue:GLfloat) {glColor3f_P(red, green, blue)}
var glColor3f_P:@convention(c)(GLfloat, GLfloat, GLfloat) -> Void = glColor3f_L
public func glColor3fVertex3fSUN(_ r:GLfloat, _ g:GLfloat, _ b:GLfloat, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat) {glColor3fVertex3fSUN_P(r, g, b, x, y, z)}
public func glColor3fVertex3fSUN(r:GLfloat, g:GLfloat, b:GLfloat, x:GLfloat, y:GLfloat, z:GLfloat) {glColor3fVertex3fSUN_P(r, g, b, x, y, z)}
var glColor3fVertex3fSUN_P:@convention(c)(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glColor3fVertex3fSUN_L
public func glColor3fVertex3fvSUN(_ c:UnsafePointer<GLfloat>, _ v:UnsafePointer<GLfloat>) {glColor3fVertex3fvSUN_P(c, v)}
public func glColor3fVertex3fvSUN(c:UnsafePointer<GLfloat>, v:UnsafePointer<GLfloat>) {glColor3fVertex3fvSUN_P(c, v)}
var glColor3fVertex3fvSUN_P:@convention(c)(UnsafePointer<GLfloat>, UnsafePointer<GLfloat>) -> Void = glColor3fVertex3fvSUN_L
public func glColor3fv(_ v:UnsafePointer<GLfloat>) {glColor3fv_P(v)}
public func glColor3fv(v:UnsafePointer<GLfloat>) {glColor3fv_P(v)}
var glColor3fv_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glColor3fv_L
public func glColor3hNV(_ red:GLhalfNV, _ green:GLhalfNV, _ blue:GLhalfNV) {glColor3hNV_P(red, green, blue)}
public func glColor3hNV(red:GLhalfNV, green:GLhalfNV, blue:GLhalfNV) {glColor3hNV_P(red, green, blue)}
var glColor3hNV_P:@convention(c)(GLhalfNV, GLhalfNV, GLhalfNV) -> Void = glColor3hNV_L
public func glColor3hvNV(_ v:UnsafePointer<GLhalfNV>) {glColor3hvNV_P(v)}
public func glColor3hvNV(v:UnsafePointer<GLhalfNV>) {glColor3hvNV_P(v)}
var glColor3hvNV_P:@convention(c)(UnsafePointer<GLhalfNV>) -> Void = glColor3hvNV_L
public func glColor3i(_ red:GLint, _ green:GLint, _ blue:GLint) {glColor3i_P(red, green, blue)}
public func glColor3i(red:GLint, green:GLint, blue:GLint) {glColor3i_P(red, green, blue)}
var glColor3i_P:@convention(c)(GLint, GLint, GLint) -> Void = glColor3i_L
public func glColor3iv(_ v:UnsafePointer<GLint>) {glColor3iv_P(v)}
public func glColor3iv(v:UnsafePointer<GLint>) {glColor3iv_P(v)}
var glColor3iv_P:@convention(c)(UnsafePointer<GLint>) -> Void = glColor3iv_L
public func glColor3s(_ red:GLshort, _ green:GLshort, _ blue:GLshort) {glColor3s_P(red, green, blue)}
public func glColor3s(red:GLshort, green:GLshort, blue:GLshort) {glColor3s_P(red, green, blue)}
var glColor3s_P:@convention(c)(GLshort, GLshort, GLshort) -> Void = glColor3s_L
public func glColor3sv(_ v:UnsafePointer<GLshort>) {glColor3sv_P(v)}
public func glColor3sv(v:UnsafePointer<GLshort>) {glColor3sv_P(v)}
var glColor3sv_P:@convention(c)(UnsafePointer<GLshort>) -> Void = glColor3sv_L
public func glColor3ub(_ red:GLubyte, _ green:GLubyte, _ blue:GLubyte) {glColor3ub_P(red, green, blue)}
public func glColor3ub(red:GLubyte, green:GLubyte, blue:GLubyte) {glColor3ub_P(red, green, blue)}
var glColor3ub_P:@convention(c)(GLubyte, GLubyte, GLubyte) -> Void = glColor3ub_L
public func glColor3ubv(_ v:UnsafePointer<GLubyte>) {glColor3ubv_P(v)}
public func glColor3ubv(v:UnsafePointer<GLubyte>) {glColor3ubv_P(v)}
var glColor3ubv_P:@convention(c)(UnsafePointer<GLubyte>) -> Void = glColor3ubv_L
public func glColor3ui(_ red:GLuint, _ green:GLuint, _ blue:GLuint) {glColor3ui_P(red, green, blue)}
public func glColor3ui(red:GLuint, green:GLuint, blue:GLuint) {glColor3ui_P(red, green, blue)}
var glColor3ui_P:@convention(c)(GLuint, GLuint, GLuint) -> Void = glColor3ui_L
public func glColor3uiv(_ v:UnsafePointer<GLuint>) {glColor3uiv_P(v)}
public func glColor3uiv(v:UnsafePointer<GLuint>) {glColor3uiv_P(v)}
var glColor3uiv_P:@convention(c)(UnsafePointer<GLuint>) -> Void = glColor3uiv_L
public func glColor3us(_ red:GLushort, _ green:GLushort, _ blue:GLushort) {glColor3us_P(red, green, blue)}
public func glColor3us(red:GLushort, green:GLushort, blue:GLushort) {glColor3us_P(red, green, blue)}
var glColor3us_P:@convention(c)(GLushort, GLushort, GLushort) -> Void = glColor3us_L
public func glColor3usv(_ v:UnsafePointer<GLushort>) {glColor3usv_P(v)}
public func glColor3usv(v:UnsafePointer<GLushort>) {glColor3usv_P(v)}
var glColor3usv_P:@convention(c)(UnsafePointer<GLushort>) -> Void = glColor3usv_L
public func glColor3xOES(_ red:GLfixed, _ green:GLfixed, _ blue:GLfixed) {glColor3xOES_P(red, green, blue)}
public func glColor3xOES(red:GLfixed, green:GLfixed, blue:GLfixed) {glColor3xOES_P(red, green, blue)}
var glColor3xOES_P:@convention(c)(GLfixed, GLfixed, GLfixed) -> Void = glColor3xOES_L
public func glColor3xvOES(_ components:UnsafePointer<GLfixed>) {glColor3xvOES_P(components)}
public func glColor3xvOES(components:UnsafePointer<GLfixed>) {glColor3xvOES_P(components)}
var glColor3xvOES_P:@convention(c)(UnsafePointer<GLfixed>) -> Void = glColor3xvOES_L
public func glColor4b(_ red:GLbyte, _ green:GLbyte, _ blue:GLbyte, _ alpha:GLbyte) {glColor4b_P(red, green, blue, alpha)}
public func glColor4b(red:GLbyte, green:GLbyte, blue:GLbyte, alpha:GLbyte) {glColor4b_P(red, green, blue, alpha)}
var glColor4b_P:@convention(c)(GLbyte, GLbyte, GLbyte, GLbyte) -> Void = glColor4b_L
public func glColor4bv(_ v:UnsafePointer<GLbyte>) {glColor4bv_P(v)}
public func glColor4bv(v:UnsafePointer<GLbyte>) {glColor4bv_P(v)}
var glColor4bv_P:@convention(c)(UnsafePointer<GLbyte>) -> Void = glColor4bv_L
public func glColor4d(_ red:GLdouble, _ green:GLdouble, _ blue:GLdouble, _ alpha:GLdouble) {glColor4d_P(red, green, blue, alpha)}
public func glColor4d(red:GLdouble, green:GLdouble, blue:GLdouble, alpha:GLdouble) {glColor4d_P(red, green, blue, alpha)}
var glColor4d_P:@convention(c)(GLdouble, GLdouble, GLdouble, GLdouble) -> Void = glColor4d_L
public func glColor4dv(_ v:UnsafePointer<GLdouble>) {glColor4dv_P(v)}
public func glColor4dv(v:UnsafePointer<GLdouble>) {glColor4dv_P(v)}
var glColor4dv_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glColor4dv_L
public func glColor4f(_ red:GLfloat, _ green:GLfloat, _ blue:GLfloat, _ alpha:GLfloat) {glColor4f_P(red, green, blue, alpha)}
public func glColor4f(red:GLfloat, green:GLfloat, blue:GLfloat, alpha:GLfloat) {glColor4f_P(red, green, blue, alpha)}
var glColor4f_P:@convention(c)(GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glColor4f_L
public func glColor4fNormal3fVertex3fSUN(_ r:GLfloat, _ g:GLfloat, _ b:GLfloat, _ a:GLfloat, _ nx:GLfloat, _ ny:GLfloat, _ nz:GLfloat, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat) {glColor4fNormal3fVertex3fSUN_P(r, g, b, a, nx, ny, nz, x, y, z)}
public func glColor4fNormal3fVertex3fSUN(r:GLfloat, g:GLfloat, b:GLfloat, a:GLfloat, nx:GLfloat, ny:GLfloat, nz:GLfloat, x:GLfloat, y:GLfloat, z:GLfloat) {glColor4fNormal3fVertex3fSUN_P(r, g, b, a, nx, ny, nz, x, y, z)}
var glColor4fNormal3fVertex3fSUN_P:@convention(c)(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glColor4fNormal3fVertex3fSUN_L
public func glColor4fNormal3fVertex3fvSUN(_ c:UnsafePointer<GLfloat>, _ n:UnsafePointer<GLfloat>, _ v:UnsafePointer<GLfloat>) {glColor4fNormal3fVertex3fvSUN_P(c, n, v)}
public func glColor4fNormal3fVertex3fvSUN(c:UnsafePointer<GLfloat>, n:UnsafePointer<GLfloat>, v:UnsafePointer<GLfloat>) {glColor4fNormal3fVertex3fvSUN_P(c, n, v)}
var glColor4fNormal3fVertex3fvSUN_P:@convention(c)(UnsafePointer<GLfloat>, UnsafePointer<GLfloat>, UnsafePointer<GLfloat>) -> Void = glColor4fNormal3fVertex3fvSUN_L
public func glColor4fv(_ v:UnsafePointer<GLfloat>) {glColor4fv_P(v)}
public func glColor4fv(v:UnsafePointer<GLfloat>) {glColor4fv_P(v)}
var glColor4fv_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glColor4fv_L
public func glColor4hNV(_ red:GLhalfNV, _ green:GLhalfNV, _ blue:GLhalfNV, _ alpha:GLhalfNV) {glColor4hNV_P(red, green, blue, alpha)}
public func glColor4hNV(red:GLhalfNV, green:GLhalfNV, blue:GLhalfNV, alpha:GLhalfNV) {glColor4hNV_P(red, green, blue, alpha)}
var glColor4hNV_P:@convention(c)(GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) -> Void = glColor4hNV_L
public func glColor4hvNV(_ v:UnsafePointer<GLhalfNV>) {glColor4hvNV_P(v)}
public func glColor4hvNV(v:UnsafePointer<GLhalfNV>) {glColor4hvNV_P(v)}
var glColor4hvNV_P:@convention(c)(UnsafePointer<GLhalfNV>) -> Void = glColor4hvNV_L
public func glColor4i(_ red:GLint, _ green:GLint, _ blue:GLint, _ alpha:GLint) {glColor4i_P(red, green, blue, alpha)}
public func glColor4i(red:GLint, green:GLint, blue:GLint, alpha:GLint) {glColor4i_P(red, green, blue, alpha)}
var glColor4i_P:@convention(c)(GLint, GLint, GLint, GLint) -> Void = glColor4i_L
public func glColor4iv(_ v:UnsafePointer<GLint>) {glColor4iv_P(v)}
public func glColor4iv(v:UnsafePointer<GLint>) {glColor4iv_P(v)}
var glColor4iv_P:@convention(c)(UnsafePointer<GLint>) -> Void = glColor4iv_L
public func glColor4s(_ red:GLshort, _ green:GLshort, _ blue:GLshort, _ alpha:GLshort) {glColor4s_P(red, green, blue, alpha)}
public func glColor4s(red:GLshort, green:GLshort, blue:GLshort, alpha:GLshort) {glColor4s_P(red, green, blue, alpha)}
var glColor4s_P:@convention(c)(GLshort, GLshort, GLshort, GLshort) -> Void = glColor4s_L
public func glColor4sv(_ v:UnsafePointer<GLshort>) {glColor4sv_P(v)}
public func glColor4sv(v:UnsafePointer<GLshort>) {glColor4sv_P(v)}
var glColor4sv_P:@convention(c)(UnsafePointer<GLshort>) -> Void = glColor4sv_L
public func glColor4ub(_ red:GLubyte, _ green:GLubyte, _ blue:GLubyte, _ alpha:GLubyte) {glColor4ub_P(red, green, blue, alpha)}
public func glColor4ub(red:GLubyte, green:GLubyte, blue:GLubyte, alpha:GLubyte) {glColor4ub_P(red, green, blue, alpha)}
var glColor4ub_P:@convention(c)(GLubyte, GLubyte, GLubyte, GLubyte) -> Void = glColor4ub_L
public func glColor4ubVertex2fSUN(_ r:GLubyte, _ g:GLubyte, _ b:GLubyte, _ a:GLubyte, _ x:GLfloat, _ y:GLfloat) {glColor4ubVertex2fSUN_P(r, g, b, a, x, y)}
public func glColor4ubVertex2fSUN(r:GLubyte, g:GLubyte, b:GLubyte, a:GLubyte, x:GLfloat, y:GLfloat) {glColor4ubVertex2fSUN_P(r, g, b, a, x, y)}
var glColor4ubVertex2fSUN_P:@convention(c)(GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat) -> Void = glColor4ubVertex2fSUN_L
public func glColor4ubVertex2fvSUN(_ c:UnsafePointer<GLubyte>, _ v:UnsafePointer<GLfloat>) {glColor4ubVertex2fvSUN_P(c, v)}
public func glColor4ubVertex2fvSUN(c:UnsafePointer<GLubyte>, v:UnsafePointer<GLfloat>) {glColor4ubVertex2fvSUN_P(c, v)}
var glColor4ubVertex2fvSUN_P:@convention(c)(UnsafePointer<GLubyte>, UnsafePointer<GLfloat>) -> Void = glColor4ubVertex2fvSUN_L
public func glColor4ubVertex3fSUN(_ r:GLubyte, _ g:GLubyte, _ b:GLubyte, _ a:GLubyte, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat) {glColor4ubVertex3fSUN_P(r, g, b, a, x, y, z)}
public func glColor4ubVertex3fSUN(r:GLubyte, g:GLubyte, b:GLubyte, a:GLubyte, x:GLfloat, y:GLfloat, z:GLfloat) {glColor4ubVertex3fSUN_P(r, g, b, a, x, y, z)}
var glColor4ubVertex3fSUN_P:@convention(c)(GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat) -> Void = glColor4ubVertex3fSUN_L
public func glColor4ubVertex3fvSUN(_ c:UnsafePointer<GLubyte>, _ v:UnsafePointer<GLfloat>) {glColor4ubVertex3fvSUN_P(c, v)}
public func glColor4ubVertex3fvSUN(c:UnsafePointer<GLubyte>, v:UnsafePointer<GLfloat>) {glColor4ubVertex3fvSUN_P(c, v)}
var glColor4ubVertex3fvSUN_P:@convention(c)(UnsafePointer<GLubyte>, UnsafePointer<GLfloat>) -> Void = glColor4ubVertex3fvSUN_L
public func glColor4ubv(_ v:UnsafePointer<GLubyte>) {glColor4ubv_P(v)}
public func glColor4ubv(v:UnsafePointer<GLubyte>) {glColor4ubv_P(v)}
var glColor4ubv_P:@convention(c)(UnsafePointer<GLubyte>) -> Void = glColor4ubv_L
public func glColor4ui(_ red:GLuint, _ green:GLuint, _ blue:GLuint, _ alpha:GLuint) {glColor4ui_P(red, green, blue, alpha)}
public func glColor4ui(red:GLuint, green:GLuint, blue:GLuint, alpha:GLuint) {glColor4ui_P(red, green, blue, alpha)}
var glColor4ui_P:@convention(c)(GLuint, GLuint, GLuint, GLuint) -> Void = glColor4ui_L
public func glColor4uiv(_ v:UnsafePointer<GLuint>) {glColor4uiv_P(v)}
public func glColor4uiv(v:UnsafePointer<GLuint>) {glColor4uiv_P(v)}
var glColor4uiv_P:@convention(c)(UnsafePointer<GLuint>) -> Void = glColor4uiv_L
public func glColor4us(_ red:GLushort, _ green:GLushort, _ blue:GLushort, _ alpha:GLushort) {glColor4us_P(red, green, blue, alpha)}
public func glColor4us(red:GLushort, green:GLushort, blue:GLushort, alpha:GLushort) {glColor4us_P(red, green, blue, alpha)}
var glColor4us_P:@convention(c)(GLushort, GLushort, GLushort, GLushort) -> Void = glColor4us_L
public func glColor4usv(_ v:UnsafePointer<GLushort>) {glColor4usv_P(v)}
public func glColor4usv(v:UnsafePointer<GLushort>) {glColor4usv_P(v)}
var glColor4usv_P:@convention(c)(UnsafePointer<GLushort>) -> Void = glColor4usv_L
public func glColor4x(_ red:GLfixed, _ green:GLfixed, _ blue:GLfixed, _ alpha:GLfixed) {glColor4x_P(red, green, blue, alpha)}
public func glColor4x(red:GLfixed, green:GLfixed, blue:GLfixed, alpha:GLfixed) {glColor4x_P(red, green, blue, alpha)}
var glColor4x_P:@convention(c)(GLfixed, GLfixed, GLfixed, GLfixed) -> Void = glColor4x_L
public func glColor4xOES(_ red:GLfixed, _ green:GLfixed, _ blue:GLfixed, _ alpha:GLfixed) {glColor4xOES_P(red, green, blue, alpha)}
public func glColor4xOES(red:GLfixed, green:GLfixed, blue:GLfixed, alpha:GLfixed) {glColor4xOES_P(red, green, blue, alpha)}
var glColor4xOES_P:@convention(c)(GLfixed, GLfixed, GLfixed, GLfixed) -> Void = glColor4xOES_L
public func glColor4xvOES(_ components:UnsafePointer<GLfixed>) {glColor4xvOES_P(components)}
public func glColor4xvOES(components:UnsafePointer<GLfixed>) {glColor4xvOES_P(components)}
var glColor4xvOES_P:@convention(c)(UnsafePointer<GLfixed>) -> Void = glColor4xvOES_L
public func glColorFormatNV(_ size:GLint, _ type:GLenum, _ stride:GLsizei) {glColorFormatNV_P(size, type, stride)}
public func glColorFormatNV(size:GLint, type:GLenum, stride:GLsizei) {glColorFormatNV_P(size, type, stride)}
var glColorFormatNV_P:@convention(c)(GLint, GLenum, GLsizei) -> Void = glColorFormatNV_L
public func glColorFragmentOp1ATI(_ op:GLenum, _ dst:GLuint, _ dstMask:GLuint, _ dstMod:GLuint, _ arg1:GLuint, _ arg1Rep:GLuint, _ arg1Mod:GLuint) {glColorFragmentOp1ATI_P(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod)}
public func glColorFragmentOp1ATI(op:GLenum, dst:GLuint, dstMask:GLuint, dstMod:GLuint, arg1:GLuint, arg1Rep:GLuint, arg1Mod:GLuint) {glColorFragmentOp1ATI_P(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod)}
var glColorFragmentOp1ATI_P:@convention(c)(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) -> Void = glColorFragmentOp1ATI_L
public func glColorFragmentOp2ATI(_ op:GLenum, _ dst:GLuint, _ dstMask:GLuint, _ dstMod:GLuint, _ arg1:GLuint, _ arg1Rep:GLuint, _ arg1Mod:GLuint, _ arg2:GLuint, _ arg2Rep:GLuint, _ arg2Mod:GLuint) {glColorFragmentOp2ATI_P(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod)}
public func glColorFragmentOp2ATI(op:GLenum, dst:GLuint, dstMask:GLuint, dstMod:GLuint, arg1:GLuint, arg1Rep:GLuint, arg1Mod:GLuint, arg2:GLuint, arg2Rep:GLuint, arg2Mod:GLuint) {glColorFragmentOp2ATI_P(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod)}
var glColorFragmentOp2ATI_P:@convention(c)(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) -> Void = glColorFragmentOp2ATI_L
public func glColorFragmentOp3ATI(_ op:GLenum, _ dst:GLuint, _ dstMask:GLuint, _ dstMod:GLuint, _ arg1:GLuint, _ arg1Rep:GLuint, _ arg1Mod:GLuint, _ arg2:GLuint, _ arg2Rep:GLuint, _ arg2Mod:GLuint, _ arg3:GLuint, _ arg3Rep:GLuint, _ arg3Mod:GLuint) {glColorFragmentOp3ATI_P(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod)}
public func glColorFragmentOp3ATI(op:GLenum, dst:GLuint, dstMask:GLuint, dstMod:GLuint, arg1:GLuint, arg1Rep:GLuint, arg1Mod:GLuint, arg2:GLuint, arg2Rep:GLuint, arg2Mod:GLuint, arg3:GLuint, arg3Rep:GLuint, arg3Mod:GLuint) {glColorFragmentOp3ATI_P(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod)}
var glColorFragmentOp3ATI_P:@convention(c)(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) -> Void = glColorFragmentOp3ATI_L
public func glColorMask(_ red:GLboolean, _ green:GLboolean, _ blue:GLboolean, _ alpha:GLboolean) {glColorMask_P(red, green, blue, alpha)}
public func glColorMask(red:GLboolean, green:GLboolean, blue:GLboolean, alpha:GLboolean) {glColorMask_P(red, green, blue, alpha)}
var glColorMask_P:@convention(c)(GLboolean, GLboolean, GLboolean, GLboolean) -> Void = glColorMask_L
public func glColorMaskIndexedEXT(_ index:GLuint, _ r:GLboolean, _ g:GLboolean, _ b:GLboolean, _ a:GLboolean) {glColorMaskIndexedEXT_P(index, r, g, b, a)}
public func glColorMaskIndexedEXT(index:GLuint, r:GLboolean, g:GLboolean, b:GLboolean, a:GLboolean) {glColorMaskIndexedEXT_P(index, r, g, b, a)}
var glColorMaskIndexedEXT_P:@convention(c)(GLuint, GLboolean, GLboolean, GLboolean, GLboolean) -> Void = glColorMaskIndexedEXT_L
public func glColorMaski(_ index:GLuint, _ r:GLboolean, _ g:GLboolean, _ b:GLboolean, _ a:GLboolean) {glColorMaski_P(index, r, g, b, a)}
public func glColorMaski(index:GLuint, r:GLboolean, g:GLboolean, b:GLboolean, a:GLboolean) {glColorMaski_P(index, r, g, b, a)}
var glColorMaski_P:@convention(c)(GLuint, GLboolean, GLboolean, GLboolean, GLboolean) -> Void = glColorMaski_L
public func glColorMaskiEXT(_ index:GLuint, _ r:GLboolean, _ g:GLboolean, _ b:GLboolean, _ a:GLboolean) {glColorMaskiEXT_P(index, r, g, b, a)}
public func glColorMaskiEXT(index:GLuint, r:GLboolean, g:GLboolean, b:GLboolean, a:GLboolean) {glColorMaskiEXT_P(index, r, g, b, a)}
var glColorMaskiEXT_P:@convention(c)(GLuint, GLboolean, GLboolean, GLboolean, GLboolean) -> Void = glColorMaskiEXT_L
public func glColorMaskiOES(_ index:GLuint, _ r:GLboolean, _ g:GLboolean, _ b:GLboolean, _ a:GLboolean) {glColorMaskiOES_P(index, r, g, b, a)}
public func glColorMaskiOES(index:GLuint, r:GLboolean, g:GLboolean, b:GLboolean, a:GLboolean) {glColorMaskiOES_P(index, r, g, b, a)}
var glColorMaskiOES_P:@convention(c)(GLuint, GLboolean, GLboolean, GLboolean, GLboolean) -> Void = glColorMaskiOES_L
public func glColorMaterial(_ face:GLenum, _ mode:GLenum) {glColorMaterial_P(face, mode)}
public func glColorMaterial(face:GLenum, mode:GLenum) {glColorMaterial_P(face, mode)}
var glColorMaterial_P:@convention(c)(GLenum, GLenum) -> Void = glColorMaterial_L
public func glColorP3ui(_ type:GLenum, _ color:GLuint) {glColorP3ui_P(type, color)}
public func glColorP3ui(type:GLenum, color:GLuint) {glColorP3ui_P(type, color)}
var glColorP3ui_P:@convention(c)(GLenum, GLuint) -> Void = glColorP3ui_L
public func glColorP3uiv(_ type:GLenum, _ color:UnsafePointer<GLuint>) {glColorP3uiv_P(type, color)}
public func glColorP3uiv(type:GLenum, color:UnsafePointer<GLuint>) {glColorP3uiv_P(type, color)}
var glColorP3uiv_P:@convention(c)(GLenum, UnsafePointer<GLuint>) -> Void = glColorP3uiv_L
public func glColorP4ui(_ type:GLenum, _ color:GLuint) {glColorP4ui_P(type, color)}
public func glColorP4ui(type:GLenum, color:GLuint) {glColorP4ui_P(type, color)}
var glColorP4ui_P:@convention(c)(GLenum, GLuint) -> Void = glColorP4ui_L
public func glColorP4uiv(_ type:GLenum, _ color:UnsafePointer<GLuint>) {glColorP4uiv_P(type, color)}
public func glColorP4uiv(type:GLenum, color:UnsafePointer<GLuint>) {glColorP4uiv_P(type, color)}
var glColorP4uiv_P:@convention(c)(GLenum, UnsafePointer<GLuint>) -> Void = glColorP4uiv_L
public func glColorPointer(_ size:GLint, _ type:GLenum, _ stride:GLsizei, _ pointer:UnsafeRawPointer) {glColorPointer_P(size, type, stride, pointer)}
public func glColorPointer(size:GLint, type:GLenum, stride:GLsizei, pointer:UnsafeRawPointer) {glColorPointer_P(size, type, stride, pointer)}
var glColorPointer_P:@convention(c)(GLint, GLenum, GLsizei, UnsafeRawPointer) -> Void = glColorPointer_L
public func glColorPointerEXT(_ size:GLint, _ type:GLenum, _ stride:GLsizei, _ count:GLsizei, _ pointer:UnsafeRawPointer) {glColorPointerEXT_P(size, type, stride, count, pointer)}
public func glColorPointerEXT(size:GLint, type:GLenum, stride:GLsizei, count:GLsizei, pointer:UnsafeRawPointer) {glColorPointerEXT_P(size, type, stride, count, pointer)}
var glColorPointerEXT_P:@convention(c)(GLint, GLenum, GLsizei, GLsizei, UnsafeRawPointer) -> Void = glColorPointerEXT_L
public func glColorPointerListIBM(_ size:GLint, _ type:GLenum, _ stride:GLint, _ pointer:UnsafeMutablePointer<UnsafeRawPointer>, _ ptrstride:GLint) {glColorPointerListIBM_P(size, type, stride, pointer, ptrstride)}
public func glColorPointerListIBM(size:GLint, type:GLenum, stride:GLint, pointer:UnsafeMutablePointer<UnsafeRawPointer>, ptrstride:GLint) {glColorPointerListIBM_P(size, type, stride, pointer, ptrstride)}
var glColorPointerListIBM_P:@convention(c)(GLint, GLenum, GLint, UnsafeMutablePointer<UnsafeRawPointer>, GLint) -> Void = glColorPointerListIBM_L
public func glColorPointervINTEL(_ size:GLint, _ type:GLenum, _ pointer:UnsafeMutablePointer<UnsafeRawPointer>) {glColorPointervINTEL_P(size, type, pointer)}
public func glColorPointervINTEL(size:GLint, type:GLenum, pointer:UnsafeMutablePointer<UnsafeRawPointer>) {glColorPointervINTEL_P(size, type, pointer)}
var glColorPointervINTEL_P:@convention(c)(GLint, GLenum, UnsafeMutablePointer<UnsafeRawPointer>) -> Void = glColorPointervINTEL_L
public func glColorSubTable(_ target:GLenum, _ start:GLsizei, _ count:GLsizei, _ format:GLenum, _ type:GLenum, _ data:UnsafeRawPointer) {glColorSubTable_P(target, start, count, format, type, data)}
public func glColorSubTable(target:GLenum, start:GLsizei, count:GLsizei, format:GLenum, type:GLenum, data:UnsafeRawPointer) {glColorSubTable_P(target, start, count, format, type, data)}
var glColorSubTable_P:@convention(c)(GLenum, GLsizei, GLsizei, GLenum, GLenum, UnsafeRawPointer) -> Void = glColorSubTable_L
public func glColorSubTableEXT(_ target:GLenum, _ start:GLsizei, _ count:GLsizei, _ format:GLenum, _ type:GLenum, _ data:UnsafeRawPointer) {glColorSubTableEXT_P(target, start, count, format, type, data)}
public func glColorSubTableEXT(target:GLenum, start:GLsizei, count:GLsizei, format:GLenum, type:GLenum, data:UnsafeRawPointer) {glColorSubTableEXT_P(target, start, count, format, type, data)}
var glColorSubTableEXT_P:@convention(c)(GLenum, GLsizei, GLsizei, GLenum, GLenum, UnsafeRawPointer) -> Void = glColorSubTableEXT_L
public func glColorTable(_ target:GLenum, _ internalformat:GLenum, _ width:GLsizei, _ format:GLenum, _ type:GLenum, _ table:UnsafeRawPointer) {glColorTable_P(target, internalformat, width, format, type, table)}
public func glColorTable(target:GLenum, internalformat:GLenum, width:GLsizei, format:GLenum, type:GLenum, table:UnsafeRawPointer) {glColorTable_P(target, internalformat, width, format, type, table)}
var glColorTable_P:@convention(c)(GLenum, GLenum, GLsizei, GLenum, GLenum, UnsafeRawPointer) -> Void = glColorTable_L
public func glColorTableEXT(_ target:GLenum, _ internalFormat:GLenum, _ width:GLsizei, _ format:GLenum, _ type:GLenum, _ table:UnsafeRawPointer) {glColorTableEXT_P(target, internalFormat, width, format, type, table)}
public func glColorTableEXT(target:GLenum, internalFormat:GLenum, width:GLsizei, format:GLenum, type:GLenum, table:UnsafeRawPointer) {glColorTableEXT_P(target, internalFormat, width, format, type, table)}
var glColorTableEXT_P:@convention(c)(GLenum, GLenum, GLsizei, GLenum, GLenum, UnsafeRawPointer) -> Void = glColorTableEXT_L
public func glColorTableParameterfv(_ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLfloat>) {glColorTableParameterfv_P(target, pname, params)}
public func glColorTableParameterfv(target:GLenum, pname:GLenum, params:UnsafePointer<GLfloat>) {glColorTableParameterfv_P(target, pname, params)}
var glColorTableParameterfv_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLfloat>) -> Void = glColorTableParameterfv_L
public func glColorTableParameterfvSGI(_ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLfloat>) {glColorTableParameterfvSGI_P(target, pname, params)}
public func glColorTableParameterfvSGI(target:GLenum, pname:GLenum, params:UnsafePointer<GLfloat>) {glColorTableParameterfvSGI_P(target, pname, params)}
var glColorTableParameterfvSGI_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLfloat>) -> Void = glColorTableParameterfvSGI_L
public func glColorTableParameteriv(_ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLint>) {glColorTableParameteriv_P(target, pname, params)}
public func glColorTableParameteriv(target:GLenum, pname:GLenum, params:UnsafePointer<GLint>) {glColorTableParameteriv_P(target, pname, params)}
var glColorTableParameteriv_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLint>) -> Void = glColorTableParameteriv_L
public func glColorTableParameterivSGI(_ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLint>) {glColorTableParameterivSGI_P(target, pname, params)}
public func glColorTableParameterivSGI(target:GLenum, pname:GLenum, params:UnsafePointer<GLint>) {glColorTableParameterivSGI_P(target, pname, params)}
var glColorTableParameterivSGI_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLint>) -> Void = glColorTableParameterivSGI_L
public func glColorTableSGI(_ target:GLenum, _ internalformat:GLenum, _ width:GLsizei, _ format:GLenum, _ type:GLenum, _ table:UnsafeRawPointer) {glColorTableSGI_P(target, internalformat, width, format, type, table)}
public func glColorTableSGI(target:GLenum, internalformat:GLenum, width:GLsizei, format:GLenum, type:GLenum, table:UnsafeRawPointer) {glColorTableSGI_P(target, internalformat, width, format, type, table)}
var glColorTableSGI_P:@convention(c)(GLenum, GLenum, GLsizei, GLenum, GLenum, UnsafeRawPointer) -> Void = glColorTableSGI_L
public func glCombinerInputNV(_ stage:GLenum, _ portion:GLenum, _ variable:GLenum, _ input:GLenum, _ mapping:GLenum, _ componentUsage:GLenum) {glCombinerInputNV_P(stage, portion, variable, input, mapping, componentUsage)}
public func glCombinerInputNV(stage:GLenum, portion:GLenum, variable:GLenum, input:GLenum, mapping:GLenum, componentUsage:GLenum) {glCombinerInputNV_P(stage, portion, variable, input, mapping, componentUsage)}
var glCombinerInputNV_P:@convention(c)(GLenum, GLenum, GLenum, GLenum, GLenum, GLenum) -> Void = glCombinerInputNV_L
public func glCombinerOutputNV(_ stage:GLenum, _ portion:GLenum, _ abOutput:GLenum, _ cdOutput:GLenum, _ sumOutput:GLenum, _ scale:GLenum, _ bias:GLenum, _ abDotProduct:GLboolean, _ cdDotProduct:GLboolean, _ muxSum:GLboolean) {glCombinerOutputNV_P(stage, portion, abOutput, cdOutput, sumOutput, scale, bias, abDotProduct, cdDotProduct, muxSum)}
public func glCombinerOutputNV(stage:GLenum, portion:GLenum, abOutput:GLenum, cdOutput:GLenum, sumOutput:GLenum, scale:GLenum, bias:GLenum, abDotProduct:GLboolean, cdDotProduct:GLboolean, muxSum:GLboolean) {glCombinerOutputNV_P(stage, portion, abOutput, cdOutput, sumOutput, scale, bias, abDotProduct, cdDotProduct, muxSum)}
var glCombinerOutputNV_P:@convention(c)(GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLboolean, GLboolean, GLboolean) -> Void = glCombinerOutputNV_L
public func glCombinerParameterfNV(_ pname:GLenum, _ param:GLfloat) {glCombinerParameterfNV_P(pname, param)}
public func glCombinerParameterfNV(pname:GLenum, param:GLfloat) {glCombinerParameterfNV_P(pname, param)}
var glCombinerParameterfNV_P:@convention(c)(GLenum, GLfloat) -> Void = glCombinerParameterfNV_L
public func glCombinerParameterfvNV(_ pname:GLenum, _ params:UnsafePointer<GLfloat>) {glCombinerParameterfvNV_P(pname, params)}
public func glCombinerParameterfvNV(pname:GLenum, params:UnsafePointer<GLfloat>) {glCombinerParameterfvNV_P(pname, params)}
var glCombinerParameterfvNV_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glCombinerParameterfvNV_L
public func glCombinerParameteriNV(_ pname:GLenum, _ param:GLint) {glCombinerParameteriNV_P(pname, param)}
public func glCombinerParameteriNV(pname:GLenum, param:GLint) {glCombinerParameteriNV_P(pname, param)}
var glCombinerParameteriNV_P:@convention(c)(GLenum, GLint) -> Void = glCombinerParameteriNV_L
public func glCombinerParameterivNV(_ pname:GLenum, _ params:UnsafePointer<GLint>) {glCombinerParameterivNV_P(pname, params)}
public func glCombinerParameterivNV(pname:GLenum, params:UnsafePointer<GLint>) {glCombinerParameterivNV_P(pname, params)}
var glCombinerParameterivNV_P:@convention(c)(GLenum, UnsafePointer<GLint>) -> Void = glCombinerParameterivNV_L
public func glCombinerStageParameterfvNV(_ stage:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLfloat>) {glCombinerStageParameterfvNV_P(stage, pname, params)}
public func glCombinerStageParameterfvNV(stage:GLenum, pname:GLenum, params:UnsafePointer<GLfloat>) {glCombinerStageParameterfvNV_P(stage, pname, params)}
var glCombinerStageParameterfvNV_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLfloat>) -> Void = glCombinerStageParameterfvNV_L
public func glCommandListSegmentsNV(_ list:GLuint, _ segments:GLuint) {glCommandListSegmentsNV_P(list, segments)}
public func glCommandListSegmentsNV(list:GLuint, segments:GLuint) {glCommandListSegmentsNV_P(list, segments)}
var glCommandListSegmentsNV_P:@convention(c)(GLuint, GLuint) -> Void = glCommandListSegmentsNV_L
public func glCompileCommandListNV(_ list:GLuint) {glCompileCommandListNV_P(list)}
public func glCompileCommandListNV(list:GLuint) {glCompileCommandListNV_P(list)}
var glCompileCommandListNV_P:@convention(c)(GLuint) -> Void = glCompileCommandListNV_L
public func glCompileShader(_ shader:GLuint) {glCompileShader_P(shader)}
public func glCompileShader(shader:GLuint) {glCompileShader_P(shader)}
var glCompileShader_P:@convention(c)(GLuint) -> Void = glCompileShader_L
public func glCompileShaderARB(_ shaderObj:GLhandleARB) {glCompileShaderARB_P(shaderObj)}
public func glCompileShaderARB(shaderObj:GLhandleARB) {glCompileShaderARB_P(shaderObj)}
var glCompileShaderARB_P:@convention(c)(GLhandleARB) -> Void = glCompileShaderARB_L
public func glCompileShaderIncludeARB(_ shader:GLuint, _ count:GLsizei, _ path:UnsafePointer<UnsafePointer<GLchar>>, _ length:UnsafePointer<GLint>) {glCompileShaderIncludeARB_P(shader, count, path, length)}
public func glCompileShaderIncludeARB(shader:GLuint, count:GLsizei, path:UnsafePointer<UnsafePointer<GLchar>>, length:UnsafePointer<GLint>) {glCompileShaderIncludeARB_P(shader, count, path, length)}
var glCompileShaderIncludeARB_P:@convention(c)(GLuint, GLsizei, UnsafePointer<UnsafePointer<GLchar>>, UnsafePointer<GLint>) -> Void = glCompileShaderIncludeARB_L
public func glCompressedMultiTexImage1DEXT(_ texunit:GLenum, _ target:GLenum, _ level:GLint, _ internalformat:GLenum, _ width:GLsizei, _ border:GLint, _ imageSize:GLsizei, _ bits:UnsafeRawPointer) {glCompressedMultiTexImage1DEXT_P(texunit, target, level, internalformat, width, border, imageSize, bits)}
public func glCompressedMultiTexImage1DEXT(texunit:GLenum, target:GLenum, level:GLint, internalformat:GLenum, width:GLsizei, border:GLint, imageSize:GLsizei, bits:UnsafeRawPointer) {glCompressedMultiTexImage1DEXT_P(texunit, target, level, internalformat, width, border, imageSize, bits)}
var glCompressedMultiTexImage1DEXT_P:@convention(c)(GLenum, GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, UnsafeRawPointer) -> Void = glCompressedMultiTexImage1DEXT_L
public func glCompressedMultiTexImage2DEXT(_ texunit:GLenum, _ target:GLenum, _ level:GLint, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei, _ border:GLint, _ imageSize:GLsizei, _ bits:UnsafeRawPointer) {glCompressedMultiTexImage2DEXT_P(texunit, target, level, internalformat, width, height, border, imageSize, bits)}
public func glCompressedMultiTexImage2DEXT(texunit:GLenum, target:GLenum, level:GLint, internalformat:GLenum, width:GLsizei, height:GLsizei, border:GLint, imageSize:GLsizei, bits:UnsafeRawPointer) {glCompressedMultiTexImage2DEXT_P(texunit, target, level, internalformat, width, height, border, imageSize, bits)}
var glCompressedMultiTexImage2DEXT_P:@convention(c)(GLenum, GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, UnsafeRawPointer) -> Void = glCompressedMultiTexImage2DEXT_L
public func glCompressedMultiTexImage3DEXT(_ texunit:GLenum, _ target:GLenum, _ level:GLint, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ border:GLint, _ imageSize:GLsizei, _ bits:UnsafeRawPointer) {glCompressedMultiTexImage3DEXT_P(texunit, target, level, internalformat, width, height, depth, border, imageSize, bits)}
public func glCompressedMultiTexImage3DEXT(texunit:GLenum, target:GLenum, level:GLint, internalformat:GLenum, width:GLsizei, height:GLsizei, depth:GLsizei, border:GLint, imageSize:GLsizei, bits:UnsafeRawPointer) {glCompressedMultiTexImage3DEXT_P(texunit, target, level, internalformat, width, height, depth, border, imageSize, bits)}
var glCompressedMultiTexImage3DEXT_P:@convention(c)(GLenum, GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, UnsafeRawPointer) -> Void = glCompressedMultiTexImage3DEXT_L
public func glCompressedMultiTexSubImage1DEXT(_ texunit:GLenum, _ target:GLenum, _ level:GLint, _ xoffset:GLint, _ width:GLsizei, _ format:GLenum, _ imageSize:GLsizei, _ bits:UnsafeRawPointer) {glCompressedMultiTexSubImage1DEXT_P(texunit, target, level, xoffset, width, format, imageSize, bits)}
public func glCompressedMultiTexSubImage1DEXT(texunit:GLenum, target:GLenum, level:GLint, xoffset:GLint, width:GLsizei, format:GLenum, imageSize:GLsizei, bits:UnsafeRawPointer) {glCompressedMultiTexSubImage1DEXT_P(texunit, target, level, xoffset, width, format, imageSize, bits)}
var glCompressedMultiTexSubImage1DEXT_P:@convention(c)(GLenum, GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, UnsafeRawPointer) -> Void = glCompressedMultiTexSubImage1DEXT_L
public func glCompressedMultiTexSubImage2DEXT(_ texunit:GLenum, _ target:GLenum, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ width:GLsizei, _ height:GLsizei, _ format:GLenum, _ imageSize:GLsizei, _ bits:UnsafeRawPointer) {glCompressedMultiTexSubImage2DEXT_P(texunit, target, level, xoffset, yoffset, width, height, format, imageSize, bits)}
public func glCompressedMultiTexSubImage2DEXT(texunit:GLenum, target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, width:GLsizei, height:GLsizei, format:GLenum, imageSize:GLsizei, bits:UnsafeRawPointer) {glCompressedMultiTexSubImage2DEXT_P(texunit, target, level, xoffset, yoffset, width, height, format, imageSize, bits)}
var glCompressedMultiTexSubImage2DEXT_P:@convention(c)(GLenum, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, UnsafeRawPointer) -> Void = glCompressedMultiTexSubImage2DEXT_L
public func glCompressedMultiTexSubImage3DEXT(_ texunit:GLenum, _ target:GLenum, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ zoffset:GLint, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ format:GLenum, _ imageSize:GLsizei, _ bits:UnsafeRawPointer) {glCompressedMultiTexSubImage3DEXT_P(texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, bits)}
public func glCompressedMultiTexSubImage3DEXT(texunit:GLenum, target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, format:GLenum, imageSize:GLsizei, bits:UnsafeRawPointer) {glCompressedMultiTexSubImage3DEXT_P(texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, bits)}
var glCompressedMultiTexSubImage3DEXT_P:@convention(c)(GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, UnsafeRawPointer) -> Void = glCompressedMultiTexSubImage3DEXT_L
public func glCompressedTexImage1D(_ target:GLenum, _ level:GLint, _ internalformat:GLenum, _ width:GLsizei, _ border:GLint, _ imageSize:GLsizei, _ data:UnsafeRawPointer) {glCompressedTexImage1D_P(target, level, internalformat, width, border, imageSize, data)}
public func glCompressedTexImage1D(target:GLenum, level:GLint, internalformat:GLenum, width:GLsizei, border:GLint, imageSize:GLsizei, data:UnsafeRawPointer) {glCompressedTexImage1D_P(target, level, internalformat, width, border, imageSize, data)}
var glCompressedTexImage1D_P:@convention(c)(GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, UnsafeRawPointer) -> Void = glCompressedTexImage1D_L
public func glCompressedTexImage1DARB(_ target:GLenum, _ level:GLint, _ internalformat:GLenum, _ width:GLsizei, _ border:GLint, _ imageSize:GLsizei, _ data:UnsafeRawPointer) {glCompressedTexImage1DARB_P(target, level, internalformat, width, border, imageSize, data)}
public func glCompressedTexImage1DARB(target:GLenum, level:GLint, internalformat:GLenum, width:GLsizei, border:GLint, imageSize:GLsizei, data:UnsafeRawPointer) {glCompressedTexImage1DARB_P(target, level, internalformat, width, border, imageSize, data)}
var glCompressedTexImage1DARB_P:@convention(c)(GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, UnsafeRawPointer) -> Void = glCompressedTexImage1DARB_L
public func glCompressedTexImage2D(_ target:GLenum, _ level:GLint, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei, _ border:GLint, _ imageSize:GLsizei, _ data:UnsafeRawPointer) {glCompressedTexImage2D_P(target, level, internalformat, width, height, border, imageSize, data)}
public func glCompressedTexImage2D(target:GLenum, level:GLint, internalformat:GLenum, width:GLsizei, height:GLsizei, border:GLint, imageSize:GLsizei, data:UnsafeRawPointer) {glCompressedTexImage2D_P(target, level, internalformat, width, height, border, imageSize, data)}
var glCompressedTexImage2D_P:@convention(c)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, UnsafeRawPointer) -> Void = glCompressedTexImage2D_L
public func glCompressedTexImage2DARB(_ target:GLenum, _ level:GLint, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei, _ border:GLint, _ imageSize:GLsizei, _ data:UnsafeRawPointer) {glCompressedTexImage2DARB_P(target, level, internalformat, width, height, border, imageSize, data)}
public func glCompressedTexImage2DARB(target:GLenum, level:GLint, internalformat:GLenum, width:GLsizei, height:GLsizei, border:GLint, imageSize:GLsizei, data:UnsafeRawPointer) {glCompressedTexImage2DARB_P(target, level, internalformat, width, height, border, imageSize, data)}
var glCompressedTexImage2DARB_P:@convention(c)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, UnsafeRawPointer) -> Void = glCompressedTexImage2DARB_L
public func glCompressedTexImage3D(_ target:GLenum, _ level:GLint, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ border:GLint, _ imageSize:GLsizei, _ data:UnsafeRawPointer) {glCompressedTexImage3D_P(target, level, internalformat, width, height, depth, border, imageSize, data)}
public func glCompressedTexImage3D(target:GLenum, level:GLint, internalformat:GLenum, width:GLsizei, height:GLsizei, depth:GLsizei, border:GLint, imageSize:GLsizei, data:UnsafeRawPointer) {glCompressedTexImage3D_P(target, level, internalformat, width, height, depth, border, imageSize, data)}
var glCompressedTexImage3D_P:@convention(c)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, UnsafeRawPointer) -> Void = glCompressedTexImage3D_L
public func glCompressedTexImage3DARB(_ target:GLenum, _ level:GLint, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ border:GLint, _ imageSize:GLsizei, _ data:UnsafeRawPointer) {glCompressedTexImage3DARB_P(target, level, internalformat, width, height, depth, border, imageSize, data)}
public func glCompressedTexImage3DARB(target:GLenum, level:GLint, internalformat:GLenum, width:GLsizei, height:GLsizei, depth:GLsizei, border:GLint, imageSize:GLsizei, data:UnsafeRawPointer) {glCompressedTexImage3DARB_P(target, level, internalformat, width, height, depth, border, imageSize, data)}
var glCompressedTexImage3DARB_P:@convention(c)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, UnsafeRawPointer) -> Void = glCompressedTexImage3DARB_L
public func glCompressedTexImage3DOES(_ target:GLenum, _ level:GLint, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ border:GLint, _ imageSize:GLsizei, _ data:UnsafeRawPointer) {glCompressedTexImage3DOES_P(target, level, internalformat, width, height, depth, border, imageSize, data)}
public func glCompressedTexImage3DOES(target:GLenum, level:GLint, internalformat:GLenum, width:GLsizei, height:GLsizei, depth:GLsizei, border:GLint, imageSize:GLsizei, data:UnsafeRawPointer) {glCompressedTexImage3DOES_P(target, level, internalformat, width, height, depth, border, imageSize, data)}
var glCompressedTexImage3DOES_P:@convention(c)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, UnsafeRawPointer) -> Void = glCompressedTexImage3DOES_L
public func glCompressedTexSubImage1D(_ target:GLenum, _ level:GLint, _ xoffset:GLint, _ width:GLsizei, _ format:GLenum, _ imageSize:GLsizei, _ data:UnsafeRawPointer) {glCompressedTexSubImage1D_P(target, level, xoffset, width, format, imageSize, data)}
public func glCompressedTexSubImage1D(target:GLenum, level:GLint, xoffset:GLint, width:GLsizei, format:GLenum, imageSize:GLsizei, data:UnsafeRawPointer) {glCompressedTexSubImage1D_P(target, level, xoffset, width, format, imageSize, data)}
var glCompressedTexSubImage1D_P:@convention(c)(GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, UnsafeRawPointer) -> Void = glCompressedTexSubImage1D_L
public func glCompressedTexSubImage1DARB(_ target:GLenum, _ level:GLint, _ xoffset:GLint, _ width:GLsizei, _ format:GLenum, _ imageSize:GLsizei, _ data:UnsafeRawPointer) {glCompressedTexSubImage1DARB_P(target, level, xoffset, width, format, imageSize, data)}
public func glCompressedTexSubImage1DARB(target:GLenum, level:GLint, xoffset:GLint, width:GLsizei, format:GLenum, imageSize:GLsizei, data:UnsafeRawPointer) {glCompressedTexSubImage1DARB_P(target, level, xoffset, width, format, imageSize, data)}
var glCompressedTexSubImage1DARB_P:@convention(c)(GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, UnsafeRawPointer) -> Void = glCompressedTexSubImage1DARB_L
public func glCompressedTexSubImage2D(_ target:GLenum, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ width:GLsizei, _ height:GLsizei, _ format:GLenum, _ imageSize:GLsizei, _ data:UnsafeRawPointer) {glCompressedTexSubImage2D_P(target, level, xoffset, yoffset, width, height, format, imageSize, data)}
public func glCompressedTexSubImage2D(target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, width:GLsizei, height:GLsizei, format:GLenum, imageSize:GLsizei, data:UnsafeRawPointer) {glCompressedTexSubImage2D_P(target, level, xoffset, yoffset, width, height, format, imageSize, data)}
var glCompressedTexSubImage2D_P:@convention(c)(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, UnsafeRawPointer) -> Void = glCompressedTexSubImage2D_L
public func glCompressedTexSubImage2DARB(_ target:GLenum, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ width:GLsizei, _ height:GLsizei, _ format:GLenum, _ imageSize:GLsizei, _ data:UnsafeRawPointer) {glCompressedTexSubImage2DARB_P(target, level, xoffset, yoffset, width, height, format, imageSize, data)}
public func glCompressedTexSubImage2DARB(target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, width:GLsizei, height:GLsizei, format:GLenum, imageSize:GLsizei, data:UnsafeRawPointer) {glCompressedTexSubImage2DARB_P(target, level, xoffset, yoffset, width, height, format, imageSize, data)}
var glCompressedTexSubImage2DARB_P:@convention(c)(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, UnsafeRawPointer) -> Void = glCompressedTexSubImage2DARB_L
public func glCompressedTexSubImage3D(_ target:GLenum, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ zoffset:GLint, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ format:GLenum, _ imageSize:GLsizei, _ data:UnsafeRawPointer) {glCompressedTexSubImage3D_P(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)}
public func glCompressedTexSubImage3D(target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, format:GLenum, imageSize:GLsizei, data:UnsafeRawPointer) {glCompressedTexSubImage3D_P(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)}
var glCompressedTexSubImage3D_P:@convention(c)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, UnsafeRawPointer) -> Void = glCompressedTexSubImage3D_L
public func glCompressedTexSubImage3DARB(_ target:GLenum, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ zoffset:GLint, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ format:GLenum, _ imageSize:GLsizei, _ data:UnsafeRawPointer) {glCompressedTexSubImage3DARB_P(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)}
public func glCompressedTexSubImage3DARB(target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, format:GLenum, imageSize:GLsizei, data:UnsafeRawPointer) {glCompressedTexSubImage3DARB_P(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)}
var glCompressedTexSubImage3DARB_P:@convention(c)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, UnsafeRawPointer) -> Void = glCompressedTexSubImage3DARB_L
public func glCompressedTexSubImage3DOES(_ target:GLenum, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ zoffset:GLint, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ format:GLenum, _ imageSize:GLsizei, _ data:UnsafeRawPointer) {glCompressedTexSubImage3DOES_P(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)}
public func glCompressedTexSubImage3DOES(target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, format:GLenum, imageSize:GLsizei, data:UnsafeRawPointer) {glCompressedTexSubImage3DOES_P(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)}
var glCompressedTexSubImage3DOES_P:@convention(c)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, UnsafeRawPointer) -> Void = glCompressedTexSubImage3DOES_L
public func glCompressedTextureImage1DEXT(_ texture:GLuint, _ target:GLenum, _ level:GLint, _ internalformat:GLenum, _ width:GLsizei, _ border:GLint, _ imageSize:GLsizei, _ bits:UnsafeRawPointer) {glCompressedTextureImage1DEXT_P(texture, target, level, internalformat, width, border, imageSize, bits)}
public func glCompressedTextureImage1DEXT(texture:GLuint, target:GLenum, level:GLint, internalformat:GLenum, width:GLsizei, border:GLint, imageSize:GLsizei, bits:UnsafeRawPointer) {glCompressedTextureImage1DEXT_P(texture, target, level, internalformat, width, border, imageSize, bits)}
var glCompressedTextureImage1DEXT_P:@convention(c)(GLuint, GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, UnsafeRawPointer) -> Void = glCompressedTextureImage1DEXT_L
public func glCompressedTextureImage2DEXT(_ texture:GLuint, _ target:GLenum, _ level:GLint, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei, _ border:GLint, _ imageSize:GLsizei, _ bits:UnsafeRawPointer) {glCompressedTextureImage2DEXT_P(texture, target, level, internalformat, width, height, border, imageSize, bits)}
public func glCompressedTextureImage2DEXT(texture:GLuint, target:GLenum, level:GLint, internalformat:GLenum, width:GLsizei, height:GLsizei, border:GLint, imageSize:GLsizei, bits:UnsafeRawPointer) {glCompressedTextureImage2DEXT_P(texture, target, level, internalformat, width, height, border, imageSize, bits)}
var glCompressedTextureImage2DEXT_P:@convention(c)(GLuint, GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, UnsafeRawPointer) -> Void = glCompressedTextureImage2DEXT_L
public func glCompressedTextureImage3DEXT(_ texture:GLuint, _ target:GLenum, _ level:GLint, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ border:GLint, _ imageSize:GLsizei, _ bits:UnsafeRawPointer) {glCompressedTextureImage3DEXT_P(texture, target, level, internalformat, width, height, depth, border, imageSize, bits)}
public func glCompressedTextureImage3DEXT(texture:GLuint, target:GLenum, level:GLint, internalformat:GLenum, width:GLsizei, height:GLsizei, depth:GLsizei, border:GLint, imageSize:GLsizei, bits:UnsafeRawPointer) {glCompressedTextureImage3DEXT_P(texture, target, level, internalformat, width, height, depth, border, imageSize, bits)}
var glCompressedTextureImage3DEXT_P:@convention(c)(GLuint, GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, UnsafeRawPointer) -> Void = glCompressedTextureImage3DEXT_L
public func glCompressedTextureSubImage1D(_ texture:GLuint, _ level:GLint, _ xoffset:GLint, _ width:GLsizei, _ format:GLenum, _ imageSize:GLsizei, _ data:UnsafeRawPointer) {glCompressedTextureSubImage1D_P(texture, level, xoffset, width, format, imageSize, data)}
public func glCompressedTextureSubImage1D(texture:GLuint, level:GLint, xoffset:GLint, width:GLsizei, format:GLenum, imageSize:GLsizei, data:UnsafeRawPointer) {glCompressedTextureSubImage1D_P(texture, level, xoffset, width, format, imageSize, data)}
var glCompressedTextureSubImage1D_P:@convention(c)(GLuint, GLint, GLint, GLsizei, GLenum, GLsizei, UnsafeRawPointer) -> Void = glCompressedTextureSubImage1D_L
public func glCompressedTextureSubImage1DEXT(_ texture:GLuint, _ target:GLenum, _ level:GLint, _ xoffset:GLint, _ width:GLsizei, _ format:GLenum, _ imageSize:GLsizei, _ bits:UnsafeRawPointer) {glCompressedTextureSubImage1DEXT_P(texture, target, level, xoffset, width, format, imageSize, bits)}
public func glCompressedTextureSubImage1DEXT(texture:GLuint, target:GLenum, level:GLint, xoffset:GLint, width:GLsizei, format:GLenum, imageSize:GLsizei, bits:UnsafeRawPointer) {glCompressedTextureSubImage1DEXT_P(texture, target, level, xoffset, width, format, imageSize, bits)}
var glCompressedTextureSubImage1DEXT_P:@convention(c)(GLuint, GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, UnsafeRawPointer) -> Void = glCompressedTextureSubImage1DEXT_L
public func glCompressedTextureSubImage2D(_ texture:GLuint, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ width:GLsizei, _ height:GLsizei, _ format:GLenum, _ imageSize:GLsizei, _ data:UnsafeRawPointer) {glCompressedTextureSubImage2D_P(texture, level, xoffset, yoffset, width, height, format, imageSize, data)}
public func glCompressedTextureSubImage2D(texture:GLuint, level:GLint, xoffset:GLint, yoffset:GLint, width:GLsizei, height:GLsizei, format:GLenum, imageSize:GLsizei, data:UnsafeRawPointer) {glCompressedTextureSubImage2D_P(texture, level, xoffset, yoffset, width, height, format, imageSize, data)}
var glCompressedTextureSubImage2D_P:@convention(c)(GLuint, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, UnsafeRawPointer) -> Void = glCompressedTextureSubImage2D_L
public func glCompressedTextureSubImage2DEXT(_ texture:GLuint, _ target:GLenum, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ width:GLsizei, _ height:GLsizei, _ format:GLenum, _ imageSize:GLsizei, _ bits:UnsafeRawPointer) {glCompressedTextureSubImage2DEXT_P(texture, target, level, xoffset, yoffset, width, height, format, imageSize, bits)}
public func glCompressedTextureSubImage2DEXT(texture:GLuint, target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, width:GLsizei, height:GLsizei, format:GLenum, imageSize:GLsizei, bits:UnsafeRawPointer) {glCompressedTextureSubImage2DEXT_P(texture, target, level, xoffset, yoffset, width, height, format, imageSize, bits)}
var glCompressedTextureSubImage2DEXT_P:@convention(c)(GLuint, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, UnsafeRawPointer) -> Void = glCompressedTextureSubImage2DEXT_L
public func glCompressedTextureSubImage3D(_ texture:GLuint, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ zoffset:GLint, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ format:GLenum, _ imageSize:GLsizei, _ data:UnsafeRawPointer) {glCompressedTextureSubImage3D_P(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)}
public func glCompressedTextureSubImage3D(texture:GLuint, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, format:GLenum, imageSize:GLsizei, data:UnsafeRawPointer) {glCompressedTextureSubImage3D_P(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)}
var glCompressedTextureSubImage3D_P:@convention(c)(GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, UnsafeRawPointer) -> Void = glCompressedTextureSubImage3D_L
public func glCompressedTextureSubImage3DEXT(_ texture:GLuint, _ target:GLenum, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ zoffset:GLint, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ format:GLenum, _ imageSize:GLsizei, _ bits:UnsafeRawPointer) {glCompressedTextureSubImage3DEXT_P(texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, bits)}
public func glCompressedTextureSubImage3DEXT(texture:GLuint, target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, format:GLenum, imageSize:GLsizei, bits:UnsafeRawPointer) {glCompressedTextureSubImage3DEXT_P(texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, bits)}
var glCompressedTextureSubImage3DEXT_P:@convention(c)(GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, UnsafeRawPointer) -> Void = glCompressedTextureSubImage3DEXT_L
public func glConservativeRasterParameterfNV(_ pname:GLenum, _ value:GLfloat) {glConservativeRasterParameterfNV_P(pname, value)}
public func glConservativeRasterParameterfNV(pname:GLenum, value:GLfloat) {glConservativeRasterParameterfNV_P(pname, value)}
var glConservativeRasterParameterfNV_P:@convention(c)(GLenum, GLfloat) -> Void = glConservativeRasterParameterfNV_L
public func glConvolutionFilter1D(_ target:GLenum, _ internalformat:GLenum, _ width:GLsizei, _ format:GLenum, _ type:GLenum, _ image:UnsafeRawPointer) {glConvolutionFilter1D_P(target, internalformat, width, format, type, image)}
public func glConvolutionFilter1D(target:GLenum, internalformat:GLenum, width:GLsizei, format:GLenum, type:GLenum, image:UnsafeRawPointer) {glConvolutionFilter1D_P(target, internalformat, width, format, type, image)}
var glConvolutionFilter1D_P:@convention(c)(GLenum, GLenum, GLsizei, GLenum, GLenum, UnsafeRawPointer) -> Void = glConvolutionFilter1D_L
public func glConvolutionFilter1DEXT(_ target:GLenum, _ internalformat:GLenum, _ width:GLsizei, _ format:GLenum, _ type:GLenum, _ image:UnsafeRawPointer) {glConvolutionFilter1DEXT_P(target, internalformat, width, format, type, image)}
public func glConvolutionFilter1DEXT(target:GLenum, internalformat:GLenum, width:GLsizei, format:GLenum, type:GLenum, image:UnsafeRawPointer) {glConvolutionFilter1DEXT_P(target, internalformat, width, format, type, image)}
var glConvolutionFilter1DEXT_P:@convention(c)(GLenum, GLenum, GLsizei, GLenum, GLenum, UnsafeRawPointer) -> Void = glConvolutionFilter1DEXT_L
public func glConvolutionFilter2D(_ target:GLenum, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei, _ format:GLenum, _ type:GLenum, _ image:UnsafeRawPointer) {glConvolutionFilter2D_P(target, internalformat, width, height, format, type, image)}
public func glConvolutionFilter2D(target:GLenum, internalformat:GLenum, width:GLsizei, height:GLsizei, format:GLenum, type:GLenum, image:UnsafeRawPointer) {glConvolutionFilter2D_P(target, internalformat, width, height, format, type, image)}
var glConvolutionFilter2D_P:@convention(c)(GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, UnsafeRawPointer) -> Void = glConvolutionFilter2D_L
public func glConvolutionFilter2DEXT(_ target:GLenum, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei, _ format:GLenum, _ type:GLenum, _ image:UnsafeRawPointer) {glConvolutionFilter2DEXT_P(target, internalformat, width, height, format, type, image)}
public func glConvolutionFilter2DEXT(target:GLenum, internalformat:GLenum, width:GLsizei, height:GLsizei, format:GLenum, type:GLenum, image:UnsafeRawPointer) {glConvolutionFilter2DEXT_P(target, internalformat, width, height, format, type, image)}
var glConvolutionFilter2DEXT_P:@convention(c)(GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, UnsafeRawPointer) -> Void = glConvolutionFilter2DEXT_L
public func glConvolutionParameterf(_ target:GLenum, _ pname:GLenum, _ params:GLfloat) {glConvolutionParameterf_P(target, pname, params)}
public func glConvolutionParameterf(target:GLenum, pname:GLenum, params:GLfloat) {glConvolutionParameterf_P(target, pname, params)}
var glConvolutionParameterf_P:@convention(c)(GLenum, GLenum, GLfloat) -> Void = glConvolutionParameterf_L
public func glConvolutionParameterfEXT(_ target:GLenum, _ pname:GLenum, _ params:GLfloat) {glConvolutionParameterfEXT_P(target, pname, params)}
public func glConvolutionParameterfEXT(target:GLenum, pname:GLenum, params:GLfloat) {glConvolutionParameterfEXT_P(target, pname, params)}
var glConvolutionParameterfEXT_P:@convention(c)(GLenum, GLenum, GLfloat) -> Void = glConvolutionParameterfEXT_L
public func glConvolutionParameterfv(_ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLfloat>) {glConvolutionParameterfv_P(target, pname, params)}
public func glConvolutionParameterfv(target:GLenum, pname:GLenum, params:UnsafePointer<GLfloat>) {glConvolutionParameterfv_P(target, pname, params)}
var glConvolutionParameterfv_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLfloat>) -> Void = glConvolutionParameterfv_L
public func glConvolutionParameterfvEXT(_ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLfloat>) {glConvolutionParameterfvEXT_P(target, pname, params)}
public func glConvolutionParameterfvEXT(target:GLenum, pname:GLenum, params:UnsafePointer<GLfloat>) {glConvolutionParameterfvEXT_P(target, pname, params)}
var glConvolutionParameterfvEXT_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLfloat>) -> Void = glConvolutionParameterfvEXT_L
public func glConvolutionParameteri(_ target:GLenum, _ pname:GLenum, _ params:GLint) {glConvolutionParameteri_P(target, pname, params)}
public func glConvolutionParameteri(target:GLenum, pname:GLenum, params:GLint) {glConvolutionParameteri_P(target, pname, params)}
var glConvolutionParameteri_P:@convention(c)(GLenum, GLenum, GLint) -> Void = glConvolutionParameteri_L
public func glConvolutionParameteriEXT(_ target:GLenum, _ pname:GLenum, _ params:GLint) {glConvolutionParameteriEXT_P(target, pname, params)}
public func glConvolutionParameteriEXT(target:GLenum, pname:GLenum, params:GLint) {glConvolutionParameteriEXT_P(target, pname, params)}
var glConvolutionParameteriEXT_P:@convention(c)(GLenum, GLenum, GLint) -> Void = glConvolutionParameteriEXT_L
public func glConvolutionParameteriv(_ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLint>) {glConvolutionParameteriv_P(target, pname, params)}
public func glConvolutionParameteriv(target:GLenum, pname:GLenum, params:UnsafePointer<GLint>) {glConvolutionParameteriv_P(target, pname, params)}
var glConvolutionParameteriv_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLint>) -> Void = glConvolutionParameteriv_L
public func glConvolutionParameterivEXT(_ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLint>) {glConvolutionParameterivEXT_P(target, pname, params)}
public func glConvolutionParameterivEXT(target:GLenum, pname:GLenum, params:UnsafePointer<GLint>) {glConvolutionParameterivEXT_P(target, pname, params)}
var glConvolutionParameterivEXT_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLint>) -> Void = glConvolutionParameterivEXT_L
public func glConvolutionParameterxOES(_ target:GLenum, _ pname:GLenum, _ param:GLfixed) {glConvolutionParameterxOES_P(target, pname, param)}
public func glConvolutionParameterxOES(target:GLenum, pname:GLenum, param:GLfixed) {glConvolutionParameterxOES_P(target, pname, param)}
var glConvolutionParameterxOES_P:@convention(c)(GLenum, GLenum, GLfixed) -> Void = glConvolutionParameterxOES_L
public func glConvolutionParameterxvOES(_ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLfixed>) {glConvolutionParameterxvOES_P(target, pname, params)}
public func glConvolutionParameterxvOES(target:GLenum, pname:GLenum, params:UnsafePointer<GLfixed>) {glConvolutionParameterxvOES_P(target, pname, params)}
var glConvolutionParameterxvOES_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLfixed>) -> Void = glConvolutionParameterxvOES_L
public func glCopyBufferSubData(_ readTarget:GLenum, _ writeTarget:GLenum, _ readOffset:GLintptr, _ writeOffset:GLintptr, _ size:GLsizeiptr) {glCopyBufferSubData_P(readTarget, writeTarget, readOffset, writeOffset, size)}
public func glCopyBufferSubData(readTarget:GLenum, writeTarget:GLenum, readOffset:GLintptr, writeOffset:GLintptr, size:GLsizeiptr) {glCopyBufferSubData_P(readTarget, writeTarget, readOffset, writeOffset, size)}
var glCopyBufferSubData_P:@convention(c)(GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr) -> Void = glCopyBufferSubData_L
public func glCopyBufferSubDataNV(_ readTarget:GLenum, _ writeTarget:GLenum, _ readOffset:GLintptr, _ writeOffset:GLintptr, _ size:GLsizeiptr) {glCopyBufferSubDataNV_P(readTarget, writeTarget, readOffset, writeOffset, size)}
public func glCopyBufferSubDataNV(readTarget:GLenum, writeTarget:GLenum, readOffset:GLintptr, writeOffset:GLintptr, size:GLsizeiptr) {glCopyBufferSubDataNV_P(readTarget, writeTarget, readOffset, writeOffset, size)}
var glCopyBufferSubDataNV_P:@convention(c)(GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr) -> Void = glCopyBufferSubDataNV_L
public func glCopyColorSubTable(_ target:GLenum, _ start:GLsizei, _ x:GLint, _ y:GLint, _ width:GLsizei) {glCopyColorSubTable_P(target, start, x, y, width)}
public func glCopyColorSubTable(target:GLenum, start:GLsizei, x:GLint, y:GLint, width:GLsizei) {glCopyColorSubTable_P(target, start, x, y, width)}
var glCopyColorSubTable_P:@convention(c)(GLenum, GLsizei, GLint, GLint, GLsizei) -> Void = glCopyColorSubTable_L
public func glCopyColorSubTableEXT(_ target:GLenum, _ start:GLsizei, _ x:GLint, _ y:GLint, _ width:GLsizei) {glCopyColorSubTableEXT_P(target, start, x, y, width)}
public func glCopyColorSubTableEXT(target:GLenum, start:GLsizei, x:GLint, y:GLint, width:GLsizei) {glCopyColorSubTableEXT_P(target, start, x, y, width)}
var glCopyColorSubTableEXT_P:@convention(c)(GLenum, GLsizei, GLint, GLint, GLsizei) -> Void = glCopyColorSubTableEXT_L
public func glCopyColorTable(_ target:GLenum, _ internalformat:GLenum, _ x:GLint, _ y:GLint, _ width:GLsizei) {glCopyColorTable_P(target, internalformat, x, y, width)}
public func glCopyColorTable(target:GLenum, internalformat:GLenum, x:GLint, y:GLint, width:GLsizei) {glCopyColorTable_P(target, internalformat, x, y, width)}
var glCopyColorTable_P:@convention(c)(GLenum, GLenum, GLint, GLint, GLsizei) -> Void = glCopyColorTable_L
public func glCopyColorTableSGI(_ target:GLenum, _ internalformat:GLenum, _ x:GLint, _ y:GLint, _ width:GLsizei) {glCopyColorTableSGI_P(target, internalformat, x, y, width)}
public func glCopyColorTableSGI(target:GLenum, internalformat:GLenum, x:GLint, y:GLint, width:GLsizei) {glCopyColorTableSGI_P(target, internalformat, x, y, width)}
var glCopyColorTableSGI_P:@convention(c)(GLenum, GLenum, GLint, GLint, GLsizei) -> Void = glCopyColorTableSGI_L
public func glCopyConvolutionFilter1D(_ target:GLenum, _ internalformat:GLenum, _ x:GLint, _ y:GLint, _ width:GLsizei) {glCopyConvolutionFilter1D_P(target, internalformat, x, y, width)}
public func glCopyConvolutionFilter1D(target:GLenum, internalformat:GLenum, x:GLint, y:GLint, width:GLsizei) {glCopyConvolutionFilter1D_P(target, internalformat, x, y, width)}
var glCopyConvolutionFilter1D_P:@convention(c)(GLenum, GLenum, GLint, GLint, GLsizei) -> Void = glCopyConvolutionFilter1D_L
public func glCopyConvolutionFilter1DEXT(_ target:GLenum, _ internalformat:GLenum, _ x:GLint, _ y:GLint, _ width:GLsizei) {glCopyConvolutionFilter1DEXT_P(target, internalformat, x, y, width)}
public func glCopyConvolutionFilter1DEXT(target:GLenum, internalformat:GLenum, x:GLint, y:GLint, width:GLsizei) {glCopyConvolutionFilter1DEXT_P(target, internalformat, x, y, width)}
var glCopyConvolutionFilter1DEXT_P:@convention(c)(GLenum, GLenum, GLint, GLint, GLsizei) -> Void = glCopyConvolutionFilter1DEXT_L
public func glCopyConvolutionFilter2D(_ target:GLenum, _ internalformat:GLenum, _ x:GLint, _ y:GLint, _ width:GLsizei, _ height:GLsizei) {glCopyConvolutionFilter2D_P(target, internalformat, x, y, width, height)}
public func glCopyConvolutionFilter2D(target:GLenum, internalformat:GLenum, x:GLint, y:GLint, width:GLsizei, height:GLsizei) {glCopyConvolutionFilter2D_P(target, internalformat, x, y, width, height)}
var glCopyConvolutionFilter2D_P:@convention(c)(GLenum, GLenum, GLint, GLint, GLsizei, GLsizei) -> Void = glCopyConvolutionFilter2D_L
public func glCopyConvolutionFilter2DEXT(_ target:GLenum, _ internalformat:GLenum, _ x:GLint, _ y:GLint, _ width:GLsizei, _ height:GLsizei) {glCopyConvolutionFilter2DEXT_P(target, internalformat, x, y, width, height)}
public func glCopyConvolutionFilter2DEXT(target:GLenum, internalformat:GLenum, x:GLint, y:GLint, width:GLsizei, height:GLsizei) {glCopyConvolutionFilter2DEXT_P(target, internalformat, x, y, width, height)}
var glCopyConvolutionFilter2DEXT_P:@convention(c)(GLenum, GLenum, GLint, GLint, GLsizei, GLsizei) -> Void = glCopyConvolutionFilter2DEXT_L
public func glCopyImageSubData(_ srcName:GLuint, _ srcTarget:GLenum, _ srcLevel:GLint, _ srcX:GLint, _ srcY:GLint, _ srcZ:GLint, _ dstName:GLuint, _ dstTarget:GLenum, _ dstLevel:GLint, _ dstX:GLint, _ dstY:GLint, _ dstZ:GLint, _ srcWidth:GLsizei, _ srcHeight:GLsizei, _ srcDepth:GLsizei) {glCopyImageSubData_P(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth)}
public func glCopyImageSubData(srcName:GLuint, srcTarget:GLenum, srcLevel:GLint, srcX:GLint, srcY:GLint, srcZ:GLint, dstName:GLuint, dstTarget:GLenum, dstLevel:GLint, dstX:GLint, dstY:GLint, dstZ:GLint, srcWidth:GLsizei, srcHeight:GLsizei, srcDepth:GLsizei) {glCopyImageSubData_P(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth)}
var glCopyImageSubData_P:@convention(c)(GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) -> Void = glCopyImageSubData_L
public func glCopyImageSubDataEXT(_ srcName:GLuint, _ srcTarget:GLenum, _ srcLevel:GLint, _ srcX:GLint, _ srcY:GLint, _ srcZ:GLint, _ dstName:GLuint, _ dstTarget:GLenum, _ dstLevel:GLint, _ dstX:GLint, _ dstY:GLint, _ dstZ:GLint, _ srcWidth:GLsizei, _ srcHeight:GLsizei, _ srcDepth:GLsizei) {glCopyImageSubDataEXT_P(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth)}
public func glCopyImageSubDataEXT(srcName:GLuint, srcTarget:GLenum, srcLevel:GLint, srcX:GLint, srcY:GLint, srcZ:GLint, dstName:GLuint, dstTarget:GLenum, dstLevel:GLint, dstX:GLint, dstY:GLint, dstZ:GLint, srcWidth:GLsizei, srcHeight:GLsizei, srcDepth:GLsizei) {glCopyImageSubDataEXT_P(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth)}
var glCopyImageSubDataEXT_P:@convention(c)(GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) -> Void = glCopyImageSubDataEXT_L
public func glCopyImageSubDataNV(_ srcName:GLuint, _ srcTarget:GLenum, _ srcLevel:GLint, _ srcX:GLint, _ srcY:GLint, _ srcZ:GLint, _ dstName:GLuint, _ dstTarget:GLenum, _ dstLevel:GLint, _ dstX:GLint, _ dstY:GLint, _ dstZ:GLint, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei) {glCopyImageSubDataNV_P(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, width, height, depth)}
public func glCopyImageSubDataNV(srcName:GLuint, srcTarget:GLenum, srcLevel:GLint, srcX:GLint, srcY:GLint, srcZ:GLint, dstName:GLuint, dstTarget:GLenum, dstLevel:GLint, dstX:GLint, dstY:GLint, dstZ:GLint, width:GLsizei, height:GLsizei, depth:GLsizei) {glCopyImageSubDataNV_P(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, width, height, depth)}
var glCopyImageSubDataNV_P:@convention(c)(GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) -> Void = glCopyImageSubDataNV_L
public func glCopyImageSubDataOES(_ srcName:GLuint, _ srcTarget:GLenum, _ srcLevel:GLint, _ srcX:GLint, _ srcY:GLint, _ srcZ:GLint, _ dstName:GLuint, _ dstTarget:GLenum, _ dstLevel:GLint, _ dstX:GLint, _ dstY:GLint, _ dstZ:GLint, _ srcWidth:GLsizei, _ srcHeight:GLsizei, _ srcDepth:GLsizei) {glCopyImageSubDataOES_P(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth)}
public func glCopyImageSubDataOES(srcName:GLuint, srcTarget:GLenum, srcLevel:GLint, srcX:GLint, srcY:GLint, srcZ:GLint, dstName:GLuint, dstTarget:GLenum, dstLevel:GLint, dstX:GLint, dstY:GLint, dstZ:GLint, srcWidth:GLsizei, srcHeight:GLsizei, srcDepth:GLsizei) {glCopyImageSubDataOES_P(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth)}
var glCopyImageSubDataOES_P:@convention(c)(GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) -> Void = glCopyImageSubDataOES_L
public func glCopyMultiTexImage1DEXT(_ texunit:GLenum, _ target:GLenum, _ level:GLint, _ internalformat:GLenum, _ x:GLint, _ y:GLint, _ width:GLsizei, _ border:GLint) {glCopyMultiTexImage1DEXT_P(texunit, target, level, internalformat, x, y, width, border)}
public func glCopyMultiTexImage1DEXT(texunit:GLenum, target:GLenum, level:GLint, internalformat:GLenum, x:GLint, y:GLint, width:GLsizei, border:GLint) {glCopyMultiTexImage1DEXT_P(texunit, target, level, internalformat, x, y, width, border)}
var glCopyMultiTexImage1DEXT_P:@convention(c)(GLenum, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint) -> Void = glCopyMultiTexImage1DEXT_L
public func glCopyMultiTexImage2DEXT(_ texunit:GLenum, _ target:GLenum, _ level:GLint, _ internalformat:GLenum, _ x:GLint, _ y:GLint, _ width:GLsizei, _ height:GLsizei, _ border:GLint) {glCopyMultiTexImage2DEXT_P(texunit, target, level, internalformat, x, y, width, height, border)}
public func glCopyMultiTexImage2DEXT(texunit:GLenum, target:GLenum, level:GLint, internalformat:GLenum, x:GLint, y:GLint, width:GLsizei, height:GLsizei, border:GLint) {glCopyMultiTexImage2DEXT_P(texunit, target, level, internalformat, x, y, width, height, border)}
var glCopyMultiTexImage2DEXT_P:@convention(c)(GLenum, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint) -> Void = glCopyMultiTexImage2DEXT_L
public func glCopyMultiTexSubImage1DEXT(_ texunit:GLenum, _ target:GLenum, _ level:GLint, _ xoffset:GLint, _ x:GLint, _ y:GLint, _ width:GLsizei) {glCopyMultiTexSubImage1DEXT_P(texunit, target, level, xoffset, x, y, width)}
public func glCopyMultiTexSubImage1DEXT(texunit:GLenum, target:GLenum, level:GLint, xoffset:GLint, x:GLint, y:GLint, width:GLsizei) {glCopyMultiTexSubImage1DEXT_P(texunit, target, level, xoffset, x, y, width)}
var glCopyMultiTexSubImage1DEXT_P:@convention(c)(GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei) -> Void = glCopyMultiTexSubImage1DEXT_L
public func glCopyMultiTexSubImage2DEXT(_ texunit:GLenum, _ target:GLenum, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ x:GLint, _ y:GLint, _ width:GLsizei, _ height:GLsizei) {glCopyMultiTexSubImage2DEXT_P(texunit, target, level, xoffset, yoffset, x, y, width, height)}
public func glCopyMultiTexSubImage2DEXT(texunit:GLenum, target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, x:GLint, y:GLint, width:GLsizei, height:GLsizei) {glCopyMultiTexSubImage2DEXT_P(texunit, target, level, xoffset, yoffset, x, y, width, height)}
var glCopyMultiTexSubImage2DEXT_P:@convention(c)(GLenum, GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) -> Void = glCopyMultiTexSubImage2DEXT_L
public func glCopyMultiTexSubImage3DEXT(_ texunit:GLenum, _ target:GLenum, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ zoffset:GLint, _ x:GLint, _ y:GLint, _ width:GLsizei, _ height:GLsizei) {glCopyMultiTexSubImage3DEXT_P(texunit, target, level, xoffset, yoffset, zoffset, x, y, width, height)}
public func glCopyMultiTexSubImage3DEXT(texunit:GLenum, target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, x:GLint, y:GLint, width:GLsizei, height:GLsizei) {glCopyMultiTexSubImage3DEXT_P(texunit, target, level, xoffset, yoffset, zoffset, x, y, width, height)}
var glCopyMultiTexSubImage3DEXT_P:@convention(c)(GLenum, GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) -> Void = glCopyMultiTexSubImage3DEXT_L
public func glCopyNamedBufferSubData(_ readBuffer:GLuint, _ writeBuffer:GLuint, _ readOffset:GLintptr, _ writeOffset:GLintptr, _ size:GLsizeiptr) {glCopyNamedBufferSubData_P(readBuffer, writeBuffer, readOffset, writeOffset, size)}
public func glCopyNamedBufferSubData(readBuffer:GLuint, writeBuffer:GLuint, readOffset:GLintptr, writeOffset:GLintptr, size:GLsizeiptr) {glCopyNamedBufferSubData_P(readBuffer, writeBuffer, readOffset, writeOffset, size)}
var glCopyNamedBufferSubData_P:@convention(c)(GLuint, GLuint, GLintptr, GLintptr, GLsizeiptr) -> Void = glCopyNamedBufferSubData_L
public func glCopyPathNV(_ resultPath:GLuint, _ srcPath:GLuint) {glCopyPathNV_P(resultPath, srcPath)}
public func glCopyPathNV(resultPath:GLuint, srcPath:GLuint) {glCopyPathNV_P(resultPath, srcPath)}
var glCopyPathNV_P:@convention(c)(GLuint, GLuint) -> Void = glCopyPathNV_L
public func glCopyPixels(_ x:GLint, _ y:GLint, _ width:GLsizei, _ height:GLsizei, _ type:GLenum) {glCopyPixels_P(x, y, width, height, type)}
public func glCopyPixels(x:GLint, y:GLint, width:GLsizei, height:GLsizei, type:GLenum) {glCopyPixels_P(x, y, width, height, type)}
var glCopyPixels_P:@convention(c)(GLint, GLint, GLsizei, GLsizei, GLenum) -> Void = glCopyPixels_L
public func glCopyTexImage1D(_ target:GLenum, _ level:GLint, _ internalformat:GLenum, _ x:GLint, _ y:GLint, _ width:GLsizei, _ border:GLint) {glCopyTexImage1D_P(target, level, internalformat, x, y, width, border)}
public func glCopyTexImage1D(target:GLenum, level:GLint, internalformat:GLenum, x:GLint, y:GLint, width:GLsizei, border:GLint) {glCopyTexImage1D_P(target, level, internalformat, x, y, width, border)}
var glCopyTexImage1D_P:@convention(c)(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint) -> Void = glCopyTexImage1D_L
public func glCopyTexImage1DEXT(_ target:GLenum, _ level:GLint, _ internalformat:GLenum, _ x:GLint, _ y:GLint, _ width:GLsizei, _ border:GLint) {glCopyTexImage1DEXT_P(target, level, internalformat, x, y, width, border)}
public func glCopyTexImage1DEXT(target:GLenum, level:GLint, internalformat:GLenum, x:GLint, y:GLint, width:GLsizei, border:GLint) {glCopyTexImage1DEXT_P(target, level, internalformat, x, y, width, border)}
var glCopyTexImage1DEXT_P:@convention(c)(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint) -> Void = glCopyTexImage1DEXT_L
public func glCopyTexImage2D(_ target:GLenum, _ level:GLint, _ internalformat:GLenum, _ x:GLint, _ y:GLint, _ width:GLsizei, _ height:GLsizei, _ border:GLint) {glCopyTexImage2D_P(target, level, internalformat, x, y, width, height, border)}
public func glCopyTexImage2D(target:GLenum, level:GLint, internalformat:GLenum, x:GLint, y:GLint, width:GLsizei, height:GLsizei, border:GLint) {glCopyTexImage2D_P(target, level, internalformat, x, y, width, height, border)}
var glCopyTexImage2D_P:@convention(c)(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint) -> Void = glCopyTexImage2D_L
public func glCopyTexImage2DEXT(_ target:GLenum, _ level:GLint, _ internalformat:GLenum, _ x:GLint, _ y:GLint, _ width:GLsizei, _ height:GLsizei, _ border:GLint) {glCopyTexImage2DEXT_P(target, level, internalformat, x, y, width, height, border)}
public func glCopyTexImage2DEXT(target:GLenum, level:GLint, internalformat:GLenum, x:GLint, y:GLint, width:GLsizei, height:GLsizei, border:GLint) {glCopyTexImage2DEXT_P(target, level, internalformat, x, y, width, height, border)}
var glCopyTexImage2DEXT_P:@convention(c)(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint) -> Void = glCopyTexImage2DEXT_L
public func glCopyTexSubImage1D(_ target:GLenum, _ level:GLint, _ xoffset:GLint, _ x:GLint, _ y:GLint, _ width:GLsizei) {glCopyTexSubImage1D_P(target, level, xoffset, x, y, width)}
public func glCopyTexSubImage1D(target:GLenum, level:GLint, xoffset:GLint, x:GLint, y:GLint, width:GLsizei) {glCopyTexSubImage1D_P(target, level, xoffset, x, y, width)}
var glCopyTexSubImage1D_P:@convention(c)(GLenum, GLint, GLint, GLint, GLint, GLsizei) -> Void = glCopyTexSubImage1D_L
public func glCopyTexSubImage1DEXT(_ target:GLenum, _ level:GLint, _ xoffset:GLint, _ x:GLint, _ y:GLint, _ width:GLsizei) {glCopyTexSubImage1DEXT_P(target, level, xoffset, x, y, width)}
public func glCopyTexSubImage1DEXT(target:GLenum, level:GLint, xoffset:GLint, x:GLint, y:GLint, width:GLsizei) {glCopyTexSubImage1DEXT_P(target, level, xoffset, x, y, width)}
var glCopyTexSubImage1DEXT_P:@convention(c)(GLenum, GLint, GLint, GLint, GLint, GLsizei) -> Void = glCopyTexSubImage1DEXT_L
public func glCopyTexSubImage2D(_ target:GLenum, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ x:GLint, _ y:GLint, _ width:GLsizei, _ height:GLsizei) {glCopyTexSubImage2D_P(target, level, xoffset, yoffset, x, y, width, height)}
public func glCopyTexSubImage2D(target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, x:GLint, y:GLint, width:GLsizei, height:GLsizei) {glCopyTexSubImage2D_P(target, level, xoffset, yoffset, x, y, width, height)}
var glCopyTexSubImage2D_P:@convention(c)(GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) -> Void = glCopyTexSubImage2D_L
public func glCopyTexSubImage2DEXT(_ target:GLenum, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ x:GLint, _ y:GLint, _ width:GLsizei, _ height:GLsizei) {glCopyTexSubImage2DEXT_P(target, level, xoffset, yoffset, x, y, width, height)}
public func glCopyTexSubImage2DEXT(target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, x:GLint, y:GLint, width:GLsizei, height:GLsizei) {glCopyTexSubImage2DEXT_P(target, level, xoffset, yoffset, x, y, width, height)}
var glCopyTexSubImage2DEXT_P:@convention(c)(GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) -> Void = glCopyTexSubImage2DEXT_L
public func glCopyTexSubImage3D(_ target:GLenum, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ zoffset:GLint, _ x:GLint, _ y:GLint, _ width:GLsizei, _ height:GLsizei) {glCopyTexSubImage3D_P(target, level, xoffset, yoffset, zoffset, x, y, width, height)}
public func glCopyTexSubImage3D(target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, x:GLint, y:GLint, width:GLsizei, height:GLsizei) {glCopyTexSubImage3D_P(target, level, xoffset, yoffset, zoffset, x, y, width, height)}
var glCopyTexSubImage3D_P:@convention(c)(GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) -> Void = glCopyTexSubImage3D_L
public func glCopyTexSubImage3DEXT(_ target:GLenum, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ zoffset:GLint, _ x:GLint, _ y:GLint, _ width:GLsizei, _ height:GLsizei) {glCopyTexSubImage3DEXT_P(target, level, xoffset, yoffset, zoffset, x, y, width, height)}
public func glCopyTexSubImage3DEXT(target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, x:GLint, y:GLint, width:GLsizei, height:GLsizei) {glCopyTexSubImage3DEXT_P(target, level, xoffset, yoffset, zoffset, x, y, width, height)}
var glCopyTexSubImage3DEXT_P:@convention(c)(GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) -> Void = glCopyTexSubImage3DEXT_L
public func glCopyTexSubImage3DOES(_ target:GLenum, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ zoffset:GLint, _ x:GLint, _ y:GLint, _ width:GLsizei, _ height:GLsizei) {glCopyTexSubImage3DOES_P(target, level, xoffset, yoffset, zoffset, x, y, width, height)}
public func glCopyTexSubImage3DOES(target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, x:GLint, y:GLint, width:GLsizei, height:GLsizei) {glCopyTexSubImage3DOES_P(target, level, xoffset, yoffset, zoffset, x, y, width, height)}
var glCopyTexSubImage3DOES_P:@convention(c)(GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) -> Void = glCopyTexSubImage3DOES_L
public func glCopyTextureImage1DEXT(_ texture:GLuint, _ target:GLenum, _ level:GLint, _ internalformat:GLenum, _ x:GLint, _ y:GLint, _ width:GLsizei, _ border:GLint) {glCopyTextureImage1DEXT_P(texture, target, level, internalformat, x, y, width, border)}
public func glCopyTextureImage1DEXT(texture:GLuint, target:GLenum, level:GLint, internalformat:GLenum, x:GLint, y:GLint, width:GLsizei, border:GLint) {glCopyTextureImage1DEXT_P(texture, target, level, internalformat, x, y, width, border)}
var glCopyTextureImage1DEXT_P:@convention(c)(GLuint, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint) -> Void = glCopyTextureImage1DEXT_L
public func glCopyTextureImage2DEXT(_ texture:GLuint, _ target:GLenum, _ level:GLint, _ internalformat:GLenum, _ x:GLint, _ y:GLint, _ width:GLsizei, _ height:GLsizei, _ border:GLint) {glCopyTextureImage2DEXT_P(texture, target, level, internalformat, x, y, width, height, border)}
public func glCopyTextureImage2DEXT(texture:GLuint, target:GLenum, level:GLint, internalformat:GLenum, x:GLint, y:GLint, width:GLsizei, height:GLsizei, border:GLint) {glCopyTextureImage2DEXT_P(texture, target, level, internalformat, x, y, width, height, border)}
var glCopyTextureImage2DEXT_P:@convention(c)(GLuint, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint) -> Void = glCopyTextureImage2DEXT_L
public func glCopyTextureLevelsAPPLE(_ destinationTexture:GLuint, _ sourceTexture:GLuint, _ sourceBaseLevel:GLint, _ sourceLevelCount:GLsizei) {glCopyTextureLevelsAPPLE_P(destinationTexture, sourceTexture, sourceBaseLevel, sourceLevelCount)}
public func glCopyTextureLevelsAPPLE(destinationTexture:GLuint, sourceTexture:GLuint, sourceBaseLevel:GLint, sourceLevelCount:GLsizei) {glCopyTextureLevelsAPPLE_P(destinationTexture, sourceTexture, sourceBaseLevel, sourceLevelCount)}
var glCopyTextureLevelsAPPLE_P:@convention(c)(GLuint, GLuint, GLint, GLsizei) -> Void = glCopyTextureLevelsAPPLE_L
public func glCopyTextureSubImage1D(_ texture:GLuint, _ level:GLint, _ xoffset:GLint, _ x:GLint, _ y:GLint, _ width:GLsizei) {glCopyTextureSubImage1D_P(texture, level, xoffset, x, y, width)}
public func glCopyTextureSubImage1D(texture:GLuint, level:GLint, xoffset:GLint, x:GLint, y:GLint, width:GLsizei) {glCopyTextureSubImage1D_P(texture, level, xoffset, x, y, width)}
var glCopyTextureSubImage1D_P:@convention(c)(GLuint, GLint, GLint, GLint, GLint, GLsizei) -> Void = glCopyTextureSubImage1D_L
public func glCopyTextureSubImage1DEXT(_ texture:GLuint, _ target:GLenum, _ level:GLint, _ xoffset:GLint, _ x:GLint, _ y:GLint, _ width:GLsizei) {glCopyTextureSubImage1DEXT_P(texture, target, level, xoffset, x, y, width)}
public func glCopyTextureSubImage1DEXT(texture:GLuint, target:GLenum, level:GLint, xoffset:GLint, x:GLint, y:GLint, width:GLsizei) {glCopyTextureSubImage1DEXT_P(texture, target, level, xoffset, x, y, width)}
var glCopyTextureSubImage1DEXT_P:@convention(c)(GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei) -> Void = glCopyTextureSubImage1DEXT_L
public func glCopyTextureSubImage2D(_ texture:GLuint, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ x:GLint, _ y:GLint, _ width:GLsizei, _ height:GLsizei) {glCopyTextureSubImage2D_P(texture, level, xoffset, yoffset, x, y, width, height)}
public func glCopyTextureSubImage2D(texture:GLuint, level:GLint, xoffset:GLint, yoffset:GLint, x:GLint, y:GLint, width:GLsizei, height:GLsizei) {glCopyTextureSubImage2D_P(texture, level, xoffset, yoffset, x, y, width, height)}
var glCopyTextureSubImage2D_P:@convention(c)(GLuint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) -> Void = glCopyTextureSubImage2D_L
public func glCopyTextureSubImage2DEXT(_ texture:GLuint, _ target:GLenum, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ x:GLint, _ y:GLint, _ width:GLsizei, _ height:GLsizei) {glCopyTextureSubImage2DEXT_P(texture, target, level, xoffset, yoffset, x, y, width, height)}
public func glCopyTextureSubImage2DEXT(texture:GLuint, target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, x:GLint, y:GLint, width:GLsizei, height:GLsizei) {glCopyTextureSubImage2DEXT_P(texture, target, level, xoffset, yoffset, x, y, width, height)}
var glCopyTextureSubImage2DEXT_P:@convention(c)(GLuint, GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) -> Void = glCopyTextureSubImage2DEXT_L
public func glCopyTextureSubImage3D(_ texture:GLuint, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ zoffset:GLint, _ x:GLint, _ y:GLint, _ width:GLsizei, _ height:GLsizei) {glCopyTextureSubImage3D_P(texture, level, xoffset, yoffset, zoffset, x, y, width, height)}
public func glCopyTextureSubImage3D(texture:GLuint, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, x:GLint, y:GLint, width:GLsizei, height:GLsizei) {glCopyTextureSubImage3D_P(texture, level, xoffset, yoffset, zoffset, x, y, width, height)}
var glCopyTextureSubImage3D_P:@convention(c)(GLuint, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) -> Void = glCopyTextureSubImage3D_L
public func glCopyTextureSubImage3DEXT(_ texture:GLuint, _ target:GLenum, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ zoffset:GLint, _ x:GLint, _ y:GLint, _ width:GLsizei, _ height:GLsizei) {glCopyTextureSubImage3DEXT_P(texture, target, level, xoffset, yoffset, zoffset, x, y, width, height)}
public func glCopyTextureSubImage3DEXT(texture:GLuint, target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, x:GLint, y:GLint, width:GLsizei, height:GLsizei) {glCopyTextureSubImage3DEXT_P(texture, target, level, xoffset, yoffset, zoffset, x, y, width, height)}
var glCopyTextureSubImage3DEXT_P:@convention(c)(GLuint, GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) -> Void = glCopyTextureSubImage3DEXT_L
public func glCoverFillPathInstancedNV(_ numPaths:GLsizei, _ pathNameType:GLenum, _ paths:UnsafeRawPointer, _ pathBase:GLuint, _ coverMode:GLenum, _ transformType:GLenum, _ transformValues:UnsafePointer<GLfloat>) {glCoverFillPathInstancedNV_P(numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues)}
public func glCoverFillPathInstancedNV(numPaths:GLsizei, pathNameType:GLenum, paths:UnsafeRawPointer, pathBase:GLuint, coverMode:GLenum, transformType:GLenum, transformValues:UnsafePointer<GLfloat>) {glCoverFillPathInstancedNV_P(numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues)}
var glCoverFillPathInstancedNV_P:@convention(c)(GLsizei, GLenum, UnsafeRawPointer, GLuint, GLenum, GLenum, UnsafePointer<GLfloat>) -> Void = glCoverFillPathInstancedNV_L
public func glCoverFillPathNV(_ path:GLuint, _ coverMode:GLenum) {glCoverFillPathNV_P(path, coverMode)}
public func glCoverFillPathNV(path:GLuint, coverMode:GLenum) {glCoverFillPathNV_P(path, coverMode)}
var glCoverFillPathNV_P:@convention(c)(GLuint, GLenum) -> Void = glCoverFillPathNV_L
public func glCoverStrokePathInstancedNV(_ numPaths:GLsizei, _ pathNameType:GLenum, _ paths:UnsafeRawPointer, _ pathBase:GLuint, _ coverMode:GLenum, _ transformType:GLenum, _ transformValues:UnsafePointer<GLfloat>) {glCoverStrokePathInstancedNV_P(numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues)}
public func glCoverStrokePathInstancedNV(numPaths:GLsizei, pathNameType:GLenum, paths:UnsafeRawPointer, pathBase:GLuint, coverMode:GLenum, transformType:GLenum, transformValues:UnsafePointer<GLfloat>) {glCoverStrokePathInstancedNV_P(numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues)}
var glCoverStrokePathInstancedNV_P:@convention(c)(GLsizei, GLenum, UnsafeRawPointer, GLuint, GLenum, GLenum, UnsafePointer<GLfloat>) -> Void = glCoverStrokePathInstancedNV_L
public func glCoverStrokePathNV(_ path:GLuint, _ coverMode:GLenum) {glCoverStrokePathNV_P(path, coverMode)}
public func glCoverStrokePathNV(path:GLuint, coverMode:GLenum) {glCoverStrokePathNV_P(path, coverMode)}
var glCoverStrokePathNV_P:@convention(c)(GLuint, GLenum) -> Void = glCoverStrokePathNV_L
public func glCoverageMaskNV(_ mask:GLboolean) {glCoverageMaskNV_P(mask)}
public func glCoverageMaskNV(mask:GLboolean) {glCoverageMaskNV_P(mask)}
var glCoverageMaskNV_P:@convention(c)(GLboolean) -> Void = glCoverageMaskNV_L
public func glCoverageModulationNV(_ components:GLenum) {glCoverageModulationNV_P(components)}
public func glCoverageModulationNV(components:GLenum) {glCoverageModulationNV_P(components)}
var glCoverageModulationNV_P:@convention(c)(GLenum) -> Void = glCoverageModulationNV_L
public func glCoverageModulationTableNV(_ n:GLsizei, _ v:UnsafePointer<GLfloat>) {glCoverageModulationTableNV_P(n, v)}
public func glCoverageModulationTableNV(n:GLsizei, v:UnsafePointer<GLfloat>) {glCoverageModulationTableNV_P(n, v)}
var glCoverageModulationTableNV_P:@convention(c)(GLsizei, UnsafePointer<GLfloat>) -> Void = glCoverageModulationTableNV_L
public func glCoverageOperationNV(_ operation:GLenum) {glCoverageOperationNV_P(operation)}
public func glCoverageOperationNV(operation:GLenum) {glCoverageOperationNV_P(operation)}
var glCoverageOperationNV_P:@convention(c)(GLenum) -> Void = glCoverageOperationNV_L
public func glCreateBuffers(_ n:GLsizei, _ buffers:UnsafeMutablePointer<GLuint>) {glCreateBuffers_P(n, buffers)}
public func glCreateBuffers(n:GLsizei, buffers:UnsafeMutablePointer<GLuint>) {glCreateBuffers_P(n, buffers)}
var glCreateBuffers_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glCreateBuffers_L
public func glCreateCommandListsNV(_ n:GLsizei, _ lists:UnsafeMutablePointer<GLuint>) {glCreateCommandListsNV_P(n, lists)}
public func glCreateCommandListsNV(n:GLsizei, lists:UnsafeMutablePointer<GLuint>) {glCreateCommandListsNV_P(n, lists)}
var glCreateCommandListsNV_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glCreateCommandListsNV_L
public func glCreateFramebuffers(_ n:GLsizei, _ framebuffers:UnsafeMutablePointer<GLuint>) {glCreateFramebuffers_P(n, framebuffers)}
public func glCreateFramebuffers(n:GLsizei, framebuffers:UnsafeMutablePointer<GLuint>) {glCreateFramebuffers_P(n, framebuffers)}
var glCreateFramebuffers_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glCreateFramebuffers_L
public func glCreatePerfQueryINTEL(_ queryId:GLuint, _ queryHandle:UnsafeMutablePointer<GLuint>) {glCreatePerfQueryINTEL_P(queryId, queryHandle)}
public func glCreatePerfQueryINTEL(queryId:GLuint, queryHandle:UnsafeMutablePointer<GLuint>) {glCreatePerfQueryINTEL_P(queryId, queryHandle)}
var glCreatePerfQueryINTEL_P:@convention(c)(GLuint, UnsafeMutablePointer<GLuint>) -> Void = glCreatePerfQueryINTEL_L
public func glCreateProgram() -> GLuint {return glCreateProgram_P()}
var glCreateProgram_P:@convention(c)() -> GLuint = glCreateProgram_L
public func glCreateProgramObjectARB() -> GLhandleARB {return glCreateProgramObjectARB_P()}
var glCreateProgramObjectARB_P:@convention(c)() -> GLhandleARB = glCreateProgramObjectARB_L
public func glCreateProgramPipelines(_ n:GLsizei, _ pipelines:UnsafeMutablePointer<GLuint>) {glCreateProgramPipelines_P(n, pipelines)}
public func glCreateProgramPipelines(n:GLsizei, pipelines:UnsafeMutablePointer<GLuint>) {glCreateProgramPipelines_P(n, pipelines)}
var glCreateProgramPipelines_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glCreateProgramPipelines_L
public func glCreateQueries(_ target:GLenum, _ n:GLsizei, _ ids:UnsafeMutablePointer<GLuint>) {glCreateQueries_P(target, n, ids)}
public func glCreateQueries(target:GLenum, n:GLsizei, ids:UnsafeMutablePointer<GLuint>) {glCreateQueries_P(target, n, ids)}
var glCreateQueries_P:@convention(c)(GLenum, GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glCreateQueries_L
public func glCreateRenderbuffers(_ n:GLsizei, _ renderbuffers:UnsafeMutablePointer<GLuint>) {glCreateRenderbuffers_P(n, renderbuffers)}
public func glCreateRenderbuffers(n:GLsizei, renderbuffers:UnsafeMutablePointer<GLuint>) {glCreateRenderbuffers_P(n, renderbuffers)}
var glCreateRenderbuffers_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glCreateRenderbuffers_L
public func glCreateSamplers(_ n:GLsizei, _ samplers:UnsafeMutablePointer<GLuint>) {glCreateSamplers_P(n, samplers)}
public func glCreateSamplers(n:GLsizei, samplers:UnsafeMutablePointer<GLuint>) {glCreateSamplers_P(n, samplers)}
var glCreateSamplers_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glCreateSamplers_L
public func glCreateShader(_ type:GLenum) -> GLuint {return glCreateShader_P(type)}
public func glCreateShader(type:GLenum) -> GLuint {return glCreateShader_P(type)}
var glCreateShader_P:@convention(c)(GLenum) -> GLuint = glCreateShader_L
public func glCreateShaderObjectARB(_ shaderType:GLenum) -> GLhandleARB {return glCreateShaderObjectARB_P(shaderType)}
public func glCreateShaderObjectARB(shaderType:GLenum) -> GLhandleARB {return glCreateShaderObjectARB_P(shaderType)}
var glCreateShaderObjectARB_P:@convention(c)(GLenum) -> GLhandleARB = glCreateShaderObjectARB_L
public func glCreateShaderProgramEXT(_ type:GLenum, _ string:UnsafePointer<GLchar>) -> GLuint {return glCreateShaderProgramEXT_P(type, string)}
public func glCreateShaderProgramEXT(type:GLenum, string:UnsafePointer<GLchar>) -> GLuint {return glCreateShaderProgramEXT_P(type, string)}
var glCreateShaderProgramEXT_P:@convention(c)(GLenum, UnsafePointer<GLchar>) -> GLuint = glCreateShaderProgramEXT_L
public func glCreateShaderProgramv(_ type:GLenum, _ count:GLsizei, _ strings:UnsafePointer<UnsafePointer<GLchar>>) -> GLuint {return glCreateShaderProgramv_P(type, count, strings)}
public func glCreateShaderProgramv(type:GLenum, count:GLsizei, strings:UnsafePointer<UnsafePointer<GLchar>>) -> GLuint {return glCreateShaderProgramv_P(type, count, strings)}
var glCreateShaderProgramv_P:@convention(c)(GLenum, GLsizei, UnsafePointer<UnsafePointer<GLchar>>) -> GLuint = glCreateShaderProgramv_L
public func glCreateShaderProgramvEXT(_ type:GLenum, _ count:GLsizei, _ strings:UnsafeMutablePointer<UnsafePointer<GLchar>>) -> GLuint {return glCreateShaderProgramvEXT_P(type, count, strings)}
public func glCreateShaderProgramvEXT(type:GLenum, count:GLsizei, strings:UnsafeMutablePointer<UnsafePointer<GLchar>>) -> GLuint {return glCreateShaderProgramvEXT_P(type, count, strings)}
var glCreateShaderProgramvEXT_P:@convention(c)(GLenum, GLsizei, UnsafeMutablePointer<UnsafePointer<GLchar>>) -> GLuint = glCreateShaderProgramvEXT_L
public func glCreateStatesNV(_ n:GLsizei, _ states:UnsafeMutablePointer<GLuint>) {glCreateStatesNV_P(n, states)}
public func glCreateStatesNV(n:GLsizei, states:UnsafeMutablePointer<GLuint>) {glCreateStatesNV_P(n, states)}
var glCreateStatesNV_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glCreateStatesNV_L
public func glCreateSyncFromCLeventARB(_ context:OpaquePointer, _ event:OpaquePointer, _ flags:GLbitfield) -> GLsync {return glCreateSyncFromCLeventARB_P(context, event, flags)}
public func glCreateSyncFromCLeventARB(context:OpaquePointer, event:OpaquePointer, flags:GLbitfield) -> GLsync {return glCreateSyncFromCLeventARB_P(context, event, flags)}
var glCreateSyncFromCLeventARB_P:@convention(c)(OpaquePointer, OpaquePointer, GLbitfield) -> GLsync = glCreateSyncFromCLeventARB_L
public func glCreateTextures(_ target:GLenum, _ n:GLsizei, _ textures:UnsafeMutablePointer<GLuint>) {glCreateTextures_P(target, n, textures)}
public func glCreateTextures(target:GLenum, n:GLsizei, textures:UnsafeMutablePointer<GLuint>) {glCreateTextures_P(target, n, textures)}
var glCreateTextures_P:@convention(c)(GLenum, GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glCreateTextures_L
public func glCreateTransformFeedbacks(_ n:GLsizei, _ ids:UnsafeMutablePointer<GLuint>) {glCreateTransformFeedbacks_P(n, ids)}
public func glCreateTransformFeedbacks(n:GLsizei, ids:UnsafeMutablePointer<GLuint>) {glCreateTransformFeedbacks_P(n, ids)}
var glCreateTransformFeedbacks_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glCreateTransformFeedbacks_L
public func glCreateVertexArrays(_ n:GLsizei, _ arrays:UnsafeMutablePointer<GLuint>) {glCreateVertexArrays_P(n, arrays)}
public func glCreateVertexArrays(n:GLsizei, arrays:UnsafeMutablePointer<GLuint>) {glCreateVertexArrays_P(n, arrays)}
var glCreateVertexArrays_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glCreateVertexArrays_L
public func glCullFace(_ mode:GLenum) {glCullFace_P(mode)}
public func glCullFace(mode:GLenum) {glCullFace_P(mode)}
var glCullFace_P:@convention(c)(GLenum) -> Void = glCullFace_L
public func glCullParameterdvEXT(_ pname:GLenum, _ params:UnsafeMutablePointer<GLdouble>) {glCullParameterdvEXT_P(pname, params)}
public func glCullParameterdvEXT(pname:GLenum, params:UnsafeMutablePointer<GLdouble>) {glCullParameterdvEXT_P(pname, params)}
var glCullParameterdvEXT_P:@convention(c)(GLenum, UnsafeMutablePointer<GLdouble>) -> Void = glCullParameterdvEXT_L
public func glCullParameterfvEXT(_ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glCullParameterfvEXT_P(pname, params)}
public func glCullParameterfvEXT(pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glCullParameterfvEXT_P(pname, params)}
var glCullParameterfvEXT_P:@convention(c)(GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glCullParameterfvEXT_L
public func glCurrentPaletteMatrixARB(_ index:GLint) {glCurrentPaletteMatrixARB_P(index)}
public func glCurrentPaletteMatrixARB(index:GLint) {glCurrentPaletteMatrixARB_P(index)}
var glCurrentPaletteMatrixARB_P:@convention(c)(GLint) -> Void = glCurrentPaletteMatrixARB_L
public func glCurrentPaletteMatrixOES(_ matrixpaletteindex:GLuint) {glCurrentPaletteMatrixOES_P(matrixpaletteindex)}
public func glCurrentPaletteMatrixOES(matrixpaletteindex:GLuint) {glCurrentPaletteMatrixOES_P(matrixpaletteindex)}
var glCurrentPaletteMatrixOES_P:@convention(c)(GLuint) -> Void = glCurrentPaletteMatrixOES_L
public func glDebugMessageCallback(_ callback:GLDEBUGPROC, _ userParam:UnsafeRawPointer) {glDebugMessageCallback_P(callback, userParam)}
public func glDebugMessageCallback(callback:GLDEBUGPROC, userParam:UnsafeRawPointer) {glDebugMessageCallback_P(callback, userParam)}
var glDebugMessageCallback_P:@convention(c)(GLDEBUGPROC, UnsafeRawPointer) -> Void = glDebugMessageCallback_L
public func glDebugMessageCallbackAMD(_ callback:GLDEBUGPROCAMD, _ userParam:UnsafeMutableRawPointer) {glDebugMessageCallbackAMD_P(callback, userParam)}
public func glDebugMessageCallbackAMD(callback:GLDEBUGPROCAMD, userParam:UnsafeMutableRawPointer) {glDebugMessageCallbackAMD_P(callback, userParam)}
var glDebugMessageCallbackAMD_P:@convention(c)(GLDEBUGPROCAMD, UnsafeMutableRawPointer) -> Void = glDebugMessageCallbackAMD_L
public func glDebugMessageCallbackARB(_ callback:GLDEBUGPROCARB, _ userParam:UnsafeRawPointer) {glDebugMessageCallbackARB_P(callback, userParam)}
public func glDebugMessageCallbackARB(callback:GLDEBUGPROCARB, userParam:UnsafeRawPointer) {glDebugMessageCallbackARB_P(callback, userParam)}
var glDebugMessageCallbackARB_P:@convention(c)(GLDEBUGPROCARB, UnsafeRawPointer) -> Void = glDebugMessageCallbackARB_L
public func glDebugMessageCallbackKHR(_ callback:GLDEBUGPROCKHR, _ userParam:UnsafeRawPointer) {glDebugMessageCallbackKHR_P(callback, userParam)}
public func glDebugMessageCallbackKHR(callback:GLDEBUGPROCKHR, userParam:UnsafeRawPointer) {glDebugMessageCallbackKHR_P(callback, userParam)}
var glDebugMessageCallbackKHR_P:@convention(c)(GLDEBUGPROCKHR, UnsafeRawPointer) -> Void = glDebugMessageCallbackKHR_L
public func glDebugMessageControl(_ source:GLenum, _ type:GLenum, _ severity:GLenum, _ count:GLsizei, _ ids:UnsafePointer<GLuint>, _ enabled:GLboolean) {glDebugMessageControl_P(source, type, severity, count, ids, enabled)}
public func glDebugMessageControl(source:GLenum, type:GLenum, severity:GLenum, count:GLsizei, ids:UnsafePointer<GLuint>, enabled:GLboolean) {glDebugMessageControl_P(source, type, severity, count, ids, enabled)}
var glDebugMessageControl_P:@convention(c)(GLenum, GLenum, GLenum, GLsizei, UnsafePointer<GLuint>, GLboolean) -> Void = glDebugMessageControl_L
public func glDebugMessageControlARB(_ source:GLenum, _ type:GLenum, _ severity:GLenum, _ count:GLsizei, _ ids:UnsafePointer<GLuint>, _ enabled:GLboolean) {glDebugMessageControlARB_P(source, type, severity, count, ids, enabled)}
public func glDebugMessageControlARB(source:GLenum, type:GLenum, severity:GLenum, count:GLsizei, ids:UnsafePointer<GLuint>, enabled:GLboolean) {glDebugMessageControlARB_P(source, type, severity, count, ids, enabled)}
var glDebugMessageControlARB_P:@convention(c)(GLenum, GLenum, GLenum, GLsizei, UnsafePointer<GLuint>, GLboolean) -> Void = glDebugMessageControlARB_L
public func glDebugMessageControlKHR(_ source:GLenum, _ type:GLenum, _ severity:GLenum, _ count:GLsizei, _ ids:UnsafePointer<GLuint>, _ enabled:GLboolean) {glDebugMessageControlKHR_P(source, type, severity, count, ids, enabled)}
public func glDebugMessageControlKHR(source:GLenum, type:GLenum, severity:GLenum, count:GLsizei, ids:UnsafePointer<GLuint>, enabled:GLboolean) {glDebugMessageControlKHR_P(source, type, severity, count, ids, enabled)}
var glDebugMessageControlKHR_P:@convention(c)(GLenum, GLenum, GLenum, GLsizei, UnsafePointer<GLuint>, GLboolean) -> Void = glDebugMessageControlKHR_L
public func glDebugMessageEnableAMD(_ category:GLenum, _ severity:GLenum, _ count:GLsizei, _ ids:UnsafePointer<GLuint>, _ enabled:GLboolean) {glDebugMessageEnableAMD_P(category, severity, count, ids, enabled)}
public func glDebugMessageEnableAMD(category:GLenum, severity:GLenum, count:GLsizei, ids:UnsafePointer<GLuint>, enabled:GLboolean) {glDebugMessageEnableAMD_P(category, severity, count, ids, enabled)}
var glDebugMessageEnableAMD_P:@convention(c)(GLenum, GLenum, GLsizei, UnsafePointer<GLuint>, GLboolean) -> Void = glDebugMessageEnableAMD_L
public func glDebugMessageInsert(_ source:GLenum, _ type:GLenum, _ id:GLuint, _ severity:GLenum, _ length:GLsizei, _ buf:UnsafePointer<GLchar>) {glDebugMessageInsert_P(source, type, id, severity, length, buf)}
public func glDebugMessageInsert(source:GLenum, type:GLenum, id:GLuint, severity:GLenum, length:GLsizei, buf:UnsafePointer<GLchar>) {glDebugMessageInsert_P(source, type, id, severity, length, buf)}
var glDebugMessageInsert_P:@convention(c)(GLenum, GLenum, GLuint, GLenum, GLsizei, UnsafePointer<GLchar>) -> Void = glDebugMessageInsert_L
public func glDebugMessageInsertAMD(_ category:GLenum, _ severity:GLenum, _ id:GLuint, _ length:GLsizei, _ buf:UnsafePointer<GLchar>) {glDebugMessageInsertAMD_P(category, severity, id, length, buf)}
public func glDebugMessageInsertAMD(category:GLenum, severity:GLenum, id:GLuint, length:GLsizei, buf:UnsafePointer<GLchar>) {glDebugMessageInsertAMD_P(category, severity, id, length, buf)}
var glDebugMessageInsertAMD_P:@convention(c)(GLenum, GLenum, GLuint, GLsizei, UnsafePointer<GLchar>) -> Void = glDebugMessageInsertAMD_L
public func glDebugMessageInsertARB(_ source:GLenum, _ type:GLenum, _ id:GLuint, _ severity:GLenum, _ length:GLsizei, _ buf:UnsafePointer<GLchar>) {glDebugMessageInsertARB_P(source, type, id, severity, length, buf)}
public func glDebugMessageInsertARB(source:GLenum, type:GLenum, id:GLuint, severity:GLenum, length:GLsizei, buf:UnsafePointer<GLchar>) {glDebugMessageInsertARB_P(source, type, id, severity, length, buf)}
var glDebugMessageInsertARB_P:@convention(c)(GLenum, GLenum, GLuint, GLenum, GLsizei, UnsafePointer<GLchar>) -> Void = glDebugMessageInsertARB_L
public func glDebugMessageInsertKHR(_ source:GLenum, _ type:GLenum, _ id:GLuint, _ severity:GLenum, _ length:GLsizei, _ buf:UnsafePointer<GLchar>) {glDebugMessageInsertKHR_P(source, type, id, severity, length, buf)}
public func glDebugMessageInsertKHR(source:GLenum, type:GLenum, id:GLuint, severity:GLenum, length:GLsizei, buf:UnsafePointer<GLchar>) {glDebugMessageInsertKHR_P(source, type, id, severity, length, buf)}
var glDebugMessageInsertKHR_P:@convention(c)(GLenum, GLenum, GLuint, GLenum, GLsizei, UnsafePointer<GLchar>) -> Void = glDebugMessageInsertKHR_L
public func glDeformSGIX(_ mask:GLbitfield) {glDeformSGIX_P(mask)}
public func glDeformSGIX(mask:GLbitfield) {glDeformSGIX_P(mask)}
var glDeformSGIX_P:@convention(c)(GLbitfield) -> Void = glDeformSGIX_L
public func glDeformationMap3dSGIX(_ target:GLenum, _ u1:GLdouble, _ u2:GLdouble, _ ustride:GLint, _ uorder:GLint, _ v1:GLdouble, _ v2:GLdouble, _ vstride:GLint, _ vorder:GLint, _ w1:GLdouble, _ w2:GLdouble, _ wstride:GLint, _ worder:GLint, _ points:UnsafePointer<GLdouble>) {glDeformationMap3dSGIX_P(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, points)}
public func glDeformationMap3dSGIX(target:GLenum, u1:GLdouble, u2:GLdouble, ustride:GLint, uorder:GLint, v1:GLdouble, v2:GLdouble, vstride:GLint, vorder:GLint, w1:GLdouble, w2:GLdouble, wstride:GLint, worder:GLint, points:UnsafePointer<GLdouble>) {glDeformationMap3dSGIX_P(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, points)}
var glDeformationMap3dSGIX_P:@convention(c)(GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, UnsafePointer<GLdouble>) -> Void = glDeformationMap3dSGIX_L
public func glDeformationMap3fSGIX(_ target:GLenum, _ u1:GLfloat, _ u2:GLfloat, _ ustride:GLint, _ uorder:GLint, _ v1:GLfloat, _ v2:GLfloat, _ vstride:GLint, _ vorder:GLint, _ w1:GLfloat, _ w2:GLfloat, _ wstride:GLint, _ worder:GLint, _ points:UnsafePointer<GLfloat>) {glDeformationMap3fSGIX_P(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, points)}
public func glDeformationMap3fSGIX(target:GLenum, u1:GLfloat, u2:GLfloat, ustride:GLint, uorder:GLint, v1:GLfloat, v2:GLfloat, vstride:GLint, vorder:GLint, w1:GLfloat, w2:GLfloat, wstride:GLint, worder:GLint, points:UnsafePointer<GLfloat>) {glDeformationMap3fSGIX_P(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, points)}
var glDeformationMap3fSGIX_P:@convention(c)(GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, UnsafePointer<GLfloat>) -> Void = glDeformationMap3fSGIX_L
public func glDeleteAsyncMarkersSGIX(_ marker:GLuint, _ range:GLsizei) {glDeleteAsyncMarkersSGIX_P(marker, range)}
public func glDeleteAsyncMarkersSGIX(marker:GLuint, range:GLsizei) {glDeleteAsyncMarkersSGIX_P(marker, range)}
var glDeleteAsyncMarkersSGIX_P:@convention(c)(GLuint, GLsizei) -> Void = glDeleteAsyncMarkersSGIX_L
public func glDeleteBuffers(_ n:GLsizei, _ buffers:UnsafePointer<GLuint>) {glDeleteBuffers_P(n, buffers)}
public func glDeleteBuffers(n:GLsizei, buffers:UnsafePointer<GLuint>) {glDeleteBuffers_P(n, buffers)}
var glDeleteBuffers_P:@convention(c)(GLsizei, UnsafePointer<GLuint>) -> Void = glDeleteBuffers_L
public func glDeleteBuffersARB(_ n:GLsizei, _ buffers:UnsafePointer<GLuint>) {glDeleteBuffersARB_P(n, buffers)}
public func glDeleteBuffersARB(n:GLsizei, buffers:UnsafePointer<GLuint>) {glDeleteBuffersARB_P(n, buffers)}
var glDeleteBuffersARB_P:@convention(c)(GLsizei, UnsafePointer<GLuint>) -> Void = glDeleteBuffersARB_L
public func glDeleteCommandListsNV(_ n:GLsizei, _ lists:UnsafePointer<GLuint>) {glDeleteCommandListsNV_P(n, lists)}
public func glDeleteCommandListsNV(n:GLsizei, lists:UnsafePointer<GLuint>) {glDeleteCommandListsNV_P(n, lists)}
var glDeleteCommandListsNV_P:@convention(c)(GLsizei, UnsafePointer<GLuint>) -> Void = glDeleteCommandListsNV_L
public func glDeleteFencesAPPLE(_ n:GLsizei, _ fences:UnsafePointer<GLuint>) {glDeleteFencesAPPLE_P(n, fences)}
public func glDeleteFencesAPPLE(n:GLsizei, fences:UnsafePointer<GLuint>) {glDeleteFencesAPPLE_P(n, fences)}
var glDeleteFencesAPPLE_P:@convention(c)(GLsizei, UnsafePointer<GLuint>) -> Void = glDeleteFencesAPPLE_L
public func glDeleteFencesNV(_ n:GLsizei, _ fences:UnsafePointer<GLuint>) {glDeleteFencesNV_P(n, fences)}
public func glDeleteFencesNV(n:GLsizei, fences:UnsafePointer<GLuint>) {glDeleteFencesNV_P(n, fences)}
var glDeleteFencesNV_P:@convention(c)(GLsizei, UnsafePointer<GLuint>) -> Void = glDeleteFencesNV_L
public func glDeleteFragmentShaderATI(_ id:GLuint) {glDeleteFragmentShaderATI_P(id)}
public func glDeleteFragmentShaderATI(id:GLuint) {glDeleteFragmentShaderATI_P(id)}
var glDeleteFragmentShaderATI_P:@convention(c)(GLuint) -> Void = glDeleteFragmentShaderATI_L
public func glDeleteFramebuffers(_ n:GLsizei, _ framebuffers:UnsafePointer<GLuint>) {glDeleteFramebuffers_P(n, framebuffers)}
public func glDeleteFramebuffers(n:GLsizei, framebuffers:UnsafePointer<GLuint>) {glDeleteFramebuffers_P(n, framebuffers)}
var glDeleteFramebuffers_P:@convention(c)(GLsizei, UnsafePointer<GLuint>) -> Void = glDeleteFramebuffers_L
public func glDeleteFramebuffersEXT(_ n:GLsizei, _ framebuffers:UnsafePointer<GLuint>) {glDeleteFramebuffersEXT_P(n, framebuffers)}
public func glDeleteFramebuffersEXT(n:GLsizei, framebuffers:UnsafePointer<GLuint>) {glDeleteFramebuffersEXT_P(n, framebuffers)}
var glDeleteFramebuffersEXT_P:@convention(c)(GLsizei, UnsafePointer<GLuint>) -> Void = glDeleteFramebuffersEXT_L
public func glDeleteFramebuffersOES(_ n:GLsizei, _ framebuffers:UnsafePointer<GLuint>) {glDeleteFramebuffersOES_P(n, framebuffers)}
public func glDeleteFramebuffersOES(n:GLsizei, framebuffers:UnsafePointer<GLuint>) {glDeleteFramebuffersOES_P(n, framebuffers)}
var glDeleteFramebuffersOES_P:@convention(c)(GLsizei, UnsafePointer<GLuint>) -> Void = glDeleteFramebuffersOES_L
public func glDeleteLists(_ list:GLuint, _ range:GLsizei) {glDeleteLists_P(list, range)}
public func glDeleteLists(list:GLuint, range:GLsizei) {glDeleteLists_P(list, range)}
var glDeleteLists_P:@convention(c)(GLuint, GLsizei) -> Void = glDeleteLists_L
public func glDeleteNamedStringARB(_ namelen:GLint, _ name:UnsafePointer<GLchar>) {glDeleteNamedStringARB_P(namelen, name)}
public func glDeleteNamedStringARB(namelen:GLint, name:UnsafePointer<GLchar>) {glDeleteNamedStringARB_P(namelen, name)}
var glDeleteNamedStringARB_P:@convention(c)(GLint, UnsafePointer<GLchar>) -> Void = glDeleteNamedStringARB_L
public func glDeleteNamesAMD(_ identifier:GLenum, _ num:GLuint, _ names:UnsafePointer<GLuint>) {glDeleteNamesAMD_P(identifier, num, names)}
public func glDeleteNamesAMD(identifier:GLenum, num:GLuint, names:UnsafePointer<GLuint>) {glDeleteNamesAMD_P(identifier, num, names)}
var glDeleteNamesAMD_P:@convention(c)(GLenum, GLuint, UnsafePointer<GLuint>) -> Void = glDeleteNamesAMD_L
public func glDeleteObjectARB(_ obj:GLhandleARB) {glDeleteObjectARB_P(obj)}
public func glDeleteObjectARB(obj:GLhandleARB) {glDeleteObjectARB_P(obj)}
var glDeleteObjectARB_P:@convention(c)(GLhandleARB) -> Void = glDeleteObjectARB_L
public func glDeleteOcclusionQueriesNV(_ n:GLsizei, _ ids:UnsafePointer<GLuint>) {glDeleteOcclusionQueriesNV_P(n, ids)}
public func glDeleteOcclusionQueriesNV(n:GLsizei, ids:UnsafePointer<GLuint>) {glDeleteOcclusionQueriesNV_P(n, ids)}
var glDeleteOcclusionQueriesNV_P:@convention(c)(GLsizei, UnsafePointer<GLuint>) -> Void = glDeleteOcclusionQueriesNV_L
public func glDeletePathsNV(_ path:GLuint, _ range:GLsizei) {glDeletePathsNV_P(path, range)}
public func glDeletePathsNV(path:GLuint, range:GLsizei) {glDeletePathsNV_P(path, range)}
var glDeletePathsNV_P:@convention(c)(GLuint, GLsizei) -> Void = glDeletePathsNV_L
public func glDeletePerfMonitorsAMD(_ n:GLsizei, _ monitors:UnsafeMutablePointer<GLuint>) {glDeletePerfMonitorsAMD_P(n, monitors)}
public func glDeletePerfMonitorsAMD(n:GLsizei, monitors:UnsafeMutablePointer<GLuint>) {glDeletePerfMonitorsAMD_P(n, monitors)}
var glDeletePerfMonitorsAMD_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glDeletePerfMonitorsAMD_L
public func glDeletePerfQueryINTEL(_ queryHandle:GLuint) {glDeletePerfQueryINTEL_P(queryHandle)}
public func glDeletePerfQueryINTEL(queryHandle:GLuint) {glDeletePerfQueryINTEL_P(queryHandle)}
var glDeletePerfQueryINTEL_P:@convention(c)(GLuint) -> Void = glDeletePerfQueryINTEL_L
public func glDeleteProgram(_ program:GLuint) {glDeleteProgram_P(program)}
public func glDeleteProgram(program:GLuint) {glDeleteProgram_P(program)}
var glDeleteProgram_P:@convention(c)(GLuint) -> Void = glDeleteProgram_L
public func glDeleteProgramPipelines(_ n:GLsizei, _ pipelines:UnsafePointer<GLuint>) {glDeleteProgramPipelines_P(n, pipelines)}
public func glDeleteProgramPipelines(n:GLsizei, pipelines:UnsafePointer<GLuint>) {glDeleteProgramPipelines_P(n, pipelines)}
var glDeleteProgramPipelines_P:@convention(c)(GLsizei, UnsafePointer<GLuint>) -> Void = glDeleteProgramPipelines_L
public func glDeleteProgramPipelinesEXT(_ n:GLsizei, _ pipelines:UnsafePointer<GLuint>) {glDeleteProgramPipelinesEXT_P(n, pipelines)}
public func glDeleteProgramPipelinesEXT(n:GLsizei, pipelines:UnsafePointer<GLuint>) {glDeleteProgramPipelinesEXT_P(n, pipelines)}
var glDeleteProgramPipelinesEXT_P:@convention(c)(GLsizei, UnsafePointer<GLuint>) -> Void = glDeleteProgramPipelinesEXT_L
public func glDeleteProgramsARB(_ n:GLsizei, _ programs:UnsafePointer<GLuint>) {glDeleteProgramsARB_P(n, programs)}
public func glDeleteProgramsARB(n:GLsizei, programs:UnsafePointer<GLuint>) {glDeleteProgramsARB_P(n, programs)}
var glDeleteProgramsARB_P:@convention(c)(GLsizei, UnsafePointer<GLuint>) -> Void = glDeleteProgramsARB_L
public func glDeleteProgramsNV(_ n:GLsizei, _ programs:UnsafePointer<GLuint>) {glDeleteProgramsNV_P(n, programs)}
public func glDeleteProgramsNV(n:GLsizei, programs:UnsafePointer<GLuint>) {glDeleteProgramsNV_P(n, programs)}
var glDeleteProgramsNV_P:@convention(c)(GLsizei, UnsafePointer<GLuint>) -> Void = glDeleteProgramsNV_L
public func glDeleteQueries(_ n:GLsizei, _ ids:UnsafePointer<GLuint>) {glDeleteQueries_P(n, ids)}
public func glDeleteQueries(n:GLsizei, ids:UnsafePointer<GLuint>) {glDeleteQueries_P(n, ids)}
var glDeleteQueries_P:@convention(c)(GLsizei, UnsafePointer<GLuint>) -> Void = glDeleteQueries_L
public func glDeleteQueriesARB(_ n:GLsizei, _ ids:UnsafePointer<GLuint>) {glDeleteQueriesARB_P(n, ids)}
public func glDeleteQueriesARB(n:GLsizei, ids:UnsafePointer<GLuint>) {glDeleteQueriesARB_P(n, ids)}
var glDeleteQueriesARB_P:@convention(c)(GLsizei, UnsafePointer<GLuint>) -> Void = glDeleteQueriesARB_L
public func glDeleteQueriesEXT(_ n:GLsizei, _ ids:UnsafePointer<GLuint>) {glDeleteQueriesEXT_P(n, ids)}
public func glDeleteQueriesEXT(n:GLsizei, ids:UnsafePointer<GLuint>) {glDeleteQueriesEXT_P(n, ids)}
var glDeleteQueriesEXT_P:@convention(c)(GLsizei, UnsafePointer<GLuint>) -> Void = glDeleteQueriesEXT_L
public func glDeleteRenderbuffers(_ n:GLsizei, _ renderbuffers:UnsafePointer<GLuint>) {glDeleteRenderbuffers_P(n, renderbuffers)}
public func glDeleteRenderbuffers(n:GLsizei, renderbuffers:UnsafePointer<GLuint>) {glDeleteRenderbuffers_P(n, renderbuffers)}
var glDeleteRenderbuffers_P:@convention(c)(GLsizei, UnsafePointer<GLuint>) -> Void = glDeleteRenderbuffers_L
public func glDeleteRenderbuffersEXT(_ n:GLsizei, _ renderbuffers:UnsafePointer<GLuint>) {glDeleteRenderbuffersEXT_P(n, renderbuffers)}
public func glDeleteRenderbuffersEXT(n:GLsizei, renderbuffers:UnsafePointer<GLuint>) {glDeleteRenderbuffersEXT_P(n, renderbuffers)}
var glDeleteRenderbuffersEXT_P:@convention(c)(GLsizei, UnsafePointer<GLuint>) -> Void = glDeleteRenderbuffersEXT_L
public func glDeleteRenderbuffersOES(_ n:GLsizei, _ renderbuffers:UnsafePointer<GLuint>) {glDeleteRenderbuffersOES_P(n, renderbuffers)}
public func glDeleteRenderbuffersOES(n:GLsizei, renderbuffers:UnsafePointer<GLuint>) {glDeleteRenderbuffersOES_P(n, renderbuffers)}
var glDeleteRenderbuffersOES_P:@convention(c)(GLsizei, UnsafePointer<GLuint>) -> Void = glDeleteRenderbuffersOES_L
public func glDeleteSamplers(_ count:GLsizei, _ samplers:UnsafePointer<GLuint>) {glDeleteSamplers_P(count, samplers)}
public func glDeleteSamplers(count:GLsizei, samplers:UnsafePointer<GLuint>) {glDeleteSamplers_P(count, samplers)}
var glDeleteSamplers_P:@convention(c)(GLsizei, UnsafePointer<GLuint>) -> Void = glDeleteSamplers_L
public func glDeleteShader(_ shader:GLuint) {glDeleteShader_P(shader)}
public func glDeleteShader(shader:GLuint) {glDeleteShader_P(shader)}
var glDeleteShader_P:@convention(c)(GLuint) -> Void = glDeleteShader_L
public func glDeleteStatesNV(_ n:GLsizei, _ states:UnsafePointer<GLuint>) {glDeleteStatesNV_P(n, states)}
public func glDeleteStatesNV(n:GLsizei, states:UnsafePointer<GLuint>) {glDeleteStatesNV_P(n, states)}
var glDeleteStatesNV_P:@convention(c)(GLsizei, UnsafePointer<GLuint>) -> Void = glDeleteStatesNV_L
public func glDeleteSync(_ sync:GLsync) {glDeleteSync_P(sync)}
public func glDeleteSync(sync:GLsync) {glDeleteSync_P(sync)}
var glDeleteSync_P:@convention(c)(GLsync) -> Void = glDeleteSync_L
public func glDeleteSyncAPPLE(_ sync:GLsync) {glDeleteSyncAPPLE_P(sync)}
public func glDeleteSyncAPPLE(sync:GLsync) {glDeleteSyncAPPLE_P(sync)}
var glDeleteSyncAPPLE_P:@convention(c)(GLsync) -> Void = glDeleteSyncAPPLE_L
public func glDeleteTextures(_ n:GLsizei, _ textures:UnsafePointer<GLuint>) {glDeleteTextures_P(n, textures)}
public func glDeleteTextures(n:GLsizei, textures:UnsafePointer<GLuint>) {glDeleteTextures_P(n, textures)}
var glDeleteTextures_P:@convention(c)(GLsizei, UnsafePointer<GLuint>) -> Void = glDeleteTextures_L
public func glDeleteTexturesEXT(_ n:GLsizei, _ textures:UnsafePointer<GLuint>) {glDeleteTexturesEXT_P(n, textures)}
public func glDeleteTexturesEXT(n:GLsizei, textures:UnsafePointer<GLuint>) {glDeleteTexturesEXT_P(n, textures)}
var glDeleteTexturesEXT_P:@convention(c)(GLsizei, UnsafePointer<GLuint>) -> Void = glDeleteTexturesEXT_L
public func glDeleteTransformFeedbacks(_ n:GLsizei, _ ids:UnsafePointer<GLuint>) {glDeleteTransformFeedbacks_P(n, ids)}
public func glDeleteTransformFeedbacks(n:GLsizei, ids:UnsafePointer<GLuint>) {glDeleteTransformFeedbacks_P(n, ids)}
var glDeleteTransformFeedbacks_P:@convention(c)(GLsizei, UnsafePointer<GLuint>) -> Void = glDeleteTransformFeedbacks_L
public func glDeleteTransformFeedbacksNV(_ n:GLsizei, _ ids:UnsafePointer<GLuint>) {glDeleteTransformFeedbacksNV_P(n, ids)}
public func glDeleteTransformFeedbacksNV(n:GLsizei, ids:UnsafePointer<GLuint>) {glDeleteTransformFeedbacksNV_P(n, ids)}
var glDeleteTransformFeedbacksNV_P:@convention(c)(GLsizei, UnsafePointer<GLuint>) -> Void = glDeleteTransformFeedbacksNV_L
public func glDeleteVertexArrays(_ n:GLsizei, _ arrays:UnsafePointer<GLuint>) {glDeleteVertexArrays_P(n, arrays)}
public func glDeleteVertexArrays(n:GLsizei, arrays:UnsafePointer<GLuint>) {glDeleteVertexArrays_P(n, arrays)}
var glDeleteVertexArrays_P:@convention(c)(GLsizei, UnsafePointer<GLuint>) -> Void = glDeleteVertexArrays_L
public func glDeleteVertexArraysAPPLE(_ n:GLsizei, _ arrays:UnsafePointer<GLuint>) {glDeleteVertexArraysAPPLE_P(n, arrays)}
public func glDeleteVertexArraysAPPLE(n:GLsizei, arrays:UnsafePointer<GLuint>) {glDeleteVertexArraysAPPLE_P(n, arrays)}
var glDeleteVertexArraysAPPLE_P:@convention(c)(GLsizei, UnsafePointer<GLuint>) -> Void = glDeleteVertexArraysAPPLE_L
public func glDeleteVertexArraysOES(_ n:GLsizei, _ arrays:UnsafePointer<GLuint>) {glDeleteVertexArraysOES_P(n, arrays)}
public func glDeleteVertexArraysOES(n:GLsizei, arrays:UnsafePointer<GLuint>) {glDeleteVertexArraysOES_P(n, arrays)}
var glDeleteVertexArraysOES_P:@convention(c)(GLsizei, UnsafePointer<GLuint>) -> Void = glDeleteVertexArraysOES_L
public func glDeleteVertexShaderEXT(_ id:GLuint) {glDeleteVertexShaderEXT_P(id)}
public func glDeleteVertexShaderEXT(id:GLuint) {glDeleteVertexShaderEXT_P(id)}
var glDeleteVertexShaderEXT_P:@convention(c)(GLuint) -> Void = glDeleteVertexShaderEXT_L
public func glDepthBoundsEXT(_ zmin:GLclampd, _ zmax:GLclampd) {glDepthBoundsEXT_P(zmin, zmax)}
public func glDepthBoundsEXT(zmin:GLclampd, zmax:GLclampd) {glDepthBoundsEXT_P(zmin, zmax)}
var glDepthBoundsEXT_P:@convention(c)(GLclampd, GLclampd) -> Void = glDepthBoundsEXT_L
public func glDepthBoundsdNV(_ zmin:GLdouble, _ zmax:GLdouble) {glDepthBoundsdNV_P(zmin, zmax)}
public func glDepthBoundsdNV(zmin:GLdouble, zmax:GLdouble) {glDepthBoundsdNV_P(zmin, zmax)}
var glDepthBoundsdNV_P:@convention(c)(GLdouble, GLdouble) -> Void = glDepthBoundsdNV_L
public func glDepthFunc(_ fn:GLenum) {glDepthFunc_P(fn)}
public func glDepthFunc(fn:GLenum) {glDepthFunc_P(fn)}
var glDepthFunc_P:@convention(c)(GLenum) -> Void = glDepthFunc_L
public func glDepthMask(_ flag:GLboolean) {glDepthMask_P(flag)}
public func glDepthMask(flag:GLboolean) {glDepthMask_P(flag)}
var glDepthMask_P:@convention(c)(GLboolean) -> Void = glDepthMask_L
public func glDepthRange(_ near:GLdouble, _ far:GLdouble) {glDepthRange_P(near, far)}
public func glDepthRange(near:GLdouble, far:GLdouble) {glDepthRange_P(near, far)}
var glDepthRange_P:@convention(c)(GLdouble, GLdouble) -> Void = glDepthRange_L
public func glDepthRangeArrayfvNV(_ first:GLuint, _ count:GLsizei, _ v:UnsafePointer<GLfloat>) {glDepthRangeArrayfvNV_P(first, count, v)}
public func glDepthRangeArrayfvNV(first:GLuint, count:GLsizei, v:UnsafePointer<GLfloat>) {glDepthRangeArrayfvNV_P(first, count, v)}
var glDepthRangeArrayfvNV_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLfloat>) -> Void = glDepthRangeArrayfvNV_L
public func glDepthRangeArrayv(_ first:GLuint, _ count:GLsizei, _ v:UnsafePointer<GLdouble>) {glDepthRangeArrayv_P(first, count, v)}
public func glDepthRangeArrayv(first:GLuint, count:GLsizei, v:UnsafePointer<GLdouble>) {glDepthRangeArrayv_P(first, count, v)}
var glDepthRangeArrayv_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLdouble>) -> Void = glDepthRangeArrayv_L
public func glDepthRangeIndexed(_ index:GLuint, _ n:GLdouble, _ f:GLdouble) {glDepthRangeIndexed_P(index, n, f)}
public func glDepthRangeIndexed(index:GLuint, n:GLdouble, f:GLdouble) {glDepthRangeIndexed_P(index, n, f)}
var glDepthRangeIndexed_P:@convention(c)(GLuint, GLdouble, GLdouble) -> Void = glDepthRangeIndexed_L
public func glDepthRangeIndexedfNV(_ index:GLuint, _ n:GLfloat, _ f:GLfloat) {glDepthRangeIndexedfNV_P(index, n, f)}
public func glDepthRangeIndexedfNV(index:GLuint, n:GLfloat, f:GLfloat) {glDepthRangeIndexedfNV_P(index, n, f)}
var glDepthRangeIndexedfNV_P:@convention(c)(GLuint, GLfloat, GLfloat) -> Void = glDepthRangeIndexedfNV_L
public func glDepthRangedNV(_ zNear:GLdouble, _ zFar:GLdouble) {glDepthRangedNV_P(zNear, zFar)}
public func glDepthRangedNV(zNear:GLdouble, zFar:GLdouble) {glDepthRangedNV_P(zNear, zFar)}
var glDepthRangedNV_P:@convention(c)(GLdouble, GLdouble) -> Void = glDepthRangedNV_L
public func glDepthRangef(_ n:GLfloat, _ f:GLfloat) {glDepthRangef_P(n, f)}
public func glDepthRangef(n:GLfloat, f:GLfloat) {glDepthRangef_P(n, f)}
var glDepthRangef_P:@convention(c)(GLfloat, GLfloat) -> Void = glDepthRangef_L
public func glDepthRangefOES(_ n:GLclampf, _ f:GLclampf) {glDepthRangefOES_P(n, f)}
public func glDepthRangefOES(n:GLclampf, f:GLclampf) {glDepthRangefOES_P(n, f)}
var glDepthRangefOES_P:@convention(c)(GLclampf, GLclampf) -> Void = glDepthRangefOES_L
public func glDepthRangex(_ n:GLfixed, _ f:GLfixed) {glDepthRangex_P(n, f)}
public func glDepthRangex(n:GLfixed, f:GLfixed) {glDepthRangex_P(n, f)}
var glDepthRangex_P:@convention(c)(GLfixed, GLfixed) -> Void = glDepthRangex_L
public func glDepthRangexOES(_ n:GLfixed, _ f:GLfixed) {glDepthRangexOES_P(n, f)}
public func glDepthRangexOES(n:GLfixed, f:GLfixed) {glDepthRangexOES_P(n, f)}
var glDepthRangexOES_P:@convention(c)(GLfixed, GLfixed) -> Void = glDepthRangexOES_L
public func glDetachObjectARB(_ containerObj:GLhandleARB, _ attachedObj:GLhandleARB) {glDetachObjectARB_P(containerObj, attachedObj)}
public func glDetachObjectARB(containerObj:GLhandleARB, attachedObj:GLhandleARB) {glDetachObjectARB_P(containerObj, attachedObj)}
var glDetachObjectARB_P:@convention(c)(GLhandleARB, GLhandleARB) -> Void = glDetachObjectARB_L
public func glDetachShader(_ program:GLuint, _ shader:GLuint) {glDetachShader_P(program, shader)}
public func glDetachShader(program:GLuint, shader:GLuint) {glDetachShader_P(program, shader)}
var glDetachShader_P:@convention(c)(GLuint, GLuint) -> Void = glDetachShader_L
public func glDetailTexFuncSGIS(_ target:GLenum, _ n:GLsizei, _ points:UnsafePointer<GLfloat>) {glDetailTexFuncSGIS_P(target, n, points)}
public func glDetailTexFuncSGIS(target:GLenum, n:GLsizei, points:UnsafePointer<GLfloat>) {glDetailTexFuncSGIS_P(target, n, points)}
var glDetailTexFuncSGIS_P:@convention(c)(GLenum, GLsizei, UnsafePointer<GLfloat>) -> Void = glDetailTexFuncSGIS_L
public func glDisable(_ cap:GLenum) {glDisable_P(cap)}
public func glDisable(cap:GLenum) {glDisable_P(cap)}
var glDisable_P:@convention(c)(GLenum) -> Void = glDisable_L
public func glDisableClientState(_ array:GLenum) {glDisableClientState_P(array)}
public func glDisableClientState(array:GLenum) {glDisableClientState_P(array)}
var glDisableClientState_P:@convention(c)(GLenum) -> Void = glDisableClientState_L
public func glDisableClientStateIndexedEXT(_ array:GLenum, _ index:GLuint) {glDisableClientStateIndexedEXT_P(array, index)}
public func glDisableClientStateIndexedEXT(array:GLenum, index:GLuint) {glDisableClientStateIndexedEXT_P(array, index)}
var glDisableClientStateIndexedEXT_P:@convention(c)(GLenum, GLuint) -> Void = glDisableClientStateIndexedEXT_L
public func glDisableClientStateiEXT(_ array:GLenum, _ index:GLuint) {glDisableClientStateiEXT_P(array, index)}
public func glDisableClientStateiEXT(array:GLenum, index:GLuint) {glDisableClientStateiEXT_P(array, index)}
var glDisableClientStateiEXT_P:@convention(c)(GLenum, GLuint) -> Void = glDisableClientStateiEXT_L
public func glDisableDriverControlQCOM(_ driverControl:GLuint) {glDisableDriverControlQCOM_P(driverControl)}
public func glDisableDriverControlQCOM(driverControl:GLuint) {glDisableDriverControlQCOM_P(driverControl)}
var glDisableDriverControlQCOM_P:@convention(c)(GLuint) -> Void = glDisableDriverControlQCOM_L
public func glDisableIndexedEXT(_ target:GLenum, _ index:GLuint) {glDisableIndexedEXT_P(target, index)}
public func glDisableIndexedEXT(target:GLenum, index:GLuint) {glDisableIndexedEXT_P(target, index)}
var glDisableIndexedEXT_P:@convention(c)(GLenum, GLuint) -> Void = glDisableIndexedEXT_L
public func glDisableVariantClientStateEXT(_ id:GLuint) {glDisableVariantClientStateEXT_P(id)}
public func glDisableVariantClientStateEXT(id:GLuint) {glDisableVariantClientStateEXT_P(id)}
var glDisableVariantClientStateEXT_P:@convention(c)(GLuint) -> Void = glDisableVariantClientStateEXT_L
public func glDisableVertexArrayAttrib(_ vaobj:GLuint, _ index:GLuint) {glDisableVertexArrayAttrib_P(vaobj, index)}
public func glDisableVertexArrayAttrib(vaobj:GLuint, index:GLuint) {glDisableVertexArrayAttrib_P(vaobj, index)}
var glDisableVertexArrayAttrib_P:@convention(c)(GLuint, GLuint) -> Void = glDisableVertexArrayAttrib_L
public func glDisableVertexArrayAttribEXT(_ vaobj:GLuint, _ index:GLuint) {glDisableVertexArrayAttribEXT_P(vaobj, index)}
public func glDisableVertexArrayAttribEXT(vaobj:GLuint, index:GLuint) {glDisableVertexArrayAttribEXT_P(vaobj, index)}
var glDisableVertexArrayAttribEXT_P:@convention(c)(GLuint, GLuint) -> Void = glDisableVertexArrayAttribEXT_L
public func glDisableVertexArrayEXT(_ vaobj:GLuint, _ array:GLenum) {glDisableVertexArrayEXT_P(vaobj, array)}
public func glDisableVertexArrayEXT(vaobj:GLuint, array:GLenum) {glDisableVertexArrayEXT_P(vaobj, array)}
var glDisableVertexArrayEXT_P:@convention(c)(GLuint, GLenum) -> Void = glDisableVertexArrayEXT_L
public func glDisableVertexAttribAPPLE(_ index:GLuint, _ pname:GLenum) {glDisableVertexAttribAPPLE_P(index, pname)}
public func glDisableVertexAttribAPPLE(index:GLuint, pname:GLenum) {glDisableVertexAttribAPPLE_P(index, pname)}
var glDisableVertexAttribAPPLE_P:@convention(c)(GLuint, GLenum) -> Void = glDisableVertexAttribAPPLE_L
public func glDisableVertexAttribArray(_ index:GLuint) {glDisableVertexAttribArray_P(index)}
public func glDisableVertexAttribArray(index:GLuint) {glDisableVertexAttribArray_P(index)}
var glDisableVertexAttribArray_P:@convention(c)(GLuint) -> Void = glDisableVertexAttribArray_L
public func glDisableVertexAttribArrayARB(_ index:GLuint) {glDisableVertexAttribArrayARB_P(index)}
public func glDisableVertexAttribArrayARB(index:GLuint) {glDisableVertexAttribArrayARB_P(index)}
var glDisableVertexAttribArrayARB_P:@convention(c)(GLuint) -> Void = glDisableVertexAttribArrayARB_L
public func glDisablei(_ target:GLenum, _ index:GLuint) {glDisablei_P(target, index)}
public func glDisablei(target:GLenum, index:GLuint) {glDisablei_P(target, index)}
var glDisablei_P:@convention(c)(GLenum, GLuint) -> Void = glDisablei_L
public func glDisableiEXT(_ target:GLenum, _ index:GLuint) {glDisableiEXT_P(target, index)}
public func glDisableiEXT(target:GLenum, index:GLuint) {glDisableiEXT_P(target, index)}
var glDisableiEXT_P:@convention(c)(GLenum, GLuint) -> Void = glDisableiEXT_L
public func glDisableiNV(_ target:GLenum, _ index:GLuint) {glDisableiNV_P(target, index)}
public func glDisableiNV(target:GLenum, index:GLuint) {glDisableiNV_P(target, index)}
var glDisableiNV_P:@convention(c)(GLenum, GLuint) -> Void = glDisableiNV_L
public func glDisableiOES(_ target:GLenum, _ index:GLuint) {glDisableiOES_P(target, index)}
public func glDisableiOES(target:GLenum, index:GLuint) {glDisableiOES_P(target, index)}
var glDisableiOES_P:@convention(c)(GLenum, GLuint) -> Void = glDisableiOES_L
public func glDiscardFramebufferEXT(_ target:GLenum, _ numAttachments:GLsizei, _ attachments:UnsafePointer<GLenum>) {glDiscardFramebufferEXT_P(target, numAttachments, attachments)}
public func glDiscardFramebufferEXT(target:GLenum, numAttachments:GLsizei, attachments:UnsafePointer<GLenum>) {glDiscardFramebufferEXT_P(target, numAttachments, attachments)}
var glDiscardFramebufferEXT_P:@convention(c)(GLenum, GLsizei, UnsafePointer<GLenum>) -> Void = glDiscardFramebufferEXT_L
public func glDispatchCompute(_ num_groups_x:GLuint, _ num_groups_y:GLuint, _ num_groups_z:GLuint) {glDispatchCompute_P(num_groups_x, num_groups_y, num_groups_z)}
public func glDispatchCompute(num_groups_x:GLuint, num_groups_y:GLuint, num_groups_z:GLuint) {glDispatchCompute_P(num_groups_x, num_groups_y, num_groups_z)}
var glDispatchCompute_P:@convention(c)(GLuint, GLuint, GLuint) -> Void = glDispatchCompute_L
public func glDispatchComputeGroupSizeARB(_ num_groups_x:GLuint, _ num_groups_y:GLuint, _ num_groups_z:GLuint, _ group_size_x:GLuint, _ group_size_y:GLuint, _ group_size_z:GLuint) {glDispatchComputeGroupSizeARB_P(num_groups_x, num_groups_y, num_groups_z, group_size_x, group_size_y, group_size_z)}
public func glDispatchComputeGroupSizeARB(num_groups_x:GLuint, num_groups_y:GLuint, num_groups_z:GLuint, group_size_x:GLuint, group_size_y:GLuint, group_size_z:GLuint) {glDispatchComputeGroupSizeARB_P(num_groups_x, num_groups_y, num_groups_z, group_size_x, group_size_y, group_size_z)}
var glDispatchComputeGroupSizeARB_P:@convention(c)(GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) -> Void = glDispatchComputeGroupSizeARB_L
public func glDispatchComputeIndirect(_ indirect:GLintptr) {glDispatchComputeIndirect_P(indirect)}
public func glDispatchComputeIndirect(indirect:GLintptr) {glDispatchComputeIndirect_P(indirect)}
var glDispatchComputeIndirect_P:@convention(c)(GLintptr) -> Void = glDispatchComputeIndirect_L
public func glDrawArrays(_ mode:GLenum, _ first:GLint, _ count:GLsizei) {glDrawArrays_P(mode, first, count)}
public func glDrawArrays(mode:GLenum, first:GLint, count:GLsizei) {glDrawArrays_P(mode, first, count)}
var glDrawArrays_P:@convention(c)(GLenum, GLint, GLsizei) -> Void = glDrawArrays_L
public func glDrawArraysEXT(_ mode:GLenum, _ first:GLint, _ count:GLsizei) {glDrawArraysEXT_P(mode, first, count)}
public func glDrawArraysEXT(mode:GLenum, first:GLint, count:GLsizei) {glDrawArraysEXT_P(mode, first, count)}
var glDrawArraysEXT_P:@convention(c)(GLenum, GLint, GLsizei) -> Void = glDrawArraysEXT_L
public func glDrawArraysIndirect(_ mode:GLenum, _ indirect:UnsafeRawPointer) {glDrawArraysIndirect_P(mode, indirect)}
public func glDrawArraysIndirect(mode:GLenum, indirect:UnsafeRawPointer) {glDrawArraysIndirect_P(mode, indirect)}
var glDrawArraysIndirect_P:@convention(c)(GLenum, UnsafeRawPointer) -> Void = glDrawArraysIndirect_L
public func glDrawArraysInstanced(_ mode:GLenum, _ first:GLint, _ count:GLsizei, _ instancecount:GLsizei) {glDrawArraysInstanced_P(mode, first, count, instancecount)}
public func glDrawArraysInstanced(mode:GLenum, first:GLint, count:GLsizei, instancecount:GLsizei) {glDrawArraysInstanced_P(mode, first, count, instancecount)}
var glDrawArraysInstanced_P:@convention(c)(GLenum, GLint, GLsizei, GLsizei) -> Void = glDrawArraysInstanced_L
public func glDrawArraysInstancedANGLE(_ mode:GLenum, _ first:GLint, _ count:GLsizei, _ primcount:GLsizei) {glDrawArraysInstancedANGLE_P(mode, first, count, primcount)}
public func glDrawArraysInstancedANGLE(mode:GLenum, first:GLint, count:GLsizei, primcount:GLsizei) {glDrawArraysInstancedANGLE_P(mode, first, count, primcount)}
var glDrawArraysInstancedANGLE_P:@convention(c)(GLenum, GLint, GLsizei, GLsizei) -> Void = glDrawArraysInstancedANGLE_L
public func glDrawArraysInstancedARB(_ mode:GLenum, _ first:GLint, _ count:GLsizei, _ primcount:GLsizei) {glDrawArraysInstancedARB_P(mode, first, count, primcount)}
public func glDrawArraysInstancedARB(mode:GLenum, first:GLint, count:GLsizei, primcount:GLsizei) {glDrawArraysInstancedARB_P(mode, first, count, primcount)}
var glDrawArraysInstancedARB_P:@convention(c)(GLenum, GLint, GLsizei, GLsizei) -> Void = glDrawArraysInstancedARB_L
public func glDrawArraysInstancedBaseInstance(_ mode:GLenum, _ first:GLint, _ count:GLsizei, _ instancecount:GLsizei, _ baseinstance:GLuint) {glDrawArraysInstancedBaseInstance_P(mode, first, count, instancecount, baseinstance)}
public func glDrawArraysInstancedBaseInstance(mode:GLenum, first:GLint, count:GLsizei, instancecount:GLsizei, baseinstance:GLuint) {glDrawArraysInstancedBaseInstance_P(mode, first, count, instancecount, baseinstance)}
var glDrawArraysInstancedBaseInstance_P:@convention(c)(GLenum, GLint, GLsizei, GLsizei, GLuint) -> Void = glDrawArraysInstancedBaseInstance_L
public func glDrawArraysInstancedBaseInstanceEXT(_ mode:GLenum, _ first:GLint, _ count:GLsizei, _ instancecount:GLsizei, _ baseinstance:GLuint) {glDrawArraysInstancedBaseInstanceEXT_P(mode, first, count, instancecount, baseinstance)}
public func glDrawArraysInstancedBaseInstanceEXT(mode:GLenum, first:GLint, count:GLsizei, instancecount:GLsizei, baseinstance:GLuint) {glDrawArraysInstancedBaseInstanceEXT_P(mode, first, count, instancecount, baseinstance)}
var glDrawArraysInstancedBaseInstanceEXT_P:@convention(c)(GLenum, GLint, GLsizei, GLsizei, GLuint) -> Void = glDrawArraysInstancedBaseInstanceEXT_L
public func glDrawArraysInstancedEXT(_ mode:GLenum, _ start:GLint, _ count:GLsizei, _ primcount:GLsizei) {glDrawArraysInstancedEXT_P(mode, start, count, primcount)}
public func glDrawArraysInstancedEXT(mode:GLenum, start:GLint, count:GLsizei, primcount:GLsizei) {glDrawArraysInstancedEXT_P(mode, start, count, primcount)}
var glDrawArraysInstancedEXT_P:@convention(c)(GLenum, GLint, GLsizei, GLsizei) -> Void = glDrawArraysInstancedEXT_L
public func glDrawArraysInstancedNV(_ mode:GLenum, _ first:GLint, _ count:GLsizei, _ primcount:GLsizei) {glDrawArraysInstancedNV_P(mode, first, count, primcount)}
public func glDrawArraysInstancedNV(mode:GLenum, first:GLint, count:GLsizei, primcount:GLsizei) {glDrawArraysInstancedNV_P(mode, first, count, primcount)}
var glDrawArraysInstancedNV_P:@convention(c)(GLenum, GLint, GLsizei, GLsizei) -> Void = glDrawArraysInstancedNV_L
public func glDrawBuffer(_ buf:GLenum) {glDrawBuffer_P(buf)}
public func glDrawBuffer(buf:GLenum) {glDrawBuffer_P(buf)}
var glDrawBuffer_P:@convention(c)(GLenum) -> Void = glDrawBuffer_L
public func glDrawBuffers(_ n:GLsizei, _ bufs:UnsafePointer<GLenum>) {glDrawBuffers_P(n, bufs)}
public func glDrawBuffers(n:GLsizei, bufs:UnsafePointer<GLenum>) {glDrawBuffers_P(n, bufs)}
var glDrawBuffers_P:@convention(c)(GLsizei, UnsafePointer<GLenum>) -> Void = glDrawBuffers_L
public func glDrawBuffersARB(_ n:GLsizei, _ bufs:UnsafePointer<GLenum>) {glDrawBuffersARB_P(n, bufs)}
public func glDrawBuffersARB(n:GLsizei, bufs:UnsafePointer<GLenum>) {glDrawBuffersARB_P(n, bufs)}
var glDrawBuffersARB_P:@convention(c)(GLsizei, UnsafePointer<GLenum>) -> Void = glDrawBuffersARB_L
public func glDrawBuffersATI(_ n:GLsizei, _ bufs:UnsafePointer<GLenum>) {glDrawBuffersATI_P(n, bufs)}
public func glDrawBuffersATI(n:GLsizei, bufs:UnsafePointer<GLenum>) {glDrawBuffersATI_P(n, bufs)}
var glDrawBuffersATI_P:@convention(c)(GLsizei, UnsafePointer<GLenum>) -> Void = glDrawBuffersATI_L
public func glDrawBuffersEXT(_ n:GLsizei, _ bufs:UnsafePointer<GLenum>) {glDrawBuffersEXT_P(n, bufs)}
public func glDrawBuffersEXT(n:GLsizei, bufs:UnsafePointer<GLenum>) {glDrawBuffersEXT_P(n, bufs)}
var glDrawBuffersEXT_P:@convention(c)(GLsizei, UnsafePointer<GLenum>) -> Void = glDrawBuffersEXT_L
public func glDrawBuffersIndexedEXT(_ n:GLint, _ location:UnsafePointer<GLenum>, _ indices:UnsafePointer<GLint>) {glDrawBuffersIndexedEXT_P(n, location, indices)}
public func glDrawBuffersIndexedEXT(n:GLint, location:UnsafePointer<GLenum>, indices:UnsafePointer<GLint>) {glDrawBuffersIndexedEXT_P(n, location, indices)}
var glDrawBuffersIndexedEXT_P:@convention(c)(GLint, UnsafePointer<GLenum>, UnsafePointer<GLint>) -> Void = glDrawBuffersIndexedEXT_L
public func glDrawBuffersNV(_ n:GLsizei, _ bufs:UnsafePointer<GLenum>) {glDrawBuffersNV_P(n, bufs)}
public func glDrawBuffersNV(n:GLsizei, bufs:UnsafePointer<GLenum>) {glDrawBuffersNV_P(n, bufs)}
var glDrawBuffersNV_P:@convention(c)(GLsizei, UnsafePointer<GLenum>) -> Void = glDrawBuffersNV_L
public func glDrawCommandsAddressNV(_ primitiveMode:GLenum, _ indirects:UnsafePointer<GLuint64>, _ sizes:UnsafePointer<GLsizei>, _ count:GLuint) {glDrawCommandsAddressNV_P(primitiveMode, indirects, sizes, count)}
public func glDrawCommandsAddressNV(primitiveMode:GLenum, indirects:UnsafePointer<GLuint64>, sizes:UnsafePointer<GLsizei>, count:GLuint) {glDrawCommandsAddressNV_P(primitiveMode, indirects, sizes, count)}
var glDrawCommandsAddressNV_P:@convention(c)(GLenum, UnsafePointer<GLuint64>, UnsafePointer<GLsizei>, GLuint) -> Void = glDrawCommandsAddressNV_L
public func glDrawCommandsNV(_ primitiveMode:GLenum, _ buffer:GLuint, _ indirects:UnsafePointer<GLintptr>, _ sizes:UnsafePointer<GLsizei>, _ count:GLuint) {glDrawCommandsNV_P(primitiveMode, buffer, indirects, sizes, count)}
public func glDrawCommandsNV(primitiveMode:GLenum, buffer:GLuint, indirects:UnsafePointer<GLintptr>, sizes:UnsafePointer<GLsizei>, count:GLuint) {glDrawCommandsNV_P(primitiveMode, buffer, indirects, sizes, count)}
var glDrawCommandsNV_P:@convention(c)(GLenum, GLuint, UnsafePointer<GLintptr>, UnsafePointer<GLsizei>, GLuint) -> Void = glDrawCommandsNV_L
public func glDrawCommandsStatesAddressNV(_ indirects:UnsafePointer<GLuint64>, _ sizes:UnsafePointer<GLsizei>, _ states:UnsafePointer<GLuint>, _ fbos:UnsafePointer<GLuint>, _ count:GLuint) {glDrawCommandsStatesAddressNV_P(indirects, sizes, states, fbos, count)}
public func glDrawCommandsStatesAddressNV(indirects:UnsafePointer<GLuint64>, sizes:UnsafePointer<GLsizei>, states:UnsafePointer<GLuint>, fbos:UnsafePointer<GLuint>, count:GLuint) {glDrawCommandsStatesAddressNV_P(indirects, sizes, states, fbos, count)}
var glDrawCommandsStatesAddressNV_P:@convention(c)(UnsafePointer<GLuint64>, UnsafePointer<GLsizei>, UnsafePointer<GLuint>, UnsafePointer<GLuint>, GLuint) -> Void = glDrawCommandsStatesAddressNV_L
public func glDrawCommandsStatesNV(_ buffer:GLuint, _ indirects:UnsafePointer<GLintptr>, _ sizes:UnsafePointer<GLsizei>, _ states:UnsafePointer<GLuint>, _ fbos:UnsafePointer<GLuint>, _ count:GLuint) {glDrawCommandsStatesNV_P(buffer, indirects, sizes, states, fbos, count)}
public func glDrawCommandsStatesNV(buffer:GLuint, indirects:UnsafePointer<GLintptr>, sizes:UnsafePointer<GLsizei>, states:UnsafePointer<GLuint>, fbos:UnsafePointer<GLuint>, count:GLuint) {glDrawCommandsStatesNV_P(buffer, indirects, sizes, states, fbos, count)}
var glDrawCommandsStatesNV_P:@convention(c)(GLuint, UnsafePointer<GLintptr>, UnsafePointer<GLsizei>, UnsafePointer<GLuint>, UnsafePointer<GLuint>, GLuint) -> Void = glDrawCommandsStatesNV_L
public func glDrawElementArrayAPPLE(_ mode:GLenum, _ first:GLint, _ count:GLsizei) {glDrawElementArrayAPPLE_P(mode, first, count)}
public func glDrawElementArrayAPPLE(mode:GLenum, first:GLint, count:GLsizei) {glDrawElementArrayAPPLE_P(mode, first, count)}
var glDrawElementArrayAPPLE_P:@convention(c)(GLenum, GLint, GLsizei) -> Void = glDrawElementArrayAPPLE_L
public func glDrawElementArrayATI(_ mode:GLenum, _ count:GLsizei) {glDrawElementArrayATI_P(mode, count)}
public func glDrawElementArrayATI(mode:GLenum, count:GLsizei) {glDrawElementArrayATI_P(mode, count)}
var glDrawElementArrayATI_P:@convention(c)(GLenum, GLsizei) -> Void = glDrawElementArrayATI_L
public func glDrawElements(_ mode:GLenum, _ count:GLsizei, _ type:GLenum, _ indices:UnsafeRawPointer) {glDrawElements_P(mode, count, type, indices)}
public func glDrawElements(mode:GLenum, count:GLsizei, type:GLenum, indices:UnsafeRawPointer) {glDrawElements_P(mode, count, type, indices)}
var glDrawElements_P:@convention(c)(GLenum, GLsizei, GLenum, UnsafeRawPointer) -> Void = glDrawElements_L
public func glDrawElementsBaseVertex(_ mode:GLenum, _ count:GLsizei, _ type:GLenum, _ indices:UnsafeRawPointer, _ basevertex:GLint) {glDrawElementsBaseVertex_P(mode, count, type, indices, basevertex)}
public func glDrawElementsBaseVertex(mode:GLenum, count:GLsizei, type:GLenum, indices:UnsafeRawPointer, basevertex:GLint) {glDrawElementsBaseVertex_P(mode, count, type, indices, basevertex)}
var glDrawElementsBaseVertex_P:@convention(c)(GLenum, GLsizei, GLenum, UnsafeRawPointer, GLint) -> Void = glDrawElementsBaseVertex_L
public func glDrawElementsBaseVertexEXT(_ mode:GLenum, _ count:GLsizei, _ type:GLenum, _ indices:UnsafeRawPointer, _ basevertex:GLint) {glDrawElementsBaseVertexEXT_P(mode, count, type, indices, basevertex)}
public func glDrawElementsBaseVertexEXT(mode:GLenum, count:GLsizei, type:GLenum, indices:UnsafeRawPointer, basevertex:GLint) {glDrawElementsBaseVertexEXT_P(mode, count, type, indices, basevertex)}
var glDrawElementsBaseVertexEXT_P:@convention(c)(GLenum, GLsizei, GLenum, UnsafeRawPointer, GLint) -> Void = glDrawElementsBaseVertexEXT_L
public func glDrawElementsBaseVertexOES(_ mode:GLenum, _ count:GLsizei, _ type:GLenum, _ indices:UnsafeRawPointer, _ basevertex:GLint) {glDrawElementsBaseVertexOES_P(mode, count, type, indices, basevertex)}
public func glDrawElementsBaseVertexOES(mode:GLenum, count:GLsizei, type:GLenum, indices:UnsafeRawPointer, basevertex:GLint) {glDrawElementsBaseVertexOES_P(mode, count, type, indices, basevertex)}
var glDrawElementsBaseVertexOES_P:@convention(c)(GLenum, GLsizei, GLenum, UnsafeRawPointer, GLint) -> Void = glDrawElementsBaseVertexOES_L
public func glDrawElementsIndirect(_ mode:GLenum, _ type:GLenum, _ indirect:UnsafeRawPointer) {glDrawElementsIndirect_P(mode, type, indirect)}
public func glDrawElementsIndirect(mode:GLenum, type:GLenum, indirect:UnsafeRawPointer) {glDrawElementsIndirect_P(mode, type, indirect)}
var glDrawElementsIndirect_P:@convention(c)(GLenum, GLenum, UnsafeRawPointer) -> Void = glDrawElementsIndirect_L
public func glDrawElementsInstanced(_ mode:GLenum, _ count:GLsizei, _ type:GLenum, _ indices:UnsafeRawPointer, _ instancecount:GLsizei) {glDrawElementsInstanced_P(mode, count, type, indices, instancecount)}
public func glDrawElementsInstanced(mode:GLenum, count:GLsizei, type:GLenum, indices:UnsafeRawPointer, instancecount:GLsizei) {glDrawElementsInstanced_P(mode, count, type, indices, instancecount)}
var glDrawElementsInstanced_P:@convention(c)(GLenum, GLsizei, GLenum, UnsafeRawPointer, GLsizei) -> Void = glDrawElementsInstanced_L
public func glDrawElementsInstancedANGLE(_ mode:GLenum, _ count:GLsizei, _ type:GLenum, _ indices:UnsafeRawPointer, _ primcount:GLsizei) {glDrawElementsInstancedANGLE_P(mode, count, type, indices, primcount)}
public func glDrawElementsInstancedANGLE(mode:GLenum, count:GLsizei, type:GLenum, indices:UnsafeRawPointer, primcount:GLsizei) {glDrawElementsInstancedANGLE_P(mode, count, type, indices, primcount)}
var glDrawElementsInstancedANGLE_P:@convention(c)(GLenum, GLsizei, GLenum, UnsafeRawPointer, GLsizei) -> Void = glDrawElementsInstancedANGLE_L
public func glDrawElementsInstancedARB(_ mode:GLenum, _ count:GLsizei, _ type:GLenum, _ indices:UnsafeRawPointer, _ primcount:GLsizei) {glDrawElementsInstancedARB_P(mode, count, type, indices, primcount)}
public func glDrawElementsInstancedARB(mode:GLenum, count:GLsizei, type:GLenum, indices:UnsafeRawPointer, primcount:GLsizei) {glDrawElementsInstancedARB_P(mode, count, type, indices, primcount)}
var glDrawElementsInstancedARB_P:@convention(c)(GLenum, GLsizei, GLenum, UnsafeRawPointer, GLsizei) -> Void = glDrawElementsInstancedARB_L
public func glDrawElementsInstancedBaseInstance(_ mode:GLenum, _ count:GLsizei, _ type:GLenum, _ indices:UnsafeRawPointer, _ instancecount:GLsizei, _ baseinstance:GLuint) {glDrawElementsInstancedBaseInstance_P(mode, count, type, indices, instancecount, baseinstance)}
public func glDrawElementsInstancedBaseInstance(mode:GLenum, count:GLsizei, type:GLenum, indices:UnsafeRawPointer, instancecount:GLsizei, baseinstance:GLuint) {glDrawElementsInstancedBaseInstance_P(mode, count, type, indices, instancecount, baseinstance)}
var glDrawElementsInstancedBaseInstance_P:@convention(c)(GLenum, GLsizei, GLenum, UnsafeRawPointer, GLsizei, GLuint) -> Void = glDrawElementsInstancedBaseInstance_L
public func glDrawElementsInstancedBaseInstanceEXT(_ mode:GLenum, _ count:GLsizei, _ type:GLenum, _ indices:UnsafeRawPointer, _ instancecount:GLsizei, _ baseinstance:GLuint) {glDrawElementsInstancedBaseInstanceEXT_P(mode, count, type, indices, instancecount, baseinstance)}
public func glDrawElementsInstancedBaseInstanceEXT(mode:GLenum, count:GLsizei, type:GLenum, indices:UnsafeRawPointer, instancecount:GLsizei, baseinstance:GLuint) {glDrawElementsInstancedBaseInstanceEXT_P(mode, count, type, indices, instancecount, baseinstance)}
var glDrawElementsInstancedBaseInstanceEXT_P:@convention(c)(GLenum, GLsizei, GLenum, UnsafeRawPointer, GLsizei, GLuint) -> Void = glDrawElementsInstancedBaseInstanceEXT_L
public func glDrawElementsInstancedBaseVertex(_ mode:GLenum, _ count:GLsizei, _ type:GLenum, _ indices:UnsafeRawPointer, _ instancecount:GLsizei, _ basevertex:GLint) {glDrawElementsInstancedBaseVertex_P(mode, count, type, indices, instancecount, basevertex)}
public func glDrawElementsInstancedBaseVertex(mode:GLenum, count:GLsizei, type:GLenum, indices:UnsafeRawPointer, instancecount:GLsizei, basevertex:GLint) {glDrawElementsInstancedBaseVertex_P(mode, count, type, indices, instancecount, basevertex)}
var glDrawElementsInstancedBaseVertex_P:@convention(c)(GLenum, GLsizei, GLenum, UnsafeRawPointer, GLsizei, GLint) -> Void = glDrawElementsInstancedBaseVertex_L
public func glDrawElementsInstancedBaseVertexBaseInstance(_ mode:GLenum, _ count:GLsizei, _ type:GLenum, _ indices:UnsafeRawPointer, _ instancecount:GLsizei, _ basevertex:GLint, _ baseinstance:GLuint) {glDrawElementsInstancedBaseVertexBaseInstance_P(mode, count, type, indices, instancecount, basevertex, baseinstance)}
public func glDrawElementsInstancedBaseVertexBaseInstance(mode:GLenum, count:GLsizei, type:GLenum, indices:UnsafeRawPointer, instancecount:GLsizei, basevertex:GLint, baseinstance:GLuint) {glDrawElementsInstancedBaseVertexBaseInstance_P(mode, count, type, indices, instancecount, basevertex, baseinstance)}
var glDrawElementsInstancedBaseVertexBaseInstance_P:@convention(c)(GLenum, GLsizei, GLenum, UnsafeRawPointer, GLsizei, GLint, GLuint) -> Void = glDrawElementsInstancedBaseVertexBaseInstance_L
public func glDrawElementsInstancedBaseVertexBaseInstanceEXT(_ mode:GLenum, _ count:GLsizei, _ type:GLenum, _ indices:UnsafeRawPointer, _ instancecount:GLsizei, _ basevertex:GLint, _ baseinstance:GLuint) {glDrawElementsInstancedBaseVertexBaseInstanceEXT_P(mode, count, type, indices, instancecount, basevertex, baseinstance)}
public func glDrawElementsInstancedBaseVertexBaseInstanceEXT(mode:GLenum, count:GLsizei, type:GLenum, indices:UnsafeRawPointer, instancecount:GLsizei, basevertex:GLint, baseinstance:GLuint) {glDrawElementsInstancedBaseVertexBaseInstanceEXT_P(mode, count, type, indices, instancecount, basevertex, baseinstance)}
var glDrawElementsInstancedBaseVertexBaseInstanceEXT_P:@convention(c)(GLenum, GLsizei, GLenum, UnsafeRawPointer, GLsizei, GLint, GLuint) -> Void = glDrawElementsInstancedBaseVertexBaseInstanceEXT_L
public func glDrawElementsInstancedBaseVertexEXT(_ mode:GLenum, _ count:GLsizei, _ type:GLenum, _ indices:UnsafeRawPointer, _ instancecount:GLsizei, _ basevertex:GLint) {glDrawElementsInstancedBaseVertexEXT_P(mode, count, type, indices, instancecount, basevertex)}
public func glDrawElementsInstancedBaseVertexEXT(mode:GLenum, count:GLsizei, type:GLenum, indices:UnsafeRawPointer, instancecount:GLsizei, basevertex:GLint) {glDrawElementsInstancedBaseVertexEXT_P(mode, count, type, indices, instancecount, basevertex)}
var glDrawElementsInstancedBaseVertexEXT_P:@convention(c)(GLenum, GLsizei, GLenum, UnsafeRawPointer, GLsizei, GLint) -> Void = glDrawElementsInstancedBaseVertexEXT_L
public func glDrawElementsInstancedBaseVertexOES(_ mode:GLenum, _ count:GLsizei, _ type:GLenum, _ indices:UnsafeRawPointer, _ instancecount:GLsizei, _ basevertex:GLint) {glDrawElementsInstancedBaseVertexOES_P(mode, count, type, indices, instancecount, basevertex)}
public func glDrawElementsInstancedBaseVertexOES(mode:GLenum, count:GLsizei, type:GLenum, indices:UnsafeRawPointer, instancecount:GLsizei, basevertex:GLint) {glDrawElementsInstancedBaseVertexOES_P(mode, count, type, indices, instancecount, basevertex)}
var glDrawElementsInstancedBaseVertexOES_P:@convention(c)(GLenum, GLsizei, GLenum, UnsafeRawPointer, GLsizei, GLint) -> Void = glDrawElementsInstancedBaseVertexOES_L
public func glDrawElementsInstancedEXT(_ mode:GLenum, _ count:GLsizei, _ type:GLenum, _ indices:UnsafeRawPointer, _ primcount:GLsizei) {glDrawElementsInstancedEXT_P(mode, count, type, indices, primcount)}
public func glDrawElementsInstancedEXT(mode:GLenum, count:GLsizei, type:GLenum, indices:UnsafeRawPointer, primcount:GLsizei) {glDrawElementsInstancedEXT_P(mode, count, type, indices, primcount)}
var glDrawElementsInstancedEXT_P:@convention(c)(GLenum, GLsizei, GLenum, UnsafeRawPointer, GLsizei) -> Void = glDrawElementsInstancedEXT_L
public func glDrawElementsInstancedNV(_ mode:GLenum, _ count:GLsizei, _ type:GLenum, _ indices:UnsafeRawPointer, _ primcount:GLsizei) {glDrawElementsInstancedNV_P(mode, count, type, indices, primcount)}
public func glDrawElementsInstancedNV(mode:GLenum, count:GLsizei, type:GLenum, indices:UnsafeRawPointer, primcount:GLsizei) {glDrawElementsInstancedNV_P(mode, count, type, indices, primcount)}
var glDrawElementsInstancedNV_P:@convention(c)(GLenum, GLsizei, GLenum, UnsafeRawPointer, GLsizei) -> Void = glDrawElementsInstancedNV_L
public func glDrawMeshArraysSUN(_ mode:GLenum, _ first:GLint, _ count:GLsizei, _ width:GLsizei) {glDrawMeshArraysSUN_P(mode, first, count, width)}
public func glDrawMeshArraysSUN(mode:GLenum, first:GLint, count:GLsizei, width:GLsizei) {glDrawMeshArraysSUN_P(mode, first, count, width)}
var glDrawMeshArraysSUN_P:@convention(c)(GLenum, GLint, GLsizei, GLsizei) -> Void = glDrawMeshArraysSUN_L
public func glDrawPixels(_ width:GLsizei, _ height:GLsizei, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeRawPointer) {glDrawPixels_P(width, height, format, type, pixels)}
public func glDrawPixels(width:GLsizei, height:GLsizei, format:GLenum, type:GLenum, pixels:UnsafeRawPointer) {glDrawPixels_P(width, height, format, type, pixels)}
var glDrawPixels_P:@convention(c)(GLsizei, GLsizei, GLenum, GLenum, UnsafeRawPointer) -> Void = glDrawPixels_L
public func glDrawRangeElementArrayAPPLE(_ mode:GLenum, _ start:GLuint, _ end:GLuint, _ first:GLint, _ count:GLsizei) {glDrawRangeElementArrayAPPLE_P(mode, start, end, first, count)}
public func glDrawRangeElementArrayAPPLE(mode:GLenum, start:GLuint, end:GLuint, first:GLint, count:GLsizei) {glDrawRangeElementArrayAPPLE_P(mode, start, end, first, count)}
var glDrawRangeElementArrayAPPLE_P:@convention(c)(GLenum, GLuint, GLuint, GLint, GLsizei) -> Void = glDrawRangeElementArrayAPPLE_L
public func glDrawRangeElementArrayATI(_ mode:GLenum, _ start:GLuint, _ end:GLuint, _ count:GLsizei) {glDrawRangeElementArrayATI_P(mode, start, end, count)}
public func glDrawRangeElementArrayATI(mode:GLenum, start:GLuint, end:GLuint, count:GLsizei) {glDrawRangeElementArrayATI_P(mode, start, end, count)}
var glDrawRangeElementArrayATI_P:@convention(c)(GLenum, GLuint, GLuint, GLsizei) -> Void = glDrawRangeElementArrayATI_L
public func glDrawRangeElements(_ mode:GLenum, _ start:GLuint, _ end:GLuint, _ count:GLsizei, _ type:GLenum, _ indices:UnsafeRawPointer) {glDrawRangeElements_P(mode, start, end, count, type, indices)}
public func glDrawRangeElements(mode:GLenum, start:GLuint, end:GLuint, count:GLsizei, type:GLenum, indices:UnsafeRawPointer) {glDrawRangeElements_P(mode, start, end, count, type, indices)}
var glDrawRangeElements_P:@convention(c)(GLenum, GLuint, GLuint, GLsizei, GLenum, UnsafeRawPointer) -> Void = glDrawRangeElements_L
public func glDrawRangeElementsBaseVertex(_ mode:GLenum, _ start:GLuint, _ end:GLuint, _ count:GLsizei, _ type:GLenum, _ indices:UnsafeRawPointer, _ basevertex:GLint) {glDrawRangeElementsBaseVertex_P(mode, start, end, count, type, indices, basevertex)}
public func glDrawRangeElementsBaseVertex(mode:GLenum, start:GLuint, end:GLuint, count:GLsizei, type:GLenum, indices:UnsafeRawPointer, basevertex:GLint) {glDrawRangeElementsBaseVertex_P(mode, start, end, count, type, indices, basevertex)}
var glDrawRangeElementsBaseVertex_P:@convention(c)(GLenum, GLuint, GLuint, GLsizei, GLenum, UnsafeRawPointer, GLint) -> Void = glDrawRangeElementsBaseVertex_L
public func glDrawRangeElementsBaseVertexEXT(_ mode:GLenum, _ start:GLuint, _ end:GLuint, _ count:GLsizei, _ type:GLenum, _ indices:UnsafeRawPointer, _ basevertex:GLint) {glDrawRangeElementsBaseVertexEXT_P(mode, start, end, count, type, indices, basevertex)}
public func glDrawRangeElementsBaseVertexEXT(mode:GLenum, start:GLuint, end:GLuint, count:GLsizei, type:GLenum, indices:UnsafeRawPointer, basevertex:GLint) {glDrawRangeElementsBaseVertexEXT_P(mode, start, end, count, type, indices, basevertex)}
var glDrawRangeElementsBaseVertexEXT_P:@convention(c)(GLenum, GLuint, GLuint, GLsizei, GLenum, UnsafeRawPointer, GLint) -> Void = glDrawRangeElementsBaseVertexEXT_L
public func glDrawRangeElementsBaseVertexOES(_ mode:GLenum, _ start:GLuint, _ end:GLuint, _ count:GLsizei, _ type:GLenum, _ indices:UnsafeRawPointer, _ basevertex:GLint) {glDrawRangeElementsBaseVertexOES_P(mode, start, end, count, type, indices, basevertex)}
public func glDrawRangeElementsBaseVertexOES(mode:GLenum, start:GLuint, end:GLuint, count:GLsizei, type:GLenum, indices:UnsafeRawPointer, basevertex:GLint) {glDrawRangeElementsBaseVertexOES_P(mode, start, end, count, type, indices, basevertex)}
var glDrawRangeElementsBaseVertexOES_P:@convention(c)(GLenum, GLuint, GLuint, GLsizei, GLenum, UnsafeRawPointer, GLint) -> Void = glDrawRangeElementsBaseVertexOES_L
public func glDrawRangeElementsEXT(_ mode:GLenum, _ start:GLuint, _ end:GLuint, _ count:GLsizei, _ type:GLenum, _ indices:UnsafeRawPointer) {glDrawRangeElementsEXT_P(mode, start, end, count, type, indices)}
public func glDrawRangeElementsEXT(mode:GLenum, start:GLuint, end:GLuint, count:GLsizei, type:GLenum, indices:UnsafeRawPointer) {glDrawRangeElementsEXT_P(mode, start, end, count, type, indices)}
var glDrawRangeElementsEXT_P:@convention(c)(GLenum, GLuint, GLuint, GLsizei, GLenum, UnsafeRawPointer) -> Void = glDrawRangeElementsEXT_L
public func glDrawTexfOES(_ x:GLfloat, _ y:GLfloat, _ z:GLfloat, _ width:GLfloat, _ height:GLfloat) {glDrawTexfOES_P(x, y, z, width, height)}
public func glDrawTexfOES(x:GLfloat, y:GLfloat, z:GLfloat, width:GLfloat, height:GLfloat) {glDrawTexfOES_P(x, y, z, width, height)}
var glDrawTexfOES_P:@convention(c)(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glDrawTexfOES_L
public func glDrawTexfvOES(_ coords:UnsafePointer<GLfloat>) {glDrawTexfvOES_P(coords)}
public func glDrawTexfvOES(coords:UnsafePointer<GLfloat>) {glDrawTexfvOES_P(coords)}
var glDrawTexfvOES_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glDrawTexfvOES_L
public func glDrawTexiOES(_ x:GLint, _ y:GLint, _ z:GLint, _ width:GLint, _ height:GLint) {glDrawTexiOES_P(x, y, z, width, height)}
public func glDrawTexiOES(x:GLint, y:GLint, z:GLint, width:GLint, height:GLint) {glDrawTexiOES_P(x, y, z, width, height)}
var glDrawTexiOES_P:@convention(c)(GLint, GLint, GLint, GLint, GLint) -> Void = glDrawTexiOES_L
public func glDrawTexivOES(_ coords:UnsafePointer<GLint>) {glDrawTexivOES_P(coords)}
public func glDrawTexivOES(coords:UnsafePointer<GLint>) {glDrawTexivOES_P(coords)}
var glDrawTexivOES_P:@convention(c)(UnsafePointer<GLint>) -> Void = glDrawTexivOES_L
public func glDrawTexsOES(_ x:GLshort, _ y:GLshort, _ z:GLshort, _ width:GLshort, _ height:GLshort) {glDrawTexsOES_P(x, y, z, width, height)}
public func glDrawTexsOES(x:GLshort, y:GLshort, z:GLshort, width:GLshort, height:GLshort) {glDrawTexsOES_P(x, y, z, width, height)}
var glDrawTexsOES_P:@convention(c)(GLshort, GLshort, GLshort, GLshort, GLshort) -> Void = glDrawTexsOES_L
public func glDrawTexsvOES(_ coords:UnsafePointer<GLshort>) {glDrawTexsvOES_P(coords)}
public func glDrawTexsvOES(coords:UnsafePointer<GLshort>) {glDrawTexsvOES_P(coords)}
var glDrawTexsvOES_P:@convention(c)(UnsafePointer<GLshort>) -> Void = glDrawTexsvOES_L
public func glDrawTextureNV(_ texture:GLuint, _ sampler:GLuint, _ x0:GLfloat, _ y0:GLfloat, _ x1:GLfloat, _ y1:GLfloat, _ z:GLfloat, _ s0:GLfloat, _ t0:GLfloat, _ s1:GLfloat, _ t1:GLfloat) {glDrawTextureNV_P(texture, sampler, x0, y0, x1, y1, z, s0, t0, s1, t1)}
public func glDrawTextureNV(texture:GLuint, sampler:GLuint, x0:GLfloat, y0:GLfloat, x1:GLfloat, y1:GLfloat, z:GLfloat, s0:GLfloat, t0:GLfloat, s1:GLfloat, t1:GLfloat) {glDrawTextureNV_P(texture, sampler, x0, y0, x1, y1, z, s0, t0, s1, t1)}
var glDrawTextureNV_P:@convention(c)(GLuint, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glDrawTextureNV_L
public func glDrawTexxOES(_ x:GLfixed, _ y:GLfixed, _ z:GLfixed, _ width:GLfixed, _ height:GLfixed) {glDrawTexxOES_P(x, y, z, width, height)}
public func glDrawTexxOES(x:GLfixed, y:GLfixed, z:GLfixed, width:GLfixed, height:GLfixed) {glDrawTexxOES_P(x, y, z, width, height)}
var glDrawTexxOES_P:@convention(c)(GLfixed, GLfixed, GLfixed, GLfixed, GLfixed) -> Void = glDrawTexxOES_L
public func glDrawTexxvOES(_ coords:UnsafePointer<GLfixed>) {glDrawTexxvOES_P(coords)}
public func glDrawTexxvOES(coords:UnsafePointer<GLfixed>) {glDrawTexxvOES_P(coords)}
var glDrawTexxvOES_P:@convention(c)(UnsafePointer<GLfixed>) -> Void = glDrawTexxvOES_L
public func glDrawTransformFeedback(_ mode:GLenum, _ id:GLuint) {glDrawTransformFeedback_P(mode, id)}
public func glDrawTransformFeedback(mode:GLenum, id:GLuint) {glDrawTransformFeedback_P(mode, id)}
var glDrawTransformFeedback_P:@convention(c)(GLenum, GLuint) -> Void = glDrawTransformFeedback_L
public func glDrawTransformFeedbackInstanced(_ mode:GLenum, _ id:GLuint, _ instancecount:GLsizei) {glDrawTransformFeedbackInstanced_P(mode, id, instancecount)}
public func glDrawTransformFeedbackInstanced(mode:GLenum, id:GLuint, instancecount:GLsizei) {glDrawTransformFeedbackInstanced_P(mode, id, instancecount)}
var glDrawTransformFeedbackInstanced_P:@convention(c)(GLenum, GLuint, GLsizei) -> Void = glDrawTransformFeedbackInstanced_L
public func glDrawTransformFeedbackNV(_ mode:GLenum, _ id:GLuint) {glDrawTransformFeedbackNV_P(mode, id)}
public func glDrawTransformFeedbackNV(mode:GLenum, id:GLuint) {glDrawTransformFeedbackNV_P(mode, id)}
var glDrawTransformFeedbackNV_P:@convention(c)(GLenum, GLuint) -> Void = glDrawTransformFeedbackNV_L
public func glDrawTransformFeedbackStream(_ mode:GLenum, _ id:GLuint, _ stream:GLuint) {glDrawTransformFeedbackStream_P(mode, id, stream)}
public func glDrawTransformFeedbackStream(mode:GLenum, id:GLuint, stream:GLuint) {glDrawTransformFeedbackStream_P(mode, id, stream)}
var glDrawTransformFeedbackStream_P:@convention(c)(GLenum, GLuint, GLuint) -> Void = glDrawTransformFeedbackStream_L
public func glDrawTransformFeedbackStreamInstanced(_ mode:GLenum, _ id:GLuint, _ stream:GLuint, _ instancecount:GLsizei) {glDrawTransformFeedbackStreamInstanced_P(mode, id, stream, instancecount)}
public func glDrawTransformFeedbackStreamInstanced(mode:GLenum, id:GLuint, stream:GLuint, instancecount:GLsizei) {glDrawTransformFeedbackStreamInstanced_P(mode, id, stream, instancecount)}
var glDrawTransformFeedbackStreamInstanced_P:@convention(c)(GLenum, GLuint, GLuint, GLsizei) -> Void = glDrawTransformFeedbackStreamInstanced_L
public func glEGLImageTargetRenderbufferStorageOES(_ target:GLenum, _ image:GLeglImageOES) {glEGLImageTargetRenderbufferStorageOES_P(target, image)}
public func glEGLImageTargetRenderbufferStorageOES(target:GLenum, image:GLeglImageOES) {glEGLImageTargetRenderbufferStorageOES_P(target, image)}
var glEGLImageTargetRenderbufferStorageOES_P:@convention(c)(GLenum, GLeglImageOES) -> Void = glEGLImageTargetRenderbufferStorageOES_L
public func glEGLImageTargetTexture2DOES(_ target:GLenum, _ image:GLeglImageOES) {glEGLImageTargetTexture2DOES_P(target, image)}
public func glEGLImageTargetTexture2DOES(target:GLenum, image:GLeglImageOES) {glEGLImageTargetTexture2DOES_P(target, image)}
var glEGLImageTargetTexture2DOES_P:@convention(c)(GLenum, GLeglImageOES) -> Void = glEGLImageTargetTexture2DOES_L
public func glEdgeFlag(_ flag:GLboolean) {glEdgeFlag_P(flag)}
public func glEdgeFlag(flag:GLboolean) {glEdgeFlag_P(flag)}
var glEdgeFlag_P:@convention(c)(GLboolean) -> Void = glEdgeFlag_L
public func glEdgeFlagFormatNV(_ stride:GLsizei) {glEdgeFlagFormatNV_P(stride)}
public func glEdgeFlagFormatNV(stride:GLsizei) {glEdgeFlagFormatNV_P(stride)}
var glEdgeFlagFormatNV_P:@convention(c)(GLsizei) -> Void = glEdgeFlagFormatNV_L
public func glEdgeFlagPointer(_ stride:GLsizei, _ pointer:UnsafeRawPointer) {glEdgeFlagPointer_P(stride, pointer)}
public func glEdgeFlagPointer(stride:GLsizei, pointer:UnsafeRawPointer) {glEdgeFlagPointer_P(stride, pointer)}
var glEdgeFlagPointer_P:@convention(c)(GLsizei, UnsafeRawPointer) -> Void = glEdgeFlagPointer_L
public func glEdgeFlagPointerEXT(_ stride:GLsizei, _ count:GLsizei, _ pointer:UnsafePointer<GLboolean>) {glEdgeFlagPointerEXT_P(stride, count, pointer)}
public func glEdgeFlagPointerEXT(stride:GLsizei, count:GLsizei, pointer:UnsafePointer<GLboolean>) {glEdgeFlagPointerEXT_P(stride, count, pointer)}
var glEdgeFlagPointerEXT_P:@convention(c)(GLsizei, GLsizei, UnsafePointer<GLboolean>) -> Void = glEdgeFlagPointerEXT_L
public func glEdgeFlagPointerListIBM(_ stride:GLint, _ pointer:UnsafeMutablePointer<UnsafePointer<GLboolean>>, _ ptrstride:GLint) {glEdgeFlagPointerListIBM_P(stride, pointer, ptrstride)}
public func glEdgeFlagPointerListIBM(stride:GLint, pointer:UnsafeMutablePointer<UnsafePointer<GLboolean>>, ptrstride:GLint) {glEdgeFlagPointerListIBM_P(stride, pointer, ptrstride)}
var glEdgeFlagPointerListIBM_P:@convention(c)(GLint, UnsafeMutablePointer<UnsafePointer<GLboolean>>, GLint) -> Void = glEdgeFlagPointerListIBM_L
public func glEdgeFlagv(_ flag:UnsafePointer<GLboolean>) {glEdgeFlagv_P(flag)}
public func glEdgeFlagv(flag:UnsafePointer<GLboolean>) {glEdgeFlagv_P(flag)}
var glEdgeFlagv_P:@convention(c)(UnsafePointer<GLboolean>) -> Void = glEdgeFlagv_L
public func glElementPointerAPPLE(_ type:GLenum, _ pointer:UnsafeRawPointer) {glElementPointerAPPLE_P(type, pointer)}
public func glElementPointerAPPLE(type:GLenum, pointer:UnsafeRawPointer) {glElementPointerAPPLE_P(type, pointer)}
var glElementPointerAPPLE_P:@convention(c)(GLenum, UnsafeRawPointer) -> Void = glElementPointerAPPLE_L
public func glElementPointerATI(_ type:GLenum, _ pointer:UnsafeRawPointer) {glElementPointerATI_P(type, pointer)}
public func glElementPointerATI(type:GLenum, pointer:UnsafeRawPointer) {glElementPointerATI_P(type, pointer)}
var glElementPointerATI_P:@convention(c)(GLenum, UnsafeRawPointer) -> Void = glElementPointerATI_L
public func glEnable(_ cap:GLenum) {glEnable_P(cap)}
public func glEnable(cap:GLenum) {glEnable_P(cap)}
var glEnable_P:@convention(c)(GLenum) -> Void = glEnable_L
public func glEnableClientState(_ array:GLenum) {glEnableClientState_P(array)}
public func glEnableClientState(array:GLenum) {glEnableClientState_P(array)}
var glEnableClientState_P:@convention(c)(GLenum) -> Void = glEnableClientState_L
public func glEnableClientStateIndexedEXT(_ array:GLenum, _ index:GLuint) {glEnableClientStateIndexedEXT_P(array, index)}
public func glEnableClientStateIndexedEXT(array:GLenum, index:GLuint) {glEnableClientStateIndexedEXT_P(array, index)}
var glEnableClientStateIndexedEXT_P:@convention(c)(GLenum, GLuint) -> Void = glEnableClientStateIndexedEXT_L
public func glEnableClientStateiEXT(_ array:GLenum, _ index:GLuint) {glEnableClientStateiEXT_P(array, index)}
public func glEnableClientStateiEXT(array:GLenum, index:GLuint) {glEnableClientStateiEXT_P(array, index)}
var glEnableClientStateiEXT_P:@convention(c)(GLenum, GLuint) -> Void = glEnableClientStateiEXT_L
public func glEnableDriverControlQCOM(_ driverControl:GLuint) {glEnableDriverControlQCOM_P(driverControl)}
public func glEnableDriverControlQCOM(driverControl:GLuint) {glEnableDriverControlQCOM_P(driverControl)}
var glEnableDriverControlQCOM_P:@convention(c)(GLuint) -> Void = glEnableDriverControlQCOM_L
public func glEnableIndexedEXT(_ target:GLenum, _ index:GLuint) {glEnableIndexedEXT_P(target, index)}
public func glEnableIndexedEXT(target:GLenum, index:GLuint) {glEnableIndexedEXT_P(target, index)}
var glEnableIndexedEXT_P:@convention(c)(GLenum, GLuint) -> Void = glEnableIndexedEXT_L
public func glEnableVariantClientStateEXT(_ id:GLuint) {glEnableVariantClientStateEXT_P(id)}
public func glEnableVariantClientStateEXT(id:GLuint) {glEnableVariantClientStateEXT_P(id)}
var glEnableVariantClientStateEXT_P:@convention(c)(GLuint) -> Void = glEnableVariantClientStateEXT_L
public func glEnableVertexArrayAttrib(_ vaobj:GLuint, _ index:GLuint) {glEnableVertexArrayAttrib_P(vaobj, index)}
public func glEnableVertexArrayAttrib(vaobj:GLuint, index:GLuint) {glEnableVertexArrayAttrib_P(vaobj, index)}
var glEnableVertexArrayAttrib_P:@convention(c)(GLuint, GLuint) -> Void = glEnableVertexArrayAttrib_L
public func glEnableVertexArrayAttribEXT(_ vaobj:GLuint, _ index:GLuint) {glEnableVertexArrayAttribEXT_P(vaobj, index)}
public func glEnableVertexArrayAttribEXT(vaobj:GLuint, index:GLuint) {glEnableVertexArrayAttribEXT_P(vaobj, index)}
var glEnableVertexArrayAttribEXT_P:@convention(c)(GLuint, GLuint) -> Void = glEnableVertexArrayAttribEXT_L
public func glEnableVertexArrayEXT(_ vaobj:GLuint, _ array:GLenum) {glEnableVertexArrayEXT_P(vaobj, array)}
public func glEnableVertexArrayEXT(vaobj:GLuint, array:GLenum) {glEnableVertexArrayEXT_P(vaobj, array)}
var glEnableVertexArrayEXT_P:@convention(c)(GLuint, GLenum) -> Void = glEnableVertexArrayEXT_L
public func glEnableVertexAttribAPPLE(_ index:GLuint, _ pname:GLenum) {glEnableVertexAttribAPPLE_P(index, pname)}
public func glEnableVertexAttribAPPLE(index:GLuint, pname:GLenum) {glEnableVertexAttribAPPLE_P(index, pname)}
var glEnableVertexAttribAPPLE_P:@convention(c)(GLuint, GLenum) -> Void = glEnableVertexAttribAPPLE_L
public func glEnableVertexAttribArray(_ index:GLuint) {glEnableVertexAttribArray_P(index)}
public func glEnableVertexAttribArray(index:GLuint) {glEnableVertexAttribArray_P(index)}
var glEnableVertexAttribArray_P:@convention(c)(GLuint) -> Void = glEnableVertexAttribArray_L
public func glEnableVertexAttribArrayARB(_ index:GLuint) {glEnableVertexAttribArrayARB_P(index)}
public func glEnableVertexAttribArrayARB(index:GLuint) {glEnableVertexAttribArrayARB_P(index)}
var glEnableVertexAttribArrayARB_P:@convention(c)(GLuint) -> Void = glEnableVertexAttribArrayARB_L
public func glEnablei(_ target:GLenum, _ index:GLuint) {glEnablei_P(target, index)}
public func glEnablei(target:GLenum, index:GLuint) {glEnablei_P(target, index)}
var glEnablei_P:@convention(c)(GLenum, GLuint) -> Void = glEnablei_L
public func glEnableiEXT(_ target:GLenum, _ index:GLuint) {glEnableiEXT_P(target, index)}
public func glEnableiEXT(target:GLenum, index:GLuint) {glEnableiEXT_P(target, index)}
var glEnableiEXT_P:@convention(c)(GLenum, GLuint) -> Void = glEnableiEXT_L
public func glEnableiNV(_ target:GLenum, _ index:GLuint) {glEnableiNV_P(target, index)}
public func glEnableiNV(target:GLenum, index:GLuint) {glEnableiNV_P(target, index)}
var glEnableiNV_P:@convention(c)(GLenum, GLuint) -> Void = glEnableiNV_L
public func glEnableiOES(_ target:GLenum, _ index:GLuint) {glEnableiOES_P(target, index)}
public func glEnableiOES(target:GLenum, index:GLuint) {glEnableiOES_P(target, index)}
var glEnableiOES_P:@convention(c)(GLenum, GLuint) -> Void = glEnableiOES_L
public func glEnd() {glEnd_P()}
var glEnd_P:@convention(c)() -> Void = glEnd_L
public func glEndConditionalRender() {glEndConditionalRender_P()}
var glEndConditionalRender_P:@convention(c)() -> Void = glEndConditionalRender_L
public func glEndConditionalRenderNV() {glEndConditionalRenderNV_P()}
var glEndConditionalRenderNV_P:@convention(c)() -> Void = glEndConditionalRenderNV_L
public func glEndConditionalRenderNVX() {glEndConditionalRenderNVX_P()}
var glEndConditionalRenderNVX_P:@convention(c)() -> Void = glEndConditionalRenderNVX_L
public func glEndFragmentShaderATI() {glEndFragmentShaderATI_P()}
var glEndFragmentShaderATI_P:@convention(c)() -> Void = glEndFragmentShaderATI_L
public func glEndList() {glEndList_P()}
var glEndList_P:@convention(c)() -> Void = glEndList_L
public func glEndOcclusionQueryNV() {glEndOcclusionQueryNV_P()}
var glEndOcclusionQueryNV_P:@convention(c)() -> Void = glEndOcclusionQueryNV_L
public func glEndPerfMonitorAMD(_ monitor:GLuint) {glEndPerfMonitorAMD_P(monitor)}
public func glEndPerfMonitorAMD(monitor:GLuint) {glEndPerfMonitorAMD_P(monitor)}
var glEndPerfMonitorAMD_P:@convention(c)(GLuint) -> Void = glEndPerfMonitorAMD_L
public func glEndPerfQueryINTEL(_ queryHandle:GLuint) {glEndPerfQueryINTEL_P(queryHandle)}
public func glEndPerfQueryINTEL(queryHandle:GLuint) {glEndPerfQueryINTEL_P(queryHandle)}
var glEndPerfQueryINTEL_P:@convention(c)(GLuint) -> Void = glEndPerfQueryINTEL_L
public func glEndQuery(_ target:GLenum) {glEndQuery_P(target)}
public func glEndQuery(target:GLenum) {glEndQuery_P(target)}
var glEndQuery_P:@convention(c)(GLenum) -> Void = glEndQuery_L
public func glEndQueryARB(_ target:GLenum) {glEndQueryARB_P(target)}
public func glEndQueryARB(target:GLenum) {glEndQueryARB_P(target)}
var glEndQueryARB_P:@convention(c)(GLenum) -> Void = glEndQueryARB_L
public func glEndQueryEXT(_ target:GLenum) {glEndQueryEXT_P(target)}
public func glEndQueryEXT(target:GLenum) {glEndQueryEXT_P(target)}
var glEndQueryEXT_P:@convention(c)(GLenum) -> Void = glEndQueryEXT_L
public func glEndQueryIndexed(_ target:GLenum, _ index:GLuint) {glEndQueryIndexed_P(target, index)}
public func glEndQueryIndexed(target:GLenum, index:GLuint) {glEndQueryIndexed_P(target, index)}
var glEndQueryIndexed_P:@convention(c)(GLenum, GLuint) -> Void = glEndQueryIndexed_L
public func glEndTilingQCOM(_ preserveMask:GLbitfield) {glEndTilingQCOM_P(preserveMask)}
public func glEndTilingQCOM(preserveMask:GLbitfield) {glEndTilingQCOM_P(preserveMask)}
var glEndTilingQCOM_P:@convention(c)(GLbitfield) -> Void = glEndTilingQCOM_L
public func glEndTransformFeedback() {glEndTransformFeedback_P()}
var glEndTransformFeedback_P:@convention(c)() -> Void = glEndTransformFeedback_L
public func glEndTransformFeedbackEXT() {glEndTransformFeedbackEXT_P()}
var glEndTransformFeedbackEXT_P:@convention(c)() -> Void = glEndTransformFeedbackEXT_L
public func glEndTransformFeedbackNV() {glEndTransformFeedbackNV_P()}
var glEndTransformFeedbackNV_P:@convention(c)() -> Void = glEndTransformFeedbackNV_L
public func glEndVertexShaderEXT() {glEndVertexShaderEXT_P()}
var glEndVertexShaderEXT_P:@convention(c)() -> Void = glEndVertexShaderEXT_L
public func glEndVideoCaptureNV(_ video_capture_slot:GLuint) {glEndVideoCaptureNV_P(video_capture_slot)}
public func glEndVideoCaptureNV(video_capture_slot:GLuint) {glEndVideoCaptureNV_P(video_capture_slot)}
var glEndVideoCaptureNV_P:@convention(c)(GLuint) -> Void = glEndVideoCaptureNV_L
public func glEvalCoord1d(_ u:GLdouble) {glEvalCoord1d_P(u)}
public func glEvalCoord1d(u:GLdouble) {glEvalCoord1d_P(u)}
var glEvalCoord1d_P:@convention(c)(GLdouble) -> Void = glEvalCoord1d_L
public func glEvalCoord1dv(_ u:UnsafePointer<GLdouble>) {glEvalCoord1dv_P(u)}
public func glEvalCoord1dv(u:UnsafePointer<GLdouble>) {glEvalCoord1dv_P(u)}
var glEvalCoord1dv_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glEvalCoord1dv_L
public func glEvalCoord1f(_ u:GLfloat) {glEvalCoord1f_P(u)}
public func glEvalCoord1f(u:GLfloat) {glEvalCoord1f_P(u)}
var glEvalCoord1f_P:@convention(c)(GLfloat) -> Void = glEvalCoord1f_L
public func glEvalCoord1fv(_ u:UnsafePointer<GLfloat>) {glEvalCoord1fv_P(u)}
public func glEvalCoord1fv(u:UnsafePointer<GLfloat>) {glEvalCoord1fv_P(u)}
var glEvalCoord1fv_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glEvalCoord1fv_L
public func glEvalCoord1xOES(_ u:GLfixed) {glEvalCoord1xOES_P(u)}
public func glEvalCoord1xOES(u:GLfixed) {glEvalCoord1xOES_P(u)}
var glEvalCoord1xOES_P:@convention(c)(GLfixed) -> Void = glEvalCoord1xOES_L
public func glEvalCoord1xvOES(_ coords:UnsafePointer<GLfixed>) {glEvalCoord1xvOES_P(coords)}
public func glEvalCoord1xvOES(coords:UnsafePointer<GLfixed>) {glEvalCoord1xvOES_P(coords)}
var glEvalCoord1xvOES_P:@convention(c)(UnsafePointer<GLfixed>) -> Void = glEvalCoord1xvOES_L
public func glEvalCoord2d(_ u:GLdouble, _ v:GLdouble) {glEvalCoord2d_P(u, v)}
public func glEvalCoord2d(u:GLdouble, v:GLdouble) {glEvalCoord2d_P(u, v)}
var glEvalCoord2d_P:@convention(c)(GLdouble, GLdouble) -> Void = glEvalCoord2d_L
public func glEvalCoord2dv(_ u:UnsafePointer<GLdouble>) {glEvalCoord2dv_P(u)}
public func glEvalCoord2dv(u:UnsafePointer<GLdouble>) {glEvalCoord2dv_P(u)}
var glEvalCoord2dv_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glEvalCoord2dv_L
public func glEvalCoord2f(_ u:GLfloat, _ v:GLfloat) {glEvalCoord2f_P(u, v)}
public func glEvalCoord2f(u:GLfloat, v:GLfloat) {glEvalCoord2f_P(u, v)}
var glEvalCoord2f_P:@convention(c)(GLfloat, GLfloat) -> Void = glEvalCoord2f_L
public func glEvalCoord2fv(_ u:UnsafePointer<GLfloat>) {glEvalCoord2fv_P(u)}
public func glEvalCoord2fv(u:UnsafePointer<GLfloat>) {glEvalCoord2fv_P(u)}
var glEvalCoord2fv_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glEvalCoord2fv_L
public func glEvalCoord2xOES(_ u:GLfixed, _ v:GLfixed) {glEvalCoord2xOES_P(u, v)}
public func glEvalCoord2xOES(u:GLfixed, v:GLfixed) {glEvalCoord2xOES_P(u, v)}
var glEvalCoord2xOES_P:@convention(c)(GLfixed, GLfixed) -> Void = glEvalCoord2xOES_L
public func glEvalCoord2xvOES(_ coords:UnsafePointer<GLfixed>) {glEvalCoord2xvOES_P(coords)}
public func glEvalCoord2xvOES(coords:UnsafePointer<GLfixed>) {glEvalCoord2xvOES_P(coords)}
var glEvalCoord2xvOES_P:@convention(c)(UnsafePointer<GLfixed>) -> Void = glEvalCoord2xvOES_L
public func glEvalMapsNV(_ target:GLenum, _ mode:GLenum) {glEvalMapsNV_P(target, mode)}
public func glEvalMapsNV(target:GLenum, mode:GLenum) {glEvalMapsNV_P(target, mode)}
var glEvalMapsNV_P:@convention(c)(GLenum, GLenum) -> Void = glEvalMapsNV_L
public func glEvalMesh1(_ mode:GLenum, _ i1:GLint, _ i2:GLint) {glEvalMesh1_P(mode, i1, i2)}
public func glEvalMesh1(mode:GLenum, i1:GLint, i2:GLint) {glEvalMesh1_P(mode, i1, i2)}
var glEvalMesh1_P:@convention(c)(GLenum, GLint, GLint) -> Void = glEvalMesh1_L
public func glEvalMesh2(_ mode:GLenum, _ i1:GLint, _ i2:GLint, _ j1:GLint, _ j2:GLint) {glEvalMesh2_P(mode, i1, i2, j1, j2)}
public func glEvalMesh2(mode:GLenum, i1:GLint, i2:GLint, j1:GLint, j2:GLint) {glEvalMesh2_P(mode, i1, i2, j1, j2)}
var glEvalMesh2_P:@convention(c)(GLenum, GLint, GLint, GLint, GLint) -> Void = glEvalMesh2_L
public func glEvalPoint1(_ i:GLint) {glEvalPoint1_P(i)}
public func glEvalPoint1(i:GLint) {glEvalPoint1_P(i)}
var glEvalPoint1_P:@convention(c)(GLint) -> Void = glEvalPoint1_L
public func glEvalPoint2(_ i:GLint, _ j:GLint) {glEvalPoint2_P(i, j)}
public func glEvalPoint2(i:GLint, j:GLint) {glEvalPoint2_P(i, j)}
var glEvalPoint2_P:@convention(c)(GLint, GLint) -> Void = glEvalPoint2_L
public func glEvaluateDepthValuesARB() {glEvaluateDepthValuesARB_P()}
var glEvaluateDepthValuesARB_P:@convention(c)() -> Void = glEvaluateDepthValuesARB_L
public func glExecuteProgramNV(_ target:GLenum, _ id:GLuint, _ params:UnsafePointer<GLfloat>) {glExecuteProgramNV_P(target, id, params)}
public func glExecuteProgramNV(target:GLenum, id:GLuint, params:UnsafePointer<GLfloat>) {glExecuteProgramNV_P(target, id, params)}
var glExecuteProgramNV_P:@convention(c)(GLenum, GLuint, UnsafePointer<GLfloat>) -> Void = glExecuteProgramNV_L
public func glExtGetBufferPointervQCOM(_ target:GLenum, _ params:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glExtGetBufferPointervQCOM_P(target, params)}
public func glExtGetBufferPointervQCOM(target:GLenum, params:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glExtGetBufferPointervQCOM_P(target, params)}
var glExtGetBufferPointervQCOM_P:@convention(c)(GLenum, UnsafeMutablePointer<UnsafeMutableRawPointer>) -> Void = glExtGetBufferPointervQCOM_L
public func glExtGetBuffersQCOM(_ buffers:UnsafeMutablePointer<GLuint>, _ maxBuffers:GLint, _ numBuffers:UnsafeMutablePointer<GLint>) {glExtGetBuffersQCOM_P(buffers, maxBuffers, numBuffers)}
public func glExtGetBuffersQCOM(buffers:UnsafeMutablePointer<GLuint>, maxBuffers:GLint, numBuffers:UnsafeMutablePointer<GLint>) {glExtGetBuffersQCOM_P(buffers, maxBuffers, numBuffers)}
var glExtGetBuffersQCOM_P:@convention(c)(UnsafeMutablePointer<GLuint>, GLint, UnsafeMutablePointer<GLint>) -> Void = glExtGetBuffersQCOM_L
public func glExtGetFramebuffersQCOM(_ framebuffers:UnsafeMutablePointer<GLuint>, _ maxFramebuffers:GLint, _ numFramebuffers:UnsafeMutablePointer<GLint>) {glExtGetFramebuffersQCOM_P(framebuffers, maxFramebuffers, numFramebuffers)}
public func glExtGetFramebuffersQCOM(framebuffers:UnsafeMutablePointer<GLuint>, maxFramebuffers:GLint, numFramebuffers:UnsafeMutablePointer<GLint>) {glExtGetFramebuffersQCOM_P(framebuffers, maxFramebuffers, numFramebuffers)}
var glExtGetFramebuffersQCOM_P:@convention(c)(UnsafeMutablePointer<GLuint>, GLint, UnsafeMutablePointer<GLint>) -> Void = glExtGetFramebuffersQCOM_L
public func glExtGetProgramBinarySourceQCOM(_ program:GLuint, _ shadertype:GLenum, _ source:UnsafeMutablePointer<GLchar>, _ length:UnsafeMutablePointer<GLint>) {glExtGetProgramBinarySourceQCOM_P(program, shadertype, source, length)}
public func glExtGetProgramBinarySourceQCOM(program:GLuint, shadertype:GLenum, source:UnsafeMutablePointer<GLchar>, length:UnsafeMutablePointer<GLint>) {glExtGetProgramBinarySourceQCOM_P(program, shadertype, source, length)}
var glExtGetProgramBinarySourceQCOM_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLchar>, UnsafeMutablePointer<GLint>) -> Void = glExtGetProgramBinarySourceQCOM_L
public func glExtGetProgramsQCOM(_ programs:UnsafeMutablePointer<GLuint>, _ maxPrograms:GLint, _ numPrograms:UnsafeMutablePointer<GLint>) {glExtGetProgramsQCOM_P(programs, maxPrograms, numPrograms)}
public func glExtGetProgramsQCOM(programs:UnsafeMutablePointer<GLuint>, maxPrograms:GLint, numPrograms:UnsafeMutablePointer<GLint>) {glExtGetProgramsQCOM_P(programs, maxPrograms, numPrograms)}
var glExtGetProgramsQCOM_P:@convention(c)(UnsafeMutablePointer<GLuint>, GLint, UnsafeMutablePointer<GLint>) -> Void = glExtGetProgramsQCOM_L
public func glExtGetRenderbuffersQCOM(_ renderbuffers:UnsafeMutablePointer<GLuint>, _ maxRenderbuffers:GLint, _ numRenderbuffers:UnsafeMutablePointer<GLint>) {glExtGetRenderbuffersQCOM_P(renderbuffers, maxRenderbuffers, numRenderbuffers)}
public func glExtGetRenderbuffersQCOM(renderbuffers:UnsafeMutablePointer<GLuint>, maxRenderbuffers:GLint, numRenderbuffers:UnsafeMutablePointer<GLint>) {glExtGetRenderbuffersQCOM_P(renderbuffers, maxRenderbuffers, numRenderbuffers)}
var glExtGetRenderbuffersQCOM_P:@convention(c)(UnsafeMutablePointer<GLuint>, GLint, UnsafeMutablePointer<GLint>) -> Void = glExtGetRenderbuffersQCOM_L
public func glExtGetShadersQCOM(_ shaders:UnsafeMutablePointer<GLuint>, _ maxShaders:GLint, _ numShaders:UnsafeMutablePointer<GLint>) {glExtGetShadersQCOM_P(shaders, maxShaders, numShaders)}
public func glExtGetShadersQCOM(shaders:UnsafeMutablePointer<GLuint>, maxShaders:GLint, numShaders:UnsafeMutablePointer<GLint>) {glExtGetShadersQCOM_P(shaders, maxShaders, numShaders)}
var glExtGetShadersQCOM_P:@convention(c)(UnsafeMutablePointer<GLuint>, GLint, UnsafeMutablePointer<GLint>) -> Void = glExtGetShadersQCOM_L
public func glExtGetTexLevelParameterivQCOM(_ texture:GLuint, _ face:GLenum, _ level:GLint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glExtGetTexLevelParameterivQCOM_P(texture, face, level, pname, params)}
public func glExtGetTexLevelParameterivQCOM(texture:GLuint, face:GLenum, level:GLint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glExtGetTexLevelParameterivQCOM_P(texture, face, level, pname, params)}
var glExtGetTexLevelParameterivQCOM_P:@convention(c)(GLuint, GLenum, GLint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glExtGetTexLevelParameterivQCOM_L
public func glExtGetTexSubImageQCOM(_ target:GLenum, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ zoffset:GLint, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ format:GLenum, _ type:GLenum, _ texels:UnsafeMutableRawPointer) {glExtGetTexSubImageQCOM_P(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, texels)}
public func glExtGetTexSubImageQCOM(target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, format:GLenum, type:GLenum, texels:UnsafeMutableRawPointer) {glExtGetTexSubImageQCOM_P(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, texels)}
var glExtGetTexSubImageQCOM_P:@convention(c)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, UnsafeMutableRawPointer) -> Void = glExtGetTexSubImageQCOM_L
public func glExtGetTexturesQCOM(_ textures:UnsafeMutablePointer<GLuint>, _ maxTextures:GLint, _ numTextures:UnsafeMutablePointer<GLint>) {glExtGetTexturesQCOM_P(textures, maxTextures, numTextures)}
public func glExtGetTexturesQCOM(textures:UnsafeMutablePointer<GLuint>, maxTextures:GLint, numTextures:UnsafeMutablePointer<GLint>) {glExtGetTexturesQCOM_P(textures, maxTextures, numTextures)}
var glExtGetTexturesQCOM_P:@convention(c)(UnsafeMutablePointer<GLuint>, GLint, UnsafeMutablePointer<GLint>) -> Void = glExtGetTexturesQCOM_L
public func glExtIsProgramBinaryQCOM(_ program:GLuint) -> GLboolean {return glExtIsProgramBinaryQCOM_P(program)}
public func glExtIsProgramBinaryQCOM(program:GLuint) -> GLboolean {return glExtIsProgramBinaryQCOM_P(program)}
var glExtIsProgramBinaryQCOM_P:@convention(c)(GLuint) -> GLboolean = glExtIsProgramBinaryQCOM_L
public func glExtTexObjectStateOverrideiQCOM(_ target:GLenum, _ pname:GLenum, _ param:GLint) {glExtTexObjectStateOverrideiQCOM_P(target, pname, param)}
public func glExtTexObjectStateOverrideiQCOM(target:GLenum, pname:GLenum, param:GLint) {glExtTexObjectStateOverrideiQCOM_P(target, pname, param)}
var glExtTexObjectStateOverrideiQCOM_P:@convention(c)(GLenum, GLenum, GLint) -> Void = glExtTexObjectStateOverrideiQCOM_L
public func glExtractComponentEXT(_ res:GLuint, _ src:GLuint, _ num:GLuint) {glExtractComponentEXT_P(res, src, num)}
public func glExtractComponentEXT(res:GLuint, src:GLuint, num:GLuint) {glExtractComponentEXT_P(res, src, num)}
var glExtractComponentEXT_P:@convention(c)(GLuint, GLuint, GLuint) -> Void = glExtractComponentEXT_L
public func glFeedbackBuffer(_ size:GLsizei, _ type:GLenum, _ buffer:UnsafeMutablePointer<GLfloat>) {glFeedbackBuffer_P(size, type, buffer)}
public func glFeedbackBuffer(size:GLsizei, type:GLenum, buffer:UnsafeMutablePointer<GLfloat>) {glFeedbackBuffer_P(size, type, buffer)}
var glFeedbackBuffer_P:@convention(c)(GLsizei, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glFeedbackBuffer_L
public func glFeedbackBufferxOES(_ n:GLsizei, _ type:GLenum, _ buffer:UnsafePointer<GLfixed>) {glFeedbackBufferxOES_P(n, type, buffer)}
public func glFeedbackBufferxOES(n:GLsizei, type:GLenum, buffer:UnsafePointer<GLfixed>) {glFeedbackBufferxOES_P(n, type, buffer)}
var glFeedbackBufferxOES_P:@convention(c)(GLsizei, GLenum, UnsafePointer<GLfixed>) -> Void = glFeedbackBufferxOES_L
public func glFenceSync(_ condition:GLenum, _ flags:GLbitfield) -> GLsync {return glFenceSync_P(condition, flags)}
public func glFenceSync(condition:GLenum, flags:GLbitfield) -> GLsync {return glFenceSync_P(condition, flags)}
var glFenceSync_P:@convention(c)(GLenum, GLbitfield) -> GLsync = glFenceSync_L
public func glFenceSyncAPPLE(_ condition:GLenum, _ flags:GLbitfield) -> GLsync {return glFenceSyncAPPLE_P(condition, flags)}
public func glFenceSyncAPPLE(condition:GLenum, flags:GLbitfield) -> GLsync {return glFenceSyncAPPLE_P(condition, flags)}
var glFenceSyncAPPLE_P:@convention(c)(GLenum, GLbitfield) -> GLsync = glFenceSyncAPPLE_L
public func glFinalCombinerInputNV(_ variable:GLenum, _ input:GLenum, _ mapping:GLenum, _ componentUsage:GLenum) {glFinalCombinerInputNV_P(variable, input, mapping, componentUsage)}
public func glFinalCombinerInputNV(variable:GLenum, input:GLenum, mapping:GLenum, componentUsage:GLenum) {glFinalCombinerInputNV_P(variable, input, mapping, componentUsage)}
var glFinalCombinerInputNV_P:@convention(c)(GLenum, GLenum, GLenum, GLenum) -> Void = glFinalCombinerInputNV_L
public func glFinish() {glFinish_P()}
var glFinish_P:@convention(c)() -> Void = glFinish_L
public func glFinishAsyncSGIX(_ markerp:UnsafeMutablePointer<GLuint>) -> GLint {return glFinishAsyncSGIX_P(markerp)}
public func glFinishAsyncSGIX(markerp:UnsafeMutablePointer<GLuint>) -> GLint {return glFinishAsyncSGIX_P(markerp)}
var glFinishAsyncSGIX_P:@convention(c)(UnsafeMutablePointer<GLuint>) -> GLint = glFinishAsyncSGIX_L
public func glFinishFenceAPPLE(_ fence:GLuint) {glFinishFenceAPPLE_P(fence)}
public func glFinishFenceAPPLE(fence:GLuint) {glFinishFenceAPPLE_P(fence)}
var glFinishFenceAPPLE_P:@convention(c)(GLuint) -> Void = glFinishFenceAPPLE_L
public func glFinishFenceNV(_ fence:GLuint) {glFinishFenceNV_P(fence)}
public func glFinishFenceNV(fence:GLuint) {glFinishFenceNV_P(fence)}
var glFinishFenceNV_P:@convention(c)(GLuint) -> Void = glFinishFenceNV_L
public func glFinishObjectAPPLE(_ object:GLenum, _ name:GLint) {glFinishObjectAPPLE_P(object, name)}
public func glFinishObjectAPPLE(object:GLenum, name:GLint) {glFinishObjectAPPLE_P(object, name)}
var glFinishObjectAPPLE_P:@convention(c)(GLenum, GLint) -> Void = glFinishObjectAPPLE_L
public func glFinishTextureSUNX() {glFinishTextureSUNX_P()}
var glFinishTextureSUNX_P:@convention(c)() -> Void = glFinishTextureSUNX_L
public func glFlush() {glFlush_P()}
var glFlush_P:@convention(c)() -> Void = glFlush_L
public func glFlushMappedBufferRange(_ target:GLenum, _ offset:GLintptr, _ length:GLsizeiptr) {glFlushMappedBufferRange_P(target, offset, length)}
public func glFlushMappedBufferRange(target:GLenum, offset:GLintptr, length:GLsizeiptr) {glFlushMappedBufferRange_P(target, offset, length)}
var glFlushMappedBufferRange_P:@convention(c)(GLenum, GLintptr, GLsizeiptr) -> Void = glFlushMappedBufferRange_L
public func glFlushMappedBufferRangeAPPLE(_ target:GLenum, _ offset:GLintptr, _ size:GLsizeiptr) {glFlushMappedBufferRangeAPPLE_P(target, offset, size)}
public func glFlushMappedBufferRangeAPPLE(target:GLenum, offset:GLintptr, size:GLsizeiptr) {glFlushMappedBufferRangeAPPLE_P(target, offset, size)}
var glFlushMappedBufferRangeAPPLE_P:@convention(c)(GLenum, GLintptr, GLsizeiptr) -> Void = glFlushMappedBufferRangeAPPLE_L
public func glFlushMappedBufferRangeEXT(_ target:GLenum, _ offset:GLintptr, _ length:GLsizeiptr) {glFlushMappedBufferRangeEXT_P(target, offset, length)}
public func glFlushMappedBufferRangeEXT(target:GLenum, offset:GLintptr, length:GLsizeiptr) {glFlushMappedBufferRangeEXT_P(target, offset, length)}
var glFlushMappedBufferRangeEXT_P:@convention(c)(GLenum, GLintptr, GLsizeiptr) -> Void = glFlushMappedBufferRangeEXT_L
public func glFlushMappedNamedBufferRange(_ buffer:GLuint, _ offset:GLintptr, _ length:GLsizeiptr) {glFlushMappedNamedBufferRange_P(buffer, offset, length)}
public func glFlushMappedNamedBufferRange(buffer:GLuint, offset:GLintptr, length:GLsizeiptr) {glFlushMappedNamedBufferRange_P(buffer, offset, length)}
var glFlushMappedNamedBufferRange_P:@convention(c)(GLuint, GLintptr, GLsizeiptr) -> Void = glFlushMappedNamedBufferRange_L
public func glFlushMappedNamedBufferRangeEXT(_ buffer:GLuint, _ offset:GLintptr, _ length:GLsizeiptr) {glFlushMappedNamedBufferRangeEXT_P(buffer, offset, length)}
public func glFlushMappedNamedBufferRangeEXT(buffer:GLuint, offset:GLintptr, length:GLsizeiptr) {glFlushMappedNamedBufferRangeEXT_P(buffer, offset, length)}
var glFlushMappedNamedBufferRangeEXT_P:@convention(c)(GLuint, GLintptr, GLsizeiptr) -> Void = glFlushMappedNamedBufferRangeEXT_L
public func glFlushPixelDataRangeNV(_ target:GLenum) {glFlushPixelDataRangeNV_P(target)}
public func glFlushPixelDataRangeNV(target:GLenum) {glFlushPixelDataRangeNV_P(target)}
var glFlushPixelDataRangeNV_P:@convention(c)(GLenum) -> Void = glFlushPixelDataRangeNV_L
public func glFlushRasterSGIX() {glFlushRasterSGIX_P()}
var glFlushRasterSGIX_P:@convention(c)() -> Void = glFlushRasterSGIX_L
public func glFlushStaticDataIBM(_ target:GLenum) {glFlushStaticDataIBM_P(target)}
public func glFlushStaticDataIBM(target:GLenum) {glFlushStaticDataIBM_P(target)}
var glFlushStaticDataIBM_P:@convention(c)(GLenum) -> Void = glFlushStaticDataIBM_L
public func glFlushVertexArrayRangeAPPLE(_ length:GLsizei, _ pointer:UnsafeMutableRawPointer) {glFlushVertexArrayRangeAPPLE_P(length, pointer)}
public func glFlushVertexArrayRangeAPPLE(length:GLsizei, pointer:UnsafeMutableRawPointer) {glFlushVertexArrayRangeAPPLE_P(length, pointer)}
var glFlushVertexArrayRangeAPPLE_P:@convention(c)(GLsizei, UnsafeMutableRawPointer) -> Void = glFlushVertexArrayRangeAPPLE_L
public func glFlushVertexArrayRangeNV() {glFlushVertexArrayRangeNV_P()}
var glFlushVertexArrayRangeNV_P:@convention(c)() -> Void = glFlushVertexArrayRangeNV_L
public func glFogCoordFormatNV(_ type:GLenum, _ stride:GLsizei) {glFogCoordFormatNV_P(type, stride)}
public func glFogCoordFormatNV(type:GLenum, stride:GLsizei) {glFogCoordFormatNV_P(type, stride)}
var glFogCoordFormatNV_P:@convention(c)(GLenum, GLsizei) -> Void = glFogCoordFormatNV_L
public func glFogCoordPointer(_ type:GLenum, _ stride:GLsizei, _ pointer:UnsafeRawPointer) {glFogCoordPointer_P(type, stride, pointer)}
public func glFogCoordPointer(type:GLenum, stride:GLsizei, pointer:UnsafeRawPointer) {glFogCoordPointer_P(type, stride, pointer)}
var glFogCoordPointer_P:@convention(c)(GLenum, GLsizei, UnsafeRawPointer) -> Void = glFogCoordPointer_L
public func glFogCoordPointerEXT(_ type:GLenum, _ stride:GLsizei, _ pointer:UnsafeRawPointer) {glFogCoordPointerEXT_P(type, stride, pointer)}
public func glFogCoordPointerEXT(type:GLenum, stride:GLsizei, pointer:UnsafeRawPointer) {glFogCoordPointerEXT_P(type, stride, pointer)}
var glFogCoordPointerEXT_P:@convention(c)(GLenum, GLsizei, UnsafeRawPointer) -> Void = glFogCoordPointerEXT_L
public func glFogCoordPointerListIBM(_ type:GLenum, _ stride:GLint, _ pointer:UnsafeMutablePointer<UnsafeRawPointer>, _ ptrstride:GLint) {glFogCoordPointerListIBM_P(type, stride, pointer, ptrstride)}
public func glFogCoordPointerListIBM(type:GLenum, stride:GLint, pointer:UnsafeMutablePointer<UnsafeRawPointer>, ptrstride:GLint) {glFogCoordPointerListIBM_P(type, stride, pointer, ptrstride)}
var glFogCoordPointerListIBM_P:@convention(c)(GLenum, GLint, UnsafeMutablePointer<UnsafeRawPointer>, GLint) -> Void = glFogCoordPointerListIBM_L
public func glFogCoordd(_ coord:GLdouble) {glFogCoordd_P(coord)}
public func glFogCoordd(coord:GLdouble) {glFogCoordd_P(coord)}
var glFogCoordd_P:@convention(c)(GLdouble) -> Void = glFogCoordd_L
public func glFogCoorddEXT(_ coord:GLdouble) {glFogCoorddEXT_P(coord)}
public func glFogCoorddEXT(coord:GLdouble) {glFogCoorddEXT_P(coord)}
var glFogCoorddEXT_P:@convention(c)(GLdouble) -> Void = glFogCoorddEXT_L
public func glFogCoorddv(_ coord:UnsafePointer<GLdouble>) {glFogCoorddv_P(coord)}
public func glFogCoorddv(coord:UnsafePointer<GLdouble>) {glFogCoorddv_P(coord)}
var glFogCoorddv_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glFogCoorddv_L
public func glFogCoorddvEXT(_ coord:UnsafePointer<GLdouble>) {glFogCoorddvEXT_P(coord)}
public func glFogCoorddvEXT(coord:UnsafePointer<GLdouble>) {glFogCoorddvEXT_P(coord)}
var glFogCoorddvEXT_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glFogCoorddvEXT_L
public func glFogCoordf(_ coord:GLfloat) {glFogCoordf_P(coord)}
public func glFogCoordf(coord:GLfloat) {glFogCoordf_P(coord)}
var glFogCoordf_P:@convention(c)(GLfloat) -> Void = glFogCoordf_L
public func glFogCoordfEXT(_ coord:GLfloat) {glFogCoordfEXT_P(coord)}
public func glFogCoordfEXT(coord:GLfloat) {glFogCoordfEXT_P(coord)}
var glFogCoordfEXT_P:@convention(c)(GLfloat) -> Void = glFogCoordfEXT_L
public func glFogCoordfv(_ coord:UnsafePointer<GLfloat>) {glFogCoordfv_P(coord)}
public func glFogCoordfv(coord:UnsafePointer<GLfloat>) {glFogCoordfv_P(coord)}
var glFogCoordfv_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glFogCoordfv_L
public func glFogCoordfvEXT(_ coord:UnsafePointer<GLfloat>) {glFogCoordfvEXT_P(coord)}
public func glFogCoordfvEXT(coord:UnsafePointer<GLfloat>) {glFogCoordfvEXT_P(coord)}
var glFogCoordfvEXT_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glFogCoordfvEXT_L
public func glFogCoordhNV(_ fog:GLhalfNV) {glFogCoordhNV_P(fog)}
public func glFogCoordhNV(fog:GLhalfNV) {glFogCoordhNV_P(fog)}
var glFogCoordhNV_P:@convention(c)(GLhalfNV) -> Void = glFogCoordhNV_L
public func glFogCoordhvNV(_ fog:UnsafePointer<GLhalfNV>) {glFogCoordhvNV_P(fog)}
public func glFogCoordhvNV(fog:UnsafePointer<GLhalfNV>) {glFogCoordhvNV_P(fog)}
var glFogCoordhvNV_P:@convention(c)(UnsafePointer<GLhalfNV>) -> Void = glFogCoordhvNV_L
public func glFogFuncSGIS(_ n:GLsizei, _ points:UnsafePointer<GLfloat>) {glFogFuncSGIS_P(n, points)}
public func glFogFuncSGIS(n:GLsizei, points:UnsafePointer<GLfloat>) {glFogFuncSGIS_P(n, points)}
var glFogFuncSGIS_P:@convention(c)(GLsizei, UnsafePointer<GLfloat>) -> Void = glFogFuncSGIS_L
public func glFogf(_ pname:GLenum, _ param:GLfloat) {glFogf_P(pname, param)}
public func glFogf(pname:GLenum, param:GLfloat) {glFogf_P(pname, param)}
var glFogf_P:@convention(c)(GLenum, GLfloat) -> Void = glFogf_L
public func glFogfv(_ pname:GLenum, _ params:UnsafePointer<GLfloat>) {glFogfv_P(pname, params)}
public func glFogfv(pname:GLenum, params:UnsafePointer<GLfloat>) {glFogfv_P(pname, params)}
var glFogfv_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glFogfv_L
public func glFogi(_ pname:GLenum, _ param:GLint) {glFogi_P(pname, param)}
public func glFogi(pname:GLenum, param:GLint) {glFogi_P(pname, param)}
var glFogi_P:@convention(c)(GLenum, GLint) -> Void = glFogi_L
public func glFogiv(_ pname:GLenum, _ params:UnsafePointer<GLint>) {glFogiv_P(pname, params)}
public func glFogiv(pname:GLenum, params:UnsafePointer<GLint>) {glFogiv_P(pname, params)}
var glFogiv_P:@convention(c)(GLenum, UnsafePointer<GLint>) -> Void = glFogiv_L
public func glFogx(_ pname:GLenum, _ param:GLfixed) {glFogx_P(pname, param)}
public func glFogx(pname:GLenum, param:GLfixed) {glFogx_P(pname, param)}
var glFogx_P:@convention(c)(GLenum, GLfixed) -> Void = glFogx_L
public func glFogxOES(_ pname:GLenum, _ param:GLfixed) {glFogxOES_P(pname, param)}
public func glFogxOES(pname:GLenum, param:GLfixed) {glFogxOES_P(pname, param)}
var glFogxOES_P:@convention(c)(GLenum, GLfixed) -> Void = glFogxOES_L
public func glFogxv(_ pname:GLenum, _ param:UnsafePointer<GLfixed>) {glFogxv_P(pname, param)}
public func glFogxv(pname:GLenum, param:UnsafePointer<GLfixed>) {glFogxv_P(pname, param)}
var glFogxv_P:@convention(c)(GLenum, UnsafePointer<GLfixed>) -> Void = glFogxv_L
public func glFogxvOES(_ pname:GLenum, _ param:UnsafePointer<GLfixed>) {glFogxvOES_P(pname, param)}
public func glFogxvOES(pname:GLenum, param:UnsafePointer<GLfixed>) {glFogxvOES_P(pname, param)}
var glFogxvOES_P:@convention(c)(GLenum, UnsafePointer<GLfixed>) -> Void = glFogxvOES_L
public func glFragmentColorMaterialSGIX(_ face:GLenum, _ mode:GLenum) {glFragmentColorMaterialSGIX_P(face, mode)}
public func glFragmentColorMaterialSGIX(face:GLenum, mode:GLenum) {glFragmentColorMaterialSGIX_P(face, mode)}
var glFragmentColorMaterialSGIX_P:@convention(c)(GLenum, GLenum) -> Void = glFragmentColorMaterialSGIX_L
public func glFragmentCoverageColorNV(_ color:GLuint) {glFragmentCoverageColorNV_P(color)}
public func glFragmentCoverageColorNV(color:GLuint) {glFragmentCoverageColorNV_P(color)}
var glFragmentCoverageColorNV_P:@convention(c)(GLuint) -> Void = glFragmentCoverageColorNV_L
public func glFragmentLightModelfSGIX(_ pname:GLenum, _ param:GLfloat) {glFragmentLightModelfSGIX_P(pname, param)}
public func glFragmentLightModelfSGIX(pname:GLenum, param:GLfloat) {glFragmentLightModelfSGIX_P(pname, param)}
var glFragmentLightModelfSGIX_P:@convention(c)(GLenum, GLfloat) -> Void = glFragmentLightModelfSGIX_L
public func glFragmentLightModelfvSGIX(_ pname:GLenum, _ params:UnsafePointer<GLfloat>) {glFragmentLightModelfvSGIX_P(pname, params)}
public func glFragmentLightModelfvSGIX(pname:GLenum, params:UnsafePointer<GLfloat>) {glFragmentLightModelfvSGIX_P(pname, params)}
var glFragmentLightModelfvSGIX_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glFragmentLightModelfvSGIX_L
public func glFragmentLightModeliSGIX(_ pname:GLenum, _ param:GLint) {glFragmentLightModeliSGIX_P(pname, param)}
public func glFragmentLightModeliSGIX(pname:GLenum, param:GLint) {glFragmentLightModeliSGIX_P(pname, param)}
var glFragmentLightModeliSGIX_P:@convention(c)(GLenum, GLint) -> Void = glFragmentLightModeliSGIX_L
public func glFragmentLightModelivSGIX(_ pname:GLenum, _ params:UnsafePointer<GLint>) {glFragmentLightModelivSGIX_P(pname, params)}
public func glFragmentLightModelivSGIX(pname:GLenum, params:UnsafePointer<GLint>) {glFragmentLightModelivSGIX_P(pname, params)}
var glFragmentLightModelivSGIX_P:@convention(c)(GLenum, UnsafePointer<GLint>) -> Void = glFragmentLightModelivSGIX_L
public func glFragmentLightfSGIX(_ light:GLenum, _ pname:GLenum, _ param:GLfloat) {glFragmentLightfSGIX_P(light, pname, param)}
public func glFragmentLightfSGIX(light:GLenum, pname:GLenum, param:GLfloat) {glFragmentLightfSGIX_P(light, pname, param)}
var glFragmentLightfSGIX_P:@convention(c)(GLenum, GLenum, GLfloat) -> Void = glFragmentLightfSGIX_L
public func glFragmentLightfvSGIX(_ light:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLfloat>) {glFragmentLightfvSGIX_P(light, pname, params)}
public func glFragmentLightfvSGIX(light:GLenum, pname:GLenum, params:UnsafePointer<GLfloat>) {glFragmentLightfvSGIX_P(light, pname, params)}
var glFragmentLightfvSGIX_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLfloat>) -> Void = glFragmentLightfvSGIX_L
public func glFragmentLightiSGIX(_ light:GLenum, _ pname:GLenum, _ param:GLint) {glFragmentLightiSGIX_P(light, pname, param)}
public func glFragmentLightiSGIX(light:GLenum, pname:GLenum, param:GLint) {glFragmentLightiSGIX_P(light, pname, param)}
var glFragmentLightiSGIX_P:@convention(c)(GLenum, GLenum, GLint) -> Void = glFragmentLightiSGIX_L
public func glFragmentLightivSGIX(_ light:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLint>) {glFragmentLightivSGIX_P(light, pname, params)}
public func glFragmentLightivSGIX(light:GLenum, pname:GLenum, params:UnsafePointer<GLint>) {glFragmentLightivSGIX_P(light, pname, params)}
var glFragmentLightivSGIX_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLint>) -> Void = glFragmentLightivSGIX_L
public func glFragmentMaterialfSGIX(_ face:GLenum, _ pname:GLenum, _ param:GLfloat) {glFragmentMaterialfSGIX_P(face, pname, param)}
public func glFragmentMaterialfSGIX(face:GLenum, pname:GLenum, param:GLfloat) {glFragmentMaterialfSGIX_P(face, pname, param)}
var glFragmentMaterialfSGIX_P:@convention(c)(GLenum, GLenum, GLfloat) -> Void = glFragmentMaterialfSGIX_L
public func glFragmentMaterialfvSGIX(_ face:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLfloat>) {glFragmentMaterialfvSGIX_P(face, pname, params)}
public func glFragmentMaterialfvSGIX(face:GLenum, pname:GLenum, params:UnsafePointer<GLfloat>) {glFragmentMaterialfvSGIX_P(face, pname, params)}
var glFragmentMaterialfvSGIX_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLfloat>) -> Void = glFragmentMaterialfvSGIX_L
public func glFragmentMaterialiSGIX(_ face:GLenum, _ pname:GLenum, _ param:GLint) {glFragmentMaterialiSGIX_P(face, pname, param)}
public func glFragmentMaterialiSGIX(face:GLenum, pname:GLenum, param:GLint) {glFragmentMaterialiSGIX_P(face, pname, param)}
var glFragmentMaterialiSGIX_P:@convention(c)(GLenum, GLenum, GLint) -> Void = glFragmentMaterialiSGIX_L
public func glFragmentMaterialivSGIX(_ face:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLint>) {glFragmentMaterialivSGIX_P(face, pname, params)}
public func glFragmentMaterialivSGIX(face:GLenum, pname:GLenum, params:UnsafePointer<GLint>) {glFragmentMaterialivSGIX_P(face, pname, params)}
var glFragmentMaterialivSGIX_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLint>) -> Void = glFragmentMaterialivSGIX_L
public func glFrameTerminatorGREMEDY() {glFrameTerminatorGREMEDY_P()}
var glFrameTerminatorGREMEDY_P:@convention(c)() -> Void = glFrameTerminatorGREMEDY_L
public func glFrameZoomSGIX(_ factor:GLint) {glFrameZoomSGIX_P(factor)}
public func glFrameZoomSGIX(factor:GLint) {glFrameZoomSGIX_P(factor)}
var glFrameZoomSGIX_P:@convention(c)(GLint) -> Void = glFrameZoomSGIX_L
public func glFramebufferDrawBufferEXT(_ framebuffer:GLuint, _ mode:GLenum) {glFramebufferDrawBufferEXT_P(framebuffer, mode)}
public func glFramebufferDrawBufferEXT(framebuffer:GLuint, mode:GLenum) {glFramebufferDrawBufferEXT_P(framebuffer, mode)}
var glFramebufferDrawBufferEXT_P:@convention(c)(GLuint, GLenum) -> Void = glFramebufferDrawBufferEXT_L
public func glFramebufferDrawBuffersEXT(_ framebuffer:GLuint, _ n:GLsizei, _ bufs:UnsafePointer<GLenum>) {glFramebufferDrawBuffersEXT_P(framebuffer, n, bufs)}
public func glFramebufferDrawBuffersEXT(framebuffer:GLuint, n:GLsizei, bufs:UnsafePointer<GLenum>) {glFramebufferDrawBuffersEXT_P(framebuffer, n, bufs)}
var glFramebufferDrawBuffersEXT_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLenum>) -> Void = glFramebufferDrawBuffersEXT_L
public func glFramebufferParameteri(_ target:GLenum, _ pname:GLenum, _ param:GLint) {glFramebufferParameteri_P(target, pname, param)}
public func glFramebufferParameteri(target:GLenum, pname:GLenum, param:GLint) {glFramebufferParameteri_P(target, pname, param)}
var glFramebufferParameteri_P:@convention(c)(GLenum, GLenum, GLint) -> Void = glFramebufferParameteri_L
public func glFramebufferReadBufferEXT(_ framebuffer:GLuint, _ mode:GLenum) {glFramebufferReadBufferEXT_P(framebuffer, mode)}
public func glFramebufferReadBufferEXT(framebuffer:GLuint, mode:GLenum) {glFramebufferReadBufferEXT_P(framebuffer, mode)}
var glFramebufferReadBufferEXT_P:@convention(c)(GLuint, GLenum) -> Void = glFramebufferReadBufferEXT_L
public func glFramebufferRenderbuffer(_ target:GLenum, _ attachment:GLenum, _ renderbuffertarget:GLenum, _ renderbuffer:GLuint) {glFramebufferRenderbuffer_P(target, attachment, renderbuffertarget, renderbuffer)}
public func glFramebufferRenderbuffer(target:GLenum, attachment:GLenum, renderbuffertarget:GLenum, renderbuffer:GLuint) {glFramebufferRenderbuffer_P(target, attachment, renderbuffertarget, renderbuffer)}
var glFramebufferRenderbuffer_P:@convention(c)(GLenum, GLenum, GLenum, GLuint) -> Void = glFramebufferRenderbuffer_L
public func glFramebufferRenderbufferEXT(_ target:GLenum, _ attachment:GLenum, _ renderbuffertarget:GLenum, _ renderbuffer:GLuint) {glFramebufferRenderbufferEXT_P(target, attachment, renderbuffertarget, renderbuffer)}
public func glFramebufferRenderbufferEXT(target:GLenum, attachment:GLenum, renderbuffertarget:GLenum, renderbuffer:GLuint) {glFramebufferRenderbufferEXT_P(target, attachment, renderbuffertarget, renderbuffer)}
var glFramebufferRenderbufferEXT_P:@convention(c)(GLenum, GLenum, GLenum, GLuint) -> Void = glFramebufferRenderbufferEXT_L
public func glFramebufferRenderbufferOES(_ target:GLenum, _ attachment:GLenum, _ renderbuffertarget:GLenum, _ renderbuffer:GLuint) {glFramebufferRenderbufferOES_P(target, attachment, renderbuffertarget, renderbuffer)}
public func glFramebufferRenderbufferOES(target:GLenum, attachment:GLenum, renderbuffertarget:GLenum, renderbuffer:GLuint) {glFramebufferRenderbufferOES_P(target, attachment, renderbuffertarget, renderbuffer)}
var glFramebufferRenderbufferOES_P:@convention(c)(GLenum, GLenum, GLenum, GLuint) -> Void = glFramebufferRenderbufferOES_L
public func glFramebufferSampleLocationsfvARB(_ target:GLenum, _ start:GLuint, _ count:GLsizei, _ v:UnsafePointer<GLfloat>) {glFramebufferSampleLocationsfvARB_P(target, start, count, v)}
public func glFramebufferSampleLocationsfvARB(target:GLenum, start:GLuint, count:GLsizei, v:UnsafePointer<GLfloat>) {glFramebufferSampleLocationsfvARB_P(target, start, count, v)}
var glFramebufferSampleLocationsfvARB_P:@convention(c)(GLenum, GLuint, GLsizei, UnsafePointer<GLfloat>) -> Void = glFramebufferSampleLocationsfvARB_L
public func glFramebufferSampleLocationsfvNV(_ target:GLenum, _ start:GLuint, _ count:GLsizei, _ v:UnsafePointer<GLfloat>) {glFramebufferSampleLocationsfvNV_P(target, start, count, v)}
public func glFramebufferSampleLocationsfvNV(target:GLenum, start:GLuint, count:GLsizei, v:UnsafePointer<GLfloat>) {glFramebufferSampleLocationsfvNV_P(target, start, count, v)}
var glFramebufferSampleLocationsfvNV_P:@convention(c)(GLenum, GLuint, GLsizei, UnsafePointer<GLfloat>) -> Void = glFramebufferSampleLocationsfvNV_L
public func glFramebufferTexture(_ target:GLenum, _ attachment:GLenum, _ texture:GLuint, _ level:GLint) {glFramebufferTexture_P(target, attachment, texture, level)}
public func glFramebufferTexture(target:GLenum, attachment:GLenum, texture:GLuint, level:GLint) {glFramebufferTexture_P(target, attachment, texture, level)}
var glFramebufferTexture_P:@convention(c)(GLenum, GLenum, GLuint, GLint) -> Void = glFramebufferTexture_L
public func glFramebufferTexture1D(_ target:GLenum, _ attachment:GLenum, _ textarget:GLenum, _ texture:GLuint, _ level:GLint) {glFramebufferTexture1D_P(target, attachment, textarget, texture, level)}
public func glFramebufferTexture1D(target:GLenum, attachment:GLenum, textarget:GLenum, texture:GLuint, level:GLint) {glFramebufferTexture1D_P(target, attachment, textarget, texture, level)}
var glFramebufferTexture1D_P:@convention(c)(GLenum, GLenum, GLenum, GLuint, GLint) -> Void = glFramebufferTexture1D_L
public func glFramebufferTexture1DEXT(_ target:GLenum, _ attachment:GLenum, _ textarget:GLenum, _ texture:GLuint, _ level:GLint) {glFramebufferTexture1DEXT_P(target, attachment, textarget, texture, level)}
public func glFramebufferTexture1DEXT(target:GLenum, attachment:GLenum, textarget:GLenum, texture:GLuint, level:GLint) {glFramebufferTexture1DEXT_P(target, attachment, textarget, texture, level)}
var glFramebufferTexture1DEXT_P:@convention(c)(GLenum, GLenum, GLenum, GLuint, GLint) -> Void = glFramebufferTexture1DEXT_L
public func glFramebufferTexture2D(_ target:GLenum, _ attachment:GLenum, _ textarget:GLenum, _ texture:GLuint, _ level:GLint) {glFramebufferTexture2D_P(target, attachment, textarget, texture, level)}
public func glFramebufferTexture2D(target:GLenum, attachment:GLenum, textarget:GLenum, texture:GLuint, level:GLint) {glFramebufferTexture2D_P(target, attachment, textarget, texture, level)}
var glFramebufferTexture2D_P:@convention(c)(GLenum, GLenum, GLenum, GLuint, GLint) -> Void = glFramebufferTexture2D_L
public func glFramebufferTexture2DEXT(_ target:GLenum, _ attachment:GLenum, _ textarget:GLenum, _ texture:GLuint, _ level:GLint) {glFramebufferTexture2DEXT_P(target, attachment, textarget, texture, level)}
public func glFramebufferTexture2DEXT(target:GLenum, attachment:GLenum, textarget:GLenum, texture:GLuint, level:GLint) {glFramebufferTexture2DEXT_P(target, attachment, textarget, texture, level)}
var glFramebufferTexture2DEXT_P:@convention(c)(GLenum, GLenum, GLenum, GLuint, GLint) -> Void = glFramebufferTexture2DEXT_L
public func glFramebufferTexture2DMultisampleEXT(_ target:GLenum, _ attachment:GLenum, _ textarget:GLenum, _ texture:GLuint, _ level:GLint, _ samples:GLsizei) {glFramebufferTexture2DMultisampleEXT_P(target, attachment, textarget, texture, level, samples)}
public func glFramebufferTexture2DMultisampleEXT(target:GLenum, attachment:GLenum, textarget:GLenum, texture:GLuint, level:GLint, samples:GLsizei) {glFramebufferTexture2DMultisampleEXT_P(target, attachment, textarget, texture, level, samples)}
var glFramebufferTexture2DMultisampleEXT_P:@convention(c)(GLenum, GLenum, GLenum, GLuint, GLint, GLsizei) -> Void = glFramebufferTexture2DMultisampleEXT_L
public func glFramebufferTexture2DMultisampleIMG(_ target:GLenum, _ attachment:GLenum, _ textarget:GLenum, _ texture:GLuint, _ level:GLint, _ samples:GLsizei) {glFramebufferTexture2DMultisampleIMG_P(target, attachment, textarget, texture, level, samples)}
public func glFramebufferTexture2DMultisampleIMG(target:GLenum, attachment:GLenum, textarget:GLenum, texture:GLuint, level:GLint, samples:GLsizei) {glFramebufferTexture2DMultisampleIMG_P(target, attachment, textarget, texture, level, samples)}
var glFramebufferTexture2DMultisampleIMG_P:@convention(c)(GLenum, GLenum, GLenum, GLuint, GLint, GLsizei) -> Void = glFramebufferTexture2DMultisampleIMG_L
public func glFramebufferTexture2DOES(_ target:GLenum, _ attachment:GLenum, _ textarget:GLenum, _ texture:GLuint, _ level:GLint) {glFramebufferTexture2DOES_P(target, attachment, textarget, texture, level)}
public func glFramebufferTexture2DOES(target:GLenum, attachment:GLenum, textarget:GLenum, texture:GLuint, level:GLint) {glFramebufferTexture2DOES_P(target, attachment, textarget, texture, level)}
var glFramebufferTexture2DOES_P:@convention(c)(GLenum, GLenum, GLenum, GLuint, GLint) -> Void = glFramebufferTexture2DOES_L
public func glFramebufferTexture3D(_ target:GLenum, _ attachment:GLenum, _ textarget:GLenum, _ texture:GLuint, _ level:GLint, _ zoffset:GLint) {glFramebufferTexture3D_P(target, attachment, textarget, texture, level, zoffset)}
public func glFramebufferTexture3D(target:GLenum, attachment:GLenum, textarget:GLenum, texture:GLuint, level:GLint, zoffset:GLint) {glFramebufferTexture3D_P(target, attachment, textarget, texture, level, zoffset)}
var glFramebufferTexture3D_P:@convention(c)(GLenum, GLenum, GLenum, GLuint, GLint, GLint) -> Void = glFramebufferTexture3D_L
public func glFramebufferTexture3DEXT(_ target:GLenum, _ attachment:GLenum, _ textarget:GLenum, _ texture:GLuint, _ level:GLint, _ zoffset:GLint) {glFramebufferTexture3DEXT_P(target, attachment, textarget, texture, level, zoffset)}
public func glFramebufferTexture3DEXT(target:GLenum, attachment:GLenum, textarget:GLenum, texture:GLuint, level:GLint, zoffset:GLint) {glFramebufferTexture3DEXT_P(target, attachment, textarget, texture, level, zoffset)}
var glFramebufferTexture3DEXT_P:@convention(c)(GLenum, GLenum, GLenum, GLuint, GLint, GLint) -> Void = glFramebufferTexture3DEXT_L
public func glFramebufferTexture3DOES(_ target:GLenum, _ attachment:GLenum, _ textarget:GLenum, _ texture:GLuint, _ level:GLint, _ zoffset:GLint) {glFramebufferTexture3DOES_P(target, attachment, textarget, texture, level, zoffset)}
public func glFramebufferTexture3DOES(target:GLenum, attachment:GLenum, textarget:GLenum, texture:GLuint, level:GLint, zoffset:GLint) {glFramebufferTexture3DOES_P(target, attachment, textarget, texture, level, zoffset)}
var glFramebufferTexture3DOES_P:@convention(c)(GLenum, GLenum, GLenum, GLuint, GLint, GLint) -> Void = glFramebufferTexture3DOES_L
public func glFramebufferTextureARB(_ target:GLenum, _ attachment:GLenum, _ texture:GLuint, _ level:GLint) {glFramebufferTextureARB_P(target, attachment, texture, level)}
public func glFramebufferTextureARB(target:GLenum, attachment:GLenum, texture:GLuint, level:GLint) {glFramebufferTextureARB_P(target, attachment, texture, level)}
var glFramebufferTextureARB_P:@convention(c)(GLenum, GLenum, GLuint, GLint) -> Void = glFramebufferTextureARB_L
public func glFramebufferTextureEXT(_ target:GLenum, _ attachment:GLenum, _ texture:GLuint, _ level:GLint) {glFramebufferTextureEXT_P(target, attachment, texture, level)}
public func glFramebufferTextureEXT(target:GLenum, attachment:GLenum, texture:GLuint, level:GLint) {glFramebufferTextureEXT_P(target, attachment, texture, level)}
var glFramebufferTextureEXT_P:@convention(c)(GLenum, GLenum, GLuint, GLint) -> Void = glFramebufferTextureEXT_L
public func glFramebufferTextureFaceARB(_ target:GLenum, _ attachment:GLenum, _ texture:GLuint, _ level:GLint, _ face:GLenum) {glFramebufferTextureFaceARB_P(target, attachment, texture, level, face)}
public func glFramebufferTextureFaceARB(target:GLenum, attachment:GLenum, texture:GLuint, level:GLint, face:GLenum) {glFramebufferTextureFaceARB_P(target, attachment, texture, level, face)}
var glFramebufferTextureFaceARB_P:@convention(c)(GLenum, GLenum, GLuint, GLint, GLenum) -> Void = glFramebufferTextureFaceARB_L
public func glFramebufferTextureFaceEXT(_ target:GLenum, _ attachment:GLenum, _ texture:GLuint, _ level:GLint, _ face:GLenum) {glFramebufferTextureFaceEXT_P(target, attachment, texture, level, face)}
public func glFramebufferTextureFaceEXT(target:GLenum, attachment:GLenum, texture:GLuint, level:GLint, face:GLenum) {glFramebufferTextureFaceEXT_P(target, attachment, texture, level, face)}
var glFramebufferTextureFaceEXT_P:@convention(c)(GLenum, GLenum, GLuint, GLint, GLenum) -> Void = glFramebufferTextureFaceEXT_L
public func glFramebufferTextureLayer(_ target:GLenum, _ attachment:GLenum, _ texture:GLuint, _ level:GLint, _ layer:GLint) {glFramebufferTextureLayer_P(target, attachment, texture, level, layer)}
public func glFramebufferTextureLayer(target:GLenum, attachment:GLenum, texture:GLuint, level:GLint, layer:GLint) {glFramebufferTextureLayer_P(target, attachment, texture, level, layer)}
var glFramebufferTextureLayer_P:@convention(c)(GLenum, GLenum, GLuint, GLint, GLint) -> Void = glFramebufferTextureLayer_L
public func glFramebufferTextureLayerARB(_ target:GLenum, _ attachment:GLenum, _ texture:GLuint, _ level:GLint, _ layer:GLint) {glFramebufferTextureLayerARB_P(target, attachment, texture, level, layer)}
public func glFramebufferTextureLayerARB(target:GLenum, attachment:GLenum, texture:GLuint, level:GLint, layer:GLint) {glFramebufferTextureLayerARB_P(target, attachment, texture, level, layer)}
var glFramebufferTextureLayerARB_P:@convention(c)(GLenum, GLenum, GLuint, GLint, GLint) -> Void = glFramebufferTextureLayerARB_L
public func glFramebufferTextureLayerEXT(_ target:GLenum, _ attachment:GLenum, _ texture:GLuint, _ level:GLint, _ layer:GLint) {glFramebufferTextureLayerEXT_P(target, attachment, texture, level, layer)}
public func glFramebufferTextureLayerEXT(target:GLenum, attachment:GLenum, texture:GLuint, level:GLint, layer:GLint) {glFramebufferTextureLayerEXT_P(target, attachment, texture, level, layer)}
var glFramebufferTextureLayerEXT_P:@convention(c)(GLenum, GLenum, GLuint, GLint, GLint) -> Void = glFramebufferTextureLayerEXT_L
public func glFramebufferTextureMultisampleMultiviewOVR(_ target:GLenum, _ attachment:GLenum, _ texture:GLuint, _ level:GLint, _ samples:GLsizei, _ baseViewIndex:GLint, _ numViews:GLsizei) {glFramebufferTextureMultisampleMultiviewOVR_P(target, attachment, texture, level, samples, baseViewIndex, numViews)}
public func glFramebufferTextureMultisampleMultiviewOVR(target:GLenum, attachment:GLenum, texture:GLuint, level:GLint, samples:GLsizei, baseViewIndex:GLint, numViews:GLsizei) {glFramebufferTextureMultisampleMultiviewOVR_P(target, attachment, texture, level, samples, baseViewIndex, numViews)}
var glFramebufferTextureMultisampleMultiviewOVR_P:@convention(c)(GLenum, GLenum, GLuint, GLint, GLsizei, GLint, GLsizei) -> Void = glFramebufferTextureMultisampleMultiviewOVR_L
public func glFramebufferTextureMultiviewOVR(_ target:GLenum, _ attachment:GLenum, _ texture:GLuint, _ level:GLint, _ baseViewIndex:GLint, _ numViews:GLsizei) {glFramebufferTextureMultiviewOVR_P(target, attachment, texture, level, baseViewIndex, numViews)}
public func glFramebufferTextureMultiviewOVR(target:GLenum, attachment:GLenum, texture:GLuint, level:GLint, baseViewIndex:GLint, numViews:GLsizei) {glFramebufferTextureMultiviewOVR_P(target, attachment, texture, level, baseViewIndex, numViews)}
var glFramebufferTextureMultiviewOVR_P:@convention(c)(GLenum, GLenum, GLuint, GLint, GLint, GLsizei) -> Void = glFramebufferTextureMultiviewOVR_L
public func glFramebufferTextureOES(_ target:GLenum, _ attachment:GLenum, _ texture:GLuint, _ level:GLint) {glFramebufferTextureOES_P(target, attachment, texture, level)}
public func glFramebufferTextureOES(target:GLenum, attachment:GLenum, texture:GLuint, level:GLint) {glFramebufferTextureOES_P(target, attachment, texture, level)}
var glFramebufferTextureOES_P:@convention(c)(GLenum, GLenum, GLuint, GLint) -> Void = glFramebufferTextureOES_L
public func glFreeObjectBufferATI(_ buffer:GLuint) {glFreeObjectBufferATI_P(buffer)}
public func glFreeObjectBufferATI(buffer:GLuint) {glFreeObjectBufferATI_P(buffer)}
var glFreeObjectBufferATI_P:@convention(c)(GLuint) -> Void = glFreeObjectBufferATI_L
public func glFrontFace(_ mode:GLenum) {glFrontFace_P(mode)}
public func glFrontFace(mode:GLenum) {glFrontFace_P(mode)}
var glFrontFace_P:@convention(c)(GLenum) -> Void = glFrontFace_L
public func glFrustum(_ left:GLdouble, _ right:GLdouble, _ bottom:GLdouble, _ top:GLdouble, _ zNear:GLdouble, _ zFar:GLdouble) {glFrustum_P(left, right, bottom, top, zNear, zFar)}
public func glFrustum(left:GLdouble, right:GLdouble, bottom:GLdouble, top:GLdouble, zNear:GLdouble, zFar:GLdouble) {glFrustum_P(left, right, bottom, top, zNear, zFar)}
var glFrustum_P:@convention(c)(GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble) -> Void = glFrustum_L
public func glFrustumf(_ l:GLfloat, _ r:GLfloat, _ b:GLfloat, _ t:GLfloat, _ n:GLfloat, _ f:GLfloat) {glFrustumf_P(l, r, b, t, n, f)}
public func glFrustumf(l:GLfloat, r:GLfloat, b:GLfloat, t:GLfloat, n:GLfloat, f:GLfloat) {glFrustumf_P(l, r, b, t, n, f)}
var glFrustumf_P:@convention(c)(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glFrustumf_L
public func glFrustumfOES(_ l:GLfloat, _ r:GLfloat, _ b:GLfloat, _ t:GLfloat, _ n:GLfloat, _ f:GLfloat) {glFrustumfOES_P(l, r, b, t, n, f)}
public func glFrustumfOES(l:GLfloat, r:GLfloat, b:GLfloat, t:GLfloat, n:GLfloat, f:GLfloat) {glFrustumfOES_P(l, r, b, t, n, f)}
var glFrustumfOES_P:@convention(c)(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glFrustumfOES_L
public func glFrustumx(_ l:GLfixed, _ r:GLfixed, _ b:GLfixed, _ t:GLfixed, _ n:GLfixed, _ f:GLfixed) {glFrustumx_P(l, r, b, t, n, f)}
public func glFrustumx(l:GLfixed, r:GLfixed, b:GLfixed, t:GLfixed, n:GLfixed, f:GLfixed) {glFrustumx_P(l, r, b, t, n, f)}
var glFrustumx_P:@convention(c)(GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed) -> Void = glFrustumx_L
public func glFrustumxOES(_ l:GLfixed, _ r:GLfixed, _ b:GLfixed, _ t:GLfixed, _ n:GLfixed, _ f:GLfixed) {glFrustumxOES_P(l, r, b, t, n, f)}
public func glFrustumxOES(l:GLfixed, r:GLfixed, b:GLfixed, t:GLfixed, n:GLfixed, f:GLfixed) {glFrustumxOES_P(l, r, b, t, n, f)}
var glFrustumxOES_P:@convention(c)(GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed) -> Void = glFrustumxOES_L
public func glGenAsyncMarkersSGIX(_ range:GLsizei) -> GLuint {return glGenAsyncMarkersSGIX_P(range)}
public func glGenAsyncMarkersSGIX(range:GLsizei) -> GLuint {return glGenAsyncMarkersSGIX_P(range)}
var glGenAsyncMarkersSGIX_P:@convention(c)(GLsizei) -> GLuint = glGenAsyncMarkersSGIX_L
public func glGenBuffers(_ n:GLsizei, _ buffers:UnsafeMutablePointer<GLuint>) {glGenBuffers_P(n, buffers)}
public func glGenBuffers(n:GLsizei, buffers:UnsafeMutablePointer<GLuint>) {glGenBuffers_P(n, buffers)}
var glGenBuffers_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGenBuffers_L
public func glGenBuffersARB(_ n:GLsizei, _ buffers:UnsafeMutablePointer<GLuint>) {glGenBuffersARB_P(n, buffers)}
public func glGenBuffersARB(n:GLsizei, buffers:UnsafeMutablePointer<GLuint>) {glGenBuffersARB_P(n, buffers)}
var glGenBuffersARB_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGenBuffersARB_L
public func glGenFencesAPPLE(_ n:GLsizei, _ fences:UnsafeMutablePointer<GLuint>) {glGenFencesAPPLE_P(n, fences)}
public func glGenFencesAPPLE(n:GLsizei, fences:UnsafeMutablePointer<GLuint>) {glGenFencesAPPLE_P(n, fences)}
var glGenFencesAPPLE_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGenFencesAPPLE_L
public func glGenFencesNV(_ n:GLsizei, _ fences:UnsafeMutablePointer<GLuint>) {glGenFencesNV_P(n, fences)}
public func glGenFencesNV(n:GLsizei, fences:UnsafeMutablePointer<GLuint>) {glGenFencesNV_P(n, fences)}
var glGenFencesNV_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGenFencesNV_L
public func glGenFragmentShadersATI(_ range:GLuint) -> GLuint {return glGenFragmentShadersATI_P(range)}
public func glGenFragmentShadersATI(range:GLuint) -> GLuint {return glGenFragmentShadersATI_P(range)}
var glGenFragmentShadersATI_P:@convention(c)(GLuint) -> GLuint = glGenFragmentShadersATI_L
public func glGenFramebuffers(_ n:GLsizei, _ framebuffers:UnsafeMutablePointer<GLuint>) {glGenFramebuffers_P(n, framebuffers)}
public func glGenFramebuffers(n:GLsizei, framebuffers:UnsafeMutablePointer<GLuint>) {glGenFramebuffers_P(n, framebuffers)}
var glGenFramebuffers_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGenFramebuffers_L
public func glGenFramebuffersEXT(_ n:GLsizei, _ framebuffers:UnsafeMutablePointer<GLuint>) {glGenFramebuffersEXT_P(n, framebuffers)}
public func glGenFramebuffersEXT(n:GLsizei, framebuffers:UnsafeMutablePointer<GLuint>) {glGenFramebuffersEXT_P(n, framebuffers)}
var glGenFramebuffersEXT_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGenFramebuffersEXT_L
public func glGenFramebuffersOES(_ n:GLsizei, _ framebuffers:UnsafeMutablePointer<GLuint>) {glGenFramebuffersOES_P(n, framebuffers)}
public func glGenFramebuffersOES(n:GLsizei, framebuffers:UnsafeMutablePointer<GLuint>) {glGenFramebuffersOES_P(n, framebuffers)}
var glGenFramebuffersOES_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGenFramebuffersOES_L
public func glGenLists(_ range:GLsizei) -> GLuint {return glGenLists_P(range)}
public func glGenLists(range:GLsizei) -> GLuint {return glGenLists_P(range)}
var glGenLists_P:@convention(c)(GLsizei) -> GLuint = glGenLists_L
public func glGenNamesAMD(_ identifier:GLenum, _ num:GLuint, _ names:UnsafeMutablePointer<GLuint>) {glGenNamesAMD_P(identifier, num, names)}
public func glGenNamesAMD(identifier:GLenum, num:GLuint, names:UnsafeMutablePointer<GLuint>) {glGenNamesAMD_P(identifier, num, names)}
var glGenNamesAMD_P:@convention(c)(GLenum, GLuint, UnsafeMutablePointer<GLuint>) -> Void = glGenNamesAMD_L
public func glGenOcclusionQueriesNV(_ n:GLsizei, _ ids:UnsafeMutablePointer<GLuint>) {glGenOcclusionQueriesNV_P(n, ids)}
public func glGenOcclusionQueriesNV(n:GLsizei, ids:UnsafeMutablePointer<GLuint>) {glGenOcclusionQueriesNV_P(n, ids)}
var glGenOcclusionQueriesNV_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGenOcclusionQueriesNV_L
public func glGenPathsNV(_ range:GLsizei) -> GLuint {return glGenPathsNV_P(range)}
public func glGenPathsNV(range:GLsizei) -> GLuint {return glGenPathsNV_P(range)}
var glGenPathsNV_P:@convention(c)(GLsizei) -> GLuint = glGenPathsNV_L
public func glGenPerfMonitorsAMD(_ n:GLsizei, _ monitors:UnsafeMutablePointer<GLuint>) {glGenPerfMonitorsAMD_P(n, monitors)}
public func glGenPerfMonitorsAMD(n:GLsizei, monitors:UnsafeMutablePointer<GLuint>) {glGenPerfMonitorsAMD_P(n, monitors)}
var glGenPerfMonitorsAMD_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGenPerfMonitorsAMD_L
public func glGenProgramPipelines(_ n:GLsizei, _ pipelines:UnsafeMutablePointer<GLuint>) {glGenProgramPipelines_P(n, pipelines)}
public func glGenProgramPipelines(n:GLsizei, pipelines:UnsafeMutablePointer<GLuint>) {glGenProgramPipelines_P(n, pipelines)}
var glGenProgramPipelines_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGenProgramPipelines_L
public func glGenProgramPipelinesEXT(_ n:GLsizei, _ pipelines:UnsafeMutablePointer<GLuint>) {glGenProgramPipelinesEXT_P(n, pipelines)}
public func glGenProgramPipelinesEXT(n:GLsizei, pipelines:UnsafeMutablePointer<GLuint>) {glGenProgramPipelinesEXT_P(n, pipelines)}
var glGenProgramPipelinesEXT_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGenProgramPipelinesEXT_L
public func glGenProgramsARB(_ n:GLsizei, _ programs:UnsafeMutablePointer<GLuint>) {glGenProgramsARB_P(n, programs)}
public func glGenProgramsARB(n:GLsizei, programs:UnsafeMutablePointer<GLuint>) {glGenProgramsARB_P(n, programs)}
var glGenProgramsARB_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGenProgramsARB_L
public func glGenProgramsNV(_ n:GLsizei, _ programs:UnsafeMutablePointer<GLuint>) {glGenProgramsNV_P(n, programs)}
public func glGenProgramsNV(n:GLsizei, programs:UnsafeMutablePointer<GLuint>) {glGenProgramsNV_P(n, programs)}
var glGenProgramsNV_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGenProgramsNV_L
public func glGenQueries(_ n:GLsizei, _ ids:UnsafeMutablePointer<GLuint>) {glGenQueries_P(n, ids)}
public func glGenQueries(n:GLsizei, ids:UnsafeMutablePointer<GLuint>) {glGenQueries_P(n, ids)}
var glGenQueries_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGenQueries_L
public func glGenQueriesARB(_ n:GLsizei, _ ids:UnsafeMutablePointer<GLuint>) {glGenQueriesARB_P(n, ids)}
public func glGenQueriesARB(n:GLsizei, ids:UnsafeMutablePointer<GLuint>) {glGenQueriesARB_P(n, ids)}
var glGenQueriesARB_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGenQueriesARB_L
public func glGenQueriesEXT(_ n:GLsizei, _ ids:UnsafeMutablePointer<GLuint>) {glGenQueriesEXT_P(n, ids)}
public func glGenQueriesEXT(n:GLsizei, ids:UnsafeMutablePointer<GLuint>) {glGenQueriesEXT_P(n, ids)}
var glGenQueriesEXT_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGenQueriesEXT_L
public func glGenRenderbuffers(_ n:GLsizei, _ renderbuffers:UnsafeMutablePointer<GLuint>) {glGenRenderbuffers_P(n, renderbuffers)}
public func glGenRenderbuffers(n:GLsizei, renderbuffers:UnsafeMutablePointer<GLuint>) {glGenRenderbuffers_P(n, renderbuffers)}
var glGenRenderbuffers_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGenRenderbuffers_L
public func glGenRenderbuffersEXT(_ n:GLsizei, _ renderbuffers:UnsafeMutablePointer<GLuint>) {glGenRenderbuffersEXT_P(n, renderbuffers)}
public func glGenRenderbuffersEXT(n:GLsizei, renderbuffers:UnsafeMutablePointer<GLuint>) {glGenRenderbuffersEXT_P(n, renderbuffers)}
var glGenRenderbuffersEXT_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGenRenderbuffersEXT_L
public func glGenRenderbuffersOES(_ n:GLsizei, _ renderbuffers:UnsafeMutablePointer<GLuint>) {glGenRenderbuffersOES_P(n, renderbuffers)}
public func glGenRenderbuffersOES(n:GLsizei, renderbuffers:UnsafeMutablePointer<GLuint>) {glGenRenderbuffersOES_P(n, renderbuffers)}
var glGenRenderbuffersOES_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGenRenderbuffersOES_L
public func glGenSamplers(_ count:GLsizei, _ samplers:UnsafeMutablePointer<GLuint>) {glGenSamplers_P(count, samplers)}
public func glGenSamplers(count:GLsizei, samplers:UnsafeMutablePointer<GLuint>) {glGenSamplers_P(count, samplers)}
var glGenSamplers_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGenSamplers_L
public func glGenSymbolsEXT(_ datatype:GLenum, _ storagetype:GLenum, _ range:GLenum, _ components:GLuint) -> GLuint {return glGenSymbolsEXT_P(datatype, storagetype, range, components)}
public func glGenSymbolsEXT(datatype:GLenum, storagetype:GLenum, range:GLenum, components:GLuint) -> GLuint {return glGenSymbolsEXT_P(datatype, storagetype, range, components)}
var glGenSymbolsEXT_P:@convention(c)(GLenum, GLenum, GLenum, GLuint) -> GLuint = glGenSymbolsEXT_L
public func glGenTextures(_ n:GLsizei, _ textures:UnsafeMutablePointer<GLuint>) {glGenTextures_P(n, textures)}
public func glGenTextures(n:GLsizei, textures:UnsafeMutablePointer<GLuint>) {glGenTextures_P(n, textures)}
var glGenTextures_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGenTextures_L
public func glGenTexturesEXT(_ n:GLsizei, _ textures:UnsafeMutablePointer<GLuint>) {glGenTexturesEXT_P(n, textures)}
public func glGenTexturesEXT(n:GLsizei, textures:UnsafeMutablePointer<GLuint>) {glGenTexturesEXT_P(n, textures)}
var glGenTexturesEXT_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGenTexturesEXT_L
public func glGenTransformFeedbacks(_ n:GLsizei, _ ids:UnsafeMutablePointer<GLuint>) {glGenTransformFeedbacks_P(n, ids)}
public func glGenTransformFeedbacks(n:GLsizei, ids:UnsafeMutablePointer<GLuint>) {glGenTransformFeedbacks_P(n, ids)}
var glGenTransformFeedbacks_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGenTransformFeedbacks_L
public func glGenTransformFeedbacksNV(_ n:GLsizei, _ ids:UnsafeMutablePointer<GLuint>) {glGenTransformFeedbacksNV_P(n, ids)}
public func glGenTransformFeedbacksNV(n:GLsizei, ids:UnsafeMutablePointer<GLuint>) {glGenTransformFeedbacksNV_P(n, ids)}
var glGenTransformFeedbacksNV_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGenTransformFeedbacksNV_L
public func glGenVertexArrays(_ n:GLsizei, _ arrays:UnsafeMutablePointer<GLuint>) {glGenVertexArrays_P(n, arrays)}
public func glGenVertexArrays(n:GLsizei, arrays:UnsafeMutablePointer<GLuint>) {glGenVertexArrays_P(n, arrays)}
var glGenVertexArrays_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGenVertexArrays_L
public func glGenVertexArraysAPPLE(_ n:GLsizei, _ arrays:UnsafeMutablePointer<GLuint>) {glGenVertexArraysAPPLE_P(n, arrays)}
public func glGenVertexArraysAPPLE(n:GLsizei, arrays:UnsafeMutablePointer<GLuint>) {glGenVertexArraysAPPLE_P(n, arrays)}
var glGenVertexArraysAPPLE_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGenVertexArraysAPPLE_L
public func glGenVertexArraysOES(_ n:GLsizei, _ arrays:UnsafeMutablePointer<GLuint>) {glGenVertexArraysOES_P(n, arrays)}
public func glGenVertexArraysOES(n:GLsizei, arrays:UnsafeMutablePointer<GLuint>) {glGenVertexArraysOES_P(n, arrays)}
var glGenVertexArraysOES_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGenVertexArraysOES_L
public func glGenVertexShadersEXT(_ range:GLuint) -> GLuint {return glGenVertexShadersEXT_P(range)}
public func glGenVertexShadersEXT(range:GLuint) -> GLuint {return glGenVertexShadersEXT_P(range)}
var glGenVertexShadersEXT_P:@convention(c)(GLuint) -> GLuint = glGenVertexShadersEXT_L
public func glGenerateMipmap(_ target:GLenum) {glGenerateMipmap_P(target)}
public func glGenerateMipmap(target:GLenum) {glGenerateMipmap_P(target)}
var glGenerateMipmap_P:@convention(c)(GLenum) -> Void = glGenerateMipmap_L
public func glGenerateMipmapEXT(_ target:GLenum) {glGenerateMipmapEXT_P(target)}
public func glGenerateMipmapEXT(target:GLenum) {glGenerateMipmapEXT_P(target)}
var glGenerateMipmapEXT_P:@convention(c)(GLenum) -> Void = glGenerateMipmapEXT_L
public func glGenerateMipmapOES(_ target:GLenum) {glGenerateMipmapOES_P(target)}
public func glGenerateMipmapOES(target:GLenum) {glGenerateMipmapOES_P(target)}
var glGenerateMipmapOES_P:@convention(c)(GLenum) -> Void = glGenerateMipmapOES_L
public func glGenerateMultiTexMipmapEXT(_ texunit:GLenum, _ target:GLenum) {glGenerateMultiTexMipmapEXT_P(texunit, target)}
public func glGenerateMultiTexMipmapEXT(texunit:GLenum, target:GLenum) {glGenerateMultiTexMipmapEXT_P(texunit, target)}
var glGenerateMultiTexMipmapEXT_P:@convention(c)(GLenum, GLenum) -> Void = glGenerateMultiTexMipmapEXT_L
public func glGenerateTextureMipmap(_ texture:GLuint) {glGenerateTextureMipmap_P(texture)}
public func glGenerateTextureMipmap(texture:GLuint) {glGenerateTextureMipmap_P(texture)}
var glGenerateTextureMipmap_P:@convention(c)(GLuint) -> Void = glGenerateTextureMipmap_L
public func glGenerateTextureMipmapEXT(_ texture:GLuint, _ target:GLenum) {glGenerateTextureMipmapEXT_P(texture, target)}
public func glGenerateTextureMipmapEXT(texture:GLuint, target:GLenum) {glGenerateTextureMipmapEXT_P(texture, target)}
var glGenerateTextureMipmapEXT_P:@convention(c)(GLuint, GLenum) -> Void = glGenerateTextureMipmapEXT_L
public func glGetActiveAtomicCounterBufferiv(_ program:GLuint, _ bufferIndex:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetActiveAtomicCounterBufferiv_P(program, bufferIndex, pname, params)}
public func glGetActiveAtomicCounterBufferiv(program:GLuint, bufferIndex:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetActiveAtomicCounterBufferiv_P(program, bufferIndex, pname, params)}
var glGetActiveAtomicCounterBufferiv_P:@convention(c)(GLuint, GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetActiveAtomicCounterBufferiv_L
public func glGetActiveAttrib(_ program:GLuint, _ index:GLuint, _ bufSize:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ size:UnsafeMutablePointer<GLint>, _ type:UnsafeMutablePointer<GLenum>, _ name:UnsafeMutablePointer<GLchar>) {glGetActiveAttrib_P(program, index, bufSize, length, size, type, name)}
public func glGetActiveAttrib(program:GLuint, index:GLuint, bufSize:GLsizei, length:UnsafeMutablePointer<GLsizei>, size:UnsafeMutablePointer<GLint>, type:UnsafeMutablePointer<GLenum>, name:UnsafeMutablePointer<GLchar>) {glGetActiveAttrib_P(program, index, bufSize, length, size, type, name)}
var glGetActiveAttrib_P:@convention(c)(GLuint, GLuint, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLint>, UnsafeMutablePointer<GLenum>, UnsafeMutablePointer<GLchar>) -> Void = glGetActiveAttrib_L
public func glGetActiveAttribARB(_ programObj:GLhandleARB, _ index:GLuint, _ maxLength:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ size:UnsafeMutablePointer<GLint>, _ type:UnsafeMutablePointer<GLenum>, _ name:UnsafeMutablePointer<GLcharARB>) {glGetActiveAttribARB_P(programObj, index, maxLength, length, size, type, name)}
public func glGetActiveAttribARB(programObj:GLhandleARB, index:GLuint, maxLength:GLsizei, length:UnsafeMutablePointer<GLsizei>, size:UnsafeMutablePointer<GLint>, type:UnsafeMutablePointer<GLenum>, name:UnsafeMutablePointer<GLcharARB>) {glGetActiveAttribARB_P(programObj, index, maxLength, length, size, type, name)}
var glGetActiveAttribARB_P:@convention(c)(GLhandleARB, GLuint, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLint>, UnsafeMutablePointer<GLenum>, UnsafeMutablePointer<GLcharARB>) -> Void = glGetActiveAttribARB_L
public func glGetActiveSubroutineName(_ program:GLuint, _ shadertype:GLenum, _ index:GLuint, _ bufsize:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ name:UnsafeMutablePointer<GLchar>) {glGetActiveSubroutineName_P(program, shadertype, index, bufsize, length, name)}
public func glGetActiveSubroutineName(program:GLuint, shadertype:GLenum, index:GLuint, bufsize:GLsizei, length:UnsafeMutablePointer<GLsizei>, name:UnsafeMutablePointer<GLchar>) {glGetActiveSubroutineName_P(program, shadertype, index, bufsize, length, name)}
var glGetActiveSubroutineName_P:@convention(c)(GLuint, GLenum, GLuint, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLchar>) -> Void = glGetActiveSubroutineName_L
public func glGetActiveSubroutineUniformName(_ program:GLuint, _ shadertype:GLenum, _ index:GLuint, _ bufsize:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ name:UnsafeMutablePointer<GLchar>) {glGetActiveSubroutineUniformName_P(program, shadertype, index, bufsize, length, name)}
public func glGetActiveSubroutineUniformName(program:GLuint, shadertype:GLenum, index:GLuint, bufsize:GLsizei, length:UnsafeMutablePointer<GLsizei>, name:UnsafeMutablePointer<GLchar>) {glGetActiveSubroutineUniformName_P(program, shadertype, index, bufsize, length, name)}
var glGetActiveSubroutineUniformName_P:@convention(c)(GLuint, GLenum, GLuint, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLchar>) -> Void = glGetActiveSubroutineUniformName_L
public func glGetActiveSubroutineUniformiv(_ program:GLuint, _ shadertype:GLenum, _ index:GLuint, _ pname:GLenum, _ values:UnsafeMutablePointer<GLint>) {glGetActiveSubroutineUniformiv_P(program, shadertype, index, pname, values)}
public func glGetActiveSubroutineUniformiv(program:GLuint, shadertype:GLenum, index:GLuint, pname:GLenum, values:UnsafeMutablePointer<GLint>) {glGetActiveSubroutineUniformiv_P(program, shadertype, index, pname, values)}
var glGetActiveSubroutineUniformiv_P:@convention(c)(GLuint, GLenum, GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetActiveSubroutineUniformiv_L
public func glGetActiveUniform(_ program:GLuint, _ index:GLuint, _ bufSize:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ size:UnsafeMutablePointer<GLint>, _ type:UnsafeMutablePointer<GLenum>, _ name:UnsafeMutablePointer<GLchar>) {glGetActiveUniform_P(program, index, bufSize, length, size, type, name)}
public func glGetActiveUniform(program:GLuint, index:GLuint, bufSize:GLsizei, length:UnsafeMutablePointer<GLsizei>, size:UnsafeMutablePointer<GLint>, type:UnsafeMutablePointer<GLenum>, name:UnsafeMutablePointer<GLchar>) {glGetActiveUniform_P(program, index, bufSize, length, size, type, name)}
var glGetActiveUniform_P:@convention(c)(GLuint, GLuint, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLint>, UnsafeMutablePointer<GLenum>, UnsafeMutablePointer<GLchar>) -> Void = glGetActiveUniform_L
public func glGetActiveUniformARB(_ programObj:GLhandleARB, _ index:GLuint, _ maxLength:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ size:UnsafeMutablePointer<GLint>, _ type:UnsafeMutablePointer<GLenum>, _ name:UnsafeMutablePointer<GLcharARB>) {glGetActiveUniformARB_P(programObj, index, maxLength, length, size, type, name)}
public func glGetActiveUniformARB(programObj:GLhandleARB, index:GLuint, maxLength:GLsizei, length:UnsafeMutablePointer<GLsizei>, size:UnsafeMutablePointer<GLint>, type:UnsafeMutablePointer<GLenum>, name:UnsafeMutablePointer<GLcharARB>) {glGetActiveUniformARB_P(programObj, index, maxLength, length, size, type, name)}
var glGetActiveUniformARB_P:@convention(c)(GLhandleARB, GLuint, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLint>, UnsafeMutablePointer<GLenum>, UnsafeMutablePointer<GLcharARB>) -> Void = glGetActiveUniformARB_L
public func glGetActiveUniformBlockName(_ program:GLuint, _ uniformBlockIndex:GLuint, _ bufSize:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ uniformBlockName:UnsafeMutablePointer<GLchar>) {glGetActiveUniformBlockName_P(program, uniformBlockIndex, bufSize, length, uniformBlockName)}
public func glGetActiveUniformBlockName(program:GLuint, uniformBlockIndex:GLuint, bufSize:GLsizei, length:UnsafeMutablePointer<GLsizei>, uniformBlockName:UnsafeMutablePointer<GLchar>) {glGetActiveUniformBlockName_P(program, uniformBlockIndex, bufSize, length, uniformBlockName)}
var glGetActiveUniformBlockName_P:@convention(c)(GLuint, GLuint, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLchar>) -> Void = glGetActiveUniformBlockName_L
public func glGetActiveUniformBlockiv(_ program:GLuint, _ uniformBlockIndex:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetActiveUniformBlockiv_P(program, uniformBlockIndex, pname, params)}
public func glGetActiveUniformBlockiv(program:GLuint, uniformBlockIndex:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetActiveUniformBlockiv_P(program, uniformBlockIndex, pname, params)}
var glGetActiveUniformBlockiv_P:@convention(c)(GLuint, GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetActiveUniformBlockiv_L
public func glGetActiveUniformName(_ program:GLuint, _ uniformIndex:GLuint, _ bufSize:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ uniformName:UnsafeMutablePointer<GLchar>) {glGetActiveUniformName_P(program, uniformIndex, bufSize, length, uniformName)}
public func glGetActiveUniformName(program:GLuint, uniformIndex:GLuint, bufSize:GLsizei, length:UnsafeMutablePointer<GLsizei>, uniformName:UnsafeMutablePointer<GLchar>) {glGetActiveUniformName_P(program, uniformIndex, bufSize, length, uniformName)}
var glGetActiveUniformName_P:@convention(c)(GLuint, GLuint, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLchar>) -> Void = glGetActiveUniformName_L
public func glGetActiveUniformsiv(_ program:GLuint, _ uniformCount:GLsizei, _ uniformIndices:UnsafePointer<GLuint>, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetActiveUniformsiv_P(program, uniformCount, uniformIndices, pname, params)}
public func glGetActiveUniformsiv(program:GLuint, uniformCount:GLsizei, uniformIndices:UnsafePointer<GLuint>, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetActiveUniformsiv_P(program, uniformCount, uniformIndices, pname, params)}
var glGetActiveUniformsiv_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLuint>, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetActiveUniformsiv_L
public func glGetActiveVaryingNV(_ program:GLuint, _ index:GLuint, _ bufSize:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ size:UnsafeMutablePointer<GLsizei>, _ type:UnsafeMutablePointer<GLenum>, _ name:UnsafeMutablePointer<GLchar>) {glGetActiveVaryingNV_P(program, index, bufSize, length, size, type, name)}
public func glGetActiveVaryingNV(program:GLuint, index:GLuint, bufSize:GLsizei, length:UnsafeMutablePointer<GLsizei>, size:UnsafeMutablePointer<GLsizei>, type:UnsafeMutablePointer<GLenum>, name:UnsafeMutablePointer<GLchar>) {glGetActiveVaryingNV_P(program, index, bufSize, length, size, type, name)}
var glGetActiveVaryingNV_P:@convention(c)(GLuint, GLuint, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLenum>, UnsafeMutablePointer<GLchar>) -> Void = glGetActiveVaryingNV_L
public func glGetArrayObjectfvATI(_ array:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetArrayObjectfvATI_P(array, pname, params)}
public func glGetArrayObjectfvATI(array:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetArrayObjectfvATI_P(array, pname, params)}
var glGetArrayObjectfvATI_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetArrayObjectfvATI_L
public func glGetArrayObjectivATI(_ array:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetArrayObjectivATI_P(array, pname, params)}
public func glGetArrayObjectivATI(array:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetArrayObjectivATI_P(array, pname, params)}
var glGetArrayObjectivATI_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetArrayObjectivATI_L
public func glGetAttachedObjectsARB(_ containerObj:GLhandleARB, _ maxCount:GLsizei, _ count:UnsafeMutablePointer<GLsizei>, _ obj:UnsafeMutablePointer<GLhandleARB>) {glGetAttachedObjectsARB_P(containerObj, maxCount, count, obj)}
public func glGetAttachedObjectsARB(containerObj:GLhandleARB, maxCount:GLsizei, count:UnsafeMutablePointer<GLsizei>, obj:UnsafeMutablePointer<GLhandleARB>) {glGetAttachedObjectsARB_P(containerObj, maxCount, count, obj)}
var glGetAttachedObjectsARB_P:@convention(c)(GLhandleARB, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLhandleARB>) -> Void = glGetAttachedObjectsARB_L
public func glGetAttachedShaders(_ program:GLuint, _ maxCount:GLsizei, _ count:UnsafeMutablePointer<GLsizei>, _ shaders:UnsafeMutablePointer<GLuint>) {glGetAttachedShaders_P(program, maxCount, count, shaders)}
public func glGetAttachedShaders(program:GLuint, maxCount:GLsizei, count:UnsafeMutablePointer<GLsizei>, shaders:UnsafeMutablePointer<GLuint>) {glGetAttachedShaders_P(program, maxCount, count, shaders)}
var glGetAttachedShaders_P:@convention(c)(GLuint, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLuint>) -> Void = glGetAttachedShaders_L
public func glGetAttribLocation(_ program:GLuint, _ name:UnsafePointer<GLchar>) -> GLint {return glGetAttribLocation_P(program, name)}
public func glGetAttribLocation(program:GLuint, name:UnsafePointer<GLchar>) -> GLint {return glGetAttribLocation_P(program, name)}
var glGetAttribLocation_P:@convention(c)(GLuint, UnsafePointer<GLchar>) -> GLint = glGetAttribLocation_L
public func glGetAttribLocationARB(_ programObj:GLhandleARB, _ name:UnsafePointer<GLcharARB>) -> GLint {return glGetAttribLocationARB_P(programObj, name)}
public func glGetAttribLocationARB(programObj:GLhandleARB, name:UnsafePointer<GLcharARB>) -> GLint {return glGetAttribLocationARB_P(programObj, name)}
var glGetAttribLocationARB_P:@convention(c)(GLhandleARB, UnsafePointer<GLcharARB>) -> GLint = glGetAttribLocationARB_L
public func glGetBooleanIndexedvEXT(_ target:GLenum, _ index:GLuint, _ data:UnsafeMutablePointer<GLboolean>) {glGetBooleanIndexedvEXT_P(target, index, data)}
public func glGetBooleanIndexedvEXT(target:GLenum, index:GLuint, data:UnsafeMutablePointer<GLboolean>) {glGetBooleanIndexedvEXT_P(target, index, data)}
var glGetBooleanIndexedvEXT_P:@convention(c)(GLenum, GLuint, UnsafeMutablePointer<GLboolean>) -> Void = glGetBooleanIndexedvEXT_L
public func glGetBooleani_v(_ target:GLenum, _ index:GLuint, _ data:UnsafeMutablePointer<GLboolean>) {glGetBooleani_v_P(target, index, data)}
public func glGetBooleani_v(target:GLenum, index:GLuint, data:UnsafeMutablePointer<GLboolean>) {glGetBooleani_v_P(target, index, data)}
var glGetBooleani_v_P:@convention(c)(GLenum, GLuint, UnsafeMutablePointer<GLboolean>) -> Void = glGetBooleani_v_L
public func glGetBooleanv(_ pname:GLenum, _ data:UnsafeMutablePointer<GLboolean>) {glGetBooleanv_P(pname, data)}
public func glGetBooleanv(pname:GLenum, data:UnsafeMutablePointer<GLboolean>) {glGetBooleanv_P(pname, data)}
var glGetBooleanv_P:@convention(c)(GLenum, UnsafeMutablePointer<GLboolean>) -> Void = glGetBooleanv_L
public func glGetBufferParameteri64v(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint64>) {glGetBufferParameteri64v_P(target, pname, params)}
public func glGetBufferParameteri64v(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint64>) {glGetBufferParameteri64v_P(target, pname, params)}
var glGetBufferParameteri64v_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint64>) -> Void = glGetBufferParameteri64v_L
public func glGetBufferParameteriv(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetBufferParameteriv_P(target, pname, params)}
public func glGetBufferParameteriv(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetBufferParameteriv_P(target, pname, params)}
var glGetBufferParameteriv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetBufferParameteriv_L
public func glGetBufferParameterivARB(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetBufferParameterivARB_P(target, pname, params)}
public func glGetBufferParameterivARB(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetBufferParameterivARB_P(target, pname, params)}
var glGetBufferParameterivARB_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetBufferParameterivARB_L
public func glGetBufferParameterui64vNV(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLuint64EXT>) {glGetBufferParameterui64vNV_P(target, pname, params)}
public func glGetBufferParameterui64vNV(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLuint64EXT>) {glGetBufferParameterui64vNV_P(target, pname, params)}
var glGetBufferParameterui64vNV_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLuint64EXT>) -> Void = glGetBufferParameterui64vNV_L
public func glGetBufferPointerv(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetBufferPointerv_P(target, pname, params)}
public func glGetBufferPointerv(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetBufferPointerv_P(target, pname, params)}
var glGetBufferPointerv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<UnsafeMutableRawPointer>) -> Void = glGetBufferPointerv_L
public func glGetBufferPointervARB(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetBufferPointervARB_P(target, pname, params)}
public func glGetBufferPointervARB(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetBufferPointervARB_P(target, pname, params)}
var glGetBufferPointervARB_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<UnsafeMutableRawPointer>) -> Void = glGetBufferPointervARB_L
public func glGetBufferPointervOES(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetBufferPointervOES_P(target, pname, params)}
public func glGetBufferPointervOES(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetBufferPointervOES_P(target, pname, params)}
var glGetBufferPointervOES_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<UnsafeMutableRawPointer>) -> Void = glGetBufferPointervOES_L
public func glGetBufferSubData(_ target:GLenum, _ offset:GLintptr, _ size:GLsizeiptr, _ data:UnsafeMutableRawPointer) {glGetBufferSubData_P(target, offset, size, data)}
public func glGetBufferSubData(target:GLenum, offset:GLintptr, size:GLsizeiptr, data:UnsafeMutableRawPointer) {glGetBufferSubData_P(target, offset, size, data)}
var glGetBufferSubData_P:@convention(c)(GLenum, GLintptr, GLsizeiptr, UnsafeMutableRawPointer) -> Void = glGetBufferSubData_L
public func glGetBufferSubDataARB(_ target:GLenum, _ offset:GLintptrARB, _ size:GLsizeiptrARB, _ data:UnsafeMutableRawPointer) {glGetBufferSubDataARB_P(target, offset, size, data)}
public func glGetBufferSubDataARB(target:GLenum, offset:GLintptrARB, size:GLsizeiptrARB, data:UnsafeMutableRawPointer) {glGetBufferSubDataARB_P(target, offset, size, data)}
var glGetBufferSubDataARB_P:@convention(c)(GLenum, GLintptrARB, GLsizeiptrARB, UnsafeMutableRawPointer) -> Void = glGetBufferSubDataARB_L
public func glGetClipPlane(_ plane:GLenum, _ equation:UnsafeMutablePointer<GLdouble>) {glGetClipPlane_P(plane, equation)}
public func glGetClipPlane(plane:GLenum, equation:UnsafeMutablePointer<GLdouble>) {glGetClipPlane_P(plane, equation)}
var glGetClipPlane_P:@convention(c)(GLenum, UnsafeMutablePointer<GLdouble>) -> Void = glGetClipPlane_L
public func glGetClipPlanef(_ plane:GLenum, _ equation:UnsafeMutablePointer<GLfloat>) {glGetClipPlanef_P(plane, equation)}
public func glGetClipPlanef(plane:GLenum, equation:UnsafeMutablePointer<GLfloat>) {glGetClipPlanef_P(plane, equation)}
var glGetClipPlanef_P:@convention(c)(GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetClipPlanef_L
public func glGetClipPlanefOES(_ plane:GLenum, _ equation:UnsafeMutablePointer<GLfloat>) {glGetClipPlanefOES_P(plane, equation)}
public func glGetClipPlanefOES(plane:GLenum, equation:UnsafeMutablePointer<GLfloat>) {glGetClipPlanefOES_P(plane, equation)}
var glGetClipPlanefOES_P:@convention(c)(GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetClipPlanefOES_L
public func glGetClipPlanex(_ plane:GLenum, _ equation:UnsafeMutablePointer<GLfixed>) {glGetClipPlanex_P(plane, equation)}
public func glGetClipPlanex(plane:GLenum, equation:UnsafeMutablePointer<GLfixed>) {glGetClipPlanex_P(plane, equation)}
var glGetClipPlanex_P:@convention(c)(GLenum, UnsafeMutablePointer<GLfixed>) -> Void = glGetClipPlanex_L
public func glGetClipPlanexOES(_ plane:GLenum, _ equation:UnsafeMutablePointer<GLfixed>) {glGetClipPlanexOES_P(plane, equation)}
public func glGetClipPlanexOES(plane:GLenum, equation:UnsafeMutablePointer<GLfixed>) {glGetClipPlanexOES_P(plane, equation)}
var glGetClipPlanexOES_P:@convention(c)(GLenum, UnsafeMutablePointer<GLfixed>) -> Void = glGetClipPlanexOES_L
public func glGetColorTable(_ target:GLenum, _ format:GLenum, _ type:GLenum, _ table:UnsafeMutableRawPointer) {glGetColorTable_P(target, format, type, table)}
public func glGetColorTable(target:GLenum, format:GLenum, type:GLenum, table:UnsafeMutableRawPointer) {glGetColorTable_P(target, format, type, table)}
var glGetColorTable_P:@convention(c)(GLenum, GLenum, GLenum, UnsafeMutableRawPointer) -> Void = glGetColorTable_L
public func glGetColorTableEXT(_ target:GLenum, _ format:GLenum, _ type:GLenum, _ data:UnsafeMutableRawPointer) {glGetColorTableEXT_P(target, format, type, data)}
public func glGetColorTableEXT(target:GLenum, format:GLenum, type:GLenum, data:UnsafeMutableRawPointer) {glGetColorTableEXT_P(target, format, type, data)}
var glGetColorTableEXT_P:@convention(c)(GLenum, GLenum, GLenum, UnsafeMutableRawPointer) -> Void = glGetColorTableEXT_L
public func glGetColorTableParameterfv(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetColorTableParameterfv_P(target, pname, params)}
public func glGetColorTableParameterfv(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetColorTableParameterfv_P(target, pname, params)}
var glGetColorTableParameterfv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetColorTableParameterfv_L
public func glGetColorTableParameterfvEXT(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetColorTableParameterfvEXT_P(target, pname, params)}
public func glGetColorTableParameterfvEXT(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetColorTableParameterfvEXT_P(target, pname, params)}
var glGetColorTableParameterfvEXT_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetColorTableParameterfvEXT_L
public func glGetColorTableParameterfvSGI(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetColorTableParameterfvSGI_P(target, pname, params)}
public func glGetColorTableParameterfvSGI(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetColorTableParameterfvSGI_P(target, pname, params)}
var glGetColorTableParameterfvSGI_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetColorTableParameterfvSGI_L
public func glGetColorTableParameteriv(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetColorTableParameteriv_P(target, pname, params)}
public func glGetColorTableParameteriv(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetColorTableParameteriv_P(target, pname, params)}
var glGetColorTableParameteriv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetColorTableParameteriv_L
public func glGetColorTableParameterivEXT(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetColorTableParameterivEXT_P(target, pname, params)}
public func glGetColorTableParameterivEXT(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetColorTableParameterivEXT_P(target, pname, params)}
var glGetColorTableParameterivEXT_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetColorTableParameterivEXT_L
public func glGetColorTableParameterivSGI(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetColorTableParameterivSGI_P(target, pname, params)}
public func glGetColorTableParameterivSGI(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetColorTableParameterivSGI_P(target, pname, params)}
var glGetColorTableParameterivSGI_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetColorTableParameterivSGI_L
public func glGetColorTableSGI(_ target:GLenum, _ format:GLenum, _ type:GLenum, _ table:UnsafeMutableRawPointer) {glGetColorTableSGI_P(target, format, type, table)}
public func glGetColorTableSGI(target:GLenum, format:GLenum, type:GLenum, table:UnsafeMutableRawPointer) {glGetColorTableSGI_P(target, format, type, table)}
var glGetColorTableSGI_P:@convention(c)(GLenum, GLenum, GLenum, UnsafeMutableRawPointer) -> Void = glGetColorTableSGI_L
public func glGetCombinerInputParameterfvNV(_ stage:GLenum, _ portion:GLenum, _ variable:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetCombinerInputParameterfvNV_P(stage, portion, variable, pname, params)}
public func glGetCombinerInputParameterfvNV(stage:GLenum, portion:GLenum, variable:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetCombinerInputParameterfvNV_P(stage, portion, variable, pname, params)}
var glGetCombinerInputParameterfvNV_P:@convention(c)(GLenum, GLenum, GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetCombinerInputParameterfvNV_L
public func glGetCombinerInputParameterivNV(_ stage:GLenum, _ portion:GLenum, _ variable:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetCombinerInputParameterivNV_P(stage, portion, variable, pname, params)}
public func glGetCombinerInputParameterivNV(stage:GLenum, portion:GLenum, variable:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetCombinerInputParameterivNV_P(stage, portion, variable, pname, params)}
var glGetCombinerInputParameterivNV_P:@convention(c)(GLenum, GLenum, GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetCombinerInputParameterivNV_L
public func glGetCombinerOutputParameterfvNV(_ stage:GLenum, _ portion:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetCombinerOutputParameterfvNV_P(stage, portion, pname, params)}
public func glGetCombinerOutputParameterfvNV(stage:GLenum, portion:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetCombinerOutputParameterfvNV_P(stage, portion, pname, params)}
var glGetCombinerOutputParameterfvNV_P:@convention(c)(GLenum, GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetCombinerOutputParameterfvNV_L
public func glGetCombinerOutputParameterivNV(_ stage:GLenum, _ portion:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetCombinerOutputParameterivNV_P(stage, portion, pname, params)}
public func glGetCombinerOutputParameterivNV(stage:GLenum, portion:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetCombinerOutputParameterivNV_P(stage, portion, pname, params)}
var glGetCombinerOutputParameterivNV_P:@convention(c)(GLenum, GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetCombinerOutputParameterivNV_L
public func glGetCombinerStageParameterfvNV(_ stage:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetCombinerStageParameterfvNV_P(stage, pname, params)}
public func glGetCombinerStageParameterfvNV(stage:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetCombinerStageParameterfvNV_P(stage, pname, params)}
var glGetCombinerStageParameterfvNV_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetCombinerStageParameterfvNV_L
public func glGetCommandHeaderNV(_ tokenID:GLenum, _ size:GLuint) -> GLuint {return glGetCommandHeaderNV_P(tokenID, size)}
public func glGetCommandHeaderNV(tokenID:GLenum, size:GLuint) -> GLuint {return glGetCommandHeaderNV_P(tokenID, size)}
var glGetCommandHeaderNV_P:@convention(c)(GLenum, GLuint) -> GLuint = glGetCommandHeaderNV_L
public func glGetCompressedMultiTexImageEXT(_ texunit:GLenum, _ target:GLenum, _ lod:GLint, _ img:UnsafeMutableRawPointer) {glGetCompressedMultiTexImageEXT_P(texunit, target, lod, img)}
public func glGetCompressedMultiTexImageEXT(texunit:GLenum, target:GLenum, lod:GLint, img:UnsafeMutableRawPointer) {glGetCompressedMultiTexImageEXT_P(texunit, target, lod, img)}
var glGetCompressedMultiTexImageEXT_P:@convention(c)(GLenum, GLenum, GLint, UnsafeMutableRawPointer) -> Void = glGetCompressedMultiTexImageEXT_L
public func glGetCompressedTexImage(_ target:GLenum, _ level:GLint, _ img:UnsafeMutableRawPointer) {glGetCompressedTexImage_P(target, level, img)}
public func glGetCompressedTexImage(target:GLenum, level:GLint, img:UnsafeMutableRawPointer) {glGetCompressedTexImage_P(target, level, img)}
var glGetCompressedTexImage_P:@convention(c)(GLenum, GLint, UnsafeMutableRawPointer) -> Void = glGetCompressedTexImage_L
public func glGetCompressedTexImageARB(_ target:GLenum, _ level:GLint, _ img:UnsafeMutableRawPointer) {glGetCompressedTexImageARB_P(target, level, img)}
public func glGetCompressedTexImageARB(target:GLenum, level:GLint, img:UnsafeMutableRawPointer) {glGetCompressedTexImageARB_P(target, level, img)}
var glGetCompressedTexImageARB_P:@convention(c)(GLenum, GLint, UnsafeMutableRawPointer) -> Void = glGetCompressedTexImageARB_L
public func glGetCompressedTextureImage(_ texture:GLuint, _ level:GLint, _ bufSize:GLsizei, _ pixels:UnsafeMutableRawPointer) {glGetCompressedTextureImage_P(texture, level, bufSize, pixels)}
public func glGetCompressedTextureImage(texture:GLuint, level:GLint, bufSize:GLsizei, pixels:UnsafeMutableRawPointer) {glGetCompressedTextureImage_P(texture, level, bufSize, pixels)}
var glGetCompressedTextureImage_P:@convention(c)(GLuint, GLint, GLsizei, UnsafeMutableRawPointer) -> Void = glGetCompressedTextureImage_L
public func glGetCompressedTextureImageEXT(_ texture:GLuint, _ target:GLenum, _ lod:GLint, _ img:UnsafeMutableRawPointer) {glGetCompressedTextureImageEXT_P(texture, target, lod, img)}
public func glGetCompressedTextureImageEXT(texture:GLuint, target:GLenum, lod:GLint, img:UnsafeMutableRawPointer) {glGetCompressedTextureImageEXT_P(texture, target, lod, img)}
var glGetCompressedTextureImageEXT_P:@convention(c)(GLuint, GLenum, GLint, UnsafeMutableRawPointer) -> Void = glGetCompressedTextureImageEXT_L
public func glGetCompressedTextureSubImage(_ texture:GLuint, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ zoffset:GLint, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ bufSize:GLsizei, _ pixels:UnsafeMutableRawPointer) {glGetCompressedTextureSubImage_P(texture, level, xoffset, yoffset, zoffset, width, height, depth, bufSize, pixels)}
public func glGetCompressedTextureSubImage(texture:GLuint, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, bufSize:GLsizei, pixels:UnsafeMutableRawPointer) {glGetCompressedTextureSubImage_P(texture, level, xoffset, yoffset, zoffset, width, height, depth, bufSize, pixels)}
var glGetCompressedTextureSubImage_P:@convention(c)(GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLsizei, UnsafeMutableRawPointer) -> Void = glGetCompressedTextureSubImage_L
public func glGetConvolutionFilter(_ target:GLenum, _ format:GLenum, _ type:GLenum, _ image:UnsafeMutableRawPointer) {glGetConvolutionFilter_P(target, format, type, image)}
public func glGetConvolutionFilter(target:GLenum, format:GLenum, type:GLenum, image:UnsafeMutableRawPointer) {glGetConvolutionFilter_P(target, format, type, image)}
var glGetConvolutionFilter_P:@convention(c)(GLenum, GLenum, GLenum, UnsafeMutableRawPointer) -> Void = glGetConvolutionFilter_L
public func glGetConvolutionFilterEXT(_ target:GLenum, _ format:GLenum, _ type:GLenum, _ image:UnsafeMutableRawPointer) {glGetConvolutionFilterEXT_P(target, format, type, image)}
public func glGetConvolutionFilterEXT(target:GLenum, format:GLenum, type:GLenum, image:UnsafeMutableRawPointer) {glGetConvolutionFilterEXT_P(target, format, type, image)}
var glGetConvolutionFilterEXT_P:@convention(c)(GLenum, GLenum, GLenum, UnsafeMutableRawPointer) -> Void = glGetConvolutionFilterEXT_L
public func glGetConvolutionParameterfv(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetConvolutionParameterfv_P(target, pname, params)}
public func glGetConvolutionParameterfv(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetConvolutionParameterfv_P(target, pname, params)}
var glGetConvolutionParameterfv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetConvolutionParameterfv_L
public func glGetConvolutionParameterfvEXT(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetConvolutionParameterfvEXT_P(target, pname, params)}
public func glGetConvolutionParameterfvEXT(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetConvolutionParameterfvEXT_P(target, pname, params)}
var glGetConvolutionParameterfvEXT_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetConvolutionParameterfvEXT_L
public func glGetConvolutionParameteriv(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetConvolutionParameteriv_P(target, pname, params)}
public func glGetConvolutionParameteriv(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetConvolutionParameteriv_P(target, pname, params)}
var glGetConvolutionParameteriv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetConvolutionParameteriv_L
public func glGetConvolutionParameterivEXT(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetConvolutionParameterivEXT_P(target, pname, params)}
public func glGetConvolutionParameterivEXT(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetConvolutionParameterivEXT_P(target, pname, params)}
var glGetConvolutionParameterivEXT_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetConvolutionParameterivEXT_L
public func glGetConvolutionParameterxvOES(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfixed>) {glGetConvolutionParameterxvOES_P(target, pname, params)}
public func glGetConvolutionParameterxvOES(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfixed>) {glGetConvolutionParameterxvOES_P(target, pname, params)}
var glGetConvolutionParameterxvOES_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfixed>) -> Void = glGetConvolutionParameterxvOES_L
public func glGetCoverageModulationTableNV(_ bufsize:GLsizei, _ v:UnsafeMutablePointer<GLfloat>) {glGetCoverageModulationTableNV_P(bufsize, v)}
public func glGetCoverageModulationTableNV(bufsize:GLsizei, v:UnsafeMutablePointer<GLfloat>) {glGetCoverageModulationTableNV_P(bufsize, v)}
var glGetCoverageModulationTableNV_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLfloat>) -> Void = glGetCoverageModulationTableNV_L
public func glGetDebugMessageLog(_ count:GLuint, _ bufSize:GLsizei, _ sources:UnsafeMutablePointer<GLenum>, _ types:UnsafeMutablePointer<GLenum>, _ ids:UnsafeMutablePointer<GLuint>, _ severities:UnsafeMutablePointer<GLenum>, _ lengths:UnsafeMutablePointer<GLsizei>, _ messageLog:UnsafeMutablePointer<GLchar>) -> GLuint {return glGetDebugMessageLog_P(count, bufSize, sources, types, ids, severities, lengths, messageLog)}
public func glGetDebugMessageLog(count:GLuint, bufSize:GLsizei, sources:UnsafeMutablePointer<GLenum>, types:UnsafeMutablePointer<GLenum>, ids:UnsafeMutablePointer<GLuint>, severities:UnsafeMutablePointer<GLenum>, lengths:UnsafeMutablePointer<GLsizei>, messageLog:UnsafeMutablePointer<GLchar>) -> GLuint {return glGetDebugMessageLog_P(count, bufSize, sources, types, ids, severities, lengths, messageLog)}
var glGetDebugMessageLog_P:@convention(c)(GLuint, GLsizei, UnsafeMutablePointer<GLenum>, UnsafeMutablePointer<GLenum>, UnsafeMutablePointer<GLuint>, UnsafeMutablePointer<GLenum>, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLchar>) -> GLuint = glGetDebugMessageLog_L
public func glGetDebugMessageLogAMD(_ count:GLuint, _ bufsize:GLsizei, _ categories:UnsafeMutablePointer<GLenum>, _ severities:UnsafeMutablePointer<GLuint>, _ ids:UnsafeMutablePointer<GLuint>, _ lengths:UnsafeMutablePointer<GLsizei>, _ message:UnsafeMutablePointer<GLchar>) -> GLuint {return glGetDebugMessageLogAMD_P(count, bufsize, categories, severities, ids, lengths, message)}
public func glGetDebugMessageLogAMD(count:GLuint, bufsize:GLsizei, categories:UnsafeMutablePointer<GLenum>, severities:UnsafeMutablePointer<GLuint>, ids:UnsafeMutablePointer<GLuint>, lengths:UnsafeMutablePointer<GLsizei>, message:UnsafeMutablePointer<GLchar>) -> GLuint {return glGetDebugMessageLogAMD_P(count, bufsize, categories, severities, ids, lengths, message)}
var glGetDebugMessageLogAMD_P:@convention(c)(GLuint, GLsizei, UnsafeMutablePointer<GLenum>, UnsafeMutablePointer<GLuint>, UnsafeMutablePointer<GLuint>, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLchar>) -> GLuint = glGetDebugMessageLogAMD_L
public func glGetDebugMessageLogARB(_ count:GLuint, _ bufSize:GLsizei, _ sources:UnsafeMutablePointer<GLenum>, _ types:UnsafeMutablePointer<GLenum>, _ ids:UnsafeMutablePointer<GLuint>, _ severities:UnsafeMutablePointer<GLenum>, _ lengths:UnsafeMutablePointer<GLsizei>, _ messageLog:UnsafeMutablePointer<GLchar>) -> GLuint {return glGetDebugMessageLogARB_P(count, bufSize, sources, types, ids, severities, lengths, messageLog)}
public func glGetDebugMessageLogARB(count:GLuint, bufSize:GLsizei, sources:UnsafeMutablePointer<GLenum>, types:UnsafeMutablePointer<GLenum>, ids:UnsafeMutablePointer<GLuint>, severities:UnsafeMutablePointer<GLenum>, lengths:UnsafeMutablePointer<GLsizei>, messageLog:UnsafeMutablePointer<GLchar>) -> GLuint {return glGetDebugMessageLogARB_P(count, bufSize, sources, types, ids, severities, lengths, messageLog)}
var glGetDebugMessageLogARB_P:@convention(c)(GLuint, GLsizei, UnsafeMutablePointer<GLenum>, UnsafeMutablePointer<GLenum>, UnsafeMutablePointer<GLuint>, UnsafeMutablePointer<GLenum>, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLchar>) -> GLuint = glGetDebugMessageLogARB_L
public func glGetDebugMessageLogKHR(_ count:GLuint, _ bufSize:GLsizei, _ sources:UnsafeMutablePointer<GLenum>, _ types:UnsafeMutablePointer<GLenum>, _ ids:UnsafeMutablePointer<GLuint>, _ severities:UnsafeMutablePointer<GLenum>, _ lengths:UnsafeMutablePointer<GLsizei>, _ messageLog:UnsafeMutablePointer<GLchar>) -> GLuint {return glGetDebugMessageLogKHR_P(count, bufSize, sources, types, ids, severities, lengths, messageLog)}
public func glGetDebugMessageLogKHR(count:GLuint, bufSize:GLsizei, sources:UnsafeMutablePointer<GLenum>, types:UnsafeMutablePointer<GLenum>, ids:UnsafeMutablePointer<GLuint>, severities:UnsafeMutablePointer<GLenum>, lengths:UnsafeMutablePointer<GLsizei>, messageLog:UnsafeMutablePointer<GLchar>) -> GLuint {return glGetDebugMessageLogKHR_P(count, bufSize, sources, types, ids, severities, lengths, messageLog)}
var glGetDebugMessageLogKHR_P:@convention(c)(GLuint, GLsizei, UnsafeMutablePointer<GLenum>, UnsafeMutablePointer<GLenum>, UnsafeMutablePointer<GLuint>, UnsafeMutablePointer<GLenum>, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLchar>) -> GLuint = glGetDebugMessageLogKHR_L
public func glGetDetailTexFuncSGIS(_ target:GLenum, _ points:UnsafeMutablePointer<GLfloat>) {glGetDetailTexFuncSGIS_P(target, points)}
public func glGetDetailTexFuncSGIS(target:GLenum, points:UnsafeMutablePointer<GLfloat>) {glGetDetailTexFuncSGIS_P(target, points)}
var glGetDetailTexFuncSGIS_P:@convention(c)(GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetDetailTexFuncSGIS_L
public func glGetDoubleIndexedvEXT(_ target:GLenum, _ index:GLuint, _ data:UnsafeMutablePointer<GLdouble>) {glGetDoubleIndexedvEXT_P(target, index, data)}
public func glGetDoubleIndexedvEXT(target:GLenum, index:GLuint, data:UnsafeMutablePointer<GLdouble>) {glGetDoubleIndexedvEXT_P(target, index, data)}
var glGetDoubleIndexedvEXT_P:@convention(c)(GLenum, GLuint, UnsafeMutablePointer<GLdouble>) -> Void = glGetDoubleIndexedvEXT_L
public func glGetDoublei_v(_ target:GLenum, _ index:GLuint, _ data:UnsafeMutablePointer<GLdouble>) {glGetDoublei_v_P(target, index, data)}
public func glGetDoublei_v(target:GLenum, index:GLuint, data:UnsafeMutablePointer<GLdouble>) {glGetDoublei_v_P(target, index, data)}
var glGetDoublei_v_P:@convention(c)(GLenum, GLuint, UnsafeMutablePointer<GLdouble>) -> Void = glGetDoublei_v_L
public func glGetDoublei_vEXT(_ pname:GLenum, _ index:GLuint, _ params:UnsafeMutablePointer<GLdouble>) {glGetDoublei_vEXT_P(pname, index, params)}
public func glGetDoublei_vEXT(pname:GLenum, index:GLuint, params:UnsafeMutablePointer<GLdouble>) {glGetDoublei_vEXT_P(pname, index, params)}
var glGetDoublei_vEXT_P:@convention(c)(GLenum, GLuint, UnsafeMutablePointer<GLdouble>) -> Void = glGetDoublei_vEXT_L
public func glGetDoublev(_ pname:GLenum, _ data:UnsafeMutablePointer<GLdouble>) {glGetDoublev_P(pname, data)}
public func glGetDoublev(pname:GLenum, data:UnsafeMutablePointer<GLdouble>) {glGetDoublev_P(pname, data)}
var glGetDoublev_P:@convention(c)(GLenum, UnsafeMutablePointer<GLdouble>) -> Void = glGetDoublev_L
public func glGetDriverControlStringQCOM(_ driverControl:GLuint, _ bufSize:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ driverControlString:UnsafeMutablePointer<GLchar>) {glGetDriverControlStringQCOM_P(driverControl, bufSize, length, driverControlString)}
public func glGetDriverControlStringQCOM(driverControl:GLuint, bufSize:GLsizei, length:UnsafeMutablePointer<GLsizei>, driverControlString:UnsafeMutablePointer<GLchar>) {glGetDriverControlStringQCOM_P(driverControl, bufSize, length, driverControlString)}
var glGetDriverControlStringQCOM_P:@convention(c)(GLuint, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLchar>) -> Void = glGetDriverControlStringQCOM_L
public func glGetDriverControlsQCOM(_ num:UnsafeMutablePointer<GLint>, _ size:GLsizei, _ driverControls:UnsafeMutablePointer<GLuint>) {glGetDriverControlsQCOM_P(num, size, driverControls)}
public func glGetDriverControlsQCOM(num:UnsafeMutablePointer<GLint>, size:GLsizei, driverControls:UnsafeMutablePointer<GLuint>) {glGetDriverControlsQCOM_P(num, size, driverControls)}
var glGetDriverControlsQCOM_P:@convention(c)(UnsafeMutablePointer<GLint>, GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGetDriverControlsQCOM_L
public func glGetError() -> GLenum {return glGetError_P()}
var glGetError_P:@convention(c)() -> GLenum = glGetError_L
public func glGetFenceivNV(_ fence:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetFenceivNV_P(fence, pname, params)}
public func glGetFenceivNV(fence:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetFenceivNV_P(fence, pname, params)}
var glGetFenceivNV_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetFenceivNV_L
public func glGetFinalCombinerInputParameterfvNV(_ variable:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetFinalCombinerInputParameterfvNV_P(variable, pname, params)}
public func glGetFinalCombinerInputParameterfvNV(variable:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetFinalCombinerInputParameterfvNV_P(variable, pname, params)}
var glGetFinalCombinerInputParameterfvNV_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetFinalCombinerInputParameterfvNV_L
public func glGetFinalCombinerInputParameterivNV(_ variable:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetFinalCombinerInputParameterivNV_P(variable, pname, params)}
public func glGetFinalCombinerInputParameterivNV(variable:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetFinalCombinerInputParameterivNV_P(variable, pname, params)}
var glGetFinalCombinerInputParameterivNV_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetFinalCombinerInputParameterivNV_L
public func glGetFirstPerfQueryIdINTEL(_ queryId:UnsafeMutablePointer<GLuint>) {glGetFirstPerfQueryIdINTEL_P(queryId)}
public func glGetFirstPerfQueryIdINTEL(queryId:UnsafeMutablePointer<GLuint>) {glGetFirstPerfQueryIdINTEL_P(queryId)}
var glGetFirstPerfQueryIdINTEL_P:@convention(c)(UnsafeMutablePointer<GLuint>) -> Void = glGetFirstPerfQueryIdINTEL_L
public func glGetFixedv(_ pname:GLenum, _ params:UnsafeMutablePointer<GLfixed>) {glGetFixedv_P(pname, params)}
public func glGetFixedv(pname:GLenum, params:UnsafeMutablePointer<GLfixed>) {glGetFixedv_P(pname, params)}
var glGetFixedv_P:@convention(c)(GLenum, UnsafeMutablePointer<GLfixed>) -> Void = glGetFixedv_L
public func glGetFixedvOES(_ pname:GLenum, _ params:UnsafeMutablePointer<GLfixed>) {glGetFixedvOES_P(pname, params)}
public func glGetFixedvOES(pname:GLenum, params:UnsafeMutablePointer<GLfixed>) {glGetFixedvOES_P(pname, params)}
var glGetFixedvOES_P:@convention(c)(GLenum, UnsafeMutablePointer<GLfixed>) -> Void = glGetFixedvOES_L
public func glGetFloatIndexedvEXT(_ target:GLenum, _ index:GLuint, _ data:UnsafeMutablePointer<GLfloat>) {glGetFloatIndexedvEXT_P(target, index, data)}
public func glGetFloatIndexedvEXT(target:GLenum, index:GLuint, data:UnsafeMutablePointer<GLfloat>) {glGetFloatIndexedvEXT_P(target, index, data)}
var glGetFloatIndexedvEXT_P:@convention(c)(GLenum, GLuint, UnsafeMutablePointer<GLfloat>) -> Void = glGetFloatIndexedvEXT_L
public func glGetFloati_v(_ target:GLenum, _ index:GLuint, _ data:UnsafeMutablePointer<GLfloat>) {glGetFloati_v_P(target, index, data)}
public func glGetFloati_v(target:GLenum, index:GLuint, data:UnsafeMutablePointer<GLfloat>) {glGetFloati_v_P(target, index, data)}
var glGetFloati_v_P:@convention(c)(GLenum, GLuint, UnsafeMutablePointer<GLfloat>) -> Void = glGetFloati_v_L
public func glGetFloati_vEXT(_ pname:GLenum, _ index:GLuint, _ params:UnsafeMutablePointer<GLfloat>) {glGetFloati_vEXT_P(pname, index, params)}
public func glGetFloati_vEXT(pname:GLenum, index:GLuint, params:UnsafeMutablePointer<GLfloat>) {glGetFloati_vEXT_P(pname, index, params)}
var glGetFloati_vEXT_P:@convention(c)(GLenum, GLuint, UnsafeMutablePointer<GLfloat>) -> Void = glGetFloati_vEXT_L
public func glGetFloati_vNV(_ target:GLenum, _ index:GLuint, _ data:UnsafeMutablePointer<GLfloat>) {glGetFloati_vNV_P(target, index, data)}
public func glGetFloati_vNV(target:GLenum, index:GLuint, data:UnsafeMutablePointer<GLfloat>) {glGetFloati_vNV_P(target, index, data)}
var glGetFloati_vNV_P:@convention(c)(GLenum, GLuint, UnsafeMutablePointer<GLfloat>) -> Void = glGetFloati_vNV_L
public func glGetFloatv(_ pname:GLenum, _ data:UnsafeMutablePointer<GLfloat>) {glGetFloatv_P(pname, data)}
public func glGetFloatv(pname:GLenum, data:UnsafeMutablePointer<GLfloat>) {glGetFloatv_P(pname, data)}
var glGetFloatv_P:@convention(c)(GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetFloatv_L
public func glGetFogFuncSGIS(_ points:UnsafeMutablePointer<GLfloat>) {glGetFogFuncSGIS_P(points)}
public func glGetFogFuncSGIS(points:UnsafeMutablePointer<GLfloat>) {glGetFogFuncSGIS_P(points)}
var glGetFogFuncSGIS_P:@convention(c)(UnsafeMutablePointer<GLfloat>) -> Void = glGetFogFuncSGIS_L
public func glGetFragDataIndex(_ program:GLuint, _ name:UnsafePointer<GLchar>) -> GLint {return glGetFragDataIndex_P(program, name)}
public func glGetFragDataIndex(program:GLuint, name:UnsafePointer<GLchar>) -> GLint {return glGetFragDataIndex_P(program, name)}
var glGetFragDataIndex_P:@convention(c)(GLuint, UnsafePointer<GLchar>) -> GLint = glGetFragDataIndex_L
public func glGetFragDataIndexEXT(_ program:GLuint, _ name:UnsafePointer<GLchar>) -> GLint {return glGetFragDataIndexEXT_P(program, name)}
public func glGetFragDataIndexEXT(program:GLuint, name:UnsafePointer<GLchar>) -> GLint {return glGetFragDataIndexEXT_P(program, name)}
var glGetFragDataIndexEXT_P:@convention(c)(GLuint, UnsafePointer<GLchar>) -> GLint = glGetFragDataIndexEXT_L
public func glGetFragDataLocation(_ program:GLuint, _ name:UnsafePointer<GLchar>) -> GLint {return glGetFragDataLocation_P(program, name)}
public func glGetFragDataLocation(program:GLuint, name:UnsafePointer<GLchar>) -> GLint {return glGetFragDataLocation_P(program, name)}
var glGetFragDataLocation_P:@convention(c)(GLuint, UnsafePointer<GLchar>) -> GLint = glGetFragDataLocation_L
public func glGetFragDataLocationEXT(_ program:GLuint, _ name:UnsafePointer<GLchar>) -> GLint {return glGetFragDataLocationEXT_P(program, name)}
public func glGetFragDataLocationEXT(program:GLuint, name:UnsafePointer<GLchar>) -> GLint {return glGetFragDataLocationEXT_P(program, name)}
var glGetFragDataLocationEXT_P:@convention(c)(GLuint, UnsafePointer<GLchar>) -> GLint = glGetFragDataLocationEXT_L
public func glGetFragmentLightfvSGIX(_ light:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetFragmentLightfvSGIX_P(light, pname, params)}
public func glGetFragmentLightfvSGIX(light:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetFragmentLightfvSGIX_P(light, pname, params)}
var glGetFragmentLightfvSGIX_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetFragmentLightfvSGIX_L
public func glGetFragmentLightivSGIX(_ light:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetFragmentLightivSGIX_P(light, pname, params)}
public func glGetFragmentLightivSGIX(light:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetFragmentLightivSGIX_P(light, pname, params)}
var glGetFragmentLightivSGIX_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetFragmentLightivSGIX_L
public func glGetFragmentMaterialfvSGIX(_ face:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetFragmentMaterialfvSGIX_P(face, pname, params)}
public func glGetFragmentMaterialfvSGIX(face:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetFragmentMaterialfvSGIX_P(face, pname, params)}
var glGetFragmentMaterialfvSGIX_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetFragmentMaterialfvSGIX_L
public func glGetFragmentMaterialivSGIX(_ face:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetFragmentMaterialivSGIX_P(face, pname, params)}
public func glGetFragmentMaterialivSGIX(face:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetFragmentMaterialivSGIX_P(face, pname, params)}
var glGetFragmentMaterialivSGIX_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetFragmentMaterialivSGIX_L
public func glGetFramebufferAttachmentParameteriv(_ target:GLenum, _ attachment:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetFramebufferAttachmentParameteriv_P(target, attachment, pname, params)}
public func glGetFramebufferAttachmentParameteriv(target:GLenum, attachment:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetFramebufferAttachmentParameteriv_P(target, attachment, pname, params)}
var glGetFramebufferAttachmentParameteriv_P:@convention(c)(GLenum, GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetFramebufferAttachmentParameteriv_L
public func glGetFramebufferAttachmentParameterivEXT(_ target:GLenum, _ attachment:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetFramebufferAttachmentParameterivEXT_P(target, attachment, pname, params)}
public func glGetFramebufferAttachmentParameterivEXT(target:GLenum, attachment:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetFramebufferAttachmentParameterivEXT_P(target, attachment, pname, params)}
var glGetFramebufferAttachmentParameterivEXT_P:@convention(c)(GLenum, GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetFramebufferAttachmentParameterivEXT_L
public func glGetFramebufferAttachmentParameterivOES(_ target:GLenum, _ attachment:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetFramebufferAttachmentParameterivOES_P(target, attachment, pname, params)}
public func glGetFramebufferAttachmentParameterivOES(target:GLenum, attachment:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetFramebufferAttachmentParameterivOES_P(target, attachment, pname, params)}
var glGetFramebufferAttachmentParameterivOES_P:@convention(c)(GLenum, GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetFramebufferAttachmentParameterivOES_L
public func glGetFramebufferParameteriv(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetFramebufferParameteriv_P(target, pname, params)}
public func glGetFramebufferParameteriv(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetFramebufferParameteriv_P(target, pname, params)}
var glGetFramebufferParameteriv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetFramebufferParameteriv_L
public func glGetFramebufferParameterivEXT(_ framebuffer:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetFramebufferParameterivEXT_P(framebuffer, pname, params)}
public func glGetFramebufferParameterivEXT(framebuffer:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetFramebufferParameterivEXT_P(framebuffer, pname, params)}
var glGetFramebufferParameterivEXT_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetFramebufferParameterivEXT_L
public func glGetGraphicsResetStatus() -> GLenum {return glGetGraphicsResetStatus_P()}
var glGetGraphicsResetStatus_P:@convention(c)() -> GLenum = glGetGraphicsResetStatus_L
public func glGetGraphicsResetStatusARB() -> GLenum {return glGetGraphicsResetStatusARB_P()}
var glGetGraphicsResetStatusARB_P:@convention(c)() -> GLenum = glGetGraphicsResetStatusARB_L
public func glGetGraphicsResetStatusEXT() -> GLenum {return glGetGraphicsResetStatusEXT_P()}
var glGetGraphicsResetStatusEXT_P:@convention(c)() -> GLenum = glGetGraphicsResetStatusEXT_L
public func glGetGraphicsResetStatusKHR() -> GLenum {return glGetGraphicsResetStatusKHR_P()}
var glGetGraphicsResetStatusKHR_P:@convention(c)() -> GLenum = glGetGraphicsResetStatusKHR_L
public func glGetHandleARB(_ pname:GLenum) -> GLhandleARB {return glGetHandleARB_P(pname)}
public func glGetHandleARB(pname:GLenum) -> GLhandleARB {return glGetHandleARB_P(pname)}
var glGetHandleARB_P:@convention(c)(GLenum) -> GLhandleARB = glGetHandleARB_L
public func glGetHistogram(_ target:GLenum, _ reset:GLboolean, _ format:GLenum, _ type:GLenum, _ values:UnsafeMutableRawPointer) {glGetHistogram_P(target, reset, format, type, values)}
public func glGetHistogram(target:GLenum, reset:GLboolean, format:GLenum, type:GLenum, values:UnsafeMutableRawPointer) {glGetHistogram_P(target, reset, format, type, values)}
var glGetHistogram_P:@convention(c)(GLenum, GLboolean, GLenum, GLenum, UnsafeMutableRawPointer) -> Void = glGetHistogram_L
public func glGetHistogramEXT(_ target:GLenum, _ reset:GLboolean, _ format:GLenum, _ type:GLenum, _ values:UnsafeMutableRawPointer) {glGetHistogramEXT_P(target, reset, format, type, values)}
public func glGetHistogramEXT(target:GLenum, reset:GLboolean, format:GLenum, type:GLenum, values:UnsafeMutableRawPointer) {glGetHistogramEXT_P(target, reset, format, type, values)}
var glGetHistogramEXT_P:@convention(c)(GLenum, GLboolean, GLenum, GLenum, UnsafeMutableRawPointer) -> Void = glGetHistogramEXT_L
public func glGetHistogramParameterfv(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetHistogramParameterfv_P(target, pname, params)}
public func glGetHistogramParameterfv(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetHistogramParameterfv_P(target, pname, params)}
var glGetHistogramParameterfv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetHistogramParameterfv_L
public func glGetHistogramParameterfvEXT(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetHistogramParameterfvEXT_P(target, pname, params)}
public func glGetHistogramParameterfvEXT(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetHistogramParameterfvEXT_P(target, pname, params)}
var glGetHistogramParameterfvEXT_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetHistogramParameterfvEXT_L
public func glGetHistogramParameteriv(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetHistogramParameteriv_P(target, pname, params)}
public func glGetHistogramParameteriv(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetHistogramParameteriv_P(target, pname, params)}
var glGetHistogramParameteriv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetHistogramParameteriv_L
public func glGetHistogramParameterivEXT(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetHistogramParameterivEXT_P(target, pname, params)}
public func glGetHistogramParameterivEXT(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetHistogramParameterivEXT_P(target, pname, params)}
var glGetHistogramParameterivEXT_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetHistogramParameterivEXT_L
public func glGetHistogramParameterxvOES(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfixed>) {glGetHistogramParameterxvOES_P(target, pname, params)}
public func glGetHistogramParameterxvOES(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfixed>) {glGetHistogramParameterxvOES_P(target, pname, params)}
var glGetHistogramParameterxvOES_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfixed>) -> Void = glGetHistogramParameterxvOES_L
public func glGetImageHandleARB(_ texture:GLuint, _ level:GLint, _ layered:GLboolean, _ layer:GLint, _ format:GLenum) -> GLuint64 {return glGetImageHandleARB_P(texture, level, layered, layer, format)}
public func glGetImageHandleARB(texture:GLuint, level:GLint, layered:GLboolean, layer:GLint, format:GLenum) -> GLuint64 {return glGetImageHandleARB_P(texture, level, layered, layer, format)}
var glGetImageHandleARB_P:@convention(c)(GLuint, GLint, GLboolean, GLint, GLenum) -> GLuint64 = glGetImageHandleARB_L
public func glGetImageHandleNV(_ texture:GLuint, _ level:GLint, _ layered:GLboolean, _ layer:GLint, _ format:GLenum) -> GLuint64 {return glGetImageHandleNV_P(texture, level, layered, layer, format)}
public func glGetImageHandleNV(texture:GLuint, level:GLint, layered:GLboolean, layer:GLint, format:GLenum) -> GLuint64 {return glGetImageHandleNV_P(texture, level, layered, layer, format)}
var glGetImageHandleNV_P:@convention(c)(GLuint, GLint, GLboolean, GLint, GLenum) -> GLuint64 = glGetImageHandleNV_L
public func glGetImageTransformParameterfvHP(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetImageTransformParameterfvHP_P(target, pname, params)}
public func glGetImageTransformParameterfvHP(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetImageTransformParameterfvHP_P(target, pname, params)}
var glGetImageTransformParameterfvHP_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetImageTransformParameterfvHP_L
public func glGetImageTransformParameterivHP(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetImageTransformParameterivHP_P(target, pname, params)}
public func glGetImageTransformParameterivHP(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetImageTransformParameterivHP_P(target, pname, params)}
var glGetImageTransformParameterivHP_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetImageTransformParameterivHP_L
public func glGetInfoLogARB(_ obj:GLhandleARB, _ maxLength:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ infoLog:UnsafeMutablePointer<GLcharARB>) {glGetInfoLogARB_P(obj, maxLength, length, infoLog)}
public func glGetInfoLogARB(obj:GLhandleARB, maxLength:GLsizei, length:UnsafeMutablePointer<GLsizei>, infoLog:UnsafeMutablePointer<GLcharARB>) {glGetInfoLogARB_P(obj, maxLength, length, infoLog)}
var glGetInfoLogARB_P:@convention(c)(GLhandleARB, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLcharARB>) -> Void = glGetInfoLogARB_L
public func glGetInstrumentsSGIX() -> GLint {return glGetInstrumentsSGIX_P()}
var glGetInstrumentsSGIX_P:@convention(c)() -> GLint = glGetInstrumentsSGIX_L
public func glGetInteger64i_v(_ target:GLenum, _ index:GLuint, _ data:UnsafeMutablePointer<GLint64>) {glGetInteger64i_v_P(target, index, data)}
public func glGetInteger64i_v(target:GLenum, index:GLuint, data:UnsafeMutablePointer<GLint64>) {glGetInteger64i_v_P(target, index, data)}
var glGetInteger64i_v_P:@convention(c)(GLenum, GLuint, UnsafeMutablePointer<GLint64>) -> Void = glGetInteger64i_v_L
public func glGetInteger64v(_ pname:GLenum, _ data:UnsafeMutablePointer<GLint64>) {glGetInteger64v_P(pname, data)}
public func glGetInteger64v(pname:GLenum, data:UnsafeMutablePointer<GLint64>) {glGetInteger64v_P(pname, data)}
var glGetInteger64v_P:@convention(c)(GLenum, UnsafeMutablePointer<GLint64>) -> Void = glGetInteger64v_L
public func glGetInteger64vAPPLE(_ pname:GLenum, _ params:UnsafeMutablePointer<GLint64>) {glGetInteger64vAPPLE_P(pname, params)}
public func glGetInteger64vAPPLE(pname:GLenum, params:UnsafeMutablePointer<GLint64>) {glGetInteger64vAPPLE_P(pname, params)}
var glGetInteger64vAPPLE_P:@convention(c)(GLenum, UnsafeMutablePointer<GLint64>) -> Void = glGetInteger64vAPPLE_L
public func glGetIntegerIndexedvEXT(_ target:GLenum, _ index:GLuint, _ data:UnsafeMutablePointer<GLint>) {glGetIntegerIndexedvEXT_P(target, index, data)}
public func glGetIntegerIndexedvEXT(target:GLenum, index:GLuint, data:UnsafeMutablePointer<GLint>) {glGetIntegerIndexedvEXT_P(target, index, data)}
var glGetIntegerIndexedvEXT_P:@convention(c)(GLenum, GLuint, UnsafeMutablePointer<GLint>) -> Void = glGetIntegerIndexedvEXT_L
public func glGetIntegeri_v(_ target:GLenum, _ index:GLuint, _ data:UnsafeMutablePointer<GLint>) {glGetIntegeri_v_P(target, index, data)}
public func glGetIntegeri_v(target:GLenum, index:GLuint, data:UnsafeMutablePointer<GLint>) {glGetIntegeri_v_P(target, index, data)}
var glGetIntegeri_v_P:@convention(c)(GLenum, GLuint, UnsafeMutablePointer<GLint>) -> Void = glGetIntegeri_v_L
public func glGetIntegeri_vEXT(_ target:GLenum, _ index:GLuint, _ data:UnsafeMutablePointer<GLint>) {glGetIntegeri_vEXT_P(target, index, data)}
public func glGetIntegeri_vEXT(target:GLenum, index:GLuint, data:UnsafeMutablePointer<GLint>) {glGetIntegeri_vEXT_P(target, index, data)}
var glGetIntegeri_vEXT_P:@convention(c)(GLenum, GLuint, UnsafeMutablePointer<GLint>) -> Void = glGetIntegeri_vEXT_L
public func glGetIntegerui64i_vNV(_ value:GLenum, _ index:GLuint, _ result:UnsafeMutablePointer<GLuint64EXT>) {glGetIntegerui64i_vNV_P(value, index, result)}
public func glGetIntegerui64i_vNV(value:GLenum, index:GLuint, result:UnsafeMutablePointer<GLuint64EXT>) {glGetIntegerui64i_vNV_P(value, index, result)}
var glGetIntegerui64i_vNV_P:@convention(c)(GLenum, GLuint, UnsafeMutablePointer<GLuint64EXT>) -> Void = glGetIntegerui64i_vNV_L
public func glGetIntegerui64vNV(_ value:GLenum, _ result:UnsafeMutablePointer<GLuint64EXT>) {glGetIntegerui64vNV_P(value, result)}
public func glGetIntegerui64vNV(value:GLenum, result:UnsafeMutablePointer<GLuint64EXT>) {glGetIntegerui64vNV_P(value, result)}
var glGetIntegerui64vNV_P:@convention(c)(GLenum, UnsafeMutablePointer<GLuint64EXT>) -> Void = glGetIntegerui64vNV_L
public func glGetIntegerv(_ pname:GLenum, _ data:UnsafeMutablePointer<GLint>) {glGetIntegerv_P(pname, data)}
public func glGetIntegerv(pname:GLenum, data:UnsafeMutablePointer<GLint>) {glGetIntegerv_P(pname, data)}
var glGetIntegerv_P:@convention(c)(GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetIntegerv_L
public func glGetInternalformatSampleivNV(_ target:GLenum, _ internalformat:GLenum, _ samples:GLsizei, _ pname:GLenum, _ bufSize:GLsizei, _ params:UnsafeMutablePointer<GLint>) {glGetInternalformatSampleivNV_P(target, internalformat, samples, pname, bufSize, params)}
public func glGetInternalformatSampleivNV(target:GLenum, internalformat:GLenum, samples:GLsizei, pname:GLenum, bufSize:GLsizei, params:UnsafeMutablePointer<GLint>) {glGetInternalformatSampleivNV_P(target, internalformat, samples, pname, bufSize, params)}
var glGetInternalformatSampleivNV_P:@convention(c)(GLenum, GLenum, GLsizei, GLenum, GLsizei, UnsafeMutablePointer<GLint>) -> Void = glGetInternalformatSampleivNV_L
public func glGetInternalformati64v(_ target:GLenum, _ internalformat:GLenum, _ pname:GLenum, _ bufSize:GLsizei, _ params:UnsafeMutablePointer<GLint64>) {glGetInternalformati64v_P(target, internalformat, pname, bufSize, params)}
public func glGetInternalformati64v(target:GLenum, internalformat:GLenum, pname:GLenum, bufSize:GLsizei, params:UnsafeMutablePointer<GLint64>) {glGetInternalformati64v_P(target, internalformat, pname, bufSize, params)}
var glGetInternalformati64v_P:@convention(c)(GLenum, GLenum, GLenum, GLsizei, UnsafeMutablePointer<GLint64>) -> Void = glGetInternalformati64v_L
public func glGetInternalformativ(_ target:GLenum, _ internalformat:GLenum, _ pname:GLenum, _ bufSize:GLsizei, _ params:UnsafeMutablePointer<GLint>) {glGetInternalformativ_P(target, internalformat, pname, bufSize, params)}
public func glGetInternalformativ(target:GLenum, internalformat:GLenum, pname:GLenum, bufSize:GLsizei, params:UnsafeMutablePointer<GLint>) {glGetInternalformativ_P(target, internalformat, pname, bufSize, params)}
var glGetInternalformativ_P:@convention(c)(GLenum, GLenum, GLenum, GLsizei, UnsafeMutablePointer<GLint>) -> Void = glGetInternalformativ_L
public func glGetInvariantBooleanvEXT(_ id:GLuint, _ value:GLenum, _ data:UnsafeMutablePointer<GLboolean>) {glGetInvariantBooleanvEXT_P(id, value, data)}
public func glGetInvariantBooleanvEXT(id:GLuint, value:GLenum, data:UnsafeMutablePointer<GLboolean>) {glGetInvariantBooleanvEXT_P(id, value, data)}
var glGetInvariantBooleanvEXT_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLboolean>) -> Void = glGetInvariantBooleanvEXT_L
public func glGetInvariantFloatvEXT(_ id:GLuint, _ value:GLenum, _ data:UnsafeMutablePointer<GLfloat>) {glGetInvariantFloatvEXT_P(id, value, data)}
public func glGetInvariantFloatvEXT(id:GLuint, value:GLenum, data:UnsafeMutablePointer<GLfloat>) {glGetInvariantFloatvEXT_P(id, value, data)}
var glGetInvariantFloatvEXT_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetInvariantFloatvEXT_L
public func glGetInvariantIntegervEXT(_ id:GLuint, _ value:GLenum, _ data:UnsafeMutablePointer<GLint>) {glGetInvariantIntegervEXT_P(id, value, data)}
public func glGetInvariantIntegervEXT(id:GLuint, value:GLenum, data:UnsafeMutablePointer<GLint>) {glGetInvariantIntegervEXT_P(id, value, data)}
var glGetInvariantIntegervEXT_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetInvariantIntegervEXT_L
public func glGetLightfv(_ light:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetLightfv_P(light, pname, params)}
public func glGetLightfv(light:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetLightfv_P(light, pname, params)}
var glGetLightfv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetLightfv_L
public func glGetLightiv(_ light:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetLightiv_P(light, pname, params)}
public func glGetLightiv(light:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetLightiv_P(light, pname, params)}
var glGetLightiv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetLightiv_L
public func glGetLightxOES(_ light:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfixed>) {glGetLightxOES_P(light, pname, params)}
public func glGetLightxOES(light:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfixed>) {glGetLightxOES_P(light, pname, params)}
var glGetLightxOES_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfixed>) -> Void = glGetLightxOES_L
public func glGetLightxv(_ light:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfixed>) {glGetLightxv_P(light, pname, params)}
public func glGetLightxv(light:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfixed>) {glGetLightxv_P(light, pname, params)}
var glGetLightxv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfixed>) -> Void = glGetLightxv_L
public func glGetLightxvOES(_ light:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfixed>) {glGetLightxvOES_P(light, pname, params)}
public func glGetLightxvOES(light:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfixed>) {glGetLightxvOES_P(light, pname, params)}
var glGetLightxvOES_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfixed>) -> Void = glGetLightxvOES_L
public func glGetListParameterfvSGIX(_ list:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetListParameterfvSGIX_P(list, pname, params)}
public func glGetListParameterfvSGIX(list:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetListParameterfvSGIX_P(list, pname, params)}
var glGetListParameterfvSGIX_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetListParameterfvSGIX_L
public func glGetListParameterivSGIX(_ list:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetListParameterivSGIX_P(list, pname, params)}
public func glGetListParameterivSGIX(list:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetListParameterivSGIX_P(list, pname, params)}
var glGetListParameterivSGIX_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetListParameterivSGIX_L
public func glGetLocalConstantBooleanvEXT(_ id:GLuint, _ value:GLenum, _ data:UnsafeMutablePointer<GLboolean>) {glGetLocalConstantBooleanvEXT_P(id, value, data)}
public func glGetLocalConstantBooleanvEXT(id:GLuint, value:GLenum, data:UnsafeMutablePointer<GLboolean>) {glGetLocalConstantBooleanvEXT_P(id, value, data)}
var glGetLocalConstantBooleanvEXT_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLboolean>) -> Void = glGetLocalConstantBooleanvEXT_L
public func glGetLocalConstantFloatvEXT(_ id:GLuint, _ value:GLenum, _ data:UnsafeMutablePointer<GLfloat>) {glGetLocalConstantFloatvEXT_P(id, value, data)}
public func glGetLocalConstantFloatvEXT(id:GLuint, value:GLenum, data:UnsafeMutablePointer<GLfloat>) {glGetLocalConstantFloatvEXT_P(id, value, data)}
var glGetLocalConstantFloatvEXT_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetLocalConstantFloatvEXT_L
public func glGetLocalConstantIntegervEXT(_ id:GLuint, _ value:GLenum, _ data:UnsafeMutablePointer<GLint>) {glGetLocalConstantIntegervEXT_P(id, value, data)}
public func glGetLocalConstantIntegervEXT(id:GLuint, value:GLenum, data:UnsafeMutablePointer<GLint>) {glGetLocalConstantIntegervEXT_P(id, value, data)}
var glGetLocalConstantIntegervEXT_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetLocalConstantIntegervEXT_L
public func glGetMapAttribParameterfvNV(_ target:GLenum, _ index:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetMapAttribParameterfvNV_P(target, index, pname, params)}
public func glGetMapAttribParameterfvNV(target:GLenum, index:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetMapAttribParameterfvNV_P(target, index, pname, params)}
var glGetMapAttribParameterfvNV_P:@convention(c)(GLenum, GLuint, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetMapAttribParameterfvNV_L
public func glGetMapAttribParameterivNV(_ target:GLenum, _ index:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetMapAttribParameterivNV_P(target, index, pname, params)}
public func glGetMapAttribParameterivNV(target:GLenum, index:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetMapAttribParameterivNV_P(target, index, pname, params)}
var glGetMapAttribParameterivNV_P:@convention(c)(GLenum, GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetMapAttribParameterivNV_L
public func glGetMapControlPointsNV(_ target:GLenum, _ index:GLuint, _ type:GLenum, _ ustride:GLsizei, _ vstride:GLsizei, _ packed:GLboolean, _ points:UnsafeMutableRawPointer) {glGetMapControlPointsNV_P(target, index, type, ustride, vstride, packed, points)}
public func glGetMapControlPointsNV(target:GLenum, index:GLuint, type:GLenum, ustride:GLsizei, vstride:GLsizei, packed:GLboolean, points:UnsafeMutableRawPointer) {glGetMapControlPointsNV_P(target, index, type, ustride, vstride, packed, points)}
var glGetMapControlPointsNV_P:@convention(c)(GLenum, GLuint, GLenum, GLsizei, GLsizei, GLboolean, UnsafeMutableRawPointer) -> Void = glGetMapControlPointsNV_L
public func glGetMapParameterfvNV(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetMapParameterfvNV_P(target, pname, params)}
public func glGetMapParameterfvNV(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetMapParameterfvNV_P(target, pname, params)}
var glGetMapParameterfvNV_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetMapParameterfvNV_L
public func glGetMapParameterivNV(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetMapParameterivNV_P(target, pname, params)}
public func glGetMapParameterivNV(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetMapParameterivNV_P(target, pname, params)}
var glGetMapParameterivNV_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetMapParameterivNV_L
public func glGetMapdv(_ target:GLenum, _ query:GLenum, _ v:UnsafeMutablePointer<GLdouble>) {glGetMapdv_P(target, query, v)}
public func glGetMapdv(target:GLenum, query:GLenum, v:UnsafeMutablePointer<GLdouble>) {glGetMapdv_P(target, query, v)}
var glGetMapdv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLdouble>) -> Void = glGetMapdv_L
public func glGetMapfv(_ target:GLenum, _ query:GLenum, _ v:UnsafeMutablePointer<GLfloat>) {glGetMapfv_P(target, query, v)}
public func glGetMapfv(target:GLenum, query:GLenum, v:UnsafeMutablePointer<GLfloat>) {glGetMapfv_P(target, query, v)}
var glGetMapfv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetMapfv_L
public func glGetMapiv(_ target:GLenum, _ query:GLenum, _ v:UnsafeMutablePointer<GLint>) {glGetMapiv_P(target, query, v)}
public func glGetMapiv(target:GLenum, query:GLenum, v:UnsafeMutablePointer<GLint>) {glGetMapiv_P(target, query, v)}
var glGetMapiv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetMapiv_L
public func glGetMapxvOES(_ target:GLenum, _ query:GLenum, _ v:UnsafeMutablePointer<GLfixed>) {glGetMapxvOES_P(target, query, v)}
public func glGetMapxvOES(target:GLenum, query:GLenum, v:UnsafeMutablePointer<GLfixed>) {glGetMapxvOES_P(target, query, v)}
var glGetMapxvOES_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfixed>) -> Void = glGetMapxvOES_L
public func glGetMaterialfv(_ face:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetMaterialfv_P(face, pname, params)}
public func glGetMaterialfv(face:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetMaterialfv_P(face, pname, params)}
var glGetMaterialfv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetMaterialfv_L
public func glGetMaterialiv(_ face:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetMaterialiv_P(face, pname, params)}
public func glGetMaterialiv(face:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetMaterialiv_P(face, pname, params)}
var glGetMaterialiv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetMaterialiv_L
public func glGetMaterialxOES(_ face:GLenum, _ pname:GLenum, _ param:GLfixed) {glGetMaterialxOES_P(face, pname, param)}
public func glGetMaterialxOES(face:GLenum, pname:GLenum, param:GLfixed) {glGetMaterialxOES_P(face, pname, param)}
var glGetMaterialxOES_P:@convention(c)(GLenum, GLenum, GLfixed) -> Void = glGetMaterialxOES_L
public func glGetMaterialxv(_ face:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfixed>) {glGetMaterialxv_P(face, pname, params)}
public func glGetMaterialxv(face:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfixed>) {glGetMaterialxv_P(face, pname, params)}
var glGetMaterialxv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfixed>) -> Void = glGetMaterialxv_L
public func glGetMaterialxvOES(_ face:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfixed>) {glGetMaterialxvOES_P(face, pname, params)}
public func glGetMaterialxvOES(face:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfixed>) {glGetMaterialxvOES_P(face, pname, params)}
var glGetMaterialxvOES_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfixed>) -> Void = glGetMaterialxvOES_L
public func glGetMinmax(_ target:GLenum, _ reset:GLboolean, _ format:GLenum, _ type:GLenum, _ values:UnsafeMutableRawPointer) {glGetMinmax_P(target, reset, format, type, values)}
public func glGetMinmax(target:GLenum, reset:GLboolean, format:GLenum, type:GLenum, values:UnsafeMutableRawPointer) {glGetMinmax_P(target, reset, format, type, values)}
var glGetMinmax_P:@convention(c)(GLenum, GLboolean, GLenum, GLenum, UnsafeMutableRawPointer) -> Void = glGetMinmax_L
public func glGetMinmaxEXT(_ target:GLenum, _ reset:GLboolean, _ format:GLenum, _ type:GLenum, _ values:UnsafeMutableRawPointer) {glGetMinmaxEXT_P(target, reset, format, type, values)}
public func glGetMinmaxEXT(target:GLenum, reset:GLboolean, format:GLenum, type:GLenum, values:UnsafeMutableRawPointer) {glGetMinmaxEXT_P(target, reset, format, type, values)}
var glGetMinmaxEXT_P:@convention(c)(GLenum, GLboolean, GLenum, GLenum, UnsafeMutableRawPointer) -> Void = glGetMinmaxEXT_L
public func glGetMinmaxParameterfv(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetMinmaxParameterfv_P(target, pname, params)}
public func glGetMinmaxParameterfv(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetMinmaxParameterfv_P(target, pname, params)}
var glGetMinmaxParameterfv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetMinmaxParameterfv_L
public func glGetMinmaxParameterfvEXT(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetMinmaxParameterfvEXT_P(target, pname, params)}
public func glGetMinmaxParameterfvEXT(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetMinmaxParameterfvEXT_P(target, pname, params)}
var glGetMinmaxParameterfvEXT_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetMinmaxParameterfvEXT_L
public func glGetMinmaxParameteriv(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetMinmaxParameteriv_P(target, pname, params)}
public func glGetMinmaxParameteriv(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetMinmaxParameteriv_P(target, pname, params)}
var glGetMinmaxParameteriv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetMinmaxParameteriv_L
public func glGetMinmaxParameterivEXT(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetMinmaxParameterivEXT_P(target, pname, params)}
public func glGetMinmaxParameterivEXT(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetMinmaxParameterivEXT_P(target, pname, params)}
var glGetMinmaxParameterivEXT_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetMinmaxParameterivEXT_L
public func glGetMultiTexEnvfvEXT(_ texunit:GLenum, _ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetMultiTexEnvfvEXT_P(texunit, target, pname, params)}
public func glGetMultiTexEnvfvEXT(texunit:GLenum, target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetMultiTexEnvfvEXT_P(texunit, target, pname, params)}
var glGetMultiTexEnvfvEXT_P:@convention(c)(GLenum, GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetMultiTexEnvfvEXT_L
public func glGetMultiTexEnvivEXT(_ texunit:GLenum, _ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetMultiTexEnvivEXT_P(texunit, target, pname, params)}
public func glGetMultiTexEnvivEXT(texunit:GLenum, target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetMultiTexEnvivEXT_P(texunit, target, pname, params)}
var glGetMultiTexEnvivEXT_P:@convention(c)(GLenum, GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetMultiTexEnvivEXT_L
public func glGetMultiTexGendvEXT(_ texunit:GLenum, _ coord:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLdouble>) {glGetMultiTexGendvEXT_P(texunit, coord, pname, params)}
public func glGetMultiTexGendvEXT(texunit:GLenum, coord:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLdouble>) {glGetMultiTexGendvEXT_P(texunit, coord, pname, params)}
var glGetMultiTexGendvEXT_P:@convention(c)(GLenum, GLenum, GLenum, UnsafeMutablePointer<GLdouble>) -> Void = glGetMultiTexGendvEXT_L
public func glGetMultiTexGenfvEXT(_ texunit:GLenum, _ coord:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetMultiTexGenfvEXT_P(texunit, coord, pname, params)}
public func glGetMultiTexGenfvEXT(texunit:GLenum, coord:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetMultiTexGenfvEXT_P(texunit, coord, pname, params)}
var glGetMultiTexGenfvEXT_P:@convention(c)(GLenum, GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetMultiTexGenfvEXT_L
public func glGetMultiTexGenivEXT(_ texunit:GLenum, _ coord:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetMultiTexGenivEXT_P(texunit, coord, pname, params)}
public func glGetMultiTexGenivEXT(texunit:GLenum, coord:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetMultiTexGenivEXT_P(texunit, coord, pname, params)}
var glGetMultiTexGenivEXT_P:@convention(c)(GLenum, GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetMultiTexGenivEXT_L
public func glGetMultiTexImageEXT(_ texunit:GLenum, _ target:GLenum, _ level:GLint, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeMutableRawPointer) {glGetMultiTexImageEXT_P(texunit, target, level, format, type, pixels)}
public func glGetMultiTexImageEXT(texunit:GLenum, target:GLenum, level:GLint, format:GLenum, type:GLenum, pixels:UnsafeMutableRawPointer) {glGetMultiTexImageEXT_P(texunit, target, level, format, type, pixels)}
var glGetMultiTexImageEXT_P:@convention(c)(GLenum, GLenum, GLint, GLenum, GLenum, UnsafeMutableRawPointer) -> Void = glGetMultiTexImageEXT_L
public func glGetMultiTexLevelParameterfvEXT(_ texunit:GLenum, _ target:GLenum, _ level:GLint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetMultiTexLevelParameterfvEXT_P(texunit, target, level, pname, params)}
public func glGetMultiTexLevelParameterfvEXT(texunit:GLenum, target:GLenum, level:GLint, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetMultiTexLevelParameterfvEXT_P(texunit, target, level, pname, params)}
var glGetMultiTexLevelParameterfvEXT_P:@convention(c)(GLenum, GLenum, GLint, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetMultiTexLevelParameterfvEXT_L
public func glGetMultiTexLevelParameterivEXT(_ texunit:GLenum, _ target:GLenum, _ level:GLint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetMultiTexLevelParameterivEXT_P(texunit, target, level, pname, params)}
public func glGetMultiTexLevelParameterivEXT(texunit:GLenum, target:GLenum, level:GLint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetMultiTexLevelParameterivEXT_P(texunit, target, level, pname, params)}
var glGetMultiTexLevelParameterivEXT_P:@convention(c)(GLenum, GLenum, GLint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetMultiTexLevelParameterivEXT_L
public func glGetMultiTexParameterIivEXT(_ texunit:GLenum, _ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetMultiTexParameterIivEXT_P(texunit, target, pname, params)}
public func glGetMultiTexParameterIivEXT(texunit:GLenum, target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetMultiTexParameterIivEXT_P(texunit, target, pname, params)}
var glGetMultiTexParameterIivEXT_P:@convention(c)(GLenum, GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetMultiTexParameterIivEXT_L
public func glGetMultiTexParameterIuivEXT(_ texunit:GLenum, _ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLuint>) {glGetMultiTexParameterIuivEXT_P(texunit, target, pname, params)}
public func glGetMultiTexParameterIuivEXT(texunit:GLenum, target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLuint>) {glGetMultiTexParameterIuivEXT_P(texunit, target, pname, params)}
var glGetMultiTexParameterIuivEXT_P:@convention(c)(GLenum, GLenum, GLenum, UnsafeMutablePointer<GLuint>) -> Void = glGetMultiTexParameterIuivEXT_L
public func glGetMultiTexParameterfvEXT(_ texunit:GLenum, _ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetMultiTexParameterfvEXT_P(texunit, target, pname, params)}
public func glGetMultiTexParameterfvEXT(texunit:GLenum, target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetMultiTexParameterfvEXT_P(texunit, target, pname, params)}
var glGetMultiTexParameterfvEXT_P:@convention(c)(GLenum, GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetMultiTexParameterfvEXT_L
public func glGetMultiTexParameterivEXT(_ texunit:GLenum, _ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetMultiTexParameterivEXT_P(texunit, target, pname, params)}
public func glGetMultiTexParameterivEXT(texunit:GLenum, target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetMultiTexParameterivEXT_P(texunit, target, pname, params)}
var glGetMultiTexParameterivEXT_P:@convention(c)(GLenum, GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetMultiTexParameterivEXT_L
public func glGetMultisamplefv(_ pname:GLenum, _ index:GLuint, _ val:UnsafeMutablePointer<GLfloat>) {glGetMultisamplefv_P(pname, index, val)}
public func glGetMultisamplefv(pname:GLenum, index:GLuint, val:UnsafeMutablePointer<GLfloat>) {glGetMultisamplefv_P(pname, index, val)}
var glGetMultisamplefv_P:@convention(c)(GLenum, GLuint, UnsafeMutablePointer<GLfloat>) -> Void = glGetMultisamplefv_L
public func glGetMultisamplefvNV(_ pname:GLenum, _ index:GLuint, _ val:UnsafeMutablePointer<GLfloat>) {glGetMultisamplefvNV_P(pname, index, val)}
public func glGetMultisamplefvNV(pname:GLenum, index:GLuint, val:UnsafeMutablePointer<GLfloat>) {glGetMultisamplefvNV_P(pname, index, val)}
var glGetMultisamplefvNV_P:@convention(c)(GLenum, GLuint, UnsafeMutablePointer<GLfloat>) -> Void = glGetMultisamplefvNV_L
public func glGetNamedBufferParameteri64v(_ buffer:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint64>) {glGetNamedBufferParameteri64v_P(buffer, pname, params)}
public func glGetNamedBufferParameteri64v(buffer:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint64>) {glGetNamedBufferParameteri64v_P(buffer, pname, params)}
var glGetNamedBufferParameteri64v_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint64>) -> Void = glGetNamedBufferParameteri64v_L
public func glGetNamedBufferParameteriv(_ buffer:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetNamedBufferParameteriv_P(buffer, pname, params)}
public func glGetNamedBufferParameteriv(buffer:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetNamedBufferParameteriv_P(buffer, pname, params)}
var glGetNamedBufferParameteriv_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetNamedBufferParameteriv_L
public func glGetNamedBufferParameterivEXT(_ buffer:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetNamedBufferParameterivEXT_P(buffer, pname, params)}
public func glGetNamedBufferParameterivEXT(buffer:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetNamedBufferParameterivEXT_P(buffer, pname, params)}
var glGetNamedBufferParameterivEXT_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetNamedBufferParameterivEXT_L
public func glGetNamedBufferParameterui64vNV(_ buffer:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLuint64EXT>) {glGetNamedBufferParameterui64vNV_P(buffer, pname, params)}
public func glGetNamedBufferParameterui64vNV(buffer:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLuint64EXT>) {glGetNamedBufferParameterui64vNV_P(buffer, pname, params)}
var glGetNamedBufferParameterui64vNV_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLuint64EXT>) -> Void = glGetNamedBufferParameterui64vNV_L
public func glGetNamedBufferPointerv(_ buffer:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetNamedBufferPointerv_P(buffer, pname, params)}
public func glGetNamedBufferPointerv(buffer:GLuint, pname:GLenum, params:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetNamedBufferPointerv_P(buffer, pname, params)}
var glGetNamedBufferPointerv_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<UnsafeMutableRawPointer>) -> Void = glGetNamedBufferPointerv_L
public func glGetNamedBufferPointervEXT(_ buffer:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetNamedBufferPointervEXT_P(buffer, pname, params)}
public func glGetNamedBufferPointervEXT(buffer:GLuint, pname:GLenum, params:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetNamedBufferPointervEXT_P(buffer, pname, params)}
var glGetNamedBufferPointervEXT_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<UnsafeMutableRawPointer>) -> Void = glGetNamedBufferPointervEXT_L
public func glGetNamedBufferSubData(_ buffer:GLuint, _ offset:GLintptr, _ size:GLsizeiptr, _ data:UnsafeMutableRawPointer) {glGetNamedBufferSubData_P(buffer, offset, size, data)}
public func glGetNamedBufferSubData(buffer:GLuint, offset:GLintptr, size:GLsizeiptr, data:UnsafeMutableRawPointer) {glGetNamedBufferSubData_P(buffer, offset, size, data)}
var glGetNamedBufferSubData_P:@convention(c)(GLuint, GLintptr, GLsizeiptr, UnsafeMutableRawPointer) -> Void = glGetNamedBufferSubData_L
public func glGetNamedBufferSubDataEXT(_ buffer:GLuint, _ offset:GLintptr, _ size:GLsizeiptr, _ data:UnsafeMutableRawPointer) {glGetNamedBufferSubDataEXT_P(buffer, offset, size, data)}
public func glGetNamedBufferSubDataEXT(buffer:GLuint, offset:GLintptr, size:GLsizeiptr, data:UnsafeMutableRawPointer) {glGetNamedBufferSubDataEXT_P(buffer, offset, size, data)}
var glGetNamedBufferSubDataEXT_P:@convention(c)(GLuint, GLintptr, GLsizeiptr, UnsafeMutableRawPointer) -> Void = glGetNamedBufferSubDataEXT_L
public func glGetNamedFramebufferAttachmentParameteriv(_ framebuffer:GLuint, _ attachment:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetNamedFramebufferAttachmentParameteriv_P(framebuffer, attachment, pname, params)}
public func glGetNamedFramebufferAttachmentParameteriv(framebuffer:GLuint, attachment:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetNamedFramebufferAttachmentParameteriv_P(framebuffer, attachment, pname, params)}
var glGetNamedFramebufferAttachmentParameteriv_P:@convention(c)(GLuint, GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetNamedFramebufferAttachmentParameteriv_L
public func glGetNamedFramebufferAttachmentParameterivEXT(_ framebuffer:GLuint, _ attachment:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetNamedFramebufferAttachmentParameterivEXT_P(framebuffer, attachment, pname, params)}
public func glGetNamedFramebufferAttachmentParameterivEXT(framebuffer:GLuint, attachment:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetNamedFramebufferAttachmentParameterivEXT_P(framebuffer, attachment, pname, params)}
var glGetNamedFramebufferAttachmentParameterivEXT_P:@convention(c)(GLuint, GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetNamedFramebufferAttachmentParameterivEXT_L
public func glGetNamedFramebufferParameteriv(_ framebuffer:GLuint, _ pname:GLenum, _ param:UnsafeMutablePointer<GLint>) {glGetNamedFramebufferParameteriv_P(framebuffer, pname, param)}
public func glGetNamedFramebufferParameteriv(framebuffer:GLuint, pname:GLenum, param:UnsafeMutablePointer<GLint>) {glGetNamedFramebufferParameteriv_P(framebuffer, pname, param)}
var glGetNamedFramebufferParameteriv_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetNamedFramebufferParameteriv_L
public func glGetNamedFramebufferParameterivEXT(_ framebuffer:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetNamedFramebufferParameterivEXT_P(framebuffer, pname, params)}
public func glGetNamedFramebufferParameterivEXT(framebuffer:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetNamedFramebufferParameterivEXT_P(framebuffer, pname, params)}
var glGetNamedFramebufferParameterivEXT_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetNamedFramebufferParameterivEXT_L
public func glGetNamedProgramLocalParameterIivEXT(_ program:GLuint, _ target:GLenum, _ index:GLuint, _ params:UnsafeMutablePointer<GLint>) {glGetNamedProgramLocalParameterIivEXT_P(program, target, index, params)}
public func glGetNamedProgramLocalParameterIivEXT(program:GLuint, target:GLenum, index:GLuint, params:UnsafeMutablePointer<GLint>) {glGetNamedProgramLocalParameterIivEXT_P(program, target, index, params)}
var glGetNamedProgramLocalParameterIivEXT_P:@convention(c)(GLuint, GLenum, GLuint, UnsafeMutablePointer<GLint>) -> Void = glGetNamedProgramLocalParameterIivEXT_L
public func glGetNamedProgramLocalParameterIuivEXT(_ program:GLuint, _ target:GLenum, _ index:GLuint, _ params:UnsafeMutablePointer<GLuint>) {glGetNamedProgramLocalParameterIuivEXT_P(program, target, index, params)}
public func glGetNamedProgramLocalParameterIuivEXT(program:GLuint, target:GLenum, index:GLuint, params:UnsafeMutablePointer<GLuint>) {glGetNamedProgramLocalParameterIuivEXT_P(program, target, index, params)}
var glGetNamedProgramLocalParameterIuivEXT_P:@convention(c)(GLuint, GLenum, GLuint, UnsafeMutablePointer<GLuint>) -> Void = glGetNamedProgramLocalParameterIuivEXT_L
public func glGetNamedProgramLocalParameterdvEXT(_ program:GLuint, _ target:GLenum, _ index:GLuint, _ params:UnsafeMutablePointer<GLdouble>) {glGetNamedProgramLocalParameterdvEXT_P(program, target, index, params)}
public func glGetNamedProgramLocalParameterdvEXT(program:GLuint, target:GLenum, index:GLuint, params:UnsafeMutablePointer<GLdouble>) {glGetNamedProgramLocalParameterdvEXT_P(program, target, index, params)}
var glGetNamedProgramLocalParameterdvEXT_P:@convention(c)(GLuint, GLenum, GLuint, UnsafeMutablePointer<GLdouble>) -> Void = glGetNamedProgramLocalParameterdvEXT_L
public func glGetNamedProgramLocalParameterfvEXT(_ program:GLuint, _ target:GLenum, _ index:GLuint, _ params:UnsafeMutablePointer<GLfloat>) {glGetNamedProgramLocalParameterfvEXT_P(program, target, index, params)}
public func glGetNamedProgramLocalParameterfvEXT(program:GLuint, target:GLenum, index:GLuint, params:UnsafeMutablePointer<GLfloat>) {glGetNamedProgramLocalParameterfvEXT_P(program, target, index, params)}
var glGetNamedProgramLocalParameterfvEXT_P:@convention(c)(GLuint, GLenum, GLuint, UnsafeMutablePointer<GLfloat>) -> Void = glGetNamedProgramLocalParameterfvEXT_L
public func glGetNamedProgramStringEXT(_ program:GLuint, _ target:GLenum, _ pname:GLenum, _ string:UnsafeMutableRawPointer) {glGetNamedProgramStringEXT_P(program, target, pname, string)}
public func glGetNamedProgramStringEXT(program:GLuint, target:GLenum, pname:GLenum, string:UnsafeMutableRawPointer) {glGetNamedProgramStringEXT_P(program, target, pname, string)}
var glGetNamedProgramStringEXT_P:@convention(c)(GLuint, GLenum, GLenum, UnsafeMutableRawPointer) -> Void = glGetNamedProgramStringEXT_L
public func glGetNamedProgramivEXT(_ program:GLuint, _ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetNamedProgramivEXT_P(program, target, pname, params)}
public func glGetNamedProgramivEXT(program:GLuint, target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetNamedProgramivEXT_P(program, target, pname, params)}
var glGetNamedProgramivEXT_P:@convention(c)(GLuint, GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetNamedProgramivEXT_L
public func glGetNamedRenderbufferParameteriv(_ renderbuffer:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetNamedRenderbufferParameteriv_P(renderbuffer, pname, params)}
public func glGetNamedRenderbufferParameteriv(renderbuffer:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetNamedRenderbufferParameteriv_P(renderbuffer, pname, params)}
var glGetNamedRenderbufferParameteriv_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetNamedRenderbufferParameteriv_L
public func glGetNamedRenderbufferParameterivEXT(_ renderbuffer:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetNamedRenderbufferParameterivEXT_P(renderbuffer, pname, params)}
public func glGetNamedRenderbufferParameterivEXT(renderbuffer:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetNamedRenderbufferParameterivEXT_P(renderbuffer, pname, params)}
var glGetNamedRenderbufferParameterivEXT_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetNamedRenderbufferParameterivEXT_L
public func glGetNamedStringARB(_ namelen:GLint, _ name:UnsafePointer<GLchar>, _ bufSize:GLsizei, _ stringlen:UnsafeMutablePointer<GLint>, _ string:UnsafeMutablePointer<GLchar>) {glGetNamedStringARB_P(namelen, name, bufSize, stringlen, string)}
public func glGetNamedStringARB(namelen:GLint, name:UnsafePointer<GLchar>, bufSize:GLsizei, stringlen:UnsafeMutablePointer<GLint>, string:UnsafeMutablePointer<GLchar>) {glGetNamedStringARB_P(namelen, name, bufSize, stringlen, string)}
var glGetNamedStringARB_P:@convention(c)(GLint, UnsafePointer<GLchar>, GLsizei, UnsafeMutablePointer<GLint>, UnsafeMutablePointer<GLchar>) -> Void = glGetNamedStringARB_L
public func glGetNamedStringivARB(_ namelen:GLint, _ name:UnsafePointer<GLchar>, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetNamedStringivARB_P(namelen, name, pname, params)}
public func glGetNamedStringivARB(namelen:GLint, name:UnsafePointer<GLchar>, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetNamedStringivARB_P(namelen, name, pname, params)}
var glGetNamedStringivARB_P:@convention(c)(GLint, UnsafePointer<GLchar>, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetNamedStringivARB_L
public func glGetNextPerfQueryIdINTEL(_ queryId:GLuint, _ nextQueryId:UnsafeMutablePointer<GLuint>) {glGetNextPerfQueryIdINTEL_P(queryId, nextQueryId)}
public func glGetNextPerfQueryIdINTEL(queryId:GLuint, nextQueryId:UnsafeMutablePointer<GLuint>) {glGetNextPerfQueryIdINTEL_P(queryId, nextQueryId)}
var glGetNextPerfQueryIdINTEL_P:@convention(c)(GLuint, UnsafeMutablePointer<GLuint>) -> Void = glGetNextPerfQueryIdINTEL_L
public func glGetObjectBufferfvATI(_ buffer:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetObjectBufferfvATI_P(buffer, pname, params)}
public func glGetObjectBufferfvATI(buffer:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetObjectBufferfvATI_P(buffer, pname, params)}
var glGetObjectBufferfvATI_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetObjectBufferfvATI_L
public func glGetObjectBufferivATI(_ buffer:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetObjectBufferivATI_P(buffer, pname, params)}
public func glGetObjectBufferivATI(buffer:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetObjectBufferivATI_P(buffer, pname, params)}
var glGetObjectBufferivATI_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetObjectBufferivATI_L
public func glGetObjectLabel(_ identifier:GLenum, _ name:GLuint, _ bufSize:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ label:UnsafeMutablePointer<GLchar>) {glGetObjectLabel_P(identifier, name, bufSize, length, label)}
public func glGetObjectLabel(identifier:GLenum, name:GLuint, bufSize:GLsizei, length:UnsafeMutablePointer<GLsizei>, label:UnsafeMutablePointer<GLchar>) {glGetObjectLabel_P(identifier, name, bufSize, length, label)}
var glGetObjectLabel_P:@convention(c)(GLenum, GLuint, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLchar>) -> Void = glGetObjectLabel_L
public func glGetObjectLabelEXT(_ type:GLenum, _ object:GLuint, _ bufSize:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ label:UnsafeMutablePointer<GLchar>) {glGetObjectLabelEXT_P(type, object, bufSize, length, label)}
public func glGetObjectLabelEXT(type:GLenum, object:GLuint, bufSize:GLsizei, length:UnsafeMutablePointer<GLsizei>, label:UnsafeMutablePointer<GLchar>) {glGetObjectLabelEXT_P(type, object, bufSize, length, label)}
var glGetObjectLabelEXT_P:@convention(c)(GLenum, GLuint, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLchar>) -> Void = glGetObjectLabelEXT_L
public func glGetObjectLabelKHR(_ identifier:GLenum, _ name:GLuint, _ bufSize:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ label:UnsafeMutablePointer<GLchar>) {glGetObjectLabelKHR_P(identifier, name, bufSize, length, label)}
public func glGetObjectLabelKHR(identifier:GLenum, name:GLuint, bufSize:GLsizei, length:UnsafeMutablePointer<GLsizei>, label:UnsafeMutablePointer<GLchar>) {glGetObjectLabelKHR_P(identifier, name, bufSize, length, label)}
var glGetObjectLabelKHR_P:@convention(c)(GLenum, GLuint, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLchar>) -> Void = glGetObjectLabelKHR_L
public func glGetObjectParameterfvARB(_ obj:GLhandleARB, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetObjectParameterfvARB_P(obj, pname, params)}
public func glGetObjectParameterfvARB(obj:GLhandleARB, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetObjectParameterfvARB_P(obj, pname, params)}
var glGetObjectParameterfvARB_P:@convention(c)(GLhandleARB, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetObjectParameterfvARB_L
public func glGetObjectParameterivAPPLE(_ objectType:GLenum, _ name:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetObjectParameterivAPPLE_P(objectType, name, pname, params)}
public func glGetObjectParameterivAPPLE(objectType:GLenum, name:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetObjectParameterivAPPLE_P(objectType, name, pname, params)}
var glGetObjectParameterivAPPLE_P:@convention(c)(GLenum, GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetObjectParameterivAPPLE_L
public func glGetObjectParameterivARB(_ obj:GLhandleARB, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetObjectParameterivARB_P(obj, pname, params)}
public func glGetObjectParameterivARB(obj:GLhandleARB, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetObjectParameterivARB_P(obj, pname, params)}
var glGetObjectParameterivARB_P:@convention(c)(GLhandleARB, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetObjectParameterivARB_L
public func glGetObjectPtrLabel(_ ptr:UnsafeRawPointer, _ bufSize:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ label:UnsafeMutablePointer<GLchar>) {glGetObjectPtrLabel_P(ptr, bufSize, length, label)}
public func glGetObjectPtrLabel(ptr:UnsafeRawPointer, bufSize:GLsizei, length:UnsafeMutablePointer<GLsizei>, label:UnsafeMutablePointer<GLchar>) {glGetObjectPtrLabel_P(ptr, bufSize, length, label)}
var glGetObjectPtrLabel_P:@convention(c)(UnsafeRawPointer, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLchar>) -> Void = glGetObjectPtrLabel_L
public func glGetObjectPtrLabelKHR(_ ptr:UnsafeRawPointer, _ bufSize:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ label:UnsafeMutablePointer<GLchar>) {glGetObjectPtrLabelKHR_P(ptr, bufSize, length, label)}
public func glGetObjectPtrLabelKHR(ptr:UnsafeRawPointer, bufSize:GLsizei, length:UnsafeMutablePointer<GLsizei>, label:UnsafeMutablePointer<GLchar>) {glGetObjectPtrLabelKHR_P(ptr, bufSize, length, label)}
var glGetObjectPtrLabelKHR_P:@convention(c)(UnsafeRawPointer, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLchar>) -> Void = glGetObjectPtrLabelKHR_L
public func glGetOcclusionQueryivNV(_ id:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetOcclusionQueryivNV_P(id, pname, params)}
public func glGetOcclusionQueryivNV(id:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetOcclusionQueryivNV_P(id, pname, params)}
var glGetOcclusionQueryivNV_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetOcclusionQueryivNV_L
public func glGetOcclusionQueryuivNV(_ id:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLuint>) {glGetOcclusionQueryuivNV_P(id, pname, params)}
public func glGetOcclusionQueryuivNV(id:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLuint>) {glGetOcclusionQueryuivNV_P(id, pname, params)}
var glGetOcclusionQueryuivNV_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLuint>) -> Void = glGetOcclusionQueryuivNV_L
public func glGetPathColorGenfvNV(_ color:GLenum, _ pname:GLenum, _ value:UnsafeMutablePointer<GLfloat>) {glGetPathColorGenfvNV_P(color, pname, value)}
public func glGetPathColorGenfvNV(color:GLenum, pname:GLenum, value:UnsafeMutablePointer<GLfloat>) {glGetPathColorGenfvNV_P(color, pname, value)}
var glGetPathColorGenfvNV_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetPathColorGenfvNV_L
public func glGetPathColorGenivNV(_ color:GLenum, _ pname:GLenum, _ value:UnsafeMutablePointer<GLint>) {glGetPathColorGenivNV_P(color, pname, value)}
public func glGetPathColorGenivNV(color:GLenum, pname:GLenum, value:UnsafeMutablePointer<GLint>) {glGetPathColorGenivNV_P(color, pname, value)}
var glGetPathColorGenivNV_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetPathColorGenivNV_L
public func glGetPathCommandsNV(_ path:GLuint, _ commands:UnsafeMutablePointer<GLubyte>) {glGetPathCommandsNV_P(path, commands)}
public func glGetPathCommandsNV(path:GLuint, commands:UnsafeMutablePointer<GLubyte>) {glGetPathCommandsNV_P(path, commands)}
var glGetPathCommandsNV_P:@convention(c)(GLuint, UnsafeMutablePointer<GLubyte>) -> Void = glGetPathCommandsNV_L
public func glGetPathCoordsNV(_ path:GLuint, _ coords:UnsafeMutablePointer<GLfloat>) {glGetPathCoordsNV_P(path, coords)}
public func glGetPathCoordsNV(path:GLuint, coords:UnsafeMutablePointer<GLfloat>) {glGetPathCoordsNV_P(path, coords)}
var glGetPathCoordsNV_P:@convention(c)(GLuint, UnsafeMutablePointer<GLfloat>) -> Void = glGetPathCoordsNV_L
public func glGetPathDashArrayNV(_ path:GLuint, _ dashArray:UnsafeMutablePointer<GLfloat>) {glGetPathDashArrayNV_P(path, dashArray)}
public func glGetPathDashArrayNV(path:GLuint, dashArray:UnsafeMutablePointer<GLfloat>) {glGetPathDashArrayNV_P(path, dashArray)}
var glGetPathDashArrayNV_P:@convention(c)(GLuint, UnsafeMutablePointer<GLfloat>) -> Void = glGetPathDashArrayNV_L
public func glGetPathLengthNV(_ path:GLuint, _ startSegment:GLsizei, _ numSegments:GLsizei) -> GLfloat {return glGetPathLengthNV_P(path, startSegment, numSegments)}
public func glGetPathLengthNV(path:GLuint, startSegment:GLsizei, numSegments:GLsizei) -> GLfloat {return glGetPathLengthNV_P(path, startSegment, numSegments)}
var glGetPathLengthNV_P:@convention(c)(GLuint, GLsizei, GLsizei) -> GLfloat = glGetPathLengthNV_L
public func glGetPathMetricRangeNV(_ metricQueryMask:GLbitfield, _ firstPathName:GLuint, _ numPaths:GLsizei, _ stride:GLsizei, _ metrics:UnsafeMutablePointer<GLfloat>) {glGetPathMetricRangeNV_P(metricQueryMask, firstPathName, numPaths, stride, metrics)}
public func glGetPathMetricRangeNV(metricQueryMask:GLbitfield, firstPathName:GLuint, numPaths:GLsizei, stride:GLsizei, metrics:UnsafeMutablePointer<GLfloat>) {glGetPathMetricRangeNV_P(metricQueryMask, firstPathName, numPaths, stride, metrics)}
var glGetPathMetricRangeNV_P:@convention(c)(GLbitfield, GLuint, GLsizei, GLsizei, UnsafeMutablePointer<GLfloat>) -> Void = glGetPathMetricRangeNV_L
public func glGetPathMetricsNV(_ metricQueryMask:GLbitfield, _ numPaths:GLsizei, _ pathNameType:GLenum, _ paths:UnsafeRawPointer, _ pathBase:GLuint, _ stride:GLsizei, _ metrics:UnsafeMutablePointer<GLfloat>) {glGetPathMetricsNV_P(metricQueryMask, numPaths, pathNameType, paths, pathBase, stride, metrics)}
public func glGetPathMetricsNV(metricQueryMask:GLbitfield, numPaths:GLsizei, pathNameType:GLenum, paths:UnsafeRawPointer, pathBase:GLuint, stride:GLsizei, metrics:UnsafeMutablePointer<GLfloat>) {glGetPathMetricsNV_P(metricQueryMask, numPaths, pathNameType, paths, pathBase, stride, metrics)}
var glGetPathMetricsNV_P:@convention(c)(GLbitfield, GLsizei, GLenum, UnsafeRawPointer, GLuint, GLsizei, UnsafeMutablePointer<GLfloat>) -> Void = glGetPathMetricsNV_L
public func glGetPathParameterfvNV(_ path:GLuint, _ pname:GLenum, _ value:UnsafeMutablePointer<GLfloat>) {glGetPathParameterfvNV_P(path, pname, value)}
public func glGetPathParameterfvNV(path:GLuint, pname:GLenum, value:UnsafeMutablePointer<GLfloat>) {glGetPathParameterfvNV_P(path, pname, value)}
var glGetPathParameterfvNV_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetPathParameterfvNV_L
public func glGetPathParameterivNV(_ path:GLuint, _ pname:GLenum, _ value:UnsafeMutablePointer<GLint>) {glGetPathParameterivNV_P(path, pname, value)}
public func glGetPathParameterivNV(path:GLuint, pname:GLenum, value:UnsafeMutablePointer<GLint>) {glGetPathParameterivNV_P(path, pname, value)}
var glGetPathParameterivNV_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetPathParameterivNV_L
public func glGetPathSpacingNV(_ pathListMode:GLenum, _ numPaths:GLsizei, _ pathNameType:GLenum, _ paths:UnsafeRawPointer, _ pathBase:GLuint, _ advanceScale:GLfloat, _ kerningScale:GLfloat, _ transformType:GLenum, _ returnedSpacing:UnsafeMutablePointer<GLfloat>) {glGetPathSpacingNV_P(pathListMode, numPaths, pathNameType, paths, pathBase, advanceScale, kerningScale, transformType, returnedSpacing)}
public func glGetPathSpacingNV(pathListMode:GLenum, numPaths:GLsizei, pathNameType:GLenum, paths:UnsafeRawPointer, pathBase:GLuint, advanceScale:GLfloat, kerningScale:GLfloat, transformType:GLenum, returnedSpacing:UnsafeMutablePointer<GLfloat>) {glGetPathSpacingNV_P(pathListMode, numPaths, pathNameType, paths, pathBase, advanceScale, kerningScale, transformType, returnedSpacing)}
var glGetPathSpacingNV_P:@convention(c)(GLenum, GLsizei, GLenum, UnsafeRawPointer, GLuint, GLfloat, GLfloat, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetPathSpacingNV_L
public func glGetPathTexGenfvNV(_ texCoordSet:GLenum, _ pname:GLenum, _ value:UnsafeMutablePointer<GLfloat>) {glGetPathTexGenfvNV_P(texCoordSet, pname, value)}
public func glGetPathTexGenfvNV(texCoordSet:GLenum, pname:GLenum, value:UnsafeMutablePointer<GLfloat>) {glGetPathTexGenfvNV_P(texCoordSet, pname, value)}
var glGetPathTexGenfvNV_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetPathTexGenfvNV_L
public func glGetPathTexGenivNV(_ texCoordSet:GLenum, _ pname:GLenum, _ value:UnsafeMutablePointer<GLint>) {glGetPathTexGenivNV_P(texCoordSet, pname, value)}
public func glGetPathTexGenivNV(texCoordSet:GLenum, pname:GLenum, value:UnsafeMutablePointer<GLint>) {glGetPathTexGenivNV_P(texCoordSet, pname, value)}
var glGetPathTexGenivNV_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetPathTexGenivNV_L
public func glGetPerfCounterInfoINTEL(_ queryId:GLuint, _ counterId:GLuint, _ counterNameLength:GLuint, _ counterName:UnsafeMutablePointer<GLchar>, _ counterDescLength:GLuint, _ counterDesc:UnsafeMutablePointer<GLchar>, _ counterOffset:UnsafeMutablePointer<GLuint>, _ counterDataSize:UnsafeMutablePointer<GLuint>, _ counterTypeEnum:UnsafeMutablePointer<GLuint>, _ counterDataTypeEnum:UnsafeMutablePointer<GLuint>, _ rawCounterMaxValue:UnsafeMutablePointer<GLuint64>) {glGetPerfCounterInfoINTEL_P(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue)}
public func glGetPerfCounterInfoINTEL(queryId:GLuint, counterId:GLuint, counterNameLength:GLuint, counterName:UnsafeMutablePointer<GLchar>, counterDescLength:GLuint, counterDesc:UnsafeMutablePointer<GLchar>, counterOffset:UnsafeMutablePointer<GLuint>, counterDataSize:UnsafeMutablePointer<GLuint>, counterTypeEnum:UnsafeMutablePointer<GLuint>, counterDataTypeEnum:UnsafeMutablePointer<GLuint>, rawCounterMaxValue:UnsafeMutablePointer<GLuint64>) {glGetPerfCounterInfoINTEL_P(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue)}
var glGetPerfCounterInfoINTEL_P:@convention(c)(GLuint, GLuint, GLuint, UnsafeMutablePointer<GLchar>, GLuint, UnsafeMutablePointer<GLchar>, UnsafeMutablePointer<GLuint>, UnsafeMutablePointer<GLuint>, UnsafeMutablePointer<GLuint>, UnsafeMutablePointer<GLuint>, UnsafeMutablePointer<GLuint64>) -> Void = glGetPerfCounterInfoINTEL_L
public func glGetPerfMonitorCounterDataAMD(_ monitor:GLuint, _ pname:GLenum, _ dataSize:GLsizei, _ data:UnsafeMutablePointer<GLuint>, _ bytesWritten:UnsafeMutablePointer<GLint>) {glGetPerfMonitorCounterDataAMD_P(monitor, pname, dataSize, data, bytesWritten)}
public func glGetPerfMonitorCounterDataAMD(monitor:GLuint, pname:GLenum, dataSize:GLsizei, data:UnsafeMutablePointer<GLuint>, bytesWritten:UnsafeMutablePointer<GLint>) {glGetPerfMonitorCounterDataAMD_P(monitor, pname, dataSize, data, bytesWritten)}
var glGetPerfMonitorCounterDataAMD_P:@convention(c)(GLuint, GLenum, GLsizei, UnsafeMutablePointer<GLuint>, UnsafeMutablePointer<GLint>) -> Void = glGetPerfMonitorCounterDataAMD_L
public func glGetPerfMonitorCounterInfoAMD(_ group:GLuint, _ counter:GLuint, _ pname:GLenum, _ data:UnsafeMutableRawPointer) {glGetPerfMonitorCounterInfoAMD_P(group, counter, pname, data)}
public func glGetPerfMonitorCounterInfoAMD(group:GLuint, counter:GLuint, pname:GLenum, data:UnsafeMutableRawPointer) {glGetPerfMonitorCounterInfoAMD_P(group, counter, pname, data)}
var glGetPerfMonitorCounterInfoAMD_P:@convention(c)(GLuint, GLuint, GLenum, UnsafeMutableRawPointer) -> Void = glGetPerfMonitorCounterInfoAMD_L
public func glGetPerfMonitorCounterStringAMD(_ group:GLuint, _ counter:GLuint, _ bufSize:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ counterString:UnsafeMutablePointer<GLchar>) {glGetPerfMonitorCounterStringAMD_P(group, counter, bufSize, length, counterString)}
public func glGetPerfMonitorCounterStringAMD(group:GLuint, counter:GLuint, bufSize:GLsizei, length:UnsafeMutablePointer<GLsizei>, counterString:UnsafeMutablePointer<GLchar>) {glGetPerfMonitorCounterStringAMD_P(group, counter, bufSize, length, counterString)}
var glGetPerfMonitorCounterStringAMD_P:@convention(c)(GLuint, GLuint, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLchar>) -> Void = glGetPerfMonitorCounterStringAMD_L
public func glGetPerfMonitorCountersAMD(_ group:GLuint, _ numCounters:UnsafeMutablePointer<GLint>, _ maxActiveCounters:UnsafeMutablePointer<GLint>, _ counterSize:GLsizei, _ counters:UnsafeMutablePointer<GLuint>) {glGetPerfMonitorCountersAMD_P(group, numCounters, maxActiveCounters, counterSize, counters)}
public func glGetPerfMonitorCountersAMD(group:GLuint, numCounters:UnsafeMutablePointer<GLint>, maxActiveCounters:UnsafeMutablePointer<GLint>, counterSize:GLsizei, counters:UnsafeMutablePointer<GLuint>) {glGetPerfMonitorCountersAMD_P(group, numCounters, maxActiveCounters, counterSize, counters)}
var glGetPerfMonitorCountersAMD_P:@convention(c)(GLuint, UnsafeMutablePointer<GLint>, UnsafeMutablePointer<GLint>, GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGetPerfMonitorCountersAMD_L
public func glGetPerfMonitorGroupStringAMD(_ group:GLuint, _ bufSize:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ groupString:UnsafeMutablePointer<GLchar>) {glGetPerfMonitorGroupStringAMD_P(group, bufSize, length, groupString)}
public func glGetPerfMonitorGroupStringAMD(group:GLuint, bufSize:GLsizei, length:UnsafeMutablePointer<GLsizei>, groupString:UnsafeMutablePointer<GLchar>) {glGetPerfMonitorGroupStringAMD_P(group, bufSize, length, groupString)}
var glGetPerfMonitorGroupStringAMD_P:@convention(c)(GLuint, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLchar>) -> Void = glGetPerfMonitorGroupStringAMD_L
public func glGetPerfMonitorGroupsAMD(_ numGroups:UnsafeMutablePointer<GLint>, _ groupsSize:GLsizei, _ groups:UnsafeMutablePointer<GLuint>) {glGetPerfMonitorGroupsAMD_P(numGroups, groupsSize, groups)}
public func glGetPerfMonitorGroupsAMD(numGroups:UnsafeMutablePointer<GLint>, groupsSize:GLsizei, groups:UnsafeMutablePointer<GLuint>) {glGetPerfMonitorGroupsAMD_P(numGroups, groupsSize, groups)}
var glGetPerfMonitorGroupsAMD_P:@convention(c)(UnsafeMutablePointer<GLint>, GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGetPerfMonitorGroupsAMD_L
public func glGetPerfQueryDataINTEL(_ queryHandle:GLuint, _ flags:GLuint, _ dataSize:GLsizei, _ data:UnsafeMutableRawPointer, _ bytesWritten:UnsafeMutablePointer<GLuint>) {glGetPerfQueryDataINTEL_P(queryHandle, flags, dataSize, data, bytesWritten)}
public func glGetPerfQueryDataINTEL(queryHandle:GLuint, flags:GLuint, dataSize:GLsizei, data:UnsafeMutableRawPointer, bytesWritten:UnsafeMutablePointer<GLuint>) {glGetPerfQueryDataINTEL_P(queryHandle, flags, dataSize, data, bytesWritten)}
var glGetPerfQueryDataINTEL_P:@convention(c)(GLuint, GLuint, GLsizei, UnsafeMutableRawPointer, UnsafeMutablePointer<GLuint>) -> Void = glGetPerfQueryDataINTEL_L
public func glGetPerfQueryIdByNameINTEL(_ queryName:UnsafeMutablePointer<GLchar>, _ queryId:UnsafeMutablePointer<GLuint>) {glGetPerfQueryIdByNameINTEL_P(queryName, queryId)}
public func glGetPerfQueryIdByNameINTEL(queryName:UnsafeMutablePointer<GLchar>, queryId:UnsafeMutablePointer<GLuint>) {glGetPerfQueryIdByNameINTEL_P(queryName, queryId)}
var glGetPerfQueryIdByNameINTEL_P:@convention(c)(UnsafeMutablePointer<GLchar>, UnsafeMutablePointer<GLuint>) -> Void = glGetPerfQueryIdByNameINTEL_L
public func glGetPerfQueryInfoINTEL(_ queryId:GLuint, _ queryNameLength:GLuint, _ queryName:UnsafeMutablePointer<GLchar>, _ dataSize:UnsafeMutablePointer<GLuint>, _ noCounters:UnsafeMutablePointer<GLuint>, _ noInstances:UnsafeMutablePointer<GLuint>, _ capsMask:UnsafeMutablePointer<GLuint>) {glGetPerfQueryInfoINTEL_P(queryId, queryNameLength, queryName, dataSize, noCounters, noInstances, capsMask)}
public func glGetPerfQueryInfoINTEL(queryId:GLuint, queryNameLength:GLuint, queryName:UnsafeMutablePointer<GLchar>, dataSize:UnsafeMutablePointer<GLuint>, noCounters:UnsafeMutablePointer<GLuint>, noInstances:UnsafeMutablePointer<GLuint>, capsMask:UnsafeMutablePointer<GLuint>) {glGetPerfQueryInfoINTEL_P(queryId, queryNameLength, queryName, dataSize, noCounters, noInstances, capsMask)}
var glGetPerfQueryInfoINTEL_P:@convention(c)(GLuint, GLuint, UnsafeMutablePointer<GLchar>, UnsafeMutablePointer<GLuint>, UnsafeMutablePointer<GLuint>, UnsafeMutablePointer<GLuint>, UnsafeMutablePointer<GLuint>) -> Void = glGetPerfQueryInfoINTEL_L
public func glGetPixelMapfv(_ map:GLenum, _ values:UnsafeMutablePointer<GLfloat>) {glGetPixelMapfv_P(map, values)}
public func glGetPixelMapfv(map:GLenum, values:UnsafeMutablePointer<GLfloat>) {glGetPixelMapfv_P(map, values)}
var glGetPixelMapfv_P:@convention(c)(GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetPixelMapfv_L
public func glGetPixelMapuiv(_ map:GLenum, _ values:UnsafeMutablePointer<GLuint>) {glGetPixelMapuiv_P(map, values)}
public func glGetPixelMapuiv(map:GLenum, values:UnsafeMutablePointer<GLuint>) {glGetPixelMapuiv_P(map, values)}
var glGetPixelMapuiv_P:@convention(c)(GLenum, UnsafeMutablePointer<GLuint>) -> Void = glGetPixelMapuiv_L
public func glGetPixelMapusv(_ map:GLenum, _ values:UnsafeMutablePointer<GLushort>) {glGetPixelMapusv_P(map, values)}
public func glGetPixelMapusv(map:GLenum, values:UnsafeMutablePointer<GLushort>) {glGetPixelMapusv_P(map, values)}
var glGetPixelMapusv_P:@convention(c)(GLenum, UnsafeMutablePointer<GLushort>) -> Void = glGetPixelMapusv_L
public func glGetPixelMapxv(_ map:GLenum, _ size:GLint, _ values:UnsafeMutablePointer<GLfixed>) {glGetPixelMapxv_P(map, size, values)}
public func glGetPixelMapxv(map:GLenum, size:GLint, values:UnsafeMutablePointer<GLfixed>) {glGetPixelMapxv_P(map, size, values)}
var glGetPixelMapxv_P:@convention(c)(GLenum, GLint, UnsafeMutablePointer<GLfixed>) -> Void = glGetPixelMapxv_L
public func glGetPixelTexGenParameterfvSGIS(_ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetPixelTexGenParameterfvSGIS_P(pname, params)}
public func glGetPixelTexGenParameterfvSGIS(pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetPixelTexGenParameterfvSGIS_P(pname, params)}
var glGetPixelTexGenParameterfvSGIS_P:@convention(c)(GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetPixelTexGenParameterfvSGIS_L
public func glGetPixelTexGenParameterivSGIS(_ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetPixelTexGenParameterivSGIS_P(pname, params)}
public func glGetPixelTexGenParameterivSGIS(pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetPixelTexGenParameterivSGIS_P(pname, params)}
var glGetPixelTexGenParameterivSGIS_P:@convention(c)(GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetPixelTexGenParameterivSGIS_L
public func glGetPixelTransformParameterfvEXT(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetPixelTransformParameterfvEXT_P(target, pname, params)}
public func glGetPixelTransformParameterfvEXT(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetPixelTransformParameterfvEXT_P(target, pname, params)}
var glGetPixelTransformParameterfvEXT_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetPixelTransformParameterfvEXT_L
public func glGetPixelTransformParameterivEXT(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetPixelTransformParameterivEXT_P(target, pname, params)}
public func glGetPixelTransformParameterivEXT(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetPixelTransformParameterivEXT_P(target, pname, params)}
var glGetPixelTransformParameterivEXT_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetPixelTransformParameterivEXT_L
public func glGetPointerIndexedvEXT(_ target:GLenum, _ index:GLuint, _ data:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetPointerIndexedvEXT_P(target, index, data)}
public func glGetPointerIndexedvEXT(target:GLenum, index:GLuint, data:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetPointerIndexedvEXT_P(target, index, data)}
var glGetPointerIndexedvEXT_P:@convention(c)(GLenum, GLuint, UnsafeMutablePointer<UnsafeMutableRawPointer>) -> Void = glGetPointerIndexedvEXT_L
public func glGetPointeri_vEXT(_ pname:GLenum, _ index:GLuint, _ params:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetPointeri_vEXT_P(pname, index, params)}
public func glGetPointeri_vEXT(pname:GLenum, index:GLuint, params:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetPointeri_vEXT_P(pname, index, params)}
var glGetPointeri_vEXT_P:@convention(c)(GLenum, GLuint, UnsafeMutablePointer<UnsafeMutableRawPointer>) -> Void = glGetPointeri_vEXT_L
public func glGetPointerv(_ pname:GLenum, _ params:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetPointerv_P(pname, params)}
public func glGetPointerv(pname:GLenum, params:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetPointerv_P(pname, params)}
var glGetPointerv_P:@convention(c)(GLenum, UnsafeMutablePointer<UnsafeMutableRawPointer>) -> Void = glGetPointerv_L
public func glGetPointervEXT(_ pname:GLenum, _ params:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetPointervEXT_P(pname, params)}
public func glGetPointervEXT(pname:GLenum, params:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetPointervEXT_P(pname, params)}
var glGetPointervEXT_P:@convention(c)(GLenum, UnsafeMutablePointer<UnsafeMutableRawPointer>) -> Void = glGetPointervEXT_L
public func glGetPointervKHR(_ pname:GLenum, _ params:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetPointervKHR_P(pname, params)}
public func glGetPointervKHR(pname:GLenum, params:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetPointervKHR_P(pname, params)}
var glGetPointervKHR_P:@convention(c)(GLenum, UnsafeMutablePointer<UnsafeMutableRawPointer>) -> Void = glGetPointervKHR_L
public func glGetPolygonStipple(_ mask:UnsafeMutablePointer<GLubyte>) {glGetPolygonStipple_P(mask)}
public func glGetPolygonStipple(mask:UnsafeMutablePointer<GLubyte>) {glGetPolygonStipple_P(mask)}
var glGetPolygonStipple_P:@convention(c)(UnsafeMutablePointer<GLubyte>) -> Void = glGetPolygonStipple_L
public func glGetProgramBinary(_ program:GLuint, _ bufSize:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ binaryFormat:UnsafeMutablePointer<GLenum>, _ binary:UnsafeMutableRawPointer) {glGetProgramBinary_P(program, bufSize, length, binaryFormat, binary)}
public func glGetProgramBinary(program:GLuint, bufSize:GLsizei, length:UnsafeMutablePointer<GLsizei>, binaryFormat:UnsafeMutablePointer<GLenum>, binary:UnsafeMutableRawPointer) {glGetProgramBinary_P(program, bufSize, length, binaryFormat, binary)}
var glGetProgramBinary_P:@convention(c)(GLuint, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLenum>, UnsafeMutableRawPointer) -> Void = glGetProgramBinary_L
public func glGetProgramBinaryOES(_ program:GLuint, _ bufSize:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ binaryFormat:UnsafeMutablePointer<GLenum>, _ binary:UnsafeMutableRawPointer) {glGetProgramBinaryOES_P(program, bufSize, length, binaryFormat, binary)}
public func glGetProgramBinaryOES(program:GLuint, bufSize:GLsizei, length:UnsafeMutablePointer<GLsizei>, binaryFormat:UnsafeMutablePointer<GLenum>, binary:UnsafeMutableRawPointer) {glGetProgramBinaryOES_P(program, bufSize, length, binaryFormat, binary)}
var glGetProgramBinaryOES_P:@convention(c)(GLuint, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLenum>, UnsafeMutableRawPointer) -> Void = glGetProgramBinaryOES_L
public func glGetProgramEnvParameterIivNV(_ target:GLenum, _ index:GLuint, _ params:UnsafeMutablePointer<GLint>) {glGetProgramEnvParameterIivNV_P(target, index, params)}
public func glGetProgramEnvParameterIivNV(target:GLenum, index:GLuint, params:UnsafeMutablePointer<GLint>) {glGetProgramEnvParameterIivNV_P(target, index, params)}
var glGetProgramEnvParameterIivNV_P:@convention(c)(GLenum, GLuint, UnsafeMutablePointer<GLint>) -> Void = glGetProgramEnvParameterIivNV_L
public func glGetProgramEnvParameterIuivNV(_ target:GLenum, _ index:GLuint, _ params:UnsafeMutablePointer<GLuint>) {glGetProgramEnvParameterIuivNV_P(target, index, params)}
public func glGetProgramEnvParameterIuivNV(target:GLenum, index:GLuint, params:UnsafeMutablePointer<GLuint>) {glGetProgramEnvParameterIuivNV_P(target, index, params)}
var glGetProgramEnvParameterIuivNV_P:@convention(c)(GLenum, GLuint, UnsafeMutablePointer<GLuint>) -> Void = glGetProgramEnvParameterIuivNV_L
public func glGetProgramEnvParameterdvARB(_ target:GLenum, _ index:GLuint, _ params:UnsafeMutablePointer<GLdouble>) {glGetProgramEnvParameterdvARB_P(target, index, params)}
public func glGetProgramEnvParameterdvARB(target:GLenum, index:GLuint, params:UnsafeMutablePointer<GLdouble>) {glGetProgramEnvParameterdvARB_P(target, index, params)}
var glGetProgramEnvParameterdvARB_P:@convention(c)(GLenum, GLuint, UnsafeMutablePointer<GLdouble>) -> Void = glGetProgramEnvParameterdvARB_L
public func glGetProgramEnvParameterfvARB(_ target:GLenum, _ index:GLuint, _ params:UnsafeMutablePointer<GLfloat>) {glGetProgramEnvParameterfvARB_P(target, index, params)}
public func glGetProgramEnvParameterfvARB(target:GLenum, index:GLuint, params:UnsafeMutablePointer<GLfloat>) {glGetProgramEnvParameterfvARB_P(target, index, params)}
var glGetProgramEnvParameterfvARB_P:@convention(c)(GLenum, GLuint, UnsafeMutablePointer<GLfloat>) -> Void = glGetProgramEnvParameterfvARB_L
public func glGetProgramInfoLog(_ program:GLuint, _ bufSize:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ infoLog:UnsafeMutablePointer<GLchar>) {glGetProgramInfoLog_P(program, bufSize, length, infoLog)}
public func glGetProgramInfoLog(program:GLuint, bufSize:GLsizei, length:UnsafeMutablePointer<GLsizei>, infoLog:UnsafeMutablePointer<GLchar>) {glGetProgramInfoLog_P(program, bufSize, length, infoLog)}
var glGetProgramInfoLog_P:@convention(c)(GLuint, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLchar>) -> Void = glGetProgramInfoLog_L
public func glGetProgramInterfaceiv(_ program:GLuint, _ programInterface:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetProgramInterfaceiv_P(program, programInterface, pname, params)}
public func glGetProgramInterfaceiv(program:GLuint, programInterface:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetProgramInterfaceiv_P(program, programInterface, pname, params)}
var glGetProgramInterfaceiv_P:@convention(c)(GLuint, GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetProgramInterfaceiv_L
public func glGetProgramLocalParameterIivNV(_ target:GLenum, _ index:GLuint, _ params:UnsafeMutablePointer<GLint>) {glGetProgramLocalParameterIivNV_P(target, index, params)}
public func glGetProgramLocalParameterIivNV(target:GLenum, index:GLuint, params:UnsafeMutablePointer<GLint>) {glGetProgramLocalParameterIivNV_P(target, index, params)}
var glGetProgramLocalParameterIivNV_P:@convention(c)(GLenum, GLuint, UnsafeMutablePointer<GLint>) -> Void = glGetProgramLocalParameterIivNV_L
public func glGetProgramLocalParameterIuivNV(_ target:GLenum, _ index:GLuint, _ params:UnsafeMutablePointer<GLuint>) {glGetProgramLocalParameterIuivNV_P(target, index, params)}
public func glGetProgramLocalParameterIuivNV(target:GLenum, index:GLuint, params:UnsafeMutablePointer<GLuint>) {glGetProgramLocalParameterIuivNV_P(target, index, params)}
var glGetProgramLocalParameterIuivNV_P:@convention(c)(GLenum, GLuint, UnsafeMutablePointer<GLuint>) -> Void = glGetProgramLocalParameterIuivNV_L
public func glGetProgramLocalParameterdvARB(_ target:GLenum, _ index:GLuint, _ params:UnsafeMutablePointer<GLdouble>) {glGetProgramLocalParameterdvARB_P(target, index, params)}
public func glGetProgramLocalParameterdvARB(target:GLenum, index:GLuint, params:UnsafeMutablePointer<GLdouble>) {glGetProgramLocalParameterdvARB_P(target, index, params)}
var glGetProgramLocalParameterdvARB_P:@convention(c)(GLenum, GLuint, UnsafeMutablePointer<GLdouble>) -> Void = glGetProgramLocalParameterdvARB_L
public func glGetProgramLocalParameterfvARB(_ target:GLenum, _ index:GLuint, _ params:UnsafeMutablePointer<GLfloat>) {glGetProgramLocalParameterfvARB_P(target, index, params)}
public func glGetProgramLocalParameterfvARB(target:GLenum, index:GLuint, params:UnsafeMutablePointer<GLfloat>) {glGetProgramLocalParameterfvARB_P(target, index, params)}
var glGetProgramLocalParameterfvARB_P:@convention(c)(GLenum, GLuint, UnsafeMutablePointer<GLfloat>) -> Void = glGetProgramLocalParameterfvARB_L
public func glGetProgramNamedParameterdvNV(_ id:GLuint, _ len:GLsizei, _ name:UnsafePointer<GLubyte>, _ params:UnsafeMutablePointer<GLdouble>) {glGetProgramNamedParameterdvNV_P(id, len, name, params)}
public func glGetProgramNamedParameterdvNV(id:GLuint, len:GLsizei, name:UnsafePointer<GLubyte>, params:UnsafeMutablePointer<GLdouble>) {glGetProgramNamedParameterdvNV_P(id, len, name, params)}
var glGetProgramNamedParameterdvNV_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLubyte>, UnsafeMutablePointer<GLdouble>) -> Void = glGetProgramNamedParameterdvNV_L
public func glGetProgramNamedParameterfvNV(_ id:GLuint, _ len:GLsizei, _ name:UnsafePointer<GLubyte>, _ params:UnsafeMutablePointer<GLfloat>) {glGetProgramNamedParameterfvNV_P(id, len, name, params)}
public func glGetProgramNamedParameterfvNV(id:GLuint, len:GLsizei, name:UnsafePointer<GLubyte>, params:UnsafeMutablePointer<GLfloat>) {glGetProgramNamedParameterfvNV_P(id, len, name, params)}
var glGetProgramNamedParameterfvNV_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLubyte>, UnsafeMutablePointer<GLfloat>) -> Void = glGetProgramNamedParameterfvNV_L
public func glGetProgramParameterdvNV(_ target:GLenum, _ index:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLdouble>) {glGetProgramParameterdvNV_P(target, index, pname, params)}
public func glGetProgramParameterdvNV(target:GLenum, index:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLdouble>) {glGetProgramParameterdvNV_P(target, index, pname, params)}
var glGetProgramParameterdvNV_P:@convention(c)(GLenum, GLuint, GLenum, UnsafeMutablePointer<GLdouble>) -> Void = glGetProgramParameterdvNV_L
public func glGetProgramParameterfvNV(_ target:GLenum, _ index:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetProgramParameterfvNV_P(target, index, pname, params)}
public func glGetProgramParameterfvNV(target:GLenum, index:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetProgramParameterfvNV_P(target, index, pname, params)}
var glGetProgramParameterfvNV_P:@convention(c)(GLenum, GLuint, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetProgramParameterfvNV_L
public func glGetProgramPipelineInfoLog(_ pipeline:GLuint, _ bufSize:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ infoLog:UnsafeMutablePointer<GLchar>) {glGetProgramPipelineInfoLog_P(pipeline, bufSize, length, infoLog)}
public func glGetProgramPipelineInfoLog(pipeline:GLuint, bufSize:GLsizei, length:UnsafeMutablePointer<GLsizei>, infoLog:UnsafeMutablePointer<GLchar>) {glGetProgramPipelineInfoLog_P(pipeline, bufSize, length, infoLog)}
var glGetProgramPipelineInfoLog_P:@convention(c)(GLuint, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLchar>) -> Void = glGetProgramPipelineInfoLog_L
public func glGetProgramPipelineInfoLogEXT(_ pipeline:GLuint, _ bufSize:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ infoLog:UnsafeMutablePointer<GLchar>) {glGetProgramPipelineInfoLogEXT_P(pipeline, bufSize, length, infoLog)}
public func glGetProgramPipelineInfoLogEXT(pipeline:GLuint, bufSize:GLsizei, length:UnsafeMutablePointer<GLsizei>, infoLog:UnsafeMutablePointer<GLchar>) {glGetProgramPipelineInfoLogEXT_P(pipeline, bufSize, length, infoLog)}
var glGetProgramPipelineInfoLogEXT_P:@convention(c)(GLuint, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLchar>) -> Void = glGetProgramPipelineInfoLogEXT_L
public func glGetProgramPipelineiv(_ pipeline:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetProgramPipelineiv_P(pipeline, pname, params)}
public func glGetProgramPipelineiv(pipeline:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetProgramPipelineiv_P(pipeline, pname, params)}
var glGetProgramPipelineiv_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetProgramPipelineiv_L
public func glGetProgramPipelineivEXT(_ pipeline:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetProgramPipelineivEXT_P(pipeline, pname, params)}
public func glGetProgramPipelineivEXT(pipeline:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetProgramPipelineivEXT_P(pipeline, pname, params)}
var glGetProgramPipelineivEXT_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetProgramPipelineivEXT_L
public func glGetProgramResourceIndex(_ program:GLuint, _ programInterface:GLenum, _ name:UnsafePointer<GLchar>) -> GLuint {return glGetProgramResourceIndex_P(program, programInterface, name)}
public func glGetProgramResourceIndex(program:GLuint, programInterface:GLenum, name:UnsafePointer<GLchar>) -> GLuint {return glGetProgramResourceIndex_P(program, programInterface, name)}
var glGetProgramResourceIndex_P:@convention(c)(GLuint, GLenum, UnsafePointer<GLchar>) -> GLuint = glGetProgramResourceIndex_L
public func glGetProgramResourceLocation(_ program:GLuint, _ programInterface:GLenum, _ name:UnsafePointer<GLchar>) -> GLint {return glGetProgramResourceLocation_P(program, programInterface, name)}
public func glGetProgramResourceLocation(program:GLuint, programInterface:GLenum, name:UnsafePointer<GLchar>) -> GLint {return glGetProgramResourceLocation_P(program, programInterface, name)}
var glGetProgramResourceLocation_P:@convention(c)(GLuint, GLenum, UnsafePointer<GLchar>) -> GLint = glGetProgramResourceLocation_L
public func glGetProgramResourceLocationIndex(_ program:GLuint, _ programInterface:GLenum, _ name:UnsafePointer<GLchar>) -> GLint {return glGetProgramResourceLocationIndex_P(program, programInterface, name)}
public func glGetProgramResourceLocationIndex(program:GLuint, programInterface:GLenum, name:UnsafePointer<GLchar>) -> GLint {return glGetProgramResourceLocationIndex_P(program, programInterface, name)}
var glGetProgramResourceLocationIndex_P:@convention(c)(GLuint, GLenum, UnsafePointer<GLchar>) -> GLint = glGetProgramResourceLocationIndex_L
public func glGetProgramResourceLocationIndexEXT(_ program:GLuint, _ programInterface:GLenum, _ name:UnsafePointer<GLchar>) -> GLint {return glGetProgramResourceLocationIndexEXT_P(program, programInterface, name)}
public func glGetProgramResourceLocationIndexEXT(program:GLuint, programInterface:GLenum, name:UnsafePointer<GLchar>) -> GLint {return glGetProgramResourceLocationIndexEXT_P(program, programInterface, name)}
var glGetProgramResourceLocationIndexEXT_P:@convention(c)(GLuint, GLenum, UnsafePointer<GLchar>) -> GLint = glGetProgramResourceLocationIndexEXT_L
public func glGetProgramResourceName(_ program:GLuint, _ programInterface:GLenum, _ index:GLuint, _ bufSize:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ name:UnsafeMutablePointer<GLchar>) {glGetProgramResourceName_P(program, programInterface, index, bufSize, length, name)}
public func glGetProgramResourceName(program:GLuint, programInterface:GLenum, index:GLuint, bufSize:GLsizei, length:UnsafeMutablePointer<GLsizei>, name:UnsafeMutablePointer<GLchar>) {glGetProgramResourceName_P(program, programInterface, index, bufSize, length, name)}
var glGetProgramResourceName_P:@convention(c)(GLuint, GLenum, GLuint, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLchar>) -> Void = glGetProgramResourceName_L
public func glGetProgramResourcefvNV(_ program:GLuint, _ programInterface:GLenum, _ index:GLuint, _ propCount:GLsizei, _ props:UnsafePointer<GLenum>, _ bufSize:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ params:UnsafeMutablePointer<GLfloat>) {glGetProgramResourcefvNV_P(program, programInterface, index, propCount, props, bufSize, length, params)}
public func glGetProgramResourcefvNV(program:GLuint, programInterface:GLenum, index:GLuint, propCount:GLsizei, props:UnsafePointer<GLenum>, bufSize:GLsizei, length:UnsafeMutablePointer<GLsizei>, params:UnsafeMutablePointer<GLfloat>) {glGetProgramResourcefvNV_P(program, programInterface, index, propCount, props, bufSize, length, params)}
var glGetProgramResourcefvNV_P:@convention(c)(GLuint, GLenum, GLuint, GLsizei, UnsafePointer<GLenum>, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLfloat>) -> Void = glGetProgramResourcefvNV_L
public func glGetProgramResourceiv(_ program:GLuint, _ programInterface:GLenum, _ index:GLuint, _ propCount:GLsizei, _ props:UnsafePointer<GLenum>, _ bufSize:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ params:UnsafeMutablePointer<GLint>) {glGetProgramResourceiv_P(program, programInterface, index, propCount, props, bufSize, length, params)}
public func glGetProgramResourceiv(program:GLuint, programInterface:GLenum, index:GLuint, propCount:GLsizei, props:UnsafePointer<GLenum>, bufSize:GLsizei, length:UnsafeMutablePointer<GLsizei>, params:UnsafeMutablePointer<GLint>) {glGetProgramResourceiv_P(program, programInterface, index, propCount, props, bufSize, length, params)}
var glGetProgramResourceiv_P:@convention(c)(GLuint, GLenum, GLuint, GLsizei, UnsafePointer<GLenum>, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLint>) -> Void = glGetProgramResourceiv_L
public func glGetProgramStageiv(_ program:GLuint, _ shadertype:GLenum, _ pname:GLenum, _ values:UnsafeMutablePointer<GLint>) {glGetProgramStageiv_P(program, shadertype, pname, values)}
public func glGetProgramStageiv(program:GLuint, shadertype:GLenum, pname:GLenum, values:UnsafeMutablePointer<GLint>) {glGetProgramStageiv_P(program, shadertype, pname, values)}
var glGetProgramStageiv_P:@convention(c)(GLuint, GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetProgramStageiv_L
public func glGetProgramStringARB(_ target:GLenum, _ pname:GLenum, _ string:UnsafeMutableRawPointer) {glGetProgramStringARB_P(target, pname, string)}
public func glGetProgramStringARB(target:GLenum, pname:GLenum, string:UnsafeMutableRawPointer) {glGetProgramStringARB_P(target, pname, string)}
var glGetProgramStringARB_P:@convention(c)(GLenum, GLenum, UnsafeMutableRawPointer) -> Void = glGetProgramStringARB_L
public func glGetProgramStringNV(_ id:GLuint, _ pname:GLenum, _ program:UnsafeMutablePointer<GLubyte>) {glGetProgramStringNV_P(id, pname, program)}
public func glGetProgramStringNV(id:GLuint, pname:GLenum, program:UnsafeMutablePointer<GLubyte>) {glGetProgramStringNV_P(id, pname, program)}
var glGetProgramStringNV_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLubyte>) -> Void = glGetProgramStringNV_L
public func glGetProgramSubroutineParameteruivNV(_ target:GLenum, _ index:GLuint, _ param:UnsafeMutablePointer<GLuint>) {glGetProgramSubroutineParameteruivNV_P(target, index, param)}
public func glGetProgramSubroutineParameteruivNV(target:GLenum, index:GLuint, param:UnsafeMutablePointer<GLuint>) {glGetProgramSubroutineParameteruivNV_P(target, index, param)}
var glGetProgramSubroutineParameteruivNV_P:@convention(c)(GLenum, GLuint, UnsafeMutablePointer<GLuint>) -> Void = glGetProgramSubroutineParameteruivNV_L
public func glGetProgramiv(_ program:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetProgramiv_P(program, pname, params)}
public func glGetProgramiv(program:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetProgramiv_P(program, pname, params)}
var glGetProgramiv_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetProgramiv_L
public func glGetProgramivARB(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetProgramivARB_P(target, pname, params)}
public func glGetProgramivARB(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetProgramivARB_P(target, pname, params)}
var glGetProgramivARB_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetProgramivARB_L
public func glGetProgramivNV(_ id:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetProgramivNV_P(id, pname, params)}
public func glGetProgramivNV(id:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetProgramivNV_P(id, pname, params)}
var glGetProgramivNV_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetProgramivNV_L
public func glGetQueryBufferObjecti64v(_ id:GLuint, _ buffer:GLuint, _ pname:GLenum, _ offset:GLintptr) {glGetQueryBufferObjecti64v_P(id, buffer, pname, offset)}
public func glGetQueryBufferObjecti64v(id:GLuint, buffer:GLuint, pname:GLenum, offset:GLintptr) {glGetQueryBufferObjecti64v_P(id, buffer, pname, offset)}
var glGetQueryBufferObjecti64v_P:@convention(c)(GLuint, GLuint, GLenum, GLintptr) -> Void = glGetQueryBufferObjecti64v_L
public func glGetQueryBufferObjectiv(_ id:GLuint, _ buffer:GLuint, _ pname:GLenum, _ offset:GLintptr) {glGetQueryBufferObjectiv_P(id, buffer, pname, offset)}
public func glGetQueryBufferObjectiv(id:GLuint, buffer:GLuint, pname:GLenum, offset:GLintptr) {glGetQueryBufferObjectiv_P(id, buffer, pname, offset)}
var glGetQueryBufferObjectiv_P:@convention(c)(GLuint, GLuint, GLenum, GLintptr) -> Void = glGetQueryBufferObjectiv_L
public func glGetQueryBufferObjectui64v(_ id:GLuint, _ buffer:GLuint, _ pname:GLenum, _ offset:GLintptr) {glGetQueryBufferObjectui64v_P(id, buffer, pname, offset)}
public func glGetQueryBufferObjectui64v(id:GLuint, buffer:GLuint, pname:GLenum, offset:GLintptr) {glGetQueryBufferObjectui64v_P(id, buffer, pname, offset)}
var glGetQueryBufferObjectui64v_P:@convention(c)(GLuint, GLuint, GLenum, GLintptr) -> Void = glGetQueryBufferObjectui64v_L
public func glGetQueryBufferObjectuiv(_ id:GLuint, _ buffer:GLuint, _ pname:GLenum, _ offset:GLintptr) {glGetQueryBufferObjectuiv_P(id, buffer, pname, offset)}
public func glGetQueryBufferObjectuiv(id:GLuint, buffer:GLuint, pname:GLenum, offset:GLintptr) {glGetQueryBufferObjectuiv_P(id, buffer, pname, offset)}
var glGetQueryBufferObjectuiv_P:@convention(c)(GLuint, GLuint, GLenum, GLintptr) -> Void = glGetQueryBufferObjectuiv_L
public func glGetQueryIndexediv(_ target:GLenum, _ index:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetQueryIndexediv_P(target, index, pname, params)}
public func glGetQueryIndexediv(target:GLenum, index:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetQueryIndexediv_P(target, index, pname, params)}
var glGetQueryIndexediv_P:@convention(c)(GLenum, GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetQueryIndexediv_L
public func glGetQueryObjecti64v(_ id:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint64>) {glGetQueryObjecti64v_P(id, pname, params)}
public func glGetQueryObjecti64v(id:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint64>) {glGetQueryObjecti64v_P(id, pname, params)}
var glGetQueryObjecti64v_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint64>) -> Void = glGetQueryObjecti64v_L
public func glGetQueryObjecti64vEXT(_ id:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint64>) {glGetQueryObjecti64vEXT_P(id, pname, params)}
public func glGetQueryObjecti64vEXT(id:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint64>) {glGetQueryObjecti64vEXT_P(id, pname, params)}
var glGetQueryObjecti64vEXT_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint64>) -> Void = glGetQueryObjecti64vEXT_L
public func glGetQueryObjectiv(_ id:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetQueryObjectiv_P(id, pname, params)}
public func glGetQueryObjectiv(id:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetQueryObjectiv_P(id, pname, params)}
var glGetQueryObjectiv_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetQueryObjectiv_L
public func glGetQueryObjectivARB(_ id:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetQueryObjectivARB_P(id, pname, params)}
public func glGetQueryObjectivARB(id:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetQueryObjectivARB_P(id, pname, params)}
var glGetQueryObjectivARB_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetQueryObjectivARB_L
public func glGetQueryObjectivEXT(_ id:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetQueryObjectivEXT_P(id, pname, params)}
public func glGetQueryObjectivEXT(id:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetQueryObjectivEXT_P(id, pname, params)}
var glGetQueryObjectivEXT_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetQueryObjectivEXT_L
public func glGetQueryObjectui64v(_ id:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLuint64>) {glGetQueryObjectui64v_P(id, pname, params)}
public func glGetQueryObjectui64v(id:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLuint64>) {glGetQueryObjectui64v_P(id, pname, params)}
var glGetQueryObjectui64v_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLuint64>) -> Void = glGetQueryObjectui64v_L
public func glGetQueryObjectui64vEXT(_ id:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLuint64>) {glGetQueryObjectui64vEXT_P(id, pname, params)}
public func glGetQueryObjectui64vEXT(id:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLuint64>) {glGetQueryObjectui64vEXT_P(id, pname, params)}
var glGetQueryObjectui64vEXT_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLuint64>) -> Void = glGetQueryObjectui64vEXT_L
public func glGetQueryObjectuiv(_ id:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLuint>) {glGetQueryObjectuiv_P(id, pname, params)}
public func glGetQueryObjectuiv(id:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLuint>) {glGetQueryObjectuiv_P(id, pname, params)}
var glGetQueryObjectuiv_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLuint>) -> Void = glGetQueryObjectuiv_L
public func glGetQueryObjectuivARB(_ id:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLuint>) {glGetQueryObjectuivARB_P(id, pname, params)}
public func glGetQueryObjectuivARB(id:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLuint>) {glGetQueryObjectuivARB_P(id, pname, params)}
var glGetQueryObjectuivARB_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLuint>) -> Void = glGetQueryObjectuivARB_L
public func glGetQueryObjectuivEXT(_ id:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLuint>) {glGetQueryObjectuivEXT_P(id, pname, params)}
public func glGetQueryObjectuivEXT(id:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLuint>) {glGetQueryObjectuivEXT_P(id, pname, params)}
var glGetQueryObjectuivEXT_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLuint>) -> Void = glGetQueryObjectuivEXT_L
public func glGetQueryiv(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetQueryiv_P(target, pname, params)}
public func glGetQueryiv(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetQueryiv_P(target, pname, params)}
var glGetQueryiv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetQueryiv_L
public func glGetQueryivARB(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetQueryivARB_P(target, pname, params)}
public func glGetQueryivARB(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetQueryivARB_P(target, pname, params)}
var glGetQueryivARB_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetQueryivARB_L
public func glGetQueryivEXT(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetQueryivEXT_P(target, pname, params)}
public func glGetQueryivEXT(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetQueryivEXT_P(target, pname, params)}
var glGetQueryivEXT_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetQueryivEXT_L
public func glGetRenderbufferParameteriv(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetRenderbufferParameteriv_P(target, pname, params)}
public func glGetRenderbufferParameteriv(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetRenderbufferParameteriv_P(target, pname, params)}
var glGetRenderbufferParameteriv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetRenderbufferParameteriv_L
public func glGetRenderbufferParameterivEXT(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetRenderbufferParameterivEXT_P(target, pname, params)}
public func glGetRenderbufferParameterivEXT(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetRenderbufferParameterivEXT_P(target, pname, params)}
var glGetRenderbufferParameterivEXT_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetRenderbufferParameterivEXT_L
public func glGetRenderbufferParameterivOES(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetRenderbufferParameterivOES_P(target, pname, params)}
public func glGetRenderbufferParameterivOES(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetRenderbufferParameterivOES_P(target, pname, params)}
var glGetRenderbufferParameterivOES_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetRenderbufferParameterivOES_L
public func glGetSamplerParameterIiv(_ sampler:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetSamplerParameterIiv_P(sampler, pname, params)}
public func glGetSamplerParameterIiv(sampler:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetSamplerParameterIiv_P(sampler, pname, params)}
var glGetSamplerParameterIiv_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetSamplerParameterIiv_L
public func glGetSamplerParameterIivEXT(_ sampler:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetSamplerParameterIivEXT_P(sampler, pname, params)}
public func glGetSamplerParameterIivEXT(sampler:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetSamplerParameterIivEXT_P(sampler, pname, params)}
var glGetSamplerParameterIivEXT_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetSamplerParameterIivEXT_L
public func glGetSamplerParameterIivOES(_ sampler:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetSamplerParameterIivOES_P(sampler, pname, params)}
public func glGetSamplerParameterIivOES(sampler:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetSamplerParameterIivOES_P(sampler, pname, params)}
var glGetSamplerParameterIivOES_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetSamplerParameterIivOES_L
public func glGetSamplerParameterIuiv(_ sampler:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLuint>) {glGetSamplerParameterIuiv_P(sampler, pname, params)}
public func glGetSamplerParameterIuiv(sampler:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLuint>) {glGetSamplerParameterIuiv_P(sampler, pname, params)}
var glGetSamplerParameterIuiv_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLuint>) -> Void = glGetSamplerParameterIuiv_L
public func glGetSamplerParameterIuivEXT(_ sampler:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLuint>) {glGetSamplerParameterIuivEXT_P(sampler, pname, params)}
public func glGetSamplerParameterIuivEXT(sampler:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLuint>) {glGetSamplerParameterIuivEXT_P(sampler, pname, params)}
var glGetSamplerParameterIuivEXT_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLuint>) -> Void = glGetSamplerParameterIuivEXT_L
public func glGetSamplerParameterIuivOES(_ sampler:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLuint>) {glGetSamplerParameterIuivOES_P(sampler, pname, params)}
public func glGetSamplerParameterIuivOES(sampler:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLuint>) {glGetSamplerParameterIuivOES_P(sampler, pname, params)}
var glGetSamplerParameterIuivOES_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLuint>) -> Void = glGetSamplerParameterIuivOES_L
public func glGetSamplerParameterfv(_ sampler:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetSamplerParameterfv_P(sampler, pname, params)}
public func glGetSamplerParameterfv(sampler:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetSamplerParameterfv_P(sampler, pname, params)}
var glGetSamplerParameterfv_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetSamplerParameterfv_L
public func glGetSamplerParameteriv(_ sampler:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetSamplerParameteriv_P(sampler, pname, params)}
public func glGetSamplerParameteriv(sampler:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetSamplerParameteriv_P(sampler, pname, params)}
var glGetSamplerParameteriv_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetSamplerParameteriv_L
public func glGetSeparableFilter(_ target:GLenum, _ format:GLenum, _ type:GLenum, _ row:UnsafeMutableRawPointer, _ column:UnsafeMutableRawPointer, _ span:UnsafeMutableRawPointer) {glGetSeparableFilter_P(target, format, type, row, column, span)}
public func glGetSeparableFilter(target:GLenum, format:GLenum, type:GLenum, row:UnsafeMutableRawPointer, column:UnsafeMutableRawPointer, span:UnsafeMutableRawPointer) {glGetSeparableFilter_P(target, format, type, row, column, span)}
var glGetSeparableFilter_P:@convention(c)(GLenum, GLenum, GLenum, UnsafeMutableRawPointer, UnsafeMutableRawPointer, UnsafeMutableRawPointer) -> Void = glGetSeparableFilter_L
public func glGetSeparableFilterEXT(_ target:GLenum, _ format:GLenum, _ type:GLenum, _ row:UnsafeMutableRawPointer, _ column:UnsafeMutableRawPointer, _ span:UnsafeMutableRawPointer) {glGetSeparableFilterEXT_P(target, format, type, row, column, span)}
public func glGetSeparableFilterEXT(target:GLenum, format:GLenum, type:GLenum, row:UnsafeMutableRawPointer, column:UnsafeMutableRawPointer, span:UnsafeMutableRawPointer) {glGetSeparableFilterEXT_P(target, format, type, row, column, span)}
var glGetSeparableFilterEXT_P:@convention(c)(GLenum, GLenum, GLenum, UnsafeMutableRawPointer, UnsafeMutableRawPointer, UnsafeMutableRawPointer) -> Void = glGetSeparableFilterEXT_L
public func glGetShaderInfoLog(_ shader:GLuint, _ bufSize:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ infoLog:UnsafeMutablePointer<GLchar>) {glGetShaderInfoLog_P(shader, bufSize, length, infoLog)}
public func glGetShaderInfoLog(shader:GLuint, bufSize:GLsizei, length:UnsafeMutablePointer<GLsizei>, infoLog:UnsafeMutablePointer<GLchar>) {glGetShaderInfoLog_P(shader, bufSize, length, infoLog)}
var glGetShaderInfoLog_P:@convention(c)(GLuint, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLchar>) -> Void = glGetShaderInfoLog_L
public func glGetShaderPrecisionFormat(_ shadertype:GLenum, _ precisiontype:GLenum, _ range:UnsafeMutablePointer<GLint>, _ precision:UnsafeMutablePointer<GLint>) {glGetShaderPrecisionFormat_P(shadertype, precisiontype, range, precision)}
public func glGetShaderPrecisionFormat(shadertype:GLenum, precisiontype:GLenum, range:UnsafeMutablePointer<GLint>, precision:UnsafeMutablePointer<GLint>) {glGetShaderPrecisionFormat_P(shadertype, precisiontype, range, precision)}
var glGetShaderPrecisionFormat_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>, UnsafeMutablePointer<GLint>) -> Void = glGetShaderPrecisionFormat_L
public func glGetShaderSource(_ shader:GLuint, _ bufSize:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ source:UnsafeMutablePointer<GLchar>) {glGetShaderSource_P(shader, bufSize, length, source)}
public func glGetShaderSource(shader:GLuint, bufSize:GLsizei, length:UnsafeMutablePointer<GLsizei>, source:UnsafeMutablePointer<GLchar>) {glGetShaderSource_P(shader, bufSize, length, source)}
var glGetShaderSource_P:@convention(c)(GLuint, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLchar>) -> Void = glGetShaderSource_L
public func glGetShaderSourceARB(_ obj:GLhandleARB, _ maxLength:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ source:UnsafeMutablePointer<GLcharARB>) {glGetShaderSourceARB_P(obj, maxLength, length, source)}
public func glGetShaderSourceARB(obj:GLhandleARB, maxLength:GLsizei, length:UnsafeMutablePointer<GLsizei>, source:UnsafeMutablePointer<GLcharARB>) {glGetShaderSourceARB_P(obj, maxLength, length, source)}
var glGetShaderSourceARB_P:@convention(c)(GLhandleARB, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLcharARB>) -> Void = glGetShaderSourceARB_L
public func glGetShaderiv(_ shader:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetShaderiv_P(shader, pname, params)}
public func glGetShaderiv(shader:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetShaderiv_P(shader, pname, params)}
var glGetShaderiv_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetShaderiv_L
public func glGetSharpenTexFuncSGIS(_ target:GLenum, _ points:UnsafeMutablePointer<GLfloat>) {glGetSharpenTexFuncSGIS_P(target, points)}
public func glGetSharpenTexFuncSGIS(target:GLenum, points:UnsafeMutablePointer<GLfloat>) {glGetSharpenTexFuncSGIS_P(target, points)}
var glGetSharpenTexFuncSGIS_P:@convention(c)(GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetSharpenTexFuncSGIS_L
public func glGetStageIndexNV(_ shadertype:GLenum) -> GLushort {return glGetStageIndexNV_P(shadertype)}
public func glGetStageIndexNV(shadertype:GLenum) -> GLushort {return glGetStageIndexNV_P(shadertype)}
var glGetStageIndexNV_P:@convention(c)(GLenum) -> GLushort = glGetStageIndexNV_L
public func glGetString(_ name:GLenum) -> UnsafePointer<GLubyte> {return glGetString_P(name)}
public func glGetString(name:GLenum) -> UnsafePointer<GLubyte> {return glGetString_P(name)}
var glGetString_P:@convention(c)(GLenum) -> UnsafePointer<GLubyte> = glGetString_L
public func glGetStringi(_ name:GLenum, _ index:GLuint) -> UnsafePointer<GLubyte> {return glGetStringi_P(name, index)}
public func glGetStringi(name:GLenum, index:GLuint) -> UnsafePointer<GLubyte> {return glGetStringi_P(name, index)}
var glGetStringi_P:@convention(c)(GLenum, GLuint) -> UnsafePointer<GLubyte> = glGetStringi_L
public func glGetSubroutineIndex(_ program:GLuint, _ shadertype:GLenum, _ name:UnsafePointer<GLchar>) -> GLuint {return glGetSubroutineIndex_P(program, shadertype, name)}
public func glGetSubroutineIndex(program:GLuint, shadertype:GLenum, name:UnsafePointer<GLchar>) -> GLuint {return glGetSubroutineIndex_P(program, shadertype, name)}
var glGetSubroutineIndex_P:@convention(c)(GLuint, GLenum, UnsafePointer<GLchar>) -> GLuint = glGetSubroutineIndex_L
public func glGetSubroutineUniformLocation(_ program:GLuint, _ shadertype:GLenum, _ name:UnsafePointer<GLchar>) -> GLint {return glGetSubroutineUniformLocation_P(program, shadertype, name)}
public func glGetSubroutineUniformLocation(program:GLuint, shadertype:GLenum, name:UnsafePointer<GLchar>) -> GLint {return glGetSubroutineUniformLocation_P(program, shadertype, name)}
var glGetSubroutineUniformLocation_P:@convention(c)(GLuint, GLenum, UnsafePointer<GLchar>) -> GLint = glGetSubroutineUniformLocation_L
public func glGetSynciv(_ sync:GLsync, _ pname:GLenum, _ bufSize:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ values:UnsafeMutablePointer<GLint>) {glGetSynciv_P(sync, pname, bufSize, length, values)}
public func glGetSynciv(sync:GLsync, pname:GLenum, bufSize:GLsizei, length:UnsafeMutablePointer<GLsizei>, values:UnsafeMutablePointer<GLint>) {glGetSynciv_P(sync, pname, bufSize, length, values)}
var glGetSynciv_P:@convention(c)(GLsync, GLenum, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLint>) -> Void = glGetSynciv_L
public func glGetSyncivAPPLE(_ sync:GLsync, _ pname:GLenum, _ bufSize:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ values:UnsafeMutablePointer<GLint>) {glGetSyncivAPPLE_P(sync, pname, bufSize, length, values)}
public func glGetSyncivAPPLE(sync:GLsync, pname:GLenum, bufSize:GLsizei, length:UnsafeMutablePointer<GLsizei>, values:UnsafeMutablePointer<GLint>) {glGetSyncivAPPLE_P(sync, pname, bufSize, length, values)}
var glGetSyncivAPPLE_P:@convention(c)(GLsync, GLenum, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLint>) -> Void = glGetSyncivAPPLE_L
public func glGetTexBumpParameterfvATI(_ pname:GLenum, _ param:UnsafeMutablePointer<GLfloat>) {glGetTexBumpParameterfvATI_P(pname, param)}
public func glGetTexBumpParameterfvATI(pname:GLenum, param:UnsafeMutablePointer<GLfloat>) {glGetTexBumpParameterfvATI_P(pname, param)}
var glGetTexBumpParameterfvATI_P:@convention(c)(GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetTexBumpParameterfvATI_L
public func glGetTexBumpParameterivATI(_ pname:GLenum, _ param:UnsafeMutablePointer<GLint>) {glGetTexBumpParameterivATI_P(pname, param)}
public func glGetTexBumpParameterivATI(pname:GLenum, param:UnsafeMutablePointer<GLint>) {glGetTexBumpParameterivATI_P(pname, param)}
var glGetTexBumpParameterivATI_P:@convention(c)(GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetTexBumpParameterivATI_L
public func glGetTexEnvfv(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetTexEnvfv_P(target, pname, params)}
public func glGetTexEnvfv(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetTexEnvfv_P(target, pname, params)}
var glGetTexEnvfv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetTexEnvfv_L
public func glGetTexEnviv(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetTexEnviv_P(target, pname, params)}
public func glGetTexEnviv(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetTexEnviv_P(target, pname, params)}
var glGetTexEnviv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetTexEnviv_L
public func glGetTexEnvxv(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfixed>) {glGetTexEnvxv_P(target, pname, params)}
public func glGetTexEnvxv(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfixed>) {glGetTexEnvxv_P(target, pname, params)}
var glGetTexEnvxv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfixed>) -> Void = glGetTexEnvxv_L
public func glGetTexEnvxvOES(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfixed>) {glGetTexEnvxvOES_P(target, pname, params)}
public func glGetTexEnvxvOES(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfixed>) {glGetTexEnvxvOES_P(target, pname, params)}
var glGetTexEnvxvOES_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfixed>) -> Void = glGetTexEnvxvOES_L
public func glGetTexFilterFuncSGIS(_ target:GLenum, _ filter:GLenum, _ weights:UnsafeMutablePointer<GLfloat>) {glGetTexFilterFuncSGIS_P(target, filter, weights)}
public func glGetTexFilterFuncSGIS(target:GLenum, filter:GLenum, weights:UnsafeMutablePointer<GLfloat>) {glGetTexFilterFuncSGIS_P(target, filter, weights)}
var glGetTexFilterFuncSGIS_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetTexFilterFuncSGIS_L
public func glGetTexGendv(_ coord:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLdouble>) {glGetTexGendv_P(coord, pname, params)}
public func glGetTexGendv(coord:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLdouble>) {glGetTexGendv_P(coord, pname, params)}
var glGetTexGendv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLdouble>) -> Void = glGetTexGendv_L
public func glGetTexGenfv(_ coord:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetTexGenfv_P(coord, pname, params)}
public func glGetTexGenfv(coord:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetTexGenfv_P(coord, pname, params)}
var glGetTexGenfv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetTexGenfv_L
public func glGetTexGenfvOES(_ coord:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetTexGenfvOES_P(coord, pname, params)}
public func glGetTexGenfvOES(coord:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetTexGenfvOES_P(coord, pname, params)}
var glGetTexGenfvOES_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetTexGenfvOES_L
public func glGetTexGeniv(_ coord:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetTexGeniv_P(coord, pname, params)}
public func glGetTexGeniv(coord:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetTexGeniv_P(coord, pname, params)}
var glGetTexGeniv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetTexGeniv_L
public func glGetTexGenivOES(_ coord:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetTexGenivOES_P(coord, pname, params)}
public func glGetTexGenivOES(coord:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetTexGenivOES_P(coord, pname, params)}
var glGetTexGenivOES_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetTexGenivOES_L
public func glGetTexGenxvOES(_ coord:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfixed>) {glGetTexGenxvOES_P(coord, pname, params)}
public func glGetTexGenxvOES(coord:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfixed>) {glGetTexGenxvOES_P(coord, pname, params)}
var glGetTexGenxvOES_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfixed>) -> Void = glGetTexGenxvOES_L
public func glGetTexImage(_ target:GLenum, _ level:GLint, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeMutableRawPointer) {glGetTexImage_P(target, level, format, type, pixels)}
public func glGetTexImage(target:GLenum, level:GLint, format:GLenum, type:GLenum, pixels:UnsafeMutableRawPointer) {glGetTexImage_P(target, level, format, type, pixels)}
var glGetTexImage_P:@convention(c)(GLenum, GLint, GLenum, GLenum, UnsafeMutableRawPointer) -> Void = glGetTexImage_L
public func glGetTexLevelParameterfv(_ target:GLenum, _ level:GLint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetTexLevelParameterfv_P(target, level, pname, params)}
public func glGetTexLevelParameterfv(target:GLenum, level:GLint, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetTexLevelParameterfv_P(target, level, pname, params)}
var glGetTexLevelParameterfv_P:@convention(c)(GLenum, GLint, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetTexLevelParameterfv_L
public func glGetTexLevelParameteriv(_ target:GLenum, _ level:GLint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetTexLevelParameteriv_P(target, level, pname, params)}
public func glGetTexLevelParameteriv(target:GLenum, level:GLint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetTexLevelParameteriv_P(target, level, pname, params)}
var glGetTexLevelParameteriv_P:@convention(c)(GLenum, GLint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetTexLevelParameteriv_L
public func glGetTexLevelParameterxvOES(_ target:GLenum, _ level:GLint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfixed>) {glGetTexLevelParameterxvOES_P(target, level, pname, params)}
public func glGetTexLevelParameterxvOES(target:GLenum, level:GLint, pname:GLenum, params:UnsafeMutablePointer<GLfixed>) {glGetTexLevelParameterxvOES_P(target, level, pname, params)}
var glGetTexLevelParameterxvOES_P:@convention(c)(GLenum, GLint, GLenum, UnsafeMutablePointer<GLfixed>) -> Void = glGetTexLevelParameterxvOES_L
public func glGetTexParameterIiv(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetTexParameterIiv_P(target, pname, params)}
public func glGetTexParameterIiv(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetTexParameterIiv_P(target, pname, params)}
var glGetTexParameterIiv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetTexParameterIiv_L
public func glGetTexParameterIivEXT(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetTexParameterIivEXT_P(target, pname, params)}
public func glGetTexParameterIivEXT(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetTexParameterIivEXT_P(target, pname, params)}
var glGetTexParameterIivEXT_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetTexParameterIivEXT_L
public func glGetTexParameterIivOES(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetTexParameterIivOES_P(target, pname, params)}
public func glGetTexParameterIivOES(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetTexParameterIivOES_P(target, pname, params)}
var glGetTexParameterIivOES_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetTexParameterIivOES_L
public func glGetTexParameterIuiv(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLuint>) {glGetTexParameterIuiv_P(target, pname, params)}
public func glGetTexParameterIuiv(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLuint>) {glGetTexParameterIuiv_P(target, pname, params)}
var glGetTexParameterIuiv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLuint>) -> Void = glGetTexParameterIuiv_L
public func glGetTexParameterIuivEXT(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLuint>) {glGetTexParameterIuivEXT_P(target, pname, params)}
public func glGetTexParameterIuivEXT(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLuint>) {glGetTexParameterIuivEXT_P(target, pname, params)}
var glGetTexParameterIuivEXT_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLuint>) -> Void = glGetTexParameterIuivEXT_L
public func glGetTexParameterIuivOES(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLuint>) {glGetTexParameterIuivOES_P(target, pname, params)}
public func glGetTexParameterIuivOES(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLuint>) {glGetTexParameterIuivOES_P(target, pname, params)}
var glGetTexParameterIuivOES_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLuint>) -> Void = glGetTexParameterIuivOES_L
public func glGetTexParameterPointervAPPLE(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetTexParameterPointervAPPLE_P(target, pname, params)}
public func glGetTexParameterPointervAPPLE(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetTexParameterPointervAPPLE_P(target, pname, params)}
var glGetTexParameterPointervAPPLE_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<UnsafeMutableRawPointer>) -> Void = glGetTexParameterPointervAPPLE_L
public func glGetTexParameterfv(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetTexParameterfv_P(target, pname, params)}
public func glGetTexParameterfv(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetTexParameterfv_P(target, pname, params)}
var glGetTexParameterfv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetTexParameterfv_L
public func glGetTexParameteriv(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetTexParameteriv_P(target, pname, params)}
public func glGetTexParameteriv(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetTexParameteriv_P(target, pname, params)}
var glGetTexParameteriv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetTexParameteriv_L
public func glGetTexParameterxv(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfixed>) {glGetTexParameterxv_P(target, pname, params)}
public func glGetTexParameterxv(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfixed>) {glGetTexParameterxv_P(target, pname, params)}
var glGetTexParameterxv_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfixed>) -> Void = glGetTexParameterxv_L
public func glGetTexParameterxvOES(_ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfixed>) {glGetTexParameterxvOES_P(target, pname, params)}
public func glGetTexParameterxvOES(target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfixed>) {glGetTexParameterxvOES_P(target, pname, params)}
var glGetTexParameterxvOES_P:@convention(c)(GLenum, GLenum, UnsafeMutablePointer<GLfixed>) -> Void = glGetTexParameterxvOES_L
public func glGetTextureHandleARB(_ texture:GLuint) -> GLuint64 {return glGetTextureHandleARB_P(texture)}
public func glGetTextureHandleARB(texture:GLuint) -> GLuint64 {return glGetTextureHandleARB_P(texture)}
var glGetTextureHandleARB_P:@convention(c)(GLuint) -> GLuint64 = glGetTextureHandleARB_L
public func glGetTextureHandleNV(_ texture:GLuint) -> GLuint64 {return glGetTextureHandleNV_P(texture)}
public func glGetTextureHandleNV(texture:GLuint) -> GLuint64 {return glGetTextureHandleNV_P(texture)}
var glGetTextureHandleNV_P:@convention(c)(GLuint) -> GLuint64 = glGetTextureHandleNV_L
public func glGetTextureImage(_ texture:GLuint, _ level:GLint, _ format:GLenum, _ type:GLenum, _ bufSize:GLsizei, _ pixels:UnsafeMutableRawPointer) {glGetTextureImage_P(texture, level, format, type, bufSize, pixels)}
public func glGetTextureImage(texture:GLuint, level:GLint, format:GLenum, type:GLenum, bufSize:GLsizei, pixels:UnsafeMutableRawPointer) {glGetTextureImage_P(texture, level, format, type, bufSize, pixels)}
var glGetTextureImage_P:@convention(c)(GLuint, GLint, GLenum, GLenum, GLsizei, UnsafeMutableRawPointer) -> Void = glGetTextureImage_L
public func glGetTextureImageEXT(_ texture:GLuint, _ target:GLenum, _ level:GLint, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeMutableRawPointer) {glGetTextureImageEXT_P(texture, target, level, format, type, pixels)}
public func glGetTextureImageEXT(texture:GLuint, target:GLenum, level:GLint, format:GLenum, type:GLenum, pixels:UnsafeMutableRawPointer) {glGetTextureImageEXT_P(texture, target, level, format, type, pixels)}
var glGetTextureImageEXT_P:@convention(c)(GLuint, GLenum, GLint, GLenum, GLenum, UnsafeMutableRawPointer) -> Void = glGetTextureImageEXT_L
public func glGetTextureLevelParameterfv(_ texture:GLuint, _ level:GLint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetTextureLevelParameterfv_P(texture, level, pname, params)}
public func glGetTextureLevelParameterfv(texture:GLuint, level:GLint, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetTextureLevelParameterfv_P(texture, level, pname, params)}
var glGetTextureLevelParameterfv_P:@convention(c)(GLuint, GLint, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetTextureLevelParameterfv_L
public func glGetTextureLevelParameterfvEXT(_ texture:GLuint, _ target:GLenum, _ level:GLint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetTextureLevelParameterfvEXT_P(texture, target, level, pname, params)}
public func glGetTextureLevelParameterfvEXT(texture:GLuint, target:GLenum, level:GLint, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetTextureLevelParameterfvEXT_P(texture, target, level, pname, params)}
var glGetTextureLevelParameterfvEXT_P:@convention(c)(GLuint, GLenum, GLint, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetTextureLevelParameterfvEXT_L
public func glGetTextureLevelParameteriv(_ texture:GLuint, _ level:GLint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetTextureLevelParameteriv_P(texture, level, pname, params)}
public func glGetTextureLevelParameteriv(texture:GLuint, level:GLint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetTextureLevelParameteriv_P(texture, level, pname, params)}
var glGetTextureLevelParameteriv_P:@convention(c)(GLuint, GLint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetTextureLevelParameteriv_L
public func glGetTextureLevelParameterivEXT(_ texture:GLuint, _ target:GLenum, _ level:GLint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetTextureLevelParameterivEXT_P(texture, target, level, pname, params)}
public func glGetTextureLevelParameterivEXT(texture:GLuint, target:GLenum, level:GLint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetTextureLevelParameterivEXT_P(texture, target, level, pname, params)}
var glGetTextureLevelParameterivEXT_P:@convention(c)(GLuint, GLenum, GLint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetTextureLevelParameterivEXT_L
public func glGetTextureParameterIiv(_ texture:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetTextureParameterIiv_P(texture, pname, params)}
public func glGetTextureParameterIiv(texture:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetTextureParameterIiv_P(texture, pname, params)}
var glGetTextureParameterIiv_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetTextureParameterIiv_L
public func glGetTextureParameterIivEXT(_ texture:GLuint, _ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetTextureParameterIivEXT_P(texture, target, pname, params)}
public func glGetTextureParameterIivEXT(texture:GLuint, target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetTextureParameterIivEXT_P(texture, target, pname, params)}
var glGetTextureParameterIivEXT_P:@convention(c)(GLuint, GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetTextureParameterIivEXT_L
public func glGetTextureParameterIuiv(_ texture:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLuint>) {glGetTextureParameterIuiv_P(texture, pname, params)}
public func glGetTextureParameterIuiv(texture:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLuint>) {glGetTextureParameterIuiv_P(texture, pname, params)}
var glGetTextureParameterIuiv_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLuint>) -> Void = glGetTextureParameterIuiv_L
public func glGetTextureParameterIuivEXT(_ texture:GLuint, _ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLuint>) {glGetTextureParameterIuivEXT_P(texture, target, pname, params)}
public func glGetTextureParameterIuivEXT(texture:GLuint, target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLuint>) {glGetTextureParameterIuivEXT_P(texture, target, pname, params)}
var glGetTextureParameterIuivEXT_P:@convention(c)(GLuint, GLenum, GLenum, UnsafeMutablePointer<GLuint>) -> Void = glGetTextureParameterIuivEXT_L
public func glGetTextureParameterfv(_ texture:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetTextureParameterfv_P(texture, pname, params)}
public func glGetTextureParameterfv(texture:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetTextureParameterfv_P(texture, pname, params)}
var glGetTextureParameterfv_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetTextureParameterfv_L
public func glGetTextureParameterfvEXT(_ texture:GLuint, _ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetTextureParameterfvEXT_P(texture, target, pname, params)}
public func glGetTextureParameterfvEXT(texture:GLuint, target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetTextureParameterfvEXT_P(texture, target, pname, params)}
var glGetTextureParameterfvEXT_P:@convention(c)(GLuint, GLenum, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetTextureParameterfvEXT_L
public func glGetTextureParameteriv(_ texture:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetTextureParameteriv_P(texture, pname, params)}
public func glGetTextureParameteriv(texture:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetTextureParameteriv_P(texture, pname, params)}
var glGetTextureParameteriv_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetTextureParameteriv_L
public func glGetTextureParameterivEXT(_ texture:GLuint, _ target:GLenum, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetTextureParameterivEXT_P(texture, target, pname, params)}
public func glGetTextureParameterivEXT(texture:GLuint, target:GLenum, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetTextureParameterivEXT_P(texture, target, pname, params)}
var glGetTextureParameterivEXT_P:@convention(c)(GLuint, GLenum, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetTextureParameterivEXT_L
public func glGetTextureSamplerHandleARB(_ texture:GLuint, _ sampler:GLuint) -> GLuint64 {return glGetTextureSamplerHandleARB_P(texture, sampler)}
public func glGetTextureSamplerHandleARB(texture:GLuint, sampler:GLuint) -> GLuint64 {return glGetTextureSamplerHandleARB_P(texture, sampler)}
var glGetTextureSamplerHandleARB_P:@convention(c)(GLuint, GLuint) -> GLuint64 = glGetTextureSamplerHandleARB_L
public func glGetTextureSamplerHandleNV(_ texture:GLuint, _ sampler:GLuint) -> GLuint64 {return glGetTextureSamplerHandleNV_P(texture, sampler)}
public func glGetTextureSamplerHandleNV(texture:GLuint, sampler:GLuint) -> GLuint64 {return glGetTextureSamplerHandleNV_P(texture, sampler)}
var glGetTextureSamplerHandleNV_P:@convention(c)(GLuint, GLuint) -> GLuint64 = glGetTextureSamplerHandleNV_L
public func glGetTextureSubImage(_ texture:GLuint, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ zoffset:GLint, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ format:GLenum, _ type:GLenum, _ bufSize:GLsizei, _ pixels:UnsafeMutableRawPointer) {glGetTextureSubImage_P(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, bufSize, pixels)}
public func glGetTextureSubImage(texture:GLuint, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, format:GLenum, type:GLenum, bufSize:GLsizei, pixels:UnsafeMutableRawPointer) {glGetTextureSubImage_P(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, bufSize, pixels)}
var glGetTextureSubImage_P:@convention(c)(GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, GLsizei, UnsafeMutableRawPointer) -> Void = glGetTextureSubImage_L
public func glGetTrackMatrixivNV(_ target:GLenum, _ address:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetTrackMatrixivNV_P(target, address, pname, params)}
public func glGetTrackMatrixivNV(target:GLenum, address:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetTrackMatrixivNV_P(target, address, pname, params)}
var glGetTrackMatrixivNV_P:@convention(c)(GLenum, GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetTrackMatrixivNV_L
public func glGetTransformFeedbackVarying(_ program:GLuint, _ index:GLuint, _ bufSize:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ size:UnsafeMutablePointer<GLsizei>, _ type:UnsafeMutablePointer<GLenum>, _ name:UnsafeMutablePointer<GLchar>) {glGetTransformFeedbackVarying_P(program, index, bufSize, length, size, type, name)}
public func glGetTransformFeedbackVarying(program:GLuint, index:GLuint, bufSize:GLsizei, length:UnsafeMutablePointer<GLsizei>, size:UnsafeMutablePointer<GLsizei>, type:UnsafeMutablePointer<GLenum>, name:UnsafeMutablePointer<GLchar>) {glGetTransformFeedbackVarying_P(program, index, bufSize, length, size, type, name)}
var glGetTransformFeedbackVarying_P:@convention(c)(GLuint, GLuint, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLenum>, UnsafeMutablePointer<GLchar>) -> Void = glGetTransformFeedbackVarying_L
public func glGetTransformFeedbackVaryingEXT(_ program:GLuint, _ index:GLuint, _ bufSize:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ size:UnsafeMutablePointer<GLsizei>, _ type:UnsafeMutablePointer<GLenum>, _ name:UnsafeMutablePointer<GLchar>) {glGetTransformFeedbackVaryingEXT_P(program, index, bufSize, length, size, type, name)}
public func glGetTransformFeedbackVaryingEXT(program:GLuint, index:GLuint, bufSize:GLsizei, length:UnsafeMutablePointer<GLsizei>, size:UnsafeMutablePointer<GLsizei>, type:UnsafeMutablePointer<GLenum>, name:UnsafeMutablePointer<GLchar>) {glGetTransformFeedbackVaryingEXT_P(program, index, bufSize, length, size, type, name)}
var glGetTransformFeedbackVaryingEXT_P:@convention(c)(GLuint, GLuint, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLenum>, UnsafeMutablePointer<GLchar>) -> Void = glGetTransformFeedbackVaryingEXT_L
public func glGetTransformFeedbackVaryingNV(_ program:GLuint, _ index:GLuint, _ location:UnsafeMutablePointer<GLint>) {glGetTransformFeedbackVaryingNV_P(program, index, location)}
public func glGetTransformFeedbackVaryingNV(program:GLuint, index:GLuint, location:UnsafeMutablePointer<GLint>) {glGetTransformFeedbackVaryingNV_P(program, index, location)}
var glGetTransformFeedbackVaryingNV_P:@convention(c)(GLuint, GLuint, UnsafeMutablePointer<GLint>) -> Void = glGetTransformFeedbackVaryingNV_L
public func glGetTransformFeedbacki64_v(_ xfb:GLuint, _ pname:GLenum, _ index:GLuint, _ param:UnsafeMutablePointer<GLint64>) {glGetTransformFeedbacki64_v_P(xfb, pname, index, param)}
public func glGetTransformFeedbacki64_v(xfb:GLuint, pname:GLenum, index:GLuint, param:UnsafeMutablePointer<GLint64>) {glGetTransformFeedbacki64_v_P(xfb, pname, index, param)}
var glGetTransformFeedbacki64_v_P:@convention(c)(GLuint, GLenum, GLuint, UnsafeMutablePointer<GLint64>) -> Void = glGetTransformFeedbacki64_v_L
public func glGetTransformFeedbacki_v(_ xfb:GLuint, _ pname:GLenum, _ index:GLuint, _ param:UnsafeMutablePointer<GLint>) {glGetTransformFeedbacki_v_P(xfb, pname, index, param)}
public func glGetTransformFeedbacki_v(xfb:GLuint, pname:GLenum, index:GLuint, param:UnsafeMutablePointer<GLint>) {glGetTransformFeedbacki_v_P(xfb, pname, index, param)}
var glGetTransformFeedbacki_v_P:@convention(c)(GLuint, GLenum, GLuint, UnsafeMutablePointer<GLint>) -> Void = glGetTransformFeedbacki_v_L
public func glGetTransformFeedbackiv(_ xfb:GLuint, _ pname:GLenum, _ param:UnsafeMutablePointer<GLint>) {glGetTransformFeedbackiv_P(xfb, pname, param)}
public func glGetTransformFeedbackiv(xfb:GLuint, pname:GLenum, param:UnsafeMutablePointer<GLint>) {glGetTransformFeedbackiv_P(xfb, pname, param)}
var glGetTransformFeedbackiv_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetTransformFeedbackiv_L
public func glGetTranslatedShaderSourceANGLE(_ shader:GLuint, _ bufsize:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ source:UnsafeMutablePointer<GLchar>) {glGetTranslatedShaderSourceANGLE_P(shader, bufsize, length, source)}
public func glGetTranslatedShaderSourceANGLE(shader:GLuint, bufsize:GLsizei, length:UnsafeMutablePointer<GLsizei>, source:UnsafeMutablePointer<GLchar>) {glGetTranslatedShaderSourceANGLE_P(shader, bufsize, length, source)}
var glGetTranslatedShaderSourceANGLE_P:@convention(c)(GLuint, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLchar>) -> Void = glGetTranslatedShaderSourceANGLE_L
public func glGetUniformBlockIndex(_ program:GLuint, _ uniformBlockName:UnsafePointer<GLchar>) -> GLuint {return glGetUniformBlockIndex_P(program, uniformBlockName)}
public func glGetUniformBlockIndex(program:GLuint, uniformBlockName:UnsafePointer<GLchar>) -> GLuint {return glGetUniformBlockIndex_P(program, uniformBlockName)}
var glGetUniformBlockIndex_P:@convention(c)(GLuint, UnsafePointer<GLchar>) -> GLuint = glGetUniformBlockIndex_L
public func glGetUniformBufferSizeEXT(_ program:GLuint, _ location:GLint) -> GLint {return glGetUniformBufferSizeEXT_P(program, location)}
public func glGetUniformBufferSizeEXT(program:GLuint, location:GLint) -> GLint {return glGetUniformBufferSizeEXT_P(program, location)}
var glGetUniformBufferSizeEXT_P:@convention(c)(GLuint, GLint) -> GLint = glGetUniformBufferSizeEXT_L
public func glGetUniformIndices(_ program:GLuint, _ uniformCount:GLsizei, _ uniformNames:UnsafePointer<UnsafePointer<GLchar>>, _ uniformIndices:UnsafeMutablePointer<GLuint>) {glGetUniformIndices_P(program, uniformCount, uniformNames, uniformIndices)}
public func glGetUniformIndices(program:GLuint, uniformCount:GLsizei, uniformNames:UnsafePointer<UnsafePointer<GLchar>>, uniformIndices:UnsafeMutablePointer<GLuint>) {glGetUniformIndices_P(program, uniformCount, uniformNames, uniformIndices)}
var glGetUniformIndices_P:@convention(c)(GLuint, GLsizei, UnsafePointer<UnsafePointer<GLchar>>, UnsafeMutablePointer<GLuint>) -> Void = glGetUniformIndices_L
public func glGetUniformLocation(_ program:GLuint, _ name:UnsafePointer<GLchar>) -> GLint {return glGetUniformLocation_P(program, name)}
public func glGetUniformLocation(program:GLuint, name:UnsafePointer<GLchar>) -> GLint {return glGetUniformLocation_P(program, name)}
var glGetUniformLocation_P:@convention(c)(GLuint, UnsafePointer<GLchar>) -> GLint = glGetUniformLocation_L
public func glGetUniformLocationARB(_ programObj:GLhandleARB, _ name:UnsafePointer<GLcharARB>) -> GLint {return glGetUniformLocationARB_P(programObj, name)}
public func glGetUniformLocationARB(programObj:GLhandleARB, name:UnsafePointer<GLcharARB>) -> GLint {return glGetUniformLocationARB_P(programObj, name)}
var glGetUniformLocationARB_P:@convention(c)(GLhandleARB, UnsafePointer<GLcharARB>) -> GLint = glGetUniformLocationARB_L
public func glGetUniformOffsetEXT(_ program:GLuint, _ location:GLint) -> GLintptr {return glGetUniformOffsetEXT_P(program, location)}
public func glGetUniformOffsetEXT(program:GLuint, location:GLint) -> GLintptr {return glGetUniformOffsetEXT_P(program, location)}
var glGetUniformOffsetEXT_P:@convention(c)(GLuint, GLint) -> GLintptr = glGetUniformOffsetEXT_L
public func glGetUniformSubroutineuiv(_ shadertype:GLenum, _ location:GLint, _ params:UnsafeMutablePointer<GLuint>) {glGetUniformSubroutineuiv_P(shadertype, location, params)}
public func glGetUniformSubroutineuiv(shadertype:GLenum, location:GLint, params:UnsafeMutablePointer<GLuint>) {glGetUniformSubroutineuiv_P(shadertype, location, params)}
var glGetUniformSubroutineuiv_P:@convention(c)(GLenum, GLint, UnsafeMutablePointer<GLuint>) -> Void = glGetUniformSubroutineuiv_L
public func glGetUniformdv(_ program:GLuint, _ location:GLint, _ params:UnsafeMutablePointer<GLdouble>) {glGetUniformdv_P(program, location, params)}
public func glGetUniformdv(program:GLuint, location:GLint, params:UnsafeMutablePointer<GLdouble>) {glGetUniformdv_P(program, location, params)}
var glGetUniformdv_P:@convention(c)(GLuint, GLint, UnsafeMutablePointer<GLdouble>) -> Void = glGetUniformdv_L
public func glGetUniformfv(_ program:GLuint, _ location:GLint, _ params:UnsafeMutablePointer<GLfloat>) {glGetUniformfv_P(program, location, params)}
public func glGetUniformfv(program:GLuint, location:GLint, params:UnsafeMutablePointer<GLfloat>) {glGetUniformfv_P(program, location, params)}
var glGetUniformfv_P:@convention(c)(GLuint, GLint, UnsafeMutablePointer<GLfloat>) -> Void = glGetUniformfv_L
public func glGetUniformfvARB(_ programObj:GLhandleARB, _ location:GLint, _ params:UnsafeMutablePointer<GLfloat>) {glGetUniformfvARB_P(programObj, location, params)}
public func glGetUniformfvARB(programObj:GLhandleARB, location:GLint, params:UnsafeMutablePointer<GLfloat>) {glGetUniformfvARB_P(programObj, location, params)}
var glGetUniformfvARB_P:@convention(c)(GLhandleARB, GLint, UnsafeMutablePointer<GLfloat>) -> Void = glGetUniformfvARB_L
public func glGetUniformi64vARB(_ program:GLuint, _ location:GLint, _ params:UnsafeMutablePointer<GLint64>) {glGetUniformi64vARB_P(program, location, params)}
public func glGetUniformi64vARB(program:GLuint, location:GLint, params:UnsafeMutablePointer<GLint64>) {glGetUniformi64vARB_P(program, location, params)}
var glGetUniformi64vARB_P:@convention(c)(GLuint, GLint, UnsafeMutablePointer<GLint64>) -> Void = glGetUniformi64vARB_L
public func glGetUniformi64vNV(_ program:GLuint, _ location:GLint, _ params:UnsafeMutablePointer<GLint64EXT>) {glGetUniformi64vNV_P(program, location, params)}
public func glGetUniformi64vNV(program:GLuint, location:GLint, params:UnsafeMutablePointer<GLint64EXT>) {glGetUniformi64vNV_P(program, location, params)}
var glGetUniformi64vNV_P:@convention(c)(GLuint, GLint, UnsafeMutablePointer<GLint64EXT>) -> Void = glGetUniformi64vNV_L
public func glGetUniformiv(_ program:GLuint, _ location:GLint, _ params:UnsafeMutablePointer<GLint>) {glGetUniformiv_P(program, location, params)}
public func glGetUniformiv(program:GLuint, location:GLint, params:UnsafeMutablePointer<GLint>) {glGetUniformiv_P(program, location, params)}
var glGetUniformiv_P:@convention(c)(GLuint, GLint, UnsafeMutablePointer<GLint>) -> Void = glGetUniformiv_L
public func glGetUniformivARB(_ programObj:GLhandleARB, _ location:GLint, _ params:UnsafeMutablePointer<GLint>) {glGetUniformivARB_P(programObj, location, params)}
public func glGetUniformivARB(programObj:GLhandleARB, location:GLint, params:UnsafeMutablePointer<GLint>) {glGetUniformivARB_P(programObj, location, params)}
var glGetUniformivARB_P:@convention(c)(GLhandleARB, GLint, UnsafeMutablePointer<GLint>) -> Void = glGetUniformivARB_L
public func glGetUniformui64vARB(_ program:GLuint, _ location:GLint, _ params:UnsafeMutablePointer<GLuint64>) {glGetUniformui64vARB_P(program, location, params)}
public func glGetUniformui64vARB(program:GLuint, location:GLint, params:UnsafeMutablePointer<GLuint64>) {glGetUniformui64vARB_P(program, location, params)}
var glGetUniformui64vARB_P:@convention(c)(GLuint, GLint, UnsafeMutablePointer<GLuint64>) -> Void = glGetUniformui64vARB_L
public func glGetUniformui64vNV(_ program:GLuint, _ location:GLint, _ params:UnsafeMutablePointer<GLuint64EXT>) {glGetUniformui64vNV_P(program, location, params)}
public func glGetUniformui64vNV(program:GLuint, location:GLint, params:UnsafeMutablePointer<GLuint64EXT>) {glGetUniformui64vNV_P(program, location, params)}
var glGetUniformui64vNV_P:@convention(c)(GLuint, GLint, UnsafeMutablePointer<GLuint64EXT>) -> Void = glGetUniformui64vNV_L
public func glGetUniformuiv(_ program:GLuint, _ location:GLint, _ params:UnsafeMutablePointer<GLuint>) {glGetUniformuiv_P(program, location, params)}
public func glGetUniformuiv(program:GLuint, location:GLint, params:UnsafeMutablePointer<GLuint>) {glGetUniformuiv_P(program, location, params)}
var glGetUniformuiv_P:@convention(c)(GLuint, GLint, UnsafeMutablePointer<GLuint>) -> Void = glGetUniformuiv_L
public func glGetUniformuivEXT(_ program:GLuint, _ location:GLint, _ params:UnsafeMutablePointer<GLuint>) {glGetUniformuivEXT_P(program, location, params)}
public func glGetUniformuivEXT(program:GLuint, location:GLint, params:UnsafeMutablePointer<GLuint>) {glGetUniformuivEXT_P(program, location, params)}
var glGetUniformuivEXT_P:@convention(c)(GLuint, GLint, UnsafeMutablePointer<GLuint>) -> Void = glGetUniformuivEXT_L
public func glGetVariantArrayObjectfvATI(_ id:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetVariantArrayObjectfvATI_P(id, pname, params)}
public func glGetVariantArrayObjectfvATI(id:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetVariantArrayObjectfvATI_P(id, pname, params)}
var glGetVariantArrayObjectfvATI_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetVariantArrayObjectfvATI_L
public func glGetVariantArrayObjectivATI(_ id:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetVariantArrayObjectivATI_P(id, pname, params)}
public func glGetVariantArrayObjectivATI(id:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetVariantArrayObjectivATI_P(id, pname, params)}
var glGetVariantArrayObjectivATI_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetVariantArrayObjectivATI_L
public func glGetVariantBooleanvEXT(_ id:GLuint, _ value:GLenum, _ data:UnsafeMutablePointer<GLboolean>) {glGetVariantBooleanvEXT_P(id, value, data)}
public func glGetVariantBooleanvEXT(id:GLuint, value:GLenum, data:UnsafeMutablePointer<GLboolean>) {glGetVariantBooleanvEXT_P(id, value, data)}
var glGetVariantBooleanvEXT_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLboolean>) -> Void = glGetVariantBooleanvEXT_L
public func glGetVariantFloatvEXT(_ id:GLuint, _ value:GLenum, _ data:UnsafeMutablePointer<GLfloat>) {glGetVariantFloatvEXT_P(id, value, data)}
public func glGetVariantFloatvEXT(id:GLuint, value:GLenum, data:UnsafeMutablePointer<GLfloat>) {glGetVariantFloatvEXT_P(id, value, data)}
var glGetVariantFloatvEXT_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetVariantFloatvEXT_L
public func glGetVariantIntegervEXT(_ id:GLuint, _ value:GLenum, _ data:UnsafeMutablePointer<GLint>) {glGetVariantIntegervEXT_P(id, value, data)}
public func glGetVariantIntegervEXT(id:GLuint, value:GLenum, data:UnsafeMutablePointer<GLint>) {glGetVariantIntegervEXT_P(id, value, data)}
var glGetVariantIntegervEXT_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetVariantIntegervEXT_L
public func glGetVariantPointervEXT(_ id:GLuint, _ value:GLenum, _ data:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetVariantPointervEXT_P(id, value, data)}
public func glGetVariantPointervEXT(id:GLuint, value:GLenum, data:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetVariantPointervEXT_P(id, value, data)}
var glGetVariantPointervEXT_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<UnsafeMutableRawPointer>) -> Void = glGetVariantPointervEXT_L
public func glGetVaryingLocationNV(_ program:GLuint, _ name:UnsafePointer<GLchar>) -> GLint {return glGetVaryingLocationNV_P(program, name)}
public func glGetVaryingLocationNV(program:GLuint, name:UnsafePointer<GLchar>) -> GLint {return glGetVaryingLocationNV_P(program, name)}
var glGetVaryingLocationNV_P:@convention(c)(GLuint, UnsafePointer<GLchar>) -> GLint = glGetVaryingLocationNV_L
public func glGetVertexArrayIndexed64iv(_ vaobj:GLuint, _ index:GLuint, _ pname:GLenum, _ param:UnsafeMutablePointer<GLint64>) {glGetVertexArrayIndexed64iv_P(vaobj, index, pname, param)}
public func glGetVertexArrayIndexed64iv(vaobj:GLuint, index:GLuint, pname:GLenum, param:UnsafeMutablePointer<GLint64>) {glGetVertexArrayIndexed64iv_P(vaobj, index, pname, param)}
var glGetVertexArrayIndexed64iv_P:@convention(c)(GLuint, GLuint, GLenum, UnsafeMutablePointer<GLint64>) -> Void = glGetVertexArrayIndexed64iv_L
public func glGetVertexArrayIndexediv(_ vaobj:GLuint, _ index:GLuint, _ pname:GLenum, _ param:UnsafeMutablePointer<GLint>) {glGetVertexArrayIndexediv_P(vaobj, index, pname, param)}
public func glGetVertexArrayIndexediv(vaobj:GLuint, index:GLuint, pname:GLenum, param:UnsafeMutablePointer<GLint>) {glGetVertexArrayIndexediv_P(vaobj, index, pname, param)}
var glGetVertexArrayIndexediv_P:@convention(c)(GLuint, GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetVertexArrayIndexediv_L
public func glGetVertexArrayIntegeri_vEXT(_ vaobj:GLuint, _ index:GLuint, _ pname:GLenum, _ param:UnsafeMutablePointer<GLint>) {glGetVertexArrayIntegeri_vEXT_P(vaobj, index, pname, param)}
public func glGetVertexArrayIntegeri_vEXT(vaobj:GLuint, index:GLuint, pname:GLenum, param:UnsafeMutablePointer<GLint>) {glGetVertexArrayIntegeri_vEXT_P(vaobj, index, pname, param)}
var glGetVertexArrayIntegeri_vEXT_P:@convention(c)(GLuint, GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetVertexArrayIntegeri_vEXT_L
public func glGetVertexArrayIntegervEXT(_ vaobj:GLuint, _ pname:GLenum, _ param:UnsafeMutablePointer<GLint>) {glGetVertexArrayIntegervEXT_P(vaobj, pname, param)}
public func glGetVertexArrayIntegervEXT(vaobj:GLuint, pname:GLenum, param:UnsafeMutablePointer<GLint>) {glGetVertexArrayIntegervEXT_P(vaobj, pname, param)}
var glGetVertexArrayIntegervEXT_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetVertexArrayIntegervEXT_L
public func glGetVertexArrayPointeri_vEXT(_ vaobj:GLuint, _ index:GLuint, _ pname:GLenum, _ param:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetVertexArrayPointeri_vEXT_P(vaobj, index, pname, param)}
public func glGetVertexArrayPointeri_vEXT(vaobj:GLuint, index:GLuint, pname:GLenum, param:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetVertexArrayPointeri_vEXT_P(vaobj, index, pname, param)}
var glGetVertexArrayPointeri_vEXT_P:@convention(c)(GLuint, GLuint, GLenum, UnsafeMutablePointer<UnsafeMutableRawPointer>) -> Void = glGetVertexArrayPointeri_vEXT_L
public func glGetVertexArrayPointervEXT(_ vaobj:GLuint, _ pname:GLenum, _ param:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetVertexArrayPointervEXT_P(vaobj, pname, param)}
public func glGetVertexArrayPointervEXT(vaobj:GLuint, pname:GLenum, param:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetVertexArrayPointervEXT_P(vaobj, pname, param)}
var glGetVertexArrayPointervEXT_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<UnsafeMutableRawPointer>) -> Void = glGetVertexArrayPointervEXT_L
public func glGetVertexArrayiv(_ vaobj:GLuint, _ pname:GLenum, _ param:UnsafeMutablePointer<GLint>) {glGetVertexArrayiv_P(vaobj, pname, param)}
public func glGetVertexArrayiv(vaobj:GLuint, pname:GLenum, param:UnsafeMutablePointer<GLint>) {glGetVertexArrayiv_P(vaobj, pname, param)}
var glGetVertexArrayiv_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetVertexArrayiv_L
public func glGetVertexAttribArrayObjectfvATI(_ index:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetVertexAttribArrayObjectfvATI_P(index, pname, params)}
public func glGetVertexAttribArrayObjectfvATI(index:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetVertexAttribArrayObjectfvATI_P(index, pname, params)}
var glGetVertexAttribArrayObjectfvATI_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetVertexAttribArrayObjectfvATI_L
public func glGetVertexAttribArrayObjectivATI(_ index:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetVertexAttribArrayObjectivATI_P(index, pname, params)}
public func glGetVertexAttribArrayObjectivATI(index:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetVertexAttribArrayObjectivATI_P(index, pname, params)}
var glGetVertexAttribArrayObjectivATI_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetVertexAttribArrayObjectivATI_L
public func glGetVertexAttribIiv(_ index:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetVertexAttribIiv_P(index, pname, params)}
public func glGetVertexAttribIiv(index:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetVertexAttribIiv_P(index, pname, params)}
var glGetVertexAttribIiv_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetVertexAttribIiv_L
public func glGetVertexAttribIivEXT(_ index:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetVertexAttribIivEXT_P(index, pname, params)}
public func glGetVertexAttribIivEXT(index:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetVertexAttribIivEXT_P(index, pname, params)}
var glGetVertexAttribIivEXT_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetVertexAttribIivEXT_L
public func glGetVertexAttribIuiv(_ index:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLuint>) {glGetVertexAttribIuiv_P(index, pname, params)}
public func glGetVertexAttribIuiv(index:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLuint>) {glGetVertexAttribIuiv_P(index, pname, params)}
var glGetVertexAttribIuiv_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLuint>) -> Void = glGetVertexAttribIuiv_L
public func glGetVertexAttribIuivEXT(_ index:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLuint>) {glGetVertexAttribIuivEXT_P(index, pname, params)}
public func glGetVertexAttribIuivEXT(index:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLuint>) {glGetVertexAttribIuivEXT_P(index, pname, params)}
var glGetVertexAttribIuivEXT_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLuint>) -> Void = glGetVertexAttribIuivEXT_L
public func glGetVertexAttribLdv(_ index:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLdouble>) {glGetVertexAttribLdv_P(index, pname, params)}
public func glGetVertexAttribLdv(index:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLdouble>) {glGetVertexAttribLdv_P(index, pname, params)}
var glGetVertexAttribLdv_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLdouble>) -> Void = glGetVertexAttribLdv_L
public func glGetVertexAttribLdvEXT(_ index:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLdouble>) {glGetVertexAttribLdvEXT_P(index, pname, params)}
public func glGetVertexAttribLdvEXT(index:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLdouble>) {glGetVertexAttribLdvEXT_P(index, pname, params)}
var glGetVertexAttribLdvEXT_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLdouble>) -> Void = glGetVertexAttribLdvEXT_L
public func glGetVertexAttribLi64vNV(_ index:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint64EXT>) {glGetVertexAttribLi64vNV_P(index, pname, params)}
public func glGetVertexAttribLi64vNV(index:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint64EXT>) {glGetVertexAttribLi64vNV_P(index, pname, params)}
var glGetVertexAttribLi64vNV_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint64EXT>) -> Void = glGetVertexAttribLi64vNV_L
public func glGetVertexAttribLui64vARB(_ index:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLuint64EXT>) {glGetVertexAttribLui64vARB_P(index, pname, params)}
public func glGetVertexAttribLui64vARB(index:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLuint64EXT>) {glGetVertexAttribLui64vARB_P(index, pname, params)}
var glGetVertexAttribLui64vARB_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLuint64EXT>) -> Void = glGetVertexAttribLui64vARB_L
public func glGetVertexAttribLui64vNV(_ index:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLuint64EXT>) {glGetVertexAttribLui64vNV_P(index, pname, params)}
public func glGetVertexAttribLui64vNV(index:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLuint64EXT>) {glGetVertexAttribLui64vNV_P(index, pname, params)}
var glGetVertexAttribLui64vNV_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLuint64EXT>) -> Void = glGetVertexAttribLui64vNV_L
public func glGetVertexAttribPointerv(_ index:GLuint, _ pname:GLenum, _ pointer:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetVertexAttribPointerv_P(index, pname, pointer)}
public func glGetVertexAttribPointerv(index:GLuint, pname:GLenum, pointer:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetVertexAttribPointerv_P(index, pname, pointer)}
var glGetVertexAttribPointerv_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<UnsafeMutableRawPointer>) -> Void = glGetVertexAttribPointerv_L
public func glGetVertexAttribPointervARB(_ index:GLuint, _ pname:GLenum, _ pointer:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetVertexAttribPointervARB_P(index, pname, pointer)}
public func glGetVertexAttribPointervARB(index:GLuint, pname:GLenum, pointer:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetVertexAttribPointervARB_P(index, pname, pointer)}
var glGetVertexAttribPointervARB_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<UnsafeMutableRawPointer>) -> Void = glGetVertexAttribPointervARB_L
public func glGetVertexAttribPointervNV(_ index:GLuint, _ pname:GLenum, _ pointer:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetVertexAttribPointervNV_P(index, pname, pointer)}
public func glGetVertexAttribPointervNV(index:GLuint, pname:GLenum, pointer:UnsafeMutablePointer<UnsafeMutableRawPointer>) {glGetVertexAttribPointervNV_P(index, pname, pointer)}
var glGetVertexAttribPointervNV_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<UnsafeMutableRawPointer>) -> Void = glGetVertexAttribPointervNV_L
public func glGetVertexAttribdv(_ index:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLdouble>) {glGetVertexAttribdv_P(index, pname, params)}
public func glGetVertexAttribdv(index:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLdouble>) {glGetVertexAttribdv_P(index, pname, params)}
var glGetVertexAttribdv_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLdouble>) -> Void = glGetVertexAttribdv_L
public func glGetVertexAttribdvARB(_ index:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLdouble>) {glGetVertexAttribdvARB_P(index, pname, params)}
public func glGetVertexAttribdvARB(index:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLdouble>) {glGetVertexAttribdvARB_P(index, pname, params)}
var glGetVertexAttribdvARB_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLdouble>) -> Void = glGetVertexAttribdvARB_L
public func glGetVertexAttribdvNV(_ index:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLdouble>) {glGetVertexAttribdvNV_P(index, pname, params)}
public func glGetVertexAttribdvNV(index:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLdouble>) {glGetVertexAttribdvNV_P(index, pname, params)}
var glGetVertexAttribdvNV_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLdouble>) -> Void = glGetVertexAttribdvNV_L
public func glGetVertexAttribfv(_ index:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetVertexAttribfv_P(index, pname, params)}
public func glGetVertexAttribfv(index:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetVertexAttribfv_P(index, pname, params)}
var glGetVertexAttribfv_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetVertexAttribfv_L
public func glGetVertexAttribfvARB(_ index:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetVertexAttribfvARB_P(index, pname, params)}
public func glGetVertexAttribfvARB(index:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetVertexAttribfvARB_P(index, pname, params)}
var glGetVertexAttribfvARB_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetVertexAttribfvARB_L
public func glGetVertexAttribfvNV(_ index:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetVertexAttribfvNV_P(index, pname, params)}
public func glGetVertexAttribfvNV(index:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetVertexAttribfvNV_P(index, pname, params)}
var glGetVertexAttribfvNV_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetVertexAttribfvNV_L
public func glGetVertexAttribiv(_ index:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetVertexAttribiv_P(index, pname, params)}
public func glGetVertexAttribiv(index:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetVertexAttribiv_P(index, pname, params)}
var glGetVertexAttribiv_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetVertexAttribiv_L
public func glGetVertexAttribivARB(_ index:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetVertexAttribivARB_P(index, pname, params)}
public func glGetVertexAttribivARB(index:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetVertexAttribivARB_P(index, pname, params)}
var glGetVertexAttribivARB_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetVertexAttribivARB_L
public func glGetVertexAttribivNV(_ index:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetVertexAttribivNV_P(index, pname, params)}
public func glGetVertexAttribivNV(index:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetVertexAttribivNV_P(index, pname, params)}
var glGetVertexAttribivNV_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetVertexAttribivNV_L
public func glGetVideoCaptureStreamdvNV(_ video_capture_slot:GLuint, _ stream:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLdouble>) {glGetVideoCaptureStreamdvNV_P(video_capture_slot, stream, pname, params)}
public func glGetVideoCaptureStreamdvNV(video_capture_slot:GLuint, stream:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLdouble>) {glGetVideoCaptureStreamdvNV_P(video_capture_slot, stream, pname, params)}
var glGetVideoCaptureStreamdvNV_P:@convention(c)(GLuint, GLuint, GLenum, UnsafeMutablePointer<GLdouble>) -> Void = glGetVideoCaptureStreamdvNV_L
public func glGetVideoCaptureStreamfvNV(_ video_capture_slot:GLuint, _ stream:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLfloat>) {glGetVideoCaptureStreamfvNV_P(video_capture_slot, stream, pname, params)}
public func glGetVideoCaptureStreamfvNV(video_capture_slot:GLuint, stream:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLfloat>) {glGetVideoCaptureStreamfvNV_P(video_capture_slot, stream, pname, params)}
var glGetVideoCaptureStreamfvNV_P:@convention(c)(GLuint, GLuint, GLenum, UnsafeMutablePointer<GLfloat>) -> Void = glGetVideoCaptureStreamfvNV_L
public func glGetVideoCaptureStreamivNV(_ video_capture_slot:GLuint, _ stream:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetVideoCaptureStreamivNV_P(video_capture_slot, stream, pname, params)}
public func glGetVideoCaptureStreamivNV(video_capture_slot:GLuint, stream:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetVideoCaptureStreamivNV_P(video_capture_slot, stream, pname, params)}
var glGetVideoCaptureStreamivNV_P:@convention(c)(GLuint, GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetVideoCaptureStreamivNV_L
public func glGetVideoCaptureivNV(_ video_capture_slot:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetVideoCaptureivNV_P(video_capture_slot, pname, params)}
public func glGetVideoCaptureivNV(video_capture_slot:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetVideoCaptureivNV_P(video_capture_slot, pname, params)}
var glGetVideoCaptureivNV_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetVideoCaptureivNV_L
public func glGetVideoi64vNV(_ video_slot:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint64EXT>) {glGetVideoi64vNV_P(video_slot, pname, params)}
public func glGetVideoi64vNV(video_slot:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint64EXT>) {glGetVideoi64vNV_P(video_slot, pname, params)}
var glGetVideoi64vNV_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint64EXT>) -> Void = glGetVideoi64vNV_L
public func glGetVideoivNV(_ video_slot:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLint>) {glGetVideoivNV_P(video_slot, pname, params)}
public func glGetVideoivNV(video_slot:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLint>) {glGetVideoivNV_P(video_slot, pname, params)}
var glGetVideoivNV_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLint>) -> Void = glGetVideoivNV_L
public func glGetVideoui64vNV(_ video_slot:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLuint64EXT>) {glGetVideoui64vNV_P(video_slot, pname, params)}
public func glGetVideoui64vNV(video_slot:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLuint64EXT>) {glGetVideoui64vNV_P(video_slot, pname, params)}
var glGetVideoui64vNV_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLuint64EXT>) -> Void = glGetVideoui64vNV_L
public func glGetVideouivNV(_ video_slot:GLuint, _ pname:GLenum, _ params:UnsafeMutablePointer<GLuint>) {glGetVideouivNV_P(video_slot, pname, params)}
public func glGetVideouivNV(video_slot:GLuint, pname:GLenum, params:UnsafeMutablePointer<GLuint>) {glGetVideouivNV_P(video_slot, pname, params)}
var glGetVideouivNV_P:@convention(c)(GLuint, GLenum, UnsafeMutablePointer<GLuint>) -> Void = glGetVideouivNV_L
public func glGetnColorTable(_ target:GLenum, _ format:GLenum, _ type:GLenum, _ bufSize:GLsizei, _ table:UnsafeMutableRawPointer) {glGetnColorTable_P(target, format, type, bufSize, table)}
public func glGetnColorTable(target:GLenum, format:GLenum, type:GLenum, bufSize:GLsizei, table:UnsafeMutableRawPointer) {glGetnColorTable_P(target, format, type, bufSize, table)}
var glGetnColorTable_P:@convention(c)(GLenum, GLenum, GLenum, GLsizei, UnsafeMutableRawPointer) -> Void = glGetnColorTable_L
public func glGetnColorTableARB(_ target:GLenum, _ format:GLenum, _ type:GLenum, _ bufSize:GLsizei, _ table:UnsafeMutableRawPointer) {glGetnColorTableARB_P(target, format, type, bufSize, table)}
public func glGetnColorTableARB(target:GLenum, format:GLenum, type:GLenum, bufSize:GLsizei, table:UnsafeMutableRawPointer) {glGetnColorTableARB_P(target, format, type, bufSize, table)}
var glGetnColorTableARB_P:@convention(c)(GLenum, GLenum, GLenum, GLsizei, UnsafeMutableRawPointer) -> Void = glGetnColorTableARB_L
public func glGetnCompressedTexImage(_ target:GLenum, _ lod:GLint, _ bufSize:GLsizei, _ pixels:UnsafeMutableRawPointer) {glGetnCompressedTexImage_P(target, lod, bufSize, pixels)}
public func glGetnCompressedTexImage(target:GLenum, lod:GLint, bufSize:GLsizei, pixels:UnsafeMutableRawPointer) {glGetnCompressedTexImage_P(target, lod, bufSize, pixels)}
var glGetnCompressedTexImage_P:@convention(c)(GLenum, GLint, GLsizei, UnsafeMutableRawPointer) -> Void = glGetnCompressedTexImage_L
public func glGetnCompressedTexImageARB(_ target:GLenum, _ lod:GLint, _ bufSize:GLsizei, _ img:UnsafeMutableRawPointer) {glGetnCompressedTexImageARB_P(target, lod, bufSize, img)}
public func glGetnCompressedTexImageARB(target:GLenum, lod:GLint, bufSize:GLsizei, img:UnsafeMutableRawPointer) {glGetnCompressedTexImageARB_P(target, lod, bufSize, img)}
var glGetnCompressedTexImageARB_P:@convention(c)(GLenum, GLint, GLsizei, UnsafeMutableRawPointer) -> Void = glGetnCompressedTexImageARB_L
public func glGetnConvolutionFilter(_ target:GLenum, _ format:GLenum, _ type:GLenum, _ bufSize:GLsizei, _ image:UnsafeMutableRawPointer) {glGetnConvolutionFilter_P(target, format, type, bufSize, image)}
public func glGetnConvolutionFilter(target:GLenum, format:GLenum, type:GLenum, bufSize:GLsizei, image:UnsafeMutableRawPointer) {glGetnConvolutionFilter_P(target, format, type, bufSize, image)}
var glGetnConvolutionFilter_P:@convention(c)(GLenum, GLenum, GLenum, GLsizei, UnsafeMutableRawPointer) -> Void = glGetnConvolutionFilter_L
public func glGetnConvolutionFilterARB(_ target:GLenum, _ format:GLenum, _ type:GLenum, _ bufSize:GLsizei, _ image:UnsafeMutableRawPointer) {glGetnConvolutionFilterARB_P(target, format, type, bufSize, image)}
public func glGetnConvolutionFilterARB(target:GLenum, format:GLenum, type:GLenum, bufSize:GLsizei, image:UnsafeMutableRawPointer) {glGetnConvolutionFilterARB_P(target, format, type, bufSize, image)}
var glGetnConvolutionFilterARB_P:@convention(c)(GLenum, GLenum, GLenum, GLsizei, UnsafeMutableRawPointer) -> Void = glGetnConvolutionFilterARB_L
public func glGetnHistogram(_ target:GLenum, _ reset:GLboolean, _ format:GLenum, _ type:GLenum, _ bufSize:GLsizei, _ values:UnsafeMutableRawPointer) {glGetnHistogram_P(target, reset, format, type, bufSize, values)}
public func glGetnHistogram(target:GLenum, reset:GLboolean, format:GLenum, type:GLenum, bufSize:GLsizei, values:UnsafeMutableRawPointer) {glGetnHistogram_P(target, reset, format, type, bufSize, values)}
var glGetnHistogram_P:@convention(c)(GLenum, GLboolean, GLenum, GLenum, GLsizei, UnsafeMutableRawPointer) -> Void = glGetnHistogram_L
public func glGetnHistogramARB(_ target:GLenum, _ reset:GLboolean, _ format:GLenum, _ type:GLenum, _ bufSize:GLsizei, _ values:UnsafeMutableRawPointer) {glGetnHistogramARB_P(target, reset, format, type, bufSize, values)}
public func glGetnHistogramARB(target:GLenum, reset:GLboolean, format:GLenum, type:GLenum, bufSize:GLsizei, values:UnsafeMutableRawPointer) {glGetnHistogramARB_P(target, reset, format, type, bufSize, values)}
var glGetnHistogramARB_P:@convention(c)(GLenum, GLboolean, GLenum, GLenum, GLsizei, UnsafeMutableRawPointer) -> Void = glGetnHistogramARB_L
public func glGetnMapdv(_ target:GLenum, _ query:GLenum, _ bufSize:GLsizei, _ v:UnsafeMutablePointer<GLdouble>) {glGetnMapdv_P(target, query, bufSize, v)}
public func glGetnMapdv(target:GLenum, query:GLenum, bufSize:GLsizei, v:UnsafeMutablePointer<GLdouble>) {glGetnMapdv_P(target, query, bufSize, v)}
var glGetnMapdv_P:@convention(c)(GLenum, GLenum, GLsizei, UnsafeMutablePointer<GLdouble>) -> Void = glGetnMapdv_L
public func glGetnMapdvARB(_ target:GLenum, _ query:GLenum, _ bufSize:GLsizei, _ v:UnsafeMutablePointer<GLdouble>) {glGetnMapdvARB_P(target, query, bufSize, v)}
public func glGetnMapdvARB(target:GLenum, query:GLenum, bufSize:GLsizei, v:UnsafeMutablePointer<GLdouble>) {glGetnMapdvARB_P(target, query, bufSize, v)}
var glGetnMapdvARB_P:@convention(c)(GLenum, GLenum, GLsizei, UnsafeMutablePointer<GLdouble>) -> Void = glGetnMapdvARB_L
public func glGetnMapfv(_ target:GLenum, _ query:GLenum, _ bufSize:GLsizei, _ v:UnsafeMutablePointer<GLfloat>) {glGetnMapfv_P(target, query, bufSize, v)}
public func glGetnMapfv(target:GLenum, query:GLenum, bufSize:GLsizei, v:UnsafeMutablePointer<GLfloat>) {glGetnMapfv_P(target, query, bufSize, v)}
var glGetnMapfv_P:@convention(c)(GLenum, GLenum, GLsizei, UnsafeMutablePointer<GLfloat>) -> Void = glGetnMapfv_L
public func glGetnMapfvARB(_ target:GLenum, _ query:GLenum, _ bufSize:GLsizei, _ v:UnsafeMutablePointer<GLfloat>) {glGetnMapfvARB_P(target, query, bufSize, v)}
public func glGetnMapfvARB(target:GLenum, query:GLenum, bufSize:GLsizei, v:UnsafeMutablePointer<GLfloat>) {glGetnMapfvARB_P(target, query, bufSize, v)}
var glGetnMapfvARB_P:@convention(c)(GLenum, GLenum, GLsizei, UnsafeMutablePointer<GLfloat>) -> Void = glGetnMapfvARB_L
public func glGetnMapiv(_ target:GLenum, _ query:GLenum, _ bufSize:GLsizei, _ v:UnsafeMutablePointer<GLint>) {glGetnMapiv_P(target, query, bufSize, v)}
public func glGetnMapiv(target:GLenum, query:GLenum, bufSize:GLsizei, v:UnsafeMutablePointer<GLint>) {glGetnMapiv_P(target, query, bufSize, v)}
var glGetnMapiv_P:@convention(c)(GLenum, GLenum, GLsizei, UnsafeMutablePointer<GLint>) -> Void = glGetnMapiv_L
public func glGetnMapivARB(_ target:GLenum, _ query:GLenum, _ bufSize:GLsizei, _ v:UnsafeMutablePointer<GLint>) {glGetnMapivARB_P(target, query, bufSize, v)}
public func glGetnMapivARB(target:GLenum, query:GLenum, bufSize:GLsizei, v:UnsafeMutablePointer<GLint>) {glGetnMapivARB_P(target, query, bufSize, v)}
var glGetnMapivARB_P:@convention(c)(GLenum, GLenum, GLsizei, UnsafeMutablePointer<GLint>) -> Void = glGetnMapivARB_L
public func glGetnMinmax(_ target:GLenum, _ reset:GLboolean, _ format:GLenum, _ type:GLenum, _ bufSize:GLsizei, _ values:UnsafeMutableRawPointer) {glGetnMinmax_P(target, reset, format, type, bufSize, values)}
public func glGetnMinmax(target:GLenum, reset:GLboolean, format:GLenum, type:GLenum, bufSize:GLsizei, values:UnsafeMutableRawPointer) {glGetnMinmax_P(target, reset, format, type, bufSize, values)}
var glGetnMinmax_P:@convention(c)(GLenum, GLboolean, GLenum, GLenum, GLsizei, UnsafeMutableRawPointer) -> Void = glGetnMinmax_L
public func glGetnMinmaxARB(_ target:GLenum, _ reset:GLboolean, _ format:GLenum, _ type:GLenum, _ bufSize:GLsizei, _ values:UnsafeMutableRawPointer) {glGetnMinmaxARB_P(target, reset, format, type, bufSize, values)}
public func glGetnMinmaxARB(target:GLenum, reset:GLboolean, format:GLenum, type:GLenum, bufSize:GLsizei, values:UnsafeMutableRawPointer) {glGetnMinmaxARB_P(target, reset, format, type, bufSize, values)}
var glGetnMinmaxARB_P:@convention(c)(GLenum, GLboolean, GLenum, GLenum, GLsizei, UnsafeMutableRawPointer) -> Void = glGetnMinmaxARB_L
public func glGetnPixelMapfv(_ map:GLenum, _ bufSize:GLsizei, _ values:UnsafeMutablePointer<GLfloat>) {glGetnPixelMapfv_P(map, bufSize, values)}
public func glGetnPixelMapfv(map:GLenum, bufSize:GLsizei, values:UnsafeMutablePointer<GLfloat>) {glGetnPixelMapfv_P(map, bufSize, values)}
var glGetnPixelMapfv_P:@convention(c)(GLenum, GLsizei, UnsafeMutablePointer<GLfloat>) -> Void = glGetnPixelMapfv_L
public func glGetnPixelMapfvARB(_ map:GLenum, _ bufSize:GLsizei, _ values:UnsafeMutablePointer<GLfloat>) {glGetnPixelMapfvARB_P(map, bufSize, values)}
public func glGetnPixelMapfvARB(map:GLenum, bufSize:GLsizei, values:UnsafeMutablePointer<GLfloat>) {glGetnPixelMapfvARB_P(map, bufSize, values)}
var glGetnPixelMapfvARB_P:@convention(c)(GLenum, GLsizei, UnsafeMutablePointer<GLfloat>) -> Void = glGetnPixelMapfvARB_L
public func glGetnPixelMapuiv(_ map:GLenum, _ bufSize:GLsizei, _ values:UnsafeMutablePointer<GLuint>) {glGetnPixelMapuiv_P(map, bufSize, values)}
public func glGetnPixelMapuiv(map:GLenum, bufSize:GLsizei, values:UnsafeMutablePointer<GLuint>) {glGetnPixelMapuiv_P(map, bufSize, values)}
var glGetnPixelMapuiv_P:@convention(c)(GLenum, GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGetnPixelMapuiv_L
public func glGetnPixelMapuivARB(_ map:GLenum, _ bufSize:GLsizei, _ values:UnsafeMutablePointer<GLuint>) {glGetnPixelMapuivARB_P(map, bufSize, values)}
public func glGetnPixelMapuivARB(map:GLenum, bufSize:GLsizei, values:UnsafeMutablePointer<GLuint>) {glGetnPixelMapuivARB_P(map, bufSize, values)}
var glGetnPixelMapuivARB_P:@convention(c)(GLenum, GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGetnPixelMapuivARB_L
public func glGetnPixelMapusv(_ map:GLenum, _ bufSize:GLsizei, _ values:UnsafeMutablePointer<GLushort>) {glGetnPixelMapusv_P(map, bufSize, values)}
public func glGetnPixelMapusv(map:GLenum, bufSize:GLsizei, values:UnsafeMutablePointer<GLushort>) {glGetnPixelMapusv_P(map, bufSize, values)}
var glGetnPixelMapusv_P:@convention(c)(GLenum, GLsizei, UnsafeMutablePointer<GLushort>) -> Void = glGetnPixelMapusv_L
public func glGetnPixelMapusvARB(_ map:GLenum, _ bufSize:GLsizei, _ values:UnsafeMutablePointer<GLushort>) {glGetnPixelMapusvARB_P(map, bufSize, values)}
public func glGetnPixelMapusvARB(map:GLenum, bufSize:GLsizei, values:UnsafeMutablePointer<GLushort>) {glGetnPixelMapusvARB_P(map, bufSize, values)}
var glGetnPixelMapusvARB_P:@convention(c)(GLenum, GLsizei, UnsafeMutablePointer<GLushort>) -> Void = glGetnPixelMapusvARB_L
public func glGetnPolygonStipple(_ bufSize:GLsizei, _ pattern:UnsafeMutablePointer<GLubyte>) {glGetnPolygonStipple_P(bufSize, pattern)}
public func glGetnPolygonStipple(bufSize:GLsizei, pattern:UnsafeMutablePointer<GLubyte>) {glGetnPolygonStipple_P(bufSize, pattern)}
var glGetnPolygonStipple_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLubyte>) -> Void = glGetnPolygonStipple_L
public func glGetnPolygonStippleARB(_ bufSize:GLsizei, _ pattern:UnsafeMutablePointer<GLubyte>) {glGetnPolygonStippleARB_P(bufSize, pattern)}
public func glGetnPolygonStippleARB(bufSize:GLsizei, pattern:UnsafeMutablePointer<GLubyte>) {glGetnPolygonStippleARB_P(bufSize, pattern)}
var glGetnPolygonStippleARB_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLubyte>) -> Void = glGetnPolygonStippleARB_L
public func glGetnSeparableFilter(_ target:GLenum, _ format:GLenum, _ type:GLenum, _ rowBufSize:GLsizei, _ row:UnsafeMutableRawPointer, _ columnBufSize:GLsizei, _ column:UnsafeMutableRawPointer, _ span:UnsafeMutableRawPointer) {glGetnSeparableFilter_P(target, format, type, rowBufSize, row, columnBufSize, column, span)}
public func glGetnSeparableFilter(target:GLenum, format:GLenum, type:GLenum, rowBufSize:GLsizei, row:UnsafeMutableRawPointer, columnBufSize:GLsizei, column:UnsafeMutableRawPointer, span:UnsafeMutableRawPointer) {glGetnSeparableFilter_P(target, format, type, rowBufSize, row, columnBufSize, column, span)}
var glGetnSeparableFilter_P:@convention(c)(GLenum, GLenum, GLenum, GLsizei, UnsafeMutableRawPointer, GLsizei, UnsafeMutableRawPointer, UnsafeMutableRawPointer) -> Void = glGetnSeparableFilter_L
public func glGetnSeparableFilterARB(_ target:GLenum, _ format:GLenum, _ type:GLenum, _ rowBufSize:GLsizei, _ row:UnsafeMutableRawPointer, _ columnBufSize:GLsizei, _ column:UnsafeMutableRawPointer, _ span:UnsafeMutableRawPointer) {glGetnSeparableFilterARB_P(target, format, type, rowBufSize, row, columnBufSize, column, span)}
public func glGetnSeparableFilterARB(target:GLenum, format:GLenum, type:GLenum, rowBufSize:GLsizei, row:UnsafeMutableRawPointer, columnBufSize:GLsizei, column:UnsafeMutableRawPointer, span:UnsafeMutableRawPointer) {glGetnSeparableFilterARB_P(target, format, type, rowBufSize, row, columnBufSize, column, span)}
var glGetnSeparableFilterARB_P:@convention(c)(GLenum, GLenum, GLenum, GLsizei, UnsafeMutableRawPointer, GLsizei, UnsafeMutableRawPointer, UnsafeMutableRawPointer) -> Void = glGetnSeparableFilterARB_L
public func glGetnTexImage(_ target:GLenum, _ level:GLint, _ format:GLenum, _ type:GLenum, _ bufSize:GLsizei, _ pixels:UnsafeMutableRawPointer) {glGetnTexImage_P(target, level, format, type, bufSize, pixels)}
public func glGetnTexImage(target:GLenum, level:GLint, format:GLenum, type:GLenum, bufSize:GLsizei, pixels:UnsafeMutableRawPointer) {glGetnTexImage_P(target, level, format, type, bufSize, pixels)}
var glGetnTexImage_P:@convention(c)(GLenum, GLint, GLenum, GLenum, GLsizei, UnsafeMutableRawPointer) -> Void = glGetnTexImage_L
public func glGetnTexImageARB(_ target:GLenum, _ level:GLint, _ format:GLenum, _ type:GLenum, _ bufSize:GLsizei, _ img:UnsafeMutableRawPointer) {glGetnTexImageARB_P(target, level, format, type, bufSize, img)}
public func glGetnTexImageARB(target:GLenum, level:GLint, format:GLenum, type:GLenum, bufSize:GLsizei, img:UnsafeMutableRawPointer) {glGetnTexImageARB_P(target, level, format, type, bufSize, img)}
var glGetnTexImageARB_P:@convention(c)(GLenum, GLint, GLenum, GLenum, GLsizei, UnsafeMutableRawPointer) -> Void = glGetnTexImageARB_L
public func glGetnUniformdv(_ program:GLuint, _ location:GLint, _ bufSize:GLsizei, _ params:UnsafeMutablePointer<GLdouble>) {glGetnUniformdv_P(program, location, bufSize, params)}
public func glGetnUniformdv(program:GLuint, location:GLint, bufSize:GLsizei, params:UnsafeMutablePointer<GLdouble>) {glGetnUniformdv_P(program, location, bufSize, params)}
var glGetnUniformdv_P:@convention(c)(GLuint, GLint, GLsizei, UnsafeMutablePointer<GLdouble>) -> Void = glGetnUniformdv_L
public func glGetnUniformdvARB(_ program:GLuint, _ location:GLint, _ bufSize:GLsizei, _ params:UnsafeMutablePointer<GLdouble>) {glGetnUniformdvARB_P(program, location, bufSize, params)}
public func glGetnUniformdvARB(program:GLuint, location:GLint, bufSize:GLsizei, params:UnsafeMutablePointer<GLdouble>) {glGetnUniformdvARB_P(program, location, bufSize, params)}
var glGetnUniformdvARB_P:@convention(c)(GLuint, GLint, GLsizei, UnsafeMutablePointer<GLdouble>) -> Void = glGetnUniformdvARB_L
public func glGetnUniformfv(_ program:GLuint, _ location:GLint, _ bufSize:GLsizei, _ params:UnsafeMutablePointer<GLfloat>) {glGetnUniformfv_P(program, location, bufSize, params)}
public func glGetnUniformfv(program:GLuint, location:GLint, bufSize:GLsizei, params:UnsafeMutablePointer<GLfloat>) {glGetnUniformfv_P(program, location, bufSize, params)}
var glGetnUniformfv_P:@convention(c)(GLuint, GLint, GLsizei, UnsafeMutablePointer<GLfloat>) -> Void = glGetnUniformfv_L
public func glGetnUniformfvARB(_ program:GLuint, _ location:GLint, _ bufSize:GLsizei, _ params:UnsafeMutablePointer<GLfloat>) {glGetnUniformfvARB_P(program, location, bufSize, params)}
public func glGetnUniformfvARB(program:GLuint, location:GLint, bufSize:GLsizei, params:UnsafeMutablePointer<GLfloat>) {glGetnUniformfvARB_P(program, location, bufSize, params)}
var glGetnUniformfvARB_P:@convention(c)(GLuint, GLint, GLsizei, UnsafeMutablePointer<GLfloat>) -> Void = glGetnUniformfvARB_L
public func glGetnUniformfvEXT(_ program:GLuint, _ location:GLint, _ bufSize:GLsizei, _ params:UnsafeMutablePointer<GLfloat>) {glGetnUniformfvEXT_P(program, location, bufSize, params)}
public func glGetnUniformfvEXT(program:GLuint, location:GLint, bufSize:GLsizei, params:UnsafeMutablePointer<GLfloat>) {glGetnUniformfvEXT_P(program, location, bufSize, params)}
var glGetnUniformfvEXT_P:@convention(c)(GLuint, GLint, GLsizei, UnsafeMutablePointer<GLfloat>) -> Void = glGetnUniformfvEXT_L
public func glGetnUniformfvKHR(_ program:GLuint, _ location:GLint, _ bufSize:GLsizei, _ params:UnsafeMutablePointer<GLfloat>) {glGetnUniformfvKHR_P(program, location, bufSize, params)}
public func glGetnUniformfvKHR(program:GLuint, location:GLint, bufSize:GLsizei, params:UnsafeMutablePointer<GLfloat>) {glGetnUniformfvKHR_P(program, location, bufSize, params)}
var glGetnUniformfvKHR_P:@convention(c)(GLuint, GLint, GLsizei, UnsafeMutablePointer<GLfloat>) -> Void = glGetnUniformfvKHR_L
public func glGetnUniformi64vARB(_ program:GLuint, _ location:GLint, _ bufSize:GLsizei, _ params:UnsafeMutablePointer<GLint64>) {glGetnUniformi64vARB_P(program, location, bufSize, params)}
public func glGetnUniformi64vARB(program:GLuint, location:GLint, bufSize:GLsizei, params:UnsafeMutablePointer<GLint64>) {glGetnUniformi64vARB_P(program, location, bufSize, params)}
var glGetnUniformi64vARB_P:@convention(c)(GLuint, GLint, GLsizei, UnsafeMutablePointer<GLint64>) -> Void = glGetnUniformi64vARB_L
public func glGetnUniformiv(_ program:GLuint, _ location:GLint, _ bufSize:GLsizei, _ params:UnsafeMutablePointer<GLint>) {glGetnUniformiv_P(program, location, bufSize, params)}
public func glGetnUniformiv(program:GLuint, location:GLint, bufSize:GLsizei, params:UnsafeMutablePointer<GLint>) {glGetnUniformiv_P(program, location, bufSize, params)}
var glGetnUniformiv_P:@convention(c)(GLuint, GLint, GLsizei, UnsafeMutablePointer<GLint>) -> Void = glGetnUniformiv_L
public func glGetnUniformivARB(_ program:GLuint, _ location:GLint, _ bufSize:GLsizei, _ params:UnsafeMutablePointer<GLint>) {glGetnUniformivARB_P(program, location, bufSize, params)}
public func glGetnUniformivARB(program:GLuint, location:GLint, bufSize:GLsizei, params:UnsafeMutablePointer<GLint>) {glGetnUniformivARB_P(program, location, bufSize, params)}
var glGetnUniformivARB_P:@convention(c)(GLuint, GLint, GLsizei, UnsafeMutablePointer<GLint>) -> Void = glGetnUniformivARB_L
public func glGetnUniformivEXT(_ program:GLuint, _ location:GLint, _ bufSize:GLsizei, _ params:UnsafeMutablePointer<GLint>) {glGetnUniformivEXT_P(program, location, bufSize, params)}
public func glGetnUniformivEXT(program:GLuint, location:GLint, bufSize:GLsizei, params:UnsafeMutablePointer<GLint>) {glGetnUniformivEXT_P(program, location, bufSize, params)}
var glGetnUniformivEXT_P:@convention(c)(GLuint, GLint, GLsizei, UnsafeMutablePointer<GLint>) -> Void = glGetnUniformivEXT_L
public func glGetnUniformivKHR(_ program:GLuint, _ location:GLint, _ bufSize:GLsizei, _ params:UnsafeMutablePointer<GLint>) {glGetnUniformivKHR_P(program, location, bufSize, params)}
public func glGetnUniformivKHR(program:GLuint, location:GLint, bufSize:GLsizei, params:UnsafeMutablePointer<GLint>) {glGetnUniformivKHR_P(program, location, bufSize, params)}
var glGetnUniformivKHR_P:@convention(c)(GLuint, GLint, GLsizei, UnsafeMutablePointer<GLint>) -> Void = glGetnUniformivKHR_L
public func glGetnUniformui64vARB(_ program:GLuint, _ location:GLint, _ bufSize:GLsizei, _ params:UnsafeMutablePointer<GLuint64>) {glGetnUniformui64vARB_P(program, location, bufSize, params)}
public func glGetnUniformui64vARB(program:GLuint, location:GLint, bufSize:GLsizei, params:UnsafeMutablePointer<GLuint64>) {glGetnUniformui64vARB_P(program, location, bufSize, params)}
var glGetnUniformui64vARB_P:@convention(c)(GLuint, GLint, GLsizei, UnsafeMutablePointer<GLuint64>) -> Void = glGetnUniformui64vARB_L
public func glGetnUniformuiv(_ program:GLuint, _ location:GLint, _ bufSize:GLsizei, _ params:UnsafeMutablePointer<GLuint>) {glGetnUniformuiv_P(program, location, bufSize, params)}
public func glGetnUniformuiv(program:GLuint, location:GLint, bufSize:GLsizei, params:UnsafeMutablePointer<GLuint>) {glGetnUniformuiv_P(program, location, bufSize, params)}
var glGetnUniformuiv_P:@convention(c)(GLuint, GLint, GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGetnUniformuiv_L
public func glGetnUniformuivARB(_ program:GLuint, _ location:GLint, _ bufSize:GLsizei, _ params:UnsafeMutablePointer<GLuint>) {glGetnUniformuivARB_P(program, location, bufSize, params)}
public func glGetnUniformuivARB(program:GLuint, location:GLint, bufSize:GLsizei, params:UnsafeMutablePointer<GLuint>) {glGetnUniformuivARB_P(program, location, bufSize, params)}
var glGetnUniformuivARB_P:@convention(c)(GLuint, GLint, GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGetnUniformuivARB_L
public func glGetnUniformuivKHR(_ program:GLuint, _ location:GLint, _ bufSize:GLsizei, _ params:UnsafeMutablePointer<GLuint>) {glGetnUniformuivKHR_P(program, location, bufSize, params)}
public func glGetnUniformuivKHR(program:GLuint, location:GLint, bufSize:GLsizei, params:UnsafeMutablePointer<GLuint>) {glGetnUniformuivKHR_P(program, location, bufSize, params)}
var glGetnUniformuivKHR_P:@convention(c)(GLuint, GLint, GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glGetnUniformuivKHR_L
public func glGlobalAlphaFactorbSUN(_ factor:GLbyte) {glGlobalAlphaFactorbSUN_P(factor)}
public func glGlobalAlphaFactorbSUN(factor:GLbyte) {glGlobalAlphaFactorbSUN_P(factor)}
var glGlobalAlphaFactorbSUN_P:@convention(c)(GLbyte) -> Void = glGlobalAlphaFactorbSUN_L
public func glGlobalAlphaFactordSUN(_ factor:GLdouble) {glGlobalAlphaFactordSUN_P(factor)}
public func glGlobalAlphaFactordSUN(factor:GLdouble) {glGlobalAlphaFactordSUN_P(factor)}
var glGlobalAlphaFactordSUN_P:@convention(c)(GLdouble) -> Void = glGlobalAlphaFactordSUN_L
public func glGlobalAlphaFactorfSUN(_ factor:GLfloat) {glGlobalAlphaFactorfSUN_P(factor)}
public func glGlobalAlphaFactorfSUN(factor:GLfloat) {glGlobalAlphaFactorfSUN_P(factor)}
var glGlobalAlphaFactorfSUN_P:@convention(c)(GLfloat) -> Void = glGlobalAlphaFactorfSUN_L
public func glGlobalAlphaFactoriSUN(_ factor:GLint) {glGlobalAlphaFactoriSUN_P(factor)}
public func glGlobalAlphaFactoriSUN(factor:GLint) {glGlobalAlphaFactoriSUN_P(factor)}
var glGlobalAlphaFactoriSUN_P:@convention(c)(GLint) -> Void = glGlobalAlphaFactoriSUN_L
public func glGlobalAlphaFactorsSUN(_ factor:GLshort) {glGlobalAlphaFactorsSUN_P(factor)}
public func glGlobalAlphaFactorsSUN(factor:GLshort) {glGlobalAlphaFactorsSUN_P(factor)}
var glGlobalAlphaFactorsSUN_P:@convention(c)(GLshort) -> Void = glGlobalAlphaFactorsSUN_L
public func glGlobalAlphaFactorubSUN(_ factor:GLubyte) {glGlobalAlphaFactorubSUN_P(factor)}
public func glGlobalAlphaFactorubSUN(factor:GLubyte) {glGlobalAlphaFactorubSUN_P(factor)}
var glGlobalAlphaFactorubSUN_P:@convention(c)(GLubyte) -> Void = glGlobalAlphaFactorubSUN_L
public func glGlobalAlphaFactoruiSUN(_ factor:GLuint) {glGlobalAlphaFactoruiSUN_P(factor)}
public func glGlobalAlphaFactoruiSUN(factor:GLuint) {glGlobalAlphaFactoruiSUN_P(factor)}
var glGlobalAlphaFactoruiSUN_P:@convention(c)(GLuint) -> Void = glGlobalAlphaFactoruiSUN_L
public func glGlobalAlphaFactorusSUN(_ factor:GLushort) {glGlobalAlphaFactorusSUN_P(factor)}
public func glGlobalAlphaFactorusSUN(factor:GLushort) {glGlobalAlphaFactorusSUN_P(factor)}
var glGlobalAlphaFactorusSUN_P:@convention(c)(GLushort) -> Void = glGlobalAlphaFactorusSUN_L
public func glHint(_ target:GLenum, _ mode:GLenum) {glHint_P(target, mode)}
public func glHint(target:GLenum, mode:GLenum) {glHint_P(target, mode)}
var glHint_P:@convention(c)(GLenum, GLenum) -> Void = glHint_L
public func glHintPGI(_ target:GLenum, _ mode:GLint) {glHintPGI_P(target, mode)}
public func glHintPGI(target:GLenum, mode:GLint) {glHintPGI_P(target, mode)}
var glHintPGI_P:@convention(c)(GLenum, GLint) -> Void = glHintPGI_L
public func glHistogram(_ target:GLenum, _ width:GLsizei, _ internalformat:GLenum, _ sink:GLboolean) {glHistogram_P(target, width, internalformat, sink)}
public func glHistogram(target:GLenum, width:GLsizei, internalformat:GLenum, sink:GLboolean) {glHistogram_P(target, width, internalformat, sink)}
var glHistogram_P:@convention(c)(GLenum, GLsizei, GLenum, GLboolean) -> Void = glHistogram_L
public func glHistogramEXT(_ target:GLenum, _ width:GLsizei, _ internalformat:GLenum, _ sink:GLboolean) {glHistogramEXT_P(target, width, internalformat, sink)}
public func glHistogramEXT(target:GLenum, width:GLsizei, internalformat:GLenum, sink:GLboolean) {glHistogramEXT_P(target, width, internalformat, sink)}
var glHistogramEXT_P:@convention(c)(GLenum, GLsizei, GLenum, GLboolean) -> Void = glHistogramEXT_L
public func glIglooInterfaceSGIX(_ pname:GLenum, _ params:UnsafeRawPointer) {glIglooInterfaceSGIX_P(pname, params)}
public func glIglooInterfaceSGIX(pname:GLenum, params:UnsafeRawPointer) {glIglooInterfaceSGIX_P(pname, params)}
var glIglooInterfaceSGIX_P:@convention(c)(GLenum, UnsafeRawPointer) -> Void = glIglooInterfaceSGIX_L
public func glImageTransformParameterfHP(_ target:GLenum, _ pname:GLenum, _ param:GLfloat) {glImageTransformParameterfHP_P(target, pname, param)}
public func glImageTransformParameterfHP(target:GLenum, pname:GLenum, param:GLfloat) {glImageTransformParameterfHP_P(target, pname, param)}
var glImageTransformParameterfHP_P:@convention(c)(GLenum, GLenum, GLfloat) -> Void = glImageTransformParameterfHP_L
public func glImageTransformParameterfvHP(_ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLfloat>) {glImageTransformParameterfvHP_P(target, pname, params)}
public func glImageTransformParameterfvHP(target:GLenum, pname:GLenum, params:UnsafePointer<GLfloat>) {glImageTransformParameterfvHP_P(target, pname, params)}
var glImageTransformParameterfvHP_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLfloat>) -> Void = glImageTransformParameterfvHP_L
public func glImageTransformParameteriHP(_ target:GLenum, _ pname:GLenum, _ param:GLint) {glImageTransformParameteriHP_P(target, pname, param)}
public func glImageTransformParameteriHP(target:GLenum, pname:GLenum, param:GLint) {glImageTransformParameteriHP_P(target, pname, param)}
var glImageTransformParameteriHP_P:@convention(c)(GLenum, GLenum, GLint) -> Void = glImageTransformParameteriHP_L
public func glImageTransformParameterivHP(_ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLint>) {glImageTransformParameterivHP_P(target, pname, params)}
public func glImageTransformParameterivHP(target:GLenum, pname:GLenum, params:UnsafePointer<GLint>) {glImageTransformParameterivHP_P(target, pname, params)}
var glImageTransformParameterivHP_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLint>) -> Void = glImageTransformParameterivHP_L
public func glImportSyncEXT(_ external_sync_type:GLenum, _ external_sync:GLintptr, _ flags:GLbitfield) -> GLsync {return glImportSyncEXT_P(external_sync_type, external_sync, flags)}
public func glImportSyncEXT(external_sync_type:GLenum, external_sync:GLintptr, flags:GLbitfield) -> GLsync {return glImportSyncEXT_P(external_sync_type, external_sync, flags)}
var glImportSyncEXT_P:@convention(c)(GLenum, GLintptr, GLbitfield) -> GLsync = glImportSyncEXT_L
public func glIndexFormatNV(_ type:GLenum, _ stride:GLsizei) {glIndexFormatNV_P(type, stride)}
public func glIndexFormatNV(type:GLenum, stride:GLsizei) {glIndexFormatNV_P(type, stride)}
var glIndexFormatNV_P:@convention(c)(GLenum, GLsizei) -> Void = glIndexFormatNV_L
public func glIndexFuncEXT(_ fn:GLenum, _ ref:GLclampf) {glIndexFuncEXT_P(fn, ref)}
public func glIndexFuncEXT(fn:GLenum, ref:GLclampf) {glIndexFuncEXT_P(fn, ref)}
var glIndexFuncEXT_P:@convention(c)(GLenum, GLclampf) -> Void = glIndexFuncEXT_L
public func glIndexMask(_ mask:GLuint) {glIndexMask_P(mask)}
public func glIndexMask(mask:GLuint) {glIndexMask_P(mask)}
var glIndexMask_P:@convention(c)(GLuint) -> Void = glIndexMask_L
public func glIndexMaterialEXT(_ face:GLenum, _ mode:GLenum) {glIndexMaterialEXT_P(face, mode)}
public func glIndexMaterialEXT(face:GLenum, mode:GLenum) {glIndexMaterialEXT_P(face, mode)}
var glIndexMaterialEXT_P:@convention(c)(GLenum, GLenum) -> Void = glIndexMaterialEXT_L
public func glIndexPointer(_ type:GLenum, _ stride:GLsizei, _ pointer:UnsafeRawPointer) {glIndexPointer_P(type, stride, pointer)}
public func glIndexPointer(type:GLenum, stride:GLsizei, pointer:UnsafeRawPointer) {glIndexPointer_P(type, stride, pointer)}
var glIndexPointer_P:@convention(c)(GLenum, GLsizei, UnsafeRawPointer) -> Void = glIndexPointer_L
public func glIndexPointerEXT(_ type:GLenum, _ stride:GLsizei, _ count:GLsizei, _ pointer:UnsafeRawPointer) {glIndexPointerEXT_P(type, stride, count, pointer)}
public func glIndexPointerEXT(type:GLenum, stride:GLsizei, count:GLsizei, pointer:UnsafeRawPointer) {glIndexPointerEXT_P(type, stride, count, pointer)}
var glIndexPointerEXT_P:@convention(c)(GLenum, GLsizei, GLsizei, UnsafeRawPointer) -> Void = glIndexPointerEXT_L
public func glIndexPointerListIBM(_ type:GLenum, _ stride:GLint, _ pointer:UnsafeMutablePointer<UnsafeRawPointer>, _ ptrstride:GLint) {glIndexPointerListIBM_P(type, stride, pointer, ptrstride)}
public func glIndexPointerListIBM(type:GLenum, stride:GLint, pointer:UnsafeMutablePointer<UnsafeRawPointer>, ptrstride:GLint) {glIndexPointerListIBM_P(type, stride, pointer, ptrstride)}
var glIndexPointerListIBM_P:@convention(c)(GLenum, GLint, UnsafeMutablePointer<UnsafeRawPointer>, GLint) -> Void = glIndexPointerListIBM_L
public func glIndexd(_ c:GLdouble) {glIndexd_P(c)}
public func glIndexd(c:GLdouble) {glIndexd_P(c)}
var glIndexd_P:@convention(c)(GLdouble) -> Void = glIndexd_L
public func glIndexdv(_ c:UnsafePointer<GLdouble>) {glIndexdv_P(c)}
public func glIndexdv(c:UnsafePointer<GLdouble>) {glIndexdv_P(c)}
var glIndexdv_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glIndexdv_L
public func glIndexf(_ c:GLfloat) {glIndexf_P(c)}
public func glIndexf(c:GLfloat) {glIndexf_P(c)}
var glIndexf_P:@convention(c)(GLfloat) -> Void = glIndexf_L
public func glIndexfv(_ c:UnsafePointer<GLfloat>) {glIndexfv_P(c)}
public func glIndexfv(c:UnsafePointer<GLfloat>) {glIndexfv_P(c)}
var glIndexfv_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glIndexfv_L
public func glIndexi(_ c:GLint) {glIndexi_P(c)}
public func glIndexi(c:GLint) {glIndexi_P(c)}
var glIndexi_P:@convention(c)(GLint) -> Void = glIndexi_L
public func glIndexiv(_ c:UnsafePointer<GLint>) {glIndexiv_P(c)}
public func glIndexiv(c:UnsafePointer<GLint>) {glIndexiv_P(c)}
var glIndexiv_P:@convention(c)(UnsafePointer<GLint>) -> Void = glIndexiv_L
public func glIndexs(_ c:GLshort) {glIndexs_P(c)}
public func glIndexs(c:GLshort) {glIndexs_P(c)}
var glIndexs_P:@convention(c)(GLshort) -> Void = glIndexs_L
public func glIndexsv(_ c:UnsafePointer<GLshort>) {glIndexsv_P(c)}
public func glIndexsv(c:UnsafePointer<GLshort>) {glIndexsv_P(c)}
var glIndexsv_P:@convention(c)(UnsafePointer<GLshort>) -> Void = glIndexsv_L
public func glIndexub(_ c:GLubyte) {glIndexub_P(c)}
public func glIndexub(c:GLubyte) {glIndexub_P(c)}
var glIndexub_P:@convention(c)(GLubyte) -> Void = glIndexub_L
public func glIndexubv(_ c:UnsafePointer<GLubyte>) {glIndexubv_P(c)}
public func glIndexubv(c:UnsafePointer<GLubyte>) {glIndexubv_P(c)}
var glIndexubv_P:@convention(c)(UnsafePointer<GLubyte>) -> Void = glIndexubv_L
public func glIndexxOES(_ component:GLfixed) {glIndexxOES_P(component)}
public func glIndexxOES(component:GLfixed) {glIndexxOES_P(component)}
var glIndexxOES_P:@convention(c)(GLfixed) -> Void = glIndexxOES_L
public func glIndexxvOES(_ component:UnsafePointer<GLfixed>) {glIndexxvOES_P(component)}
public func glIndexxvOES(component:UnsafePointer<GLfixed>) {glIndexxvOES_P(component)}
var glIndexxvOES_P:@convention(c)(UnsafePointer<GLfixed>) -> Void = glIndexxvOES_L
public func glInitNames() {glInitNames_P()}
var glInitNames_P:@convention(c)() -> Void = glInitNames_L
public func glInsertComponentEXT(_ res:GLuint, _ src:GLuint, _ num:GLuint) {glInsertComponentEXT_P(res, src, num)}
public func glInsertComponentEXT(res:GLuint, src:GLuint, num:GLuint) {glInsertComponentEXT_P(res, src, num)}
var glInsertComponentEXT_P:@convention(c)(GLuint, GLuint, GLuint) -> Void = glInsertComponentEXT_L
public func glInsertEventMarkerEXT(_ length:GLsizei, _ marker:UnsafePointer<GLchar>) {glInsertEventMarkerEXT_P(length, marker)}
public func glInsertEventMarkerEXT(length:GLsizei, marker:UnsafePointer<GLchar>) {glInsertEventMarkerEXT_P(length, marker)}
var glInsertEventMarkerEXT_P:@convention(c)(GLsizei, UnsafePointer<GLchar>) -> Void = glInsertEventMarkerEXT_L
public func glInstrumentsBufferSGIX(_ size:GLsizei, _ buffer:UnsafeMutablePointer<GLint>) {glInstrumentsBufferSGIX_P(size, buffer)}
public func glInstrumentsBufferSGIX(size:GLsizei, buffer:UnsafeMutablePointer<GLint>) {glInstrumentsBufferSGIX_P(size, buffer)}
var glInstrumentsBufferSGIX_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLint>) -> Void = glInstrumentsBufferSGIX_L
public func glInterleavedArrays(_ format:GLenum, _ stride:GLsizei, _ pointer:UnsafeRawPointer) {glInterleavedArrays_P(format, stride, pointer)}
public func glInterleavedArrays(format:GLenum, stride:GLsizei, pointer:UnsafeRawPointer) {glInterleavedArrays_P(format, stride, pointer)}
var glInterleavedArrays_P:@convention(c)(GLenum, GLsizei, UnsafeRawPointer) -> Void = glInterleavedArrays_L
public func glInterpolatePathsNV(_ resultPath:GLuint, _ pathA:GLuint, _ pathB:GLuint, _ weight:GLfloat) {glInterpolatePathsNV_P(resultPath, pathA, pathB, weight)}
public func glInterpolatePathsNV(resultPath:GLuint, pathA:GLuint, pathB:GLuint, weight:GLfloat) {glInterpolatePathsNV_P(resultPath, pathA, pathB, weight)}
var glInterpolatePathsNV_P:@convention(c)(GLuint, GLuint, GLuint, GLfloat) -> Void = glInterpolatePathsNV_L
public func glInvalidateBufferData(_ buffer:GLuint) {glInvalidateBufferData_P(buffer)}
public func glInvalidateBufferData(buffer:GLuint) {glInvalidateBufferData_P(buffer)}
var glInvalidateBufferData_P:@convention(c)(GLuint) -> Void = glInvalidateBufferData_L
public func glInvalidateBufferSubData(_ buffer:GLuint, _ offset:GLintptr, _ length:GLsizeiptr) {glInvalidateBufferSubData_P(buffer, offset, length)}
public func glInvalidateBufferSubData(buffer:GLuint, offset:GLintptr, length:GLsizeiptr) {glInvalidateBufferSubData_P(buffer, offset, length)}
var glInvalidateBufferSubData_P:@convention(c)(GLuint, GLintptr, GLsizeiptr) -> Void = glInvalidateBufferSubData_L
public func glInvalidateFramebuffer(_ target:GLenum, _ numAttachments:GLsizei, _ attachments:UnsafePointer<GLenum>) {glInvalidateFramebuffer_P(target, numAttachments, attachments)}
public func glInvalidateFramebuffer(target:GLenum, numAttachments:GLsizei, attachments:UnsafePointer<GLenum>) {glInvalidateFramebuffer_P(target, numAttachments, attachments)}
var glInvalidateFramebuffer_P:@convention(c)(GLenum, GLsizei, UnsafePointer<GLenum>) -> Void = glInvalidateFramebuffer_L
public func glInvalidateNamedFramebufferData(_ framebuffer:GLuint, _ numAttachments:GLsizei, _ attachments:UnsafePointer<GLenum>) {glInvalidateNamedFramebufferData_P(framebuffer, numAttachments, attachments)}
public func glInvalidateNamedFramebufferData(framebuffer:GLuint, numAttachments:GLsizei, attachments:UnsafePointer<GLenum>) {glInvalidateNamedFramebufferData_P(framebuffer, numAttachments, attachments)}
var glInvalidateNamedFramebufferData_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLenum>) -> Void = glInvalidateNamedFramebufferData_L
public func glInvalidateNamedFramebufferSubData(_ framebuffer:GLuint, _ numAttachments:GLsizei, _ attachments:UnsafePointer<GLenum>, _ x:GLint, _ y:GLint, _ width:GLsizei, _ height:GLsizei) {glInvalidateNamedFramebufferSubData_P(framebuffer, numAttachments, attachments, x, y, width, height)}
public func glInvalidateNamedFramebufferSubData(framebuffer:GLuint, numAttachments:GLsizei, attachments:UnsafePointer<GLenum>, x:GLint, y:GLint, width:GLsizei, height:GLsizei) {glInvalidateNamedFramebufferSubData_P(framebuffer, numAttachments, attachments, x, y, width, height)}
var glInvalidateNamedFramebufferSubData_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLenum>, GLint, GLint, GLsizei, GLsizei) -> Void = glInvalidateNamedFramebufferSubData_L
public func glInvalidateSubFramebuffer(_ target:GLenum, _ numAttachments:GLsizei, _ attachments:UnsafePointer<GLenum>, _ x:GLint, _ y:GLint, _ width:GLsizei, _ height:GLsizei) {glInvalidateSubFramebuffer_P(target, numAttachments, attachments, x, y, width, height)}
public func glInvalidateSubFramebuffer(target:GLenum, numAttachments:GLsizei, attachments:UnsafePointer<GLenum>, x:GLint, y:GLint, width:GLsizei, height:GLsizei) {glInvalidateSubFramebuffer_P(target, numAttachments, attachments, x, y, width, height)}
var glInvalidateSubFramebuffer_P:@convention(c)(GLenum, GLsizei, UnsafePointer<GLenum>, GLint, GLint, GLsizei, GLsizei) -> Void = glInvalidateSubFramebuffer_L
public func glInvalidateTexImage(_ texture:GLuint, _ level:GLint) {glInvalidateTexImage_P(texture, level)}
public func glInvalidateTexImage(texture:GLuint, level:GLint) {glInvalidateTexImage_P(texture, level)}
var glInvalidateTexImage_P:@convention(c)(GLuint, GLint) -> Void = glInvalidateTexImage_L
public func glInvalidateTexSubImage(_ texture:GLuint, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ zoffset:GLint, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei) {glInvalidateTexSubImage_P(texture, level, xoffset, yoffset, zoffset, width, height, depth)}
public func glInvalidateTexSubImage(texture:GLuint, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, width:GLsizei, height:GLsizei, depth:GLsizei) {glInvalidateTexSubImage_P(texture, level, xoffset, yoffset, zoffset, width, height, depth)}
var glInvalidateTexSubImage_P:@convention(c)(GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) -> Void = glInvalidateTexSubImage_L
public func glIsAsyncMarkerSGIX(_ marker:GLuint) -> GLboolean {return glIsAsyncMarkerSGIX_P(marker)}
public func glIsAsyncMarkerSGIX(marker:GLuint) -> GLboolean {return glIsAsyncMarkerSGIX_P(marker)}
var glIsAsyncMarkerSGIX_P:@convention(c)(GLuint) -> GLboolean = glIsAsyncMarkerSGIX_L
public func glIsBuffer(_ buffer:GLuint) -> GLboolean {return glIsBuffer_P(buffer)}
public func glIsBuffer(buffer:GLuint) -> GLboolean {return glIsBuffer_P(buffer)}
var glIsBuffer_P:@convention(c)(GLuint) -> GLboolean = glIsBuffer_L
public func glIsBufferARB(_ buffer:GLuint) -> GLboolean {return glIsBufferARB_P(buffer)}
public func glIsBufferARB(buffer:GLuint) -> GLboolean {return glIsBufferARB_P(buffer)}
var glIsBufferARB_P:@convention(c)(GLuint) -> GLboolean = glIsBufferARB_L
public func glIsBufferResidentNV(_ target:GLenum) -> GLboolean {return glIsBufferResidentNV_P(target)}
public func glIsBufferResidentNV(target:GLenum) -> GLboolean {return glIsBufferResidentNV_P(target)}
var glIsBufferResidentNV_P:@convention(c)(GLenum) -> GLboolean = glIsBufferResidentNV_L
public func glIsCommandListNV(_ list:GLuint) -> GLboolean {return glIsCommandListNV_P(list)}
public func glIsCommandListNV(list:GLuint) -> GLboolean {return glIsCommandListNV_P(list)}
var glIsCommandListNV_P:@convention(c)(GLuint) -> GLboolean = glIsCommandListNV_L
public func glIsEnabled(_ cap:GLenum) -> GLboolean {return glIsEnabled_P(cap)}
public func glIsEnabled(cap:GLenum) -> GLboolean {return glIsEnabled_P(cap)}
var glIsEnabled_P:@convention(c)(GLenum) -> GLboolean = glIsEnabled_L
public func glIsEnabledIndexedEXT(_ target:GLenum, _ index:GLuint) -> GLboolean {return glIsEnabledIndexedEXT_P(target, index)}
public func glIsEnabledIndexedEXT(target:GLenum, index:GLuint) -> GLboolean {return glIsEnabledIndexedEXT_P(target, index)}
var glIsEnabledIndexedEXT_P:@convention(c)(GLenum, GLuint) -> GLboolean = glIsEnabledIndexedEXT_L
public func glIsEnabledi(_ target:GLenum, _ index:GLuint) -> GLboolean {return glIsEnabledi_P(target, index)}
public func glIsEnabledi(target:GLenum, index:GLuint) -> GLboolean {return glIsEnabledi_P(target, index)}
var glIsEnabledi_P:@convention(c)(GLenum, GLuint) -> GLboolean = glIsEnabledi_L
public func glIsEnablediEXT(_ target:GLenum, _ index:GLuint) -> GLboolean {return glIsEnablediEXT_P(target, index)}
public func glIsEnablediEXT(target:GLenum, index:GLuint) -> GLboolean {return glIsEnablediEXT_P(target, index)}
var glIsEnablediEXT_P:@convention(c)(GLenum, GLuint) -> GLboolean = glIsEnablediEXT_L
public func glIsEnablediNV(_ target:GLenum, _ index:GLuint) -> GLboolean {return glIsEnablediNV_P(target, index)}
public func glIsEnablediNV(target:GLenum, index:GLuint) -> GLboolean {return glIsEnablediNV_P(target, index)}
var glIsEnablediNV_P:@convention(c)(GLenum, GLuint) -> GLboolean = glIsEnablediNV_L
public func glIsEnablediOES(_ target:GLenum, _ index:GLuint) -> GLboolean {return glIsEnablediOES_P(target, index)}
public func glIsEnablediOES(target:GLenum, index:GLuint) -> GLboolean {return glIsEnablediOES_P(target, index)}
var glIsEnablediOES_P:@convention(c)(GLenum, GLuint) -> GLboolean = glIsEnablediOES_L
public func glIsFenceAPPLE(_ fence:GLuint) -> GLboolean {return glIsFenceAPPLE_P(fence)}
public func glIsFenceAPPLE(fence:GLuint) -> GLboolean {return glIsFenceAPPLE_P(fence)}
var glIsFenceAPPLE_P:@convention(c)(GLuint) -> GLboolean = glIsFenceAPPLE_L
public func glIsFenceNV(_ fence:GLuint) -> GLboolean {return glIsFenceNV_P(fence)}
public func glIsFenceNV(fence:GLuint) -> GLboolean {return glIsFenceNV_P(fence)}
var glIsFenceNV_P:@convention(c)(GLuint) -> GLboolean = glIsFenceNV_L
public func glIsFramebuffer(_ framebuffer:GLuint) -> GLboolean {return glIsFramebuffer_P(framebuffer)}
public func glIsFramebuffer(framebuffer:GLuint) -> GLboolean {return glIsFramebuffer_P(framebuffer)}
var glIsFramebuffer_P:@convention(c)(GLuint) -> GLboolean = glIsFramebuffer_L
public func glIsFramebufferEXT(_ framebuffer:GLuint) -> GLboolean {return glIsFramebufferEXT_P(framebuffer)}
public func glIsFramebufferEXT(framebuffer:GLuint) -> GLboolean {return glIsFramebufferEXT_P(framebuffer)}
var glIsFramebufferEXT_P:@convention(c)(GLuint) -> GLboolean = glIsFramebufferEXT_L
public func glIsFramebufferOES(_ framebuffer:GLuint) -> GLboolean {return glIsFramebufferOES_P(framebuffer)}
public func glIsFramebufferOES(framebuffer:GLuint) -> GLboolean {return glIsFramebufferOES_P(framebuffer)}
var glIsFramebufferOES_P:@convention(c)(GLuint) -> GLboolean = glIsFramebufferOES_L
public func glIsImageHandleResidentARB(_ handle:GLuint64) -> GLboolean {return glIsImageHandleResidentARB_P(handle)}
public func glIsImageHandleResidentARB(handle:GLuint64) -> GLboolean {return glIsImageHandleResidentARB_P(handle)}
var glIsImageHandleResidentARB_P:@convention(c)(GLuint64) -> GLboolean = glIsImageHandleResidentARB_L
public func glIsImageHandleResidentNV(_ handle:GLuint64) -> GLboolean {return glIsImageHandleResidentNV_P(handle)}
public func glIsImageHandleResidentNV(handle:GLuint64) -> GLboolean {return glIsImageHandleResidentNV_P(handle)}
var glIsImageHandleResidentNV_P:@convention(c)(GLuint64) -> GLboolean = glIsImageHandleResidentNV_L
public func glIsList(_ list:GLuint) -> GLboolean {return glIsList_P(list)}
public func glIsList(list:GLuint) -> GLboolean {return glIsList_P(list)}
var glIsList_P:@convention(c)(GLuint) -> GLboolean = glIsList_L
public func glIsNameAMD(_ identifier:GLenum, _ name:GLuint) -> GLboolean {return glIsNameAMD_P(identifier, name)}
public func glIsNameAMD(identifier:GLenum, name:GLuint) -> GLboolean {return glIsNameAMD_P(identifier, name)}
var glIsNameAMD_P:@convention(c)(GLenum, GLuint) -> GLboolean = glIsNameAMD_L
public func glIsNamedBufferResidentNV(_ buffer:GLuint) -> GLboolean {return glIsNamedBufferResidentNV_P(buffer)}
public func glIsNamedBufferResidentNV(buffer:GLuint) -> GLboolean {return glIsNamedBufferResidentNV_P(buffer)}
var glIsNamedBufferResidentNV_P:@convention(c)(GLuint) -> GLboolean = glIsNamedBufferResidentNV_L
public func glIsNamedStringARB(_ namelen:GLint, _ name:UnsafePointer<GLchar>) -> GLboolean {return glIsNamedStringARB_P(namelen, name)}
public func glIsNamedStringARB(namelen:GLint, name:UnsafePointer<GLchar>) -> GLboolean {return glIsNamedStringARB_P(namelen, name)}
var glIsNamedStringARB_P:@convention(c)(GLint, UnsafePointer<GLchar>) -> GLboolean = glIsNamedStringARB_L
public func glIsObjectBufferATI(_ buffer:GLuint) -> GLboolean {return glIsObjectBufferATI_P(buffer)}
public func glIsObjectBufferATI(buffer:GLuint) -> GLboolean {return glIsObjectBufferATI_P(buffer)}
var glIsObjectBufferATI_P:@convention(c)(GLuint) -> GLboolean = glIsObjectBufferATI_L
public func glIsOcclusionQueryNV(_ id:GLuint) -> GLboolean {return glIsOcclusionQueryNV_P(id)}
public func glIsOcclusionQueryNV(id:GLuint) -> GLboolean {return glIsOcclusionQueryNV_P(id)}
var glIsOcclusionQueryNV_P:@convention(c)(GLuint) -> GLboolean = glIsOcclusionQueryNV_L
public func glIsPathNV(_ path:GLuint) -> GLboolean {return glIsPathNV_P(path)}
public func glIsPathNV(path:GLuint) -> GLboolean {return glIsPathNV_P(path)}
var glIsPathNV_P:@convention(c)(GLuint) -> GLboolean = glIsPathNV_L
public func glIsPointInFillPathNV(_ path:GLuint, _ mask:GLuint, _ x:GLfloat, _ y:GLfloat) -> GLboolean {return glIsPointInFillPathNV_P(path, mask, x, y)}
public func glIsPointInFillPathNV(path:GLuint, mask:GLuint, x:GLfloat, y:GLfloat) -> GLboolean {return glIsPointInFillPathNV_P(path, mask, x, y)}
var glIsPointInFillPathNV_P:@convention(c)(GLuint, GLuint, GLfloat, GLfloat) -> GLboolean = glIsPointInFillPathNV_L
public func glIsPointInStrokePathNV(_ path:GLuint, _ x:GLfloat, _ y:GLfloat) -> GLboolean {return glIsPointInStrokePathNV_P(path, x, y)}
public func glIsPointInStrokePathNV(path:GLuint, x:GLfloat, y:GLfloat) -> GLboolean {return glIsPointInStrokePathNV_P(path, x, y)}
var glIsPointInStrokePathNV_P:@convention(c)(GLuint, GLfloat, GLfloat) -> GLboolean = glIsPointInStrokePathNV_L
public func glIsProgram(_ program:GLuint) -> GLboolean {return glIsProgram_P(program)}
public func glIsProgram(program:GLuint) -> GLboolean {return glIsProgram_P(program)}
var glIsProgram_P:@convention(c)(GLuint) -> GLboolean = glIsProgram_L
public func glIsProgramARB(_ program:GLuint) -> GLboolean {return glIsProgramARB_P(program)}
public func glIsProgramARB(program:GLuint) -> GLboolean {return glIsProgramARB_P(program)}
var glIsProgramARB_P:@convention(c)(GLuint) -> GLboolean = glIsProgramARB_L
public func glIsProgramNV(_ id:GLuint) -> GLboolean {return glIsProgramNV_P(id)}
public func glIsProgramNV(id:GLuint) -> GLboolean {return glIsProgramNV_P(id)}
var glIsProgramNV_P:@convention(c)(GLuint) -> GLboolean = glIsProgramNV_L
public func glIsProgramPipeline(_ pipeline:GLuint) -> GLboolean {return glIsProgramPipeline_P(pipeline)}
public func glIsProgramPipeline(pipeline:GLuint) -> GLboolean {return glIsProgramPipeline_P(pipeline)}
var glIsProgramPipeline_P:@convention(c)(GLuint) -> GLboolean = glIsProgramPipeline_L
public func glIsProgramPipelineEXT(_ pipeline:GLuint) -> GLboolean {return glIsProgramPipelineEXT_P(pipeline)}
public func glIsProgramPipelineEXT(pipeline:GLuint) -> GLboolean {return glIsProgramPipelineEXT_P(pipeline)}
var glIsProgramPipelineEXT_P:@convention(c)(GLuint) -> GLboolean = glIsProgramPipelineEXT_L
public func glIsQuery(_ id:GLuint) -> GLboolean {return glIsQuery_P(id)}
public func glIsQuery(id:GLuint) -> GLboolean {return glIsQuery_P(id)}
var glIsQuery_P:@convention(c)(GLuint) -> GLboolean = glIsQuery_L
public func glIsQueryARB(_ id:GLuint) -> GLboolean {return glIsQueryARB_P(id)}
public func glIsQueryARB(id:GLuint) -> GLboolean {return glIsQueryARB_P(id)}
var glIsQueryARB_P:@convention(c)(GLuint) -> GLboolean = glIsQueryARB_L
public func glIsQueryEXT(_ id:GLuint) -> GLboolean {return glIsQueryEXT_P(id)}
public func glIsQueryEXT(id:GLuint) -> GLboolean {return glIsQueryEXT_P(id)}
var glIsQueryEXT_P:@convention(c)(GLuint) -> GLboolean = glIsQueryEXT_L
public func glIsRenderbuffer(_ renderbuffer:GLuint) -> GLboolean {return glIsRenderbuffer_P(renderbuffer)}
public func glIsRenderbuffer(renderbuffer:GLuint) -> GLboolean {return glIsRenderbuffer_P(renderbuffer)}
var glIsRenderbuffer_P:@convention(c)(GLuint) -> GLboolean = glIsRenderbuffer_L
public func glIsRenderbufferEXT(_ renderbuffer:GLuint) -> GLboolean {return glIsRenderbufferEXT_P(renderbuffer)}
public func glIsRenderbufferEXT(renderbuffer:GLuint) -> GLboolean {return glIsRenderbufferEXT_P(renderbuffer)}
var glIsRenderbufferEXT_P:@convention(c)(GLuint) -> GLboolean = glIsRenderbufferEXT_L
public func glIsRenderbufferOES(_ renderbuffer:GLuint) -> GLboolean {return glIsRenderbufferOES_P(renderbuffer)}
public func glIsRenderbufferOES(renderbuffer:GLuint) -> GLboolean {return glIsRenderbufferOES_P(renderbuffer)}
var glIsRenderbufferOES_P:@convention(c)(GLuint) -> GLboolean = glIsRenderbufferOES_L
public func glIsSampler(_ sampler:GLuint) -> GLboolean {return glIsSampler_P(sampler)}
public func glIsSampler(sampler:GLuint) -> GLboolean {return glIsSampler_P(sampler)}
var glIsSampler_P:@convention(c)(GLuint) -> GLboolean = glIsSampler_L
public func glIsShader(_ shader:GLuint) -> GLboolean {return glIsShader_P(shader)}
public func glIsShader(shader:GLuint) -> GLboolean {return glIsShader_P(shader)}
var glIsShader_P:@convention(c)(GLuint) -> GLboolean = glIsShader_L
public func glIsStateNV(_ state:GLuint) -> GLboolean {return glIsStateNV_P(state)}
public func glIsStateNV(state:GLuint) -> GLboolean {return glIsStateNV_P(state)}
var glIsStateNV_P:@convention(c)(GLuint) -> GLboolean = glIsStateNV_L
public func glIsSync(_ sync:GLsync) -> GLboolean {return glIsSync_P(sync)}
public func glIsSync(sync:GLsync) -> GLboolean {return glIsSync_P(sync)}
var glIsSync_P:@convention(c)(GLsync) -> GLboolean = glIsSync_L
public func glIsSyncAPPLE(_ sync:GLsync) -> GLboolean {return glIsSyncAPPLE_P(sync)}
public func glIsSyncAPPLE(sync:GLsync) -> GLboolean {return glIsSyncAPPLE_P(sync)}
var glIsSyncAPPLE_P:@convention(c)(GLsync) -> GLboolean = glIsSyncAPPLE_L
public func glIsTexture(_ texture:GLuint) -> GLboolean {return glIsTexture_P(texture)}
public func glIsTexture(texture:GLuint) -> GLboolean {return glIsTexture_P(texture)}
var glIsTexture_P:@convention(c)(GLuint) -> GLboolean = glIsTexture_L
public func glIsTextureEXT(_ texture:GLuint) -> GLboolean {return glIsTextureEXT_P(texture)}
public func glIsTextureEXT(texture:GLuint) -> GLboolean {return glIsTextureEXT_P(texture)}
var glIsTextureEXT_P:@convention(c)(GLuint) -> GLboolean = glIsTextureEXT_L
public func glIsTextureHandleResidentARB(_ handle:GLuint64) -> GLboolean {return glIsTextureHandleResidentARB_P(handle)}
public func glIsTextureHandleResidentARB(handle:GLuint64) -> GLboolean {return glIsTextureHandleResidentARB_P(handle)}
var glIsTextureHandleResidentARB_P:@convention(c)(GLuint64) -> GLboolean = glIsTextureHandleResidentARB_L
public func glIsTextureHandleResidentNV(_ handle:GLuint64) -> GLboolean {return glIsTextureHandleResidentNV_P(handle)}
public func glIsTextureHandleResidentNV(handle:GLuint64) -> GLboolean {return glIsTextureHandleResidentNV_P(handle)}
var glIsTextureHandleResidentNV_P:@convention(c)(GLuint64) -> GLboolean = glIsTextureHandleResidentNV_L
public func glIsTransformFeedback(_ id:GLuint) -> GLboolean {return glIsTransformFeedback_P(id)}
public func glIsTransformFeedback(id:GLuint) -> GLboolean {return glIsTransformFeedback_P(id)}
var glIsTransformFeedback_P:@convention(c)(GLuint) -> GLboolean = glIsTransformFeedback_L
public func glIsTransformFeedbackNV(_ id:GLuint) -> GLboolean {return glIsTransformFeedbackNV_P(id)}
public func glIsTransformFeedbackNV(id:GLuint) -> GLboolean {return glIsTransformFeedbackNV_P(id)}
var glIsTransformFeedbackNV_P:@convention(c)(GLuint) -> GLboolean = glIsTransformFeedbackNV_L
public func glIsVariantEnabledEXT(_ id:GLuint, _ cap:GLenum) -> GLboolean {return glIsVariantEnabledEXT_P(id, cap)}
public func glIsVariantEnabledEXT(id:GLuint, cap:GLenum) -> GLboolean {return glIsVariantEnabledEXT_P(id, cap)}
var glIsVariantEnabledEXT_P:@convention(c)(GLuint, GLenum) -> GLboolean = glIsVariantEnabledEXT_L
public func glIsVertexArray(_ array:GLuint) -> GLboolean {return glIsVertexArray_P(array)}
public func glIsVertexArray(array:GLuint) -> GLboolean {return glIsVertexArray_P(array)}
var glIsVertexArray_P:@convention(c)(GLuint) -> GLboolean = glIsVertexArray_L
public func glIsVertexArrayAPPLE(_ array:GLuint) -> GLboolean {return glIsVertexArrayAPPLE_P(array)}
public func glIsVertexArrayAPPLE(array:GLuint) -> GLboolean {return glIsVertexArrayAPPLE_P(array)}
var glIsVertexArrayAPPLE_P:@convention(c)(GLuint) -> GLboolean = glIsVertexArrayAPPLE_L
public func glIsVertexArrayOES(_ array:GLuint) -> GLboolean {return glIsVertexArrayOES_P(array)}
public func glIsVertexArrayOES(array:GLuint) -> GLboolean {return glIsVertexArrayOES_P(array)}
var glIsVertexArrayOES_P:@convention(c)(GLuint) -> GLboolean = glIsVertexArrayOES_L
public func glIsVertexAttribEnabledAPPLE(_ index:GLuint, _ pname:GLenum) -> GLboolean {return glIsVertexAttribEnabledAPPLE_P(index, pname)}
public func glIsVertexAttribEnabledAPPLE(index:GLuint, pname:GLenum) -> GLboolean {return glIsVertexAttribEnabledAPPLE_P(index, pname)}
var glIsVertexAttribEnabledAPPLE_P:@convention(c)(GLuint, GLenum) -> GLboolean = glIsVertexAttribEnabledAPPLE_L
public func glLabelObjectEXT(_ type:GLenum, _ object:GLuint, _ length:GLsizei, _ label:UnsafePointer<GLchar>) {glLabelObjectEXT_P(type, object, length, label)}
public func glLabelObjectEXT(type:GLenum, object:GLuint, length:GLsizei, label:UnsafePointer<GLchar>) {glLabelObjectEXT_P(type, object, length, label)}
var glLabelObjectEXT_P:@convention(c)(GLenum, GLuint, GLsizei, UnsafePointer<GLchar>) -> Void = glLabelObjectEXT_L
public func glLightEnviSGIX(_ pname:GLenum, _ param:GLint) {glLightEnviSGIX_P(pname, param)}
public func glLightEnviSGIX(pname:GLenum, param:GLint) {glLightEnviSGIX_P(pname, param)}
var glLightEnviSGIX_P:@convention(c)(GLenum, GLint) -> Void = glLightEnviSGIX_L
public func glLightModelf(_ pname:GLenum, _ param:GLfloat) {glLightModelf_P(pname, param)}
public func glLightModelf(pname:GLenum, param:GLfloat) {glLightModelf_P(pname, param)}
var glLightModelf_P:@convention(c)(GLenum, GLfloat) -> Void = glLightModelf_L
public func glLightModelfv(_ pname:GLenum, _ params:UnsafePointer<GLfloat>) {glLightModelfv_P(pname, params)}
public func glLightModelfv(pname:GLenum, params:UnsafePointer<GLfloat>) {glLightModelfv_P(pname, params)}
var glLightModelfv_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glLightModelfv_L
public func glLightModeli(_ pname:GLenum, _ param:GLint) {glLightModeli_P(pname, param)}
public func glLightModeli(pname:GLenum, param:GLint) {glLightModeli_P(pname, param)}
var glLightModeli_P:@convention(c)(GLenum, GLint) -> Void = glLightModeli_L
public func glLightModeliv(_ pname:GLenum, _ params:UnsafePointer<GLint>) {glLightModeliv_P(pname, params)}
public func glLightModeliv(pname:GLenum, params:UnsafePointer<GLint>) {glLightModeliv_P(pname, params)}
var glLightModeliv_P:@convention(c)(GLenum, UnsafePointer<GLint>) -> Void = glLightModeliv_L
public func glLightModelx(_ pname:GLenum, _ param:GLfixed) {glLightModelx_P(pname, param)}
public func glLightModelx(pname:GLenum, param:GLfixed) {glLightModelx_P(pname, param)}
var glLightModelx_P:@convention(c)(GLenum, GLfixed) -> Void = glLightModelx_L
public func glLightModelxOES(_ pname:GLenum, _ param:GLfixed) {glLightModelxOES_P(pname, param)}
public func glLightModelxOES(pname:GLenum, param:GLfixed) {glLightModelxOES_P(pname, param)}
var glLightModelxOES_P:@convention(c)(GLenum, GLfixed) -> Void = glLightModelxOES_L
public func glLightModelxv(_ pname:GLenum, _ param:UnsafePointer<GLfixed>) {glLightModelxv_P(pname, param)}
public func glLightModelxv(pname:GLenum, param:UnsafePointer<GLfixed>) {glLightModelxv_P(pname, param)}
var glLightModelxv_P:@convention(c)(GLenum, UnsafePointer<GLfixed>) -> Void = glLightModelxv_L
public func glLightModelxvOES(_ pname:GLenum, _ param:UnsafePointer<GLfixed>) {glLightModelxvOES_P(pname, param)}
public func glLightModelxvOES(pname:GLenum, param:UnsafePointer<GLfixed>) {glLightModelxvOES_P(pname, param)}
var glLightModelxvOES_P:@convention(c)(GLenum, UnsafePointer<GLfixed>) -> Void = glLightModelxvOES_L
public func glLightf(_ light:GLenum, _ pname:GLenum, _ param:GLfloat) {glLightf_P(light, pname, param)}
public func glLightf(light:GLenum, pname:GLenum, param:GLfloat) {glLightf_P(light, pname, param)}
var glLightf_P:@convention(c)(GLenum, GLenum, GLfloat) -> Void = glLightf_L
public func glLightfv(_ light:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLfloat>) {glLightfv_P(light, pname, params)}
public func glLightfv(light:GLenum, pname:GLenum, params:UnsafePointer<GLfloat>) {glLightfv_P(light, pname, params)}
var glLightfv_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLfloat>) -> Void = glLightfv_L
public func glLighti(_ light:GLenum, _ pname:GLenum, _ param:GLint) {glLighti_P(light, pname, param)}
public func glLighti(light:GLenum, pname:GLenum, param:GLint) {glLighti_P(light, pname, param)}
var glLighti_P:@convention(c)(GLenum, GLenum, GLint) -> Void = glLighti_L
public func glLightiv(_ light:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLint>) {glLightiv_P(light, pname, params)}
public func glLightiv(light:GLenum, pname:GLenum, params:UnsafePointer<GLint>) {glLightiv_P(light, pname, params)}
var glLightiv_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLint>) -> Void = glLightiv_L
public func glLightx(_ light:GLenum, _ pname:GLenum, _ param:GLfixed) {glLightx_P(light, pname, param)}
public func glLightx(light:GLenum, pname:GLenum, param:GLfixed) {glLightx_P(light, pname, param)}
var glLightx_P:@convention(c)(GLenum, GLenum, GLfixed) -> Void = glLightx_L
public func glLightxOES(_ light:GLenum, _ pname:GLenum, _ param:GLfixed) {glLightxOES_P(light, pname, param)}
public func glLightxOES(light:GLenum, pname:GLenum, param:GLfixed) {glLightxOES_P(light, pname, param)}
var glLightxOES_P:@convention(c)(GLenum, GLenum, GLfixed) -> Void = glLightxOES_L
public func glLightxv(_ light:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLfixed>) {glLightxv_P(light, pname, params)}
public func glLightxv(light:GLenum, pname:GLenum, params:UnsafePointer<GLfixed>) {glLightxv_P(light, pname, params)}
var glLightxv_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLfixed>) -> Void = glLightxv_L
public func glLightxvOES(_ light:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLfixed>) {glLightxvOES_P(light, pname, params)}
public func glLightxvOES(light:GLenum, pname:GLenum, params:UnsafePointer<GLfixed>) {glLightxvOES_P(light, pname, params)}
var glLightxvOES_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLfixed>) -> Void = glLightxvOES_L
public func glLineStipple(_ factor:GLint, _ pattern:GLushort) {glLineStipple_P(factor, pattern)}
public func glLineStipple(factor:GLint, pattern:GLushort) {glLineStipple_P(factor, pattern)}
var glLineStipple_P:@convention(c)(GLint, GLushort) -> Void = glLineStipple_L
public func glLineWidth(_ width:GLfloat) {glLineWidth_P(width)}
public func glLineWidth(width:GLfloat) {glLineWidth_P(width)}
var glLineWidth_P:@convention(c)(GLfloat) -> Void = glLineWidth_L
public func glLineWidthx(_ width:GLfixed) {glLineWidthx_P(width)}
public func glLineWidthx(width:GLfixed) {glLineWidthx_P(width)}
var glLineWidthx_P:@convention(c)(GLfixed) -> Void = glLineWidthx_L
public func glLineWidthxOES(_ width:GLfixed) {glLineWidthxOES_P(width)}
public func glLineWidthxOES(width:GLfixed) {glLineWidthxOES_P(width)}
var glLineWidthxOES_P:@convention(c)(GLfixed) -> Void = glLineWidthxOES_L
public func glLinkProgram(_ program:GLuint) {glLinkProgram_P(program)}
public func glLinkProgram(program:GLuint) {glLinkProgram_P(program)}
var glLinkProgram_P:@convention(c)(GLuint) -> Void = glLinkProgram_L
public func glLinkProgramARB(_ programObj:GLhandleARB) {glLinkProgramARB_P(programObj)}
public func glLinkProgramARB(programObj:GLhandleARB) {glLinkProgramARB_P(programObj)}
var glLinkProgramARB_P:@convention(c)(GLhandleARB) -> Void = glLinkProgramARB_L
public func glListBase(_ base:GLuint) {glListBase_P(base)}
public func glListBase(base:GLuint) {glListBase_P(base)}
var glListBase_P:@convention(c)(GLuint) -> Void = glListBase_L
public func glListDrawCommandsStatesClientNV(_ list:GLuint, _ segment:GLuint, _ indirects:UnsafeMutablePointer<UnsafeRawPointer>, _ sizes:UnsafePointer<GLsizei>, _ states:UnsafePointer<GLuint>, _ fbos:UnsafePointer<GLuint>, _ count:GLuint) {glListDrawCommandsStatesClientNV_P(list, segment, indirects, sizes, states, fbos, count)}
public func glListDrawCommandsStatesClientNV(list:GLuint, segment:GLuint, indirects:UnsafeMutablePointer<UnsafeRawPointer>, sizes:UnsafePointer<GLsizei>, states:UnsafePointer<GLuint>, fbos:UnsafePointer<GLuint>, count:GLuint) {glListDrawCommandsStatesClientNV_P(list, segment, indirects, sizes, states, fbos, count)}
var glListDrawCommandsStatesClientNV_P:@convention(c)(GLuint, GLuint, UnsafeMutablePointer<UnsafeRawPointer>, UnsafePointer<GLsizei>, UnsafePointer<GLuint>, UnsafePointer<GLuint>, GLuint) -> Void = glListDrawCommandsStatesClientNV_L
public func glListParameterfSGIX(_ list:GLuint, _ pname:GLenum, _ param:GLfloat) {glListParameterfSGIX_P(list, pname, param)}
public func glListParameterfSGIX(list:GLuint, pname:GLenum, param:GLfloat) {glListParameterfSGIX_P(list, pname, param)}
var glListParameterfSGIX_P:@convention(c)(GLuint, GLenum, GLfloat) -> Void = glListParameterfSGIX_L
public func glListParameterfvSGIX(_ list:GLuint, _ pname:GLenum, _ params:UnsafePointer<GLfloat>) {glListParameterfvSGIX_P(list, pname, params)}
public func glListParameterfvSGIX(list:GLuint, pname:GLenum, params:UnsafePointer<GLfloat>) {glListParameterfvSGIX_P(list, pname, params)}
var glListParameterfvSGIX_P:@convention(c)(GLuint, GLenum, UnsafePointer<GLfloat>) -> Void = glListParameterfvSGIX_L
public func glListParameteriSGIX(_ list:GLuint, _ pname:GLenum, _ param:GLint) {glListParameteriSGIX_P(list, pname, param)}
public func glListParameteriSGIX(list:GLuint, pname:GLenum, param:GLint) {glListParameteriSGIX_P(list, pname, param)}
var glListParameteriSGIX_P:@convention(c)(GLuint, GLenum, GLint) -> Void = glListParameteriSGIX_L
public func glListParameterivSGIX(_ list:GLuint, _ pname:GLenum, _ params:UnsafePointer<GLint>) {glListParameterivSGIX_P(list, pname, params)}
public func glListParameterivSGIX(list:GLuint, pname:GLenum, params:UnsafePointer<GLint>) {glListParameterivSGIX_P(list, pname, params)}
var glListParameterivSGIX_P:@convention(c)(GLuint, GLenum, UnsafePointer<GLint>) -> Void = glListParameterivSGIX_L
public func glLoadIdentity() {glLoadIdentity_P()}
var glLoadIdentity_P:@convention(c)() -> Void = glLoadIdentity_L
public func glLoadIdentityDeformationMapSGIX(_ mask:GLbitfield) {glLoadIdentityDeformationMapSGIX_P(mask)}
public func glLoadIdentityDeformationMapSGIX(mask:GLbitfield) {glLoadIdentityDeformationMapSGIX_P(mask)}
var glLoadIdentityDeformationMapSGIX_P:@convention(c)(GLbitfield) -> Void = glLoadIdentityDeformationMapSGIX_L
public func glLoadMatrixd(_ m:UnsafePointer<GLdouble>) {glLoadMatrixd_P(m)}
public func glLoadMatrixd(m:UnsafePointer<GLdouble>) {glLoadMatrixd_P(m)}
var glLoadMatrixd_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glLoadMatrixd_L
public func glLoadMatrixf(_ m:UnsafePointer<GLfloat>) {glLoadMatrixf_P(m)}
public func glLoadMatrixf(m:UnsafePointer<GLfloat>) {glLoadMatrixf_P(m)}
var glLoadMatrixf_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glLoadMatrixf_L
public func glLoadMatrixx(_ m:UnsafePointer<GLfixed>) {glLoadMatrixx_P(m)}
public func glLoadMatrixx(m:UnsafePointer<GLfixed>) {glLoadMatrixx_P(m)}
var glLoadMatrixx_P:@convention(c)(UnsafePointer<GLfixed>) -> Void = glLoadMatrixx_L
public func glLoadMatrixxOES(_ m:UnsafePointer<GLfixed>) {glLoadMatrixxOES_P(m)}
public func glLoadMatrixxOES(m:UnsafePointer<GLfixed>) {glLoadMatrixxOES_P(m)}
var glLoadMatrixxOES_P:@convention(c)(UnsafePointer<GLfixed>) -> Void = glLoadMatrixxOES_L
public func glLoadName(_ name:GLuint) {glLoadName_P(name)}
public func glLoadName(name:GLuint) {glLoadName_P(name)}
var glLoadName_P:@convention(c)(GLuint) -> Void = glLoadName_L
public func glLoadPaletteFromModelViewMatrixOES() {glLoadPaletteFromModelViewMatrixOES_P()}
var glLoadPaletteFromModelViewMatrixOES_P:@convention(c)() -> Void = glLoadPaletteFromModelViewMatrixOES_L
public func glLoadProgramNV(_ target:GLenum, _ id:GLuint, _ len:GLsizei, _ program:UnsafePointer<GLubyte>) {glLoadProgramNV_P(target, id, len, program)}
public func glLoadProgramNV(target:GLenum, id:GLuint, len:GLsizei, program:UnsafePointer<GLubyte>) {glLoadProgramNV_P(target, id, len, program)}
var glLoadProgramNV_P:@convention(c)(GLenum, GLuint, GLsizei, UnsafePointer<GLubyte>) -> Void = glLoadProgramNV_L
public func glLoadTransposeMatrixd(_ m:UnsafePointer<GLdouble>) {glLoadTransposeMatrixd_P(m)}
public func glLoadTransposeMatrixd(m:UnsafePointer<GLdouble>) {glLoadTransposeMatrixd_P(m)}
var glLoadTransposeMatrixd_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glLoadTransposeMatrixd_L
public func glLoadTransposeMatrixdARB(_ m:UnsafePointer<GLdouble>) {glLoadTransposeMatrixdARB_P(m)}
public func glLoadTransposeMatrixdARB(m:UnsafePointer<GLdouble>) {glLoadTransposeMatrixdARB_P(m)}
var glLoadTransposeMatrixdARB_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glLoadTransposeMatrixdARB_L
public func glLoadTransposeMatrixf(_ m:UnsafePointer<GLfloat>) {glLoadTransposeMatrixf_P(m)}
public func glLoadTransposeMatrixf(m:UnsafePointer<GLfloat>) {glLoadTransposeMatrixf_P(m)}
var glLoadTransposeMatrixf_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glLoadTransposeMatrixf_L
public func glLoadTransposeMatrixfARB(_ m:UnsafePointer<GLfloat>) {glLoadTransposeMatrixfARB_P(m)}
public func glLoadTransposeMatrixfARB(m:UnsafePointer<GLfloat>) {glLoadTransposeMatrixfARB_P(m)}
var glLoadTransposeMatrixfARB_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glLoadTransposeMatrixfARB_L
public func glLoadTransposeMatrixxOES(_ m:UnsafePointer<GLfixed>) {glLoadTransposeMatrixxOES_P(m)}
public func glLoadTransposeMatrixxOES(m:UnsafePointer<GLfixed>) {glLoadTransposeMatrixxOES_P(m)}
var glLoadTransposeMatrixxOES_P:@convention(c)(UnsafePointer<GLfixed>) -> Void = glLoadTransposeMatrixxOES_L
public func glLockArraysEXT(_ first:GLint, _ count:GLsizei) {glLockArraysEXT_P(first, count)}
public func glLockArraysEXT(first:GLint, count:GLsizei) {glLockArraysEXT_P(first, count)}
var glLockArraysEXT_P:@convention(c)(GLint, GLsizei) -> Void = glLockArraysEXT_L
public func glLogicOp(_ opcode:GLenum) {glLogicOp_P(opcode)}
public func glLogicOp(opcode:GLenum) {glLogicOp_P(opcode)}
var glLogicOp_P:@convention(c)(GLenum) -> Void = glLogicOp_L
public func glMakeBufferNonResidentNV(_ target:GLenum) {glMakeBufferNonResidentNV_P(target)}
public func glMakeBufferNonResidentNV(target:GLenum) {glMakeBufferNonResidentNV_P(target)}
var glMakeBufferNonResidentNV_P:@convention(c)(GLenum) -> Void = glMakeBufferNonResidentNV_L
public func glMakeBufferResidentNV(_ target:GLenum, _ access:GLenum) {glMakeBufferResidentNV_P(target, access)}
public func glMakeBufferResidentNV(target:GLenum, access:GLenum) {glMakeBufferResidentNV_P(target, access)}
var glMakeBufferResidentNV_P:@convention(c)(GLenum, GLenum) -> Void = glMakeBufferResidentNV_L
public func glMakeImageHandleNonResidentARB(_ handle:GLuint64) {glMakeImageHandleNonResidentARB_P(handle)}
public func glMakeImageHandleNonResidentARB(handle:GLuint64) {glMakeImageHandleNonResidentARB_P(handle)}
var glMakeImageHandleNonResidentARB_P:@convention(c)(GLuint64) -> Void = glMakeImageHandleNonResidentARB_L
public func glMakeImageHandleNonResidentNV(_ handle:GLuint64) {glMakeImageHandleNonResidentNV_P(handle)}
public func glMakeImageHandleNonResidentNV(handle:GLuint64) {glMakeImageHandleNonResidentNV_P(handle)}
var glMakeImageHandleNonResidentNV_P:@convention(c)(GLuint64) -> Void = glMakeImageHandleNonResidentNV_L
public func glMakeImageHandleResidentARB(_ handle:GLuint64, _ access:GLenum) {glMakeImageHandleResidentARB_P(handle, access)}
public func glMakeImageHandleResidentARB(handle:GLuint64, access:GLenum) {glMakeImageHandleResidentARB_P(handle, access)}
var glMakeImageHandleResidentARB_P:@convention(c)(GLuint64, GLenum) -> Void = glMakeImageHandleResidentARB_L
public func glMakeImageHandleResidentNV(_ handle:GLuint64, _ access:GLenum) {glMakeImageHandleResidentNV_P(handle, access)}
public func glMakeImageHandleResidentNV(handle:GLuint64, access:GLenum) {glMakeImageHandleResidentNV_P(handle, access)}
var glMakeImageHandleResidentNV_P:@convention(c)(GLuint64, GLenum) -> Void = glMakeImageHandleResidentNV_L
public func glMakeNamedBufferNonResidentNV(_ buffer:GLuint) {glMakeNamedBufferNonResidentNV_P(buffer)}
public func glMakeNamedBufferNonResidentNV(buffer:GLuint) {glMakeNamedBufferNonResidentNV_P(buffer)}
var glMakeNamedBufferNonResidentNV_P:@convention(c)(GLuint) -> Void = glMakeNamedBufferNonResidentNV_L
public func glMakeNamedBufferResidentNV(_ buffer:GLuint, _ access:GLenum) {glMakeNamedBufferResidentNV_P(buffer, access)}
public func glMakeNamedBufferResidentNV(buffer:GLuint, access:GLenum) {glMakeNamedBufferResidentNV_P(buffer, access)}
var glMakeNamedBufferResidentNV_P:@convention(c)(GLuint, GLenum) -> Void = glMakeNamedBufferResidentNV_L
public func glMakeTextureHandleNonResidentARB(_ handle:GLuint64) {glMakeTextureHandleNonResidentARB_P(handle)}
public func glMakeTextureHandleNonResidentARB(handle:GLuint64) {glMakeTextureHandleNonResidentARB_P(handle)}
var glMakeTextureHandleNonResidentARB_P:@convention(c)(GLuint64) -> Void = glMakeTextureHandleNonResidentARB_L
public func glMakeTextureHandleNonResidentNV(_ handle:GLuint64) {glMakeTextureHandleNonResidentNV_P(handle)}
public func glMakeTextureHandleNonResidentNV(handle:GLuint64) {glMakeTextureHandleNonResidentNV_P(handle)}
var glMakeTextureHandleNonResidentNV_P:@convention(c)(GLuint64) -> Void = glMakeTextureHandleNonResidentNV_L
public func glMakeTextureHandleResidentARB(_ handle:GLuint64) {glMakeTextureHandleResidentARB_P(handle)}
public func glMakeTextureHandleResidentARB(handle:GLuint64) {glMakeTextureHandleResidentARB_P(handle)}
var glMakeTextureHandleResidentARB_P:@convention(c)(GLuint64) -> Void = glMakeTextureHandleResidentARB_L
public func glMakeTextureHandleResidentNV(_ handle:GLuint64) {glMakeTextureHandleResidentNV_P(handle)}
public func glMakeTextureHandleResidentNV(handle:GLuint64) {glMakeTextureHandleResidentNV_P(handle)}
var glMakeTextureHandleResidentNV_P:@convention(c)(GLuint64) -> Void = glMakeTextureHandleResidentNV_L
public func glMap1d(_ target:GLenum, _ u1:GLdouble, _ u2:GLdouble, _ stride:GLint, _ order:GLint, _ points:UnsafePointer<GLdouble>) {glMap1d_P(target, u1, u2, stride, order, points)}
public func glMap1d(target:GLenum, u1:GLdouble, u2:GLdouble, stride:GLint, order:GLint, points:UnsafePointer<GLdouble>) {glMap1d_P(target, u1, u2, stride, order, points)}
var glMap1d_P:@convention(c)(GLenum, GLdouble, GLdouble, GLint, GLint, UnsafePointer<GLdouble>) -> Void = glMap1d_L
public func glMap1f(_ target:GLenum, _ u1:GLfloat, _ u2:GLfloat, _ stride:GLint, _ order:GLint, _ points:UnsafePointer<GLfloat>) {glMap1f_P(target, u1, u2, stride, order, points)}
public func glMap1f(target:GLenum, u1:GLfloat, u2:GLfloat, stride:GLint, order:GLint, points:UnsafePointer<GLfloat>) {glMap1f_P(target, u1, u2, stride, order, points)}
var glMap1f_P:@convention(c)(GLenum, GLfloat, GLfloat, GLint, GLint, UnsafePointer<GLfloat>) -> Void = glMap1f_L
public func glMap1xOES(_ target:GLenum, _ u1:GLfixed, _ u2:GLfixed, _ stride:GLint, _ order:GLint, _ points:GLfixed) {glMap1xOES_P(target, u1, u2, stride, order, points)}
public func glMap1xOES(target:GLenum, u1:GLfixed, u2:GLfixed, stride:GLint, order:GLint, points:GLfixed) {glMap1xOES_P(target, u1, u2, stride, order, points)}
var glMap1xOES_P:@convention(c)(GLenum, GLfixed, GLfixed, GLint, GLint, GLfixed) -> Void = glMap1xOES_L
public func glMap2d(_ target:GLenum, _ u1:GLdouble, _ u2:GLdouble, _ ustride:GLint, _ uorder:GLint, _ v1:GLdouble, _ v2:GLdouble, _ vstride:GLint, _ vorder:GLint, _ points:UnsafePointer<GLdouble>) {glMap2d_P(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)}
public func glMap2d(target:GLenum, u1:GLdouble, u2:GLdouble, ustride:GLint, uorder:GLint, v1:GLdouble, v2:GLdouble, vstride:GLint, vorder:GLint, points:UnsafePointer<GLdouble>) {glMap2d_P(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)}
var glMap2d_P:@convention(c)(GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, UnsafePointer<GLdouble>) -> Void = glMap2d_L
public func glMap2f(_ target:GLenum, _ u1:GLfloat, _ u2:GLfloat, _ ustride:GLint, _ uorder:GLint, _ v1:GLfloat, _ v2:GLfloat, _ vstride:GLint, _ vorder:GLint, _ points:UnsafePointer<GLfloat>) {glMap2f_P(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)}
public func glMap2f(target:GLenum, u1:GLfloat, u2:GLfloat, ustride:GLint, uorder:GLint, v1:GLfloat, v2:GLfloat, vstride:GLint, vorder:GLint, points:UnsafePointer<GLfloat>) {glMap2f_P(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)}
var glMap2f_P:@convention(c)(GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, UnsafePointer<GLfloat>) -> Void = glMap2f_L
public func glMap2xOES(_ target:GLenum, _ u1:GLfixed, _ u2:GLfixed, _ ustride:GLint, _ uorder:GLint, _ v1:GLfixed, _ v2:GLfixed, _ vstride:GLint, _ vorder:GLint, _ points:GLfixed) {glMap2xOES_P(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)}
public func glMap2xOES(target:GLenum, u1:GLfixed, u2:GLfixed, ustride:GLint, uorder:GLint, v1:GLfixed, v2:GLfixed, vstride:GLint, vorder:GLint, points:GLfixed) {glMap2xOES_P(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)}
var glMap2xOES_P:@convention(c)(GLenum, GLfixed, GLfixed, GLint, GLint, GLfixed, GLfixed, GLint, GLint, GLfixed) -> Void = glMap2xOES_L
public func glMapBuffer(_ target:GLenum, _ access:GLenum) -> UnsafeMutableRawPointer {return glMapBuffer_P(target, access)}
public func glMapBuffer(target:GLenum, access:GLenum) -> UnsafeMutableRawPointer {return glMapBuffer_P(target, access)}
var glMapBuffer_P:@convention(c)(GLenum, GLenum) -> UnsafeMutableRawPointer = glMapBuffer_L
public func glMapBufferARB(_ target:GLenum, _ access:GLenum) -> UnsafeMutableRawPointer {return glMapBufferARB_P(target, access)}
public func glMapBufferARB(target:GLenum, access:GLenum) -> UnsafeMutableRawPointer {return glMapBufferARB_P(target, access)}
var glMapBufferARB_P:@convention(c)(GLenum, GLenum) -> UnsafeMutableRawPointer = glMapBufferARB_L
public func glMapBufferOES(_ target:GLenum, _ access:GLenum) -> UnsafeMutableRawPointer {return glMapBufferOES_P(target, access)}
public func glMapBufferOES(target:GLenum, access:GLenum) -> UnsafeMutableRawPointer {return glMapBufferOES_P(target, access)}
var glMapBufferOES_P:@convention(c)(GLenum, GLenum) -> UnsafeMutableRawPointer = glMapBufferOES_L
public func glMapBufferRange(_ target:GLenum, _ offset:GLintptr, _ length:GLsizeiptr, _ access:GLbitfield) -> UnsafeMutableRawPointer {return glMapBufferRange_P(target, offset, length, access)}
public func glMapBufferRange(target:GLenum, offset:GLintptr, length:GLsizeiptr, access:GLbitfield) -> UnsafeMutableRawPointer {return glMapBufferRange_P(target, offset, length, access)}
var glMapBufferRange_P:@convention(c)(GLenum, GLintptr, GLsizeiptr, GLbitfield) -> UnsafeMutableRawPointer = glMapBufferRange_L
public func glMapBufferRangeEXT(_ target:GLenum, _ offset:GLintptr, _ length:GLsizeiptr, _ access:GLbitfield) -> UnsafeMutableRawPointer {return glMapBufferRangeEXT_P(target, offset, length, access)}
public func glMapBufferRangeEXT(target:GLenum, offset:GLintptr, length:GLsizeiptr, access:GLbitfield) -> UnsafeMutableRawPointer {return glMapBufferRangeEXT_P(target, offset, length, access)}
var glMapBufferRangeEXT_P:@convention(c)(GLenum, GLintptr, GLsizeiptr, GLbitfield) -> UnsafeMutableRawPointer = glMapBufferRangeEXT_L
public func glMapControlPointsNV(_ target:GLenum, _ index:GLuint, _ type:GLenum, _ ustride:GLsizei, _ vstride:GLsizei, _ uorder:GLint, _ vorder:GLint, _ packed:GLboolean, _ points:UnsafeRawPointer) {glMapControlPointsNV_P(target, index, type, ustride, vstride, uorder, vorder, packed, points)}
public func glMapControlPointsNV(target:GLenum, index:GLuint, type:GLenum, ustride:GLsizei, vstride:GLsizei, uorder:GLint, vorder:GLint, packed:GLboolean, points:UnsafeRawPointer) {glMapControlPointsNV_P(target, index, type, ustride, vstride, uorder, vorder, packed, points)}
var glMapControlPointsNV_P:@convention(c)(GLenum, GLuint, GLenum, GLsizei, GLsizei, GLint, GLint, GLboolean, UnsafeRawPointer) -> Void = glMapControlPointsNV_L
public func glMapGrid1d(_ un:GLint, _ u1:GLdouble, _ u2:GLdouble) {glMapGrid1d_P(un, u1, u2)}
public func glMapGrid1d(un:GLint, u1:GLdouble, u2:GLdouble) {glMapGrid1d_P(un, u1, u2)}
var glMapGrid1d_P:@convention(c)(GLint, GLdouble, GLdouble) -> Void = glMapGrid1d_L
public func glMapGrid1f(_ un:GLint, _ u1:GLfloat, _ u2:GLfloat) {glMapGrid1f_P(un, u1, u2)}
public func glMapGrid1f(un:GLint, u1:GLfloat, u2:GLfloat) {glMapGrid1f_P(un, u1, u2)}
var glMapGrid1f_P:@convention(c)(GLint, GLfloat, GLfloat) -> Void = glMapGrid1f_L
public func glMapGrid1xOES(_ n:GLint, _ u1:GLfixed, _ u2:GLfixed) {glMapGrid1xOES_P(n, u1, u2)}
public func glMapGrid1xOES(n:GLint, u1:GLfixed, u2:GLfixed) {glMapGrid1xOES_P(n, u1, u2)}
var glMapGrid1xOES_P:@convention(c)(GLint, GLfixed, GLfixed) -> Void = glMapGrid1xOES_L
public func glMapGrid2d(_ un:GLint, _ u1:GLdouble, _ u2:GLdouble, _ vn:GLint, _ v1:GLdouble, _ v2:GLdouble) {glMapGrid2d_P(un, u1, u2, vn, v1, v2)}
public func glMapGrid2d(un:GLint, u1:GLdouble, u2:GLdouble, vn:GLint, v1:GLdouble, v2:GLdouble) {glMapGrid2d_P(un, u1, u2, vn, v1, v2)}
var glMapGrid2d_P:@convention(c)(GLint, GLdouble, GLdouble, GLint, GLdouble, GLdouble) -> Void = glMapGrid2d_L
public func glMapGrid2f(_ un:GLint, _ u1:GLfloat, _ u2:GLfloat, _ vn:GLint, _ v1:GLfloat, _ v2:GLfloat) {glMapGrid2f_P(un, u1, u2, vn, v1, v2)}
public func glMapGrid2f(un:GLint, u1:GLfloat, u2:GLfloat, vn:GLint, v1:GLfloat, v2:GLfloat) {glMapGrid2f_P(un, u1, u2, vn, v1, v2)}
var glMapGrid2f_P:@convention(c)(GLint, GLfloat, GLfloat, GLint, GLfloat, GLfloat) -> Void = glMapGrid2f_L
public func glMapGrid2xOES(_ n:GLint, _ u1:GLfixed, _ u2:GLfixed, _ v1:GLfixed, _ v2:GLfixed) {glMapGrid2xOES_P(n, u1, u2, v1, v2)}
public func glMapGrid2xOES(n:GLint, u1:GLfixed, u2:GLfixed, v1:GLfixed, v2:GLfixed) {glMapGrid2xOES_P(n, u1, u2, v1, v2)}
var glMapGrid2xOES_P:@convention(c)(GLint, GLfixed, GLfixed, GLfixed, GLfixed) -> Void = glMapGrid2xOES_L
public func glMapNamedBuffer(_ buffer:GLuint, _ access:GLenum) -> UnsafeMutableRawPointer {return glMapNamedBuffer_P(buffer, access)}
public func glMapNamedBuffer(buffer:GLuint, access:GLenum) -> UnsafeMutableRawPointer {return glMapNamedBuffer_P(buffer, access)}
var glMapNamedBuffer_P:@convention(c)(GLuint, GLenum) -> UnsafeMutableRawPointer = glMapNamedBuffer_L
public func glMapNamedBufferEXT(_ buffer:GLuint, _ access:GLenum) -> UnsafeMutableRawPointer {return glMapNamedBufferEXT_P(buffer, access)}
public func glMapNamedBufferEXT(buffer:GLuint, access:GLenum) -> UnsafeMutableRawPointer {return glMapNamedBufferEXT_P(buffer, access)}
var glMapNamedBufferEXT_P:@convention(c)(GLuint, GLenum) -> UnsafeMutableRawPointer = glMapNamedBufferEXT_L
public func glMapNamedBufferRange(_ buffer:GLuint, _ offset:GLintptr, _ length:GLsizeiptr, _ access:GLbitfield) -> UnsafeMutableRawPointer {return glMapNamedBufferRange_P(buffer, offset, length, access)}
public func glMapNamedBufferRange(buffer:GLuint, offset:GLintptr, length:GLsizeiptr, access:GLbitfield) -> UnsafeMutableRawPointer {return glMapNamedBufferRange_P(buffer, offset, length, access)}
var glMapNamedBufferRange_P:@convention(c)(GLuint, GLintptr, GLsizeiptr, GLbitfield) -> UnsafeMutableRawPointer = glMapNamedBufferRange_L
public func glMapNamedBufferRangeEXT(_ buffer:GLuint, _ offset:GLintptr, _ length:GLsizeiptr, _ access:GLbitfield) -> UnsafeMutableRawPointer {return glMapNamedBufferRangeEXT_P(buffer, offset, length, access)}
public func glMapNamedBufferRangeEXT(buffer:GLuint, offset:GLintptr, length:GLsizeiptr, access:GLbitfield) -> UnsafeMutableRawPointer {return glMapNamedBufferRangeEXT_P(buffer, offset, length, access)}
var glMapNamedBufferRangeEXT_P:@convention(c)(GLuint, GLintptr, GLsizeiptr, GLbitfield) -> UnsafeMutableRawPointer = glMapNamedBufferRangeEXT_L
public func glMapObjectBufferATI(_ buffer:GLuint) -> UnsafeMutableRawPointer {return glMapObjectBufferATI_P(buffer)}
public func glMapObjectBufferATI(buffer:GLuint) -> UnsafeMutableRawPointer {return glMapObjectBufferATI_P(buffer)}
var glMapObjectBufferATI_P:@convention(c)(GLuint) -> UnsafeMutableRawPointer = glMapObjectBufferATI_L
public func glMapParameterfvNV(_ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLfloat>) {glMapParameterfvNV_P(target, pname, params)}
public func glMapParameterfvNV(target:GLenum, pname:GLenum, params:UnsafePointer<GLfloat>) {glMapParameterfvNV_P(target, pname, params)}
var glMapParameterfvNV_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLfloat>) -> Void = glMapParameterfvNV_L
public func glMapParameterivNV(_ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLint>) {glMapParameterivNV_P(target, pname, params)}
public func glMapParameterivNV(target:GLenum, pname:GLenum, params:UnsafePointer<GLint>) {glMapParameterivNV_P(target, pname, params)}
var glMapParameterivNV_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLint>) -> Void = glMapParameterivNV_L
public func glMapTexture2DINTEL(_ texture:GLuint, _ level:GLint, _ access:GLbitfield, _ stride:UnsafeMutablePointer<GLint>, _ layout:UnsafeMutablePointer<GLenum>) -> UnsafeMutableRawPointer {return glMapTexture2DINTEL_P(texture, level, access, stride, layout)}
public func glMapTexture2DINTEL(texture:GLuint, level:GLint, access:GLbitfield, stride:UnsafeMutablePointer<GLint>, layout:UnsafeMutablePointer<GLenum>) -> UnsafeMutableRawPointer {return glMapTexture2DINTEL_P(texture, level, access, stride, layout)}
var glMapTexture2DINTEL_P:@convention(c)(GLuint, GLint, GLbitfield, UnsafeMutablePointer<GLint>, UnsafeMutablePointer<GLenum>) -> UnsafeMutableRawPointer = glMapTexture2DINTEL_L
public func glMapVertexAttrib1dAPPLE(_ index:GLuint, _ size:GLuint, _ u1:GLdouble, _ u2:GLdouble, _ stride:GLint, _ order:GLint, _ points:UnsafePointer<GLdouble>) {glMapVertexAttrib1dAPPLE_P(index, size, u1, u2, stride, order, points)}
public func glMapVertexAttrib1dAPPLE(index:GLuint, size:GLuint, u1:GLdouble, u2:GLdouble, stride:GLint, order:GLint, points:UnsafePointer<GLdouble>) {glMapVertexAttrib1dAPPLE_P(index, size, u1, u2, stride, order, points)}
var glMapVertexAttrib1dAPPLE_P:@convention(c)(GLuint, GLuint, GLdouble, GLdouble, GLint, GLint, UnsafePointer<GLdouble>) -> Void = glMapVertexAttrib1dAPPLE_L
public func glMapVertexAttrib1fAPPLE(_ index:GLuint, _ size:GLuint, _ u1:GLfloat, _ u2:GLfloat, _ stride:GLint, _ order:GLint, _ points:UnsafePointer<GLfloat>) {glMapVertexAttrib1fAPPLE_P(index, size, u1, u2, stride, order, points)}
public func glMapVertexAttrib1fAPPLE(index:GLuint, size:GLuint, u1:GLfloat, u2:GLfloat, stride:GLint, order:GLint, points:UnsafePointer<GLfloat>) {glMapVertexAttrib1fAPPLE_P(index, size, u1, u2, stride, order, points)}
var glMapVertexAttrib1fAPPLE_P:@convention(c)(GLuint, GLuint, GLfloat, GLfloat, GLint, GLint, UnsafePointer<GLfloat>) -> Void = glMapVertexAttrib1fAPPLE_L
public func glMapVertexAttrib2dAPPLE(_ index:GLuint, _ size:GLuint, _ u1:GLdouble, _ u2:GLdouble, _ ustride:GLint, _ uorder:GLint, _ v1:GLdouble, _ v2:GLdouble, _ vstride:GLint, _ vorder:GLint, _ points:UnsafePointer<GLdouble>) {glMapVertexAttrib2dAPPLE_P(index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)}
public func glMapVertexAttrib2dAPPLE(index:GLuint, size:GLuint, u1:GLdouble, u2:GLdouble, ustride:GLint, uorder:GLint, v1:GLdouble, v2:GLdouble, vstride:GLint, vorder:GLint, points:UnsafePointer<GLdouble>) {glMapVertexAttrib2dAPPLE_P(index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)}
var glMapVertexAttrib2dAPPLE_P:@convention(c)(GLuint, GLuint, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, UnsafePointer<GLdouble>) -> Void = glMapVertexAttrib2dAPPLE_L
public func glMapVertexAttrib2fAPPLE(_ index:GLuint, _ size:GLuint, _ u1:GLfloat, _ u2:GLfloat, _ ustride:GLint, _ uorder:GLint, _ v1:GLfloat, _ v2:GLfloat, _ vstride:GLint, _ vorder:GLint, _ points:UnsafePointer<GLfloat>) {glMapVertexAttrib2fAPPLE_P(index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)}
public func glMapVertexAttrib2fAPPLE(index:GLuint, size:GLuint, u1:GLfloat, u2:GLfloat, ustride:GLint, uorder:GLint, v1:GLfloat, v2:GLfloat, vstride:GLint, vorder:GLint, points:UnsafePointer<GLfloat>) {glMapVertexAttrib2fAPPLE_P(index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)}
var glMapVertexAttrib2fAPPLE_P:@convention(c)(GLuint, GLuint, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, UnsafePointer<GLfloat>) -> Void = glMapVertexAttrib2fAPPLE_L
public func glMaterialf(_ face:GLenum, _ pname:GLenum, _ param:GLfloat) {glMaterialf_P(face, pname, param)}
public func glMaterialf(face:GLenum, pname:GLenum, param:GLfloat) {glMaterialf_P(face, pname, param)}
var glMaterialf_P:@convention(c)(GLenum, GLenum, GLfloat) -> Void = glMaterialf_L
public func glMaterialfv(_ face:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLfloat>) {glMaterialfv_P(face, pname, params)}
public func glMaterialfv(face:GLenum, pname:GLenum, params:UnsafePointer<GLfloat>) {glMaterialfv_P(face, pname, params)}
var glMaterialfv_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLfloat>) -> Void = glMaterialfv_L
public func glMateriali(_ face:GLenum, _ pname:GLenum, _ param:GLint) {glMateriali_P(face, pname, param)}
public func glMateriali(face:GLenum, pname:GLenum, param:GLint) {glMateriali_P(face, pname, param)}
var glMateriali_P:@convention(c)(GLenum, GLenum, GLint) -> Void = glMateriali_L
public func glMaterialiv(_ face:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLint>) {glMaterialiv_P(face, pname, params)}
public func glMaterialiv(face:GLenum, pname:GLenum, params:UnsafePointer<GLint>) {glMaterialiv_P(face, pname, params)}
var glMaterialiv_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLint>) -> Void = glMaterialiv_L
public func glMaterialx(_ face:GLenum, _ pname:GLenum, _ param:GLfixed) {glMaterialx_P(face, pname, param)}
public func glMaterialx(face:GLenum, pname:GLenum, param:GLfixed) {glMaterialx_P(face, pname, param)}
var glMaterialx_P:@convention(c)(GLenum, GLenum, GLfixed) -> Void = glMaterialx_L
public func glMaterialxOES(_ face:GLenum, _ pname:GLenum, _ param:GLfixed) {glMaterialxOES_P(face, pname, param)}
public func glMaterialxOES(face:GLenum, pname:GLenum, param:GLfixed) {glMaterialxOES_P(face, pname, param)}
var glMaterialxOES_P:@convention(c)(GLenum, GLenum, GLfixed) -> Void = glMaterialxOES_L
public func glMaterialxv(_ face:GLenum, _ pname:GLenum, _ param:UnsafePointer<GLfixed>) {glMaterialxv_P(face, pname, param)}
public func glMaterialxv(face:GLenum, pname:GLenum, param:UnsafePointer<GLfixed>) {glMaterialxv_P(face, pname, param)}
var glMaterialxv_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLfixed>) -> Void = glMaterialxv_L
public func glMaterialxvOES(_ face:GLenum, _ pname:GLenum, _ param:UnsafePointer<GLfixed>) {glMaterialxvOES_P(face, pname, param)}
public func glMaterialxvOES(face:GLenum, pname:GLenum, param:UnsafePointer<GLfixed>) {glMaterialxvOES_P(face, pname, param)}
var glMaterialxvOES_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLfixed>) -> Void = glMaterialxvOES_L
public func glMatrixFrustumEXT(_ mode:GLenum, _ left:GLdouble, _ right:GLdouble, _ bottom:GLdouble, _ top:GLdouble, _ zNear:GLdouble, _ zFar:GLdouble) {glMatrixFrustumEXT_P(mode, left, right, bottom, top, zNear, zFar)}
public func glMatrixFrustumEXT(mode:GLenum, left:GLdouble, right:GLdouble, bottom:GLdouble, top:GLdouble, zNear:GLdouble, zFar:GLdouble) {glMatrixFrustumEXT_P(mode, left, right, bottom, top, zNear, zFar)}
var glMatrixFrustumEXT_P:@convention(c)(GLenum, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble) -> Void = glMatrixFrustumEXT_L
public func glMatrixIndexPointerARB(_ size:GLint, _ type:GLenum, _ stride:GLsizei, _ pointer:UnsafeRawPointer) {glMatrixIndexPointerARB_P(size, type, stride, pointer)}
public func glMatrixIndexPointerARB(size:GLint, type:GLenum, stride:GLsizei, pointer:UnsafeRawPointer) {glMatrixIndexPointerARB_P(size, type, stride, pointer)}
var glMatrixIndexPointerARB_P:@convention(c)(GLint, GLenum, GLsizei, UnsafeRawPointer) -> Void = glMatrixIndexPointerARB_L
public func glMatrixIndexPointerOES(_ size:GLint, _ type:GLenum, _ stride:GLsizei, _ pointer:UnsafeRawPointer) {glMatrixIndexPointerOES_P(size, type, stride, pointer)}
public func glMatrixIndexPointerOES(size:GLint, type:GLenum, stride:GLsizei, pointer:UnsafeRawPointer) {glMatrixIndexPointerOES_P(size, type, stride, pointer)}
var glMatrixIndexPointerOES_P:@convention(c)(GLint, GLenum, GLsizei, UnsafeRawPointer) -> Void = glMatrixIndexPointerOES_L
public func glMatrixIndexubvARB(_ size:GLint, _ indices:UnsafePointer<GLubyte>) {glMatrixIndexubvARB_P(size, indices)}
public func glMatrixIndexubvARB(size:GLint, indices:UnsafePointer<GLubyte>) {glMatrixIndexubvARB_P(size, indices)}
var glMatrixIndexubvARB_P:@convention(c)(GLint, UnsafePointer<GLubyte>) -> Void = glMatrixIndexubvARB_L
public func glMatrixIndexuivARB(_ size:GLint, _ indices:UnsafePointer<GLuint>) {glMatrixIndexuivARB_P(size, indices)}
public func glMatrixIndexuivARB(size:GLint, indices:UnsafePointer<GLuint>) {glMatrixIndexuivARB_P(size, indices)}
var glMatrixIndexuivARB_P:@convention(c)(GLint, UnsafePointer<GLuint>) -> Void = glMatrixIndexuivARB_L
public func glMatrixIndexusvARB(_ size:GLint, _ indices:UnsafePointer<GLushort>) {glMatrixIndexusvARB_P(size, indices)}
public func glMatrixIndexusvARB(size:GLint, indices:UnsafePointer<GLushort>) {glMatrixIndexusvARB_P(size, indices)}
var glMatrixIndexusvARB_P:@convention(c)(GLint, UnsafePointer<GLushort>) -> Void = glMatrixIndexusvARB_L
public func glMatrixLoad3x2fNV(_ matrixMode:GLenum, _ m:UnsafePointer<GLfloat>) {glMatrixLoad3x2fNV_P(matrixMode, m)}
public func glMatrixLoad3x2fNV(matrixMode:GLenum, m:UnsafePointer<GLfloat>) {glMatrixLoad3x2fNV_P(matrixMode, m)}
var glMatrixLoad3x2fNV_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glMatrixLoad3x2fNV_L
public func glMatrixLoad3x3fNV(_ matrixMode:GLenum, _ m:UnsafePointer<GLfloat>) {glMatrixLoad3x3fNV_P(matrixMode, m)}
public func glMatrixLoad3x3fNV(matrixMode:GLenum, m:UnsafePointer<GLfloat>) {glMatrixLoad3x3fNV_P(matrixMode, m)}
var glMatrixLoad3x3fNV_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glMatrixLoad3x3fNV_L
public func glMatrixLoadIdentityEXT(_ mode:GLenum) {glMatrixLoadIdentityEXT_P(mode)}
public func glMatrixLoadIdentityEXT(mode:GLenum) {glMatrixLoadIdentityEXT_P(mode)}
var glMatrixLoadIdentityEXT_P:@convention(c)(GLenum) -> Void = glMatrixLoadIdentityEXT_L
public func glMatrixLoadTranspose3x3fNV(_ matrixMode:GLenum, _ m:UnsafePointer<GLfloat>) {glMatrixLoadTranspose3x3fNV_P(matrixMode, m)}
public func glMatrixLoadTranspose3x3fNV(matrixMode:GLenum, m:UnsafePointer<GLfloat>) {glMatrixLoadTranspose3x3fNV_P(matrixMode, m)}
var glMatrixLoadTranspose3x3fNV_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glMatrixLoadTranspose3x3fNV_L
public func glMatrixLoadTransposedEXT(_ mode:GLenum, _ m:UnsafePointer<GLdouble>) {glMatrixLoadTransposedEXT_P(mode, m)}
public func glMatrixLoadTransposedEXT(mode:GLenum, m:UnsafePointer<GLdouble>) {glMatrixLoadTransposedEXT_P(mode, m)}
var glMatrixLoadTransposedEXT_P:@convention(c)(GLenum, UnsafePointer<GLdouble>) -> Void = glMatrixLoadTransposedEXT_L
public func glMatrixLoadTransposefEXT(_ mode:GLenum, _ m:UnsafePointer<GLfloat>) {glMatrixLoadTransposefEXT_P(mode, m)}
public func glMatrixLoadTransposefEXT(mode:GLenum, m:UnsafePointer<GLfloat>) {glMatrixLoadTransposefEXT_P(mode, m)}
var glMatrixLoadTransposefEXT_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glMatrixLoadTransposefEXT_L
public func glMatrixLoaddEXT(_ mode:GLenum, _ m:UnsafePointer<GLdouble>) {glMatrixLoaddEXT_P(mode, m)}
public func glMatrixLoaddEXT(mode:GLenum, m:UnsafePointer<GLdouble>) {glMatrixLoaddEXT_P(mode, m)}
var glMatrixLoaddEXT_P:@convention(c)(GLenum, UnsafePointer<GLdouble>) -> Void = glMatrixLoaddEXT_L
public func glMatrixLoadfEXT(_ mode:GLenum, _ m:UnsafePointer<GLfloat>) {glMatrixLoadfEXT_P(mode, m)}
public func glMatrixLoadfEXT(mode:GLenum, m:UnsafePointer<GLfloat>) {glMatrixLoadfEXT_P(mode, m)}
var glMatrixLoadfEXT_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glMatrixLoadfEXT_L
public func glMatrixMode(_ mode:GLenum) {glMatrixMode_P(mode)}
public func glMatrixMode(mode:GLenum) {glMatrixMode_P(mode)}
var glMatrixMode_P:@convention(c)(GLenum) -> Void = glMatrixMode_L
public func glMatrixMult3x2fNV(_ matrixMode:GLenum, _ m:UnsafePointer<GLfloat>) {glMatrixMult3x2fNV_P(matrixMode, m)}
public func glMatrixMult3x2fNV(matrixMode:GLenum, m:UnsafePointer<GLfloat>) {glMatrixMult3x2fNV_P(matrixMode, m)}
var glMatrixMult3x2fNV_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glMatrixMult3x2fNV_L
public func glMatrixMult3x3fNV(_ matrixMode:GLenum, _ m:UnsafePointer<GLfloat>) {glMatrixMult3x3fNV_P(matrixMode, m)}
public func glMatrixMult3x3fNV(matrixMode:GLenum, m:UnsafePointer<GLfloat>) {glMatrixMult3x3fNV_P(matrixMode, m)}
var glMatrixMult3x3fNV_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glMatrixMult3x3fNV_L
public func glMatrixMultTranspose3x3fNV(_ matrixMode:GLenum, _ m:UnsafePointer<GLfloat>) {glMatrixMultTranspose3x3fNV_P(matrixMode, m)}
public func glMatrixMultTranspose3x3fNV(matrixMode:GLenum, m:UnsafePointer<GLfloat>) {glMatrixMultTranspose3x3fNV_P(matrixMode, m)}
var glMatrixMultTranspose3x3fNV_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glMatrixMultTranspose3x3fNV_L
public func glMatrixMultTransposedEXT(_ mode:GLenum, _ m:UnsafePointer<GLdouble>) {glMatrixMultTransposedEXT_P(mode, m)}
public func glMatrixMultTransposedEXT(mode:GLenum, m:UnsafePointer<GLdouble>) {glMatrixMultTransposedEXT_P(mode, m)}
var glMatrixMultTransposedEXT_P:@convention(c)(GLenum, UnsafePointer<GLdouble>) -> Void = glMatrixMultTransposedEXT_L
public func glMatrixMultTransposefEXT(_ mode:GLenum, _ m:UnsafePointer<GLfloat>) {glMatrixMultTransposefEXT_P(mode, m)}
public func glMatrixMultTransposefEXT(mode:GLenum, m:UnsafePointer<GLfloat>) {glMatrixMultTransposefEXT_P(mode, m)}
var glMatrixMultTransposefEXT_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glMatrixMultTransposefEXT_L
public func glMatrixMultdEXT(_ mode:GLenum, _ m:UnsafePointer<GLdouble>) {glMatrixMultdEXT_P(mode, m)}
public func glMatrixMultdEXT(mode:GLenum, m:UnsafePointer<GLdouble>) {glMatrixMultdEXT_P(mode, m)}
var glMatrixMultdEXT_P:@convention(c)(GLenum, UnsafePointer<GLdouble>) -> Void = glMatrixMultdEXT_L
public func glMatrixMultfEXT(_ mode:GLenum, _ m:UnsafePointer<GLfloat>) {glMatrixMultfEXT_P(mode, m)}
public func glMatrixMultfEXT(mode:GLenum, m:UnsafePointer<GLfloat>) {glMatrixMultfEXT_P(mode, m)}
var glMatrixMultfEXT_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glMatrixMultfEXT_L
public func glMatrixOrthoEXT(_ mode:GLenum, _ left:GLdouble, _ right:GLdouble, _ bottom:GLdouble, _ top:GLdouble, _ zNear:GLdouble, _ zFar:GLdouble) {glMatrixOrthoEXT_P(mode, left, right, bottom, top, zNear, zFar)}
public func glMatrixOrthoEXT(mode:GLenum, left:GLdouble, right:GLdouble, bottom:GLdouble, top:GLdouble, zNear:GLdouble, zFar:GLdouble) {glMatrixOrthoEXT_P(mode, left, right, bottom, top, zNear, zFar)}
var glMatrixOrthoEXT_P:@convention(c)(GLenum, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble) -> Void = glMatrixOrthoEXT_L
public func glMatrixPopEXT(_ mode:GLenum) {glMatrixPopEXT_P(mode)}
public func glMatrixPopEXT(mode:GLenum) {glMatrixPopEXT_P(mode)}
var glMatrixPopEXT_P:@convention(c)(GLenum) -> Void = glMatrixPopEXT_L
public func glMatrixPushEXT(_ mode:GLenum) {glMatrixPushEXT_P(mode)}
public func glMatrixPushEXT(mode:GLenum) {glMatrixPushEXT_P(mode)}
var glMatrixPushEXT_P:@convention(c)(GLenum) -> Void = glMatrixPushEXT_L
public func glMatrixRotatedEXT(_ mode:GLenum, _ angle:GLdouble, _ x:GLdouble, _ y:GLdouble, _ z:GLdouble) {glMatrixRotatedEXT_P(mode, angle, x, y, z)}
public func glMatrixRotatedEXT(mode:GLenum, angle:GLdouble, x:GLdouble, y:GLdouble, z:GLdouble) {glMatrixRotatedEXT_P(mode, angle, x, y, z)}
var glMatrixRotatedEXT_P:@convention(c)(GLenum, GLdouble, GLdouble, GLdouble, GLdouble) -> Void = glMatrixRotatedEXT_L
public func glMatrixRotatefEXT(_ mode:GLenum, _ angle:GLfloat, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat) {glMatrixRotatefEXT_P(mode, angle, x, y, z)}
public func glMatrixRotatefEXT(mode:GLenum, angle:GLfloat, x:GLfloat, y:GLfloat, z:GLfloat) {glMatrixRotatefEXT_P(mode, angle, x, y, z)}
var glMatrixRotatefEXT_P:@convention(c)(GLenum, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glMatrixRotatefEXT_L
public func glMatrixScaledEXT(_ mode:GLenum, _ x:GLdouble, _ y:GLdouble, _ z:GLdouble) {glMatrixScaledEXT_P(mode, x, y, z)}
public func glMatrixScaledEXT(mode:GLenum, x:GLdouble, y:GLdouble, z:GLdouble) {glMatrixScaledEXT_P(mode, x, y, z)}
var glMatrixScaledEXT_P:@convention(c)(GLenum, GLdouble, GLdouble, GLdouble) -> Void = glMatrixScaledEXT_L
public func glMatrixScalefEXT(_ mode:GLenum, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat) {glMatrixScalefEXT_P(mode, x, y, z)}
public func glMatrixScalefEXT(mode:GLenum, x:GLfloat, y:GLfloat, z:GLfloat) {glMatrixScalefEXT_P(mode, x, y, z)}
var glMatrixScalefEXT_P:@convention(c)(GLenum, GLfloat, GLfloat, GLfloat) -> Void = glMatrixScalefEXT_L
public func glMatrixTranslatedEXT(_ mode:GLenum, _ x:GLdouble, _ y:GLdouble, _ z:GLdouble) {glMatrixTranslatedEXT_P(mode, x, y, z)}
public func glMatrixTranslatedEXT(mode:GLenum, x:GLdouble, y:GLdouble, z:GLdouble) {glMatrixTranslatedEXT_P(mode, x, y, z)}
var glMatrixTranslatedEXT_P:@convention(c)(GLenum, GLdouble, GLdouble, GLdouble) -> Void = glMatrixTranslatedEXT_L
public func glMatrixTranslatefEXT(_ mode:GLenum, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat) {glMatrixTranslatefEXT_P(mode, x, y, z)}
public func glMatrixTranslatefEXT(mode:GLenum, x:GLfloat, y:GLfloat, z:GLfloat) {glMatrixTranslatefEXT_P(mode, x, y, z)}
var glMatrixTranslatefEXT_P:@convention(c)(GLenum, GLfloat, GLfloat, GLfloat) -> Void = glMatrixTranslatefEXT_L
public func glMaxShaderCompilerThreadsARB(_ count:GLuint) {glMaxShaderCompilerThreadsARB_P(count)}
public func glMaxShaderCompilerThreadsARB(count:GLuint) {glMaxShaderCompilerThreadsARB_P(count)}
var glMaxShaderCompilerThreadsARB_P:@convention(c)(GLuint) -> Void = glMaxShaderCompilerThreadsARB_L
public func glMemoryBarrier(_ barriers:GLbitfield) {glMemoryBarrier_P(barriers)}
public func glMemoryBarrier(barriers:GLbitfield) {glMemoryBarrier_P(barriers)}
var glMemoryBarrier_P:@convention(c)(GLbitfield) -> Void = glMemoryBarrier_L
public func glMemoryBarrierByRegion(_ barriers:GLbitfield) {glMemoryBarrierByRegion_P(barriers)}
public func glMemoryBarrierByRegion(barriers:GLbitfield) {glMemoryBarrierByRegion_P(barriers)}
var glMemoryBarrierByRegion_P:@convention(c)(GLbitfield) -> Void = glMemoryBarrierByRegion_L
public func glMemoryBarrierEXT(_ barriers:GLbitfield) {glMemoryBarrierEXT_P(barriers)}
public func glMemoryBarrierEXT(barriers:GLbitfield) {glMemoryBarrierEXT_P(barriers)}
var glMemoryBarrierEXT_P:@convention(c)(GLbitfield) -> Void = glMemoryBarrierEXT_L
public func glMinSampleShading(_ value:GLfloat) {glMinSampleShading_P(value)}
public func glMinSampleShading(value:GLfloat) {glMinSampleShading_P(value)}
var glMinSampleShading_P:@convention(c)(GLfloat) -> Void = glMinSampleShading_L
public func glMinSampleShadingARB(_ value:GLfloat) {glMinSampleShadingARB_P(value)}
public func glMinSampleShadingARB(value:GLfloat) {glMinSampleShadingARB_P(value)}
var glMinSampleShadingARB_P:@convention(c)(GLfloat) -> Void = glMinSampleShadingARB_L
public func glMinSampleShadingOES(_ value:GLfloat) {glMinSampleShadingOES_P(value)}
public func glMinSampleShadingOES(value:GLfloat) {glMinSampleShadingOES_P(value)}
var glMinSampleShadingOES_P:@convention(c)(GLfloat) -> Void = glMinSampleShadingOES_L
public func glMinmax(_ target:GLenum, _ internalformat:GLenum, _ sink:GLboolean) {glMinmax_P(target, internalformat, sink)}
public func glMinmax(target:GLenum, internalformat:GLenum, sink:GLboolean) {glMinmax_P(target, internalformat, sink)}
var glMinmax_P:@convention(c)(GLenum, GLenum, GLboolean) -> Void = glMinmax_L
public func glMinmaxEXT(_ target:GLenum, _ internalformat:GLenum, _ sink:GLboolean) {glMinmaxEXT_P(target, internalformat, sink)}
public func glMinmaxEXT(target:GLenum, internalformat:GLenum, sink:GLboolean) {glMinmaxEXT_P(target, internalformat, sink)}
var glMinmaxEXT_P:@convention(c)(GLenum, GLenum, GLboolean) -> Void = glMinmaxEXT_L
public func glMultMatrixd(_ m:UnsafePointer<GLdouble>) {glMultMatrixd_P(m)}
public func glMultMatrixd(m:UnsafePointer<GLdouble>) {glMultMatrixd_P(m)}
var glMultMatrixd_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glMultMatrixd_L
public func glMultMatrixf(_ m:UnsafePointer<GLfloat>) {glMultMatrixf_P(m)}
public func glMultMatrixf(m:UnsafePointer<GLfloat>) {glMultMatrixf_P(m)}
var glMultMatrixf_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glMultMatrixf_L
public func glMultMatrixx(_ m:UnsafePointer<GLfixed>) {glMultMatrixx_P(m)}
public func glMultMatrixx(m:UnsafePointer<GLfixed>) {glMultMatrixx_P(m)}
var glMultMatrixx_P:@convention(c)(UnsafePointer<GLfixed>) -> Void = glMultMatrixx_L
public func glMultMatrixxOES(_ m:UnsafePointer<GLfixed>) {glMultMatrixxOES_P(m)}
public func glMultMatrixxOES(m:UnsafePointer<GLfixed>) {glMultMatrixxOES_P(m)}
var glMultMatrixxOES_P:@convention(c)(UnsafePointer<GLfixed>) -> Void = glMultMatrixxOES_L
public func glMultTransposeMatrixd(_ m:UnsafePointer<GLdouble>) {glMultTransposeMatrixd_P(m)}
public func glMultTransposeMatrixd(m:UnsafePointer<GLdouble>) {glMultTransposeMatrixd_P(m)}
var glMultTransposeMatrixd_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glMultTransposeMatrixd_L
public func glMultTransposeMatrixdARB(_ m:UnsafePointer<GLdouble>) {glMultTransposeMatrixdARB_P(m)}
public func glMultTransposeMatrixdARB(m:UnsafePointer<GLdouble>) {glMultTransposeMatrixdARB_P(m)}
var glMultTransposeMatrixdARB_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glMultTransposeMatrixdARB_L
public func glMultTransposeMatrixf(_ m:UnsafePointer<GLfloat>) {glMultTransposeMatrixf_P(m)}
public func glMultTransposeMatrixf(m:UnsafePointer<GLfloat>) {glMultTransposeMatrixf_P(m)}
var glMultTransposeMatrixf_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glMultTransposeMatrixf_L
public func glMultTransposeMatrixfARB(_ m:UnsafePointer<GLfloat>) {glMultTransposeMatrixfARB_P(m)}
public func glMultTransposeMatrixfARB(m:UnsafePointer<GLfloat>) {glMultTransposeMatrixfARB_P(m)}
var glMultTransposeMatrixfARB_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glMultTransposeMatrixfARB_L
public func glMultTransposeMatrixxOES(_ m:UnsafePointer<GLfixed>) {glMultTransposeMatrixxOES_P(m)}
public func glMultTransposeMatrixxOES(m:UnsafePointer<GLfixed>) {glMultTransposeMatrixxOES_P(m)}
var glMultTransposeMatrixxOES_P:@convention(c)(UnsafePointer<GLfixed>) -> Void = glMultTransposeMatrixxOES_L
public func glMultiDrawArrays(_ mode:GLenum, _ first:UnsafePointer<GLint>, _ count:UnsafePointer<GLsizei>, _ drawcount:GLsizei) {glMultiDrawArrays_P(mode, first, count, drawcount)}
public func glMultiDrawArrays(mode:GLenum, first:UnsafePointer<GLint>, count:UnsafePointer<GLsizei>, drawcount:GLsizei) {glMultiDrawArrays_P(mode, first, count, drawcount)}
var glMultiDrawArrays_P:@convention(c)(GLenum, UnsafePointer<GLint>, UnsafePointer<GLsizei>, GLsizei) -> Void = glMultiDrawArrays_L
public func glMultiDrawArraysEXT(_ mode:GLenum, _ first:UnsafePointer<GLint>, _ count:UnsafePointer<GLsizei>, _ primcount:GLsizei) {glMultiDrawArraysEXT_P(mode, first, count, primcount)}
public func glMultiDrawArraysEXT(mode:GLenum, first:UnsafePointer<GLint>, count:UnsafePointer<GLsizei>, primcount:GLsizei) {glMultiDrawArraysEXT_P(mode, first, count, primcount)}
var glMultiDrawArraysEXT_P:@convention(c)(GLenum, UnsafePointer<GLint>, UnsafePointer<GLsizei>, GLsizei) -> Void = glMultiDrawArraysEXT_L
public func glMultiDrawArraysIndirect(_ mode:GLenum, _ indirect:UnsafeRawPointer, _ drawcount:GLsizei, _ stride:GLsizei) {glMultiDrawArraysIndirect_P(mode, indirect, drawcount, stride)}
public func glMultiDrawArraysIndirect(mode:GLenum, indirect:UnsafeRawPointer, drawcount:GLsizei, stride:GLsizei) {glMultiDrawArraysIndirect_P(mode, indirect, drawcount, stride)}
var glMultiDrawArraysIndirect_P:@convention(c)(GLenum, UnsafeRawPointer, GLsizei, GLsizei) -> Void = glMultiDrawArraysIndirect_L
public func glMultiDrawArraysIndirectAMD(_ mode:GLenum, _ indirect:UnsafeRawPointer, _ primcount:GLsizei, _ stride:GLsizei) {glMultiDrawArraysIndirectAMD_P(mode, indirect, primcount, stride)}
public func glMultiDrawArraysIndirectAMD(mode:GLenum, indirect:UnsafeRawPointer, primcount:GLsizei, stride:GLsizei) {glMultiDrawArraysIndirectAMD_P(mode, indirect, primcount, stride)}
var glMultiDrawArraysIndirectAMD_P:@convention(c)(GLenum, UnsafeRawPointer, GLsizei, GLsizei) -> Void = glMultiDrawArraysIndirectAMD_L
public func glMultiDrawArraysIndirectBindlessCountNV(_ mode:GLenum, _ indirect:UnsafeRawPointer, _ drawCount:GLsizei, _ maxDrawCount:GLsizei, _ stride:GLsizei, _ vertexBufferCount:GLint) {glMultiDrawArraysIndirectBindlessCountNV_P(mode, indirect, drawCount, maxDrawCount, stride, vertexBufferCount)}
public func glMultiDrawArraysIndirectBindlessCountNV(mode:GLenum, indirect:UnsafeRawPointer, drawCount:GLsizei, maxDrawCount:GLsizei, stride:GLsizei, vertexBufferCount:GLint) {glMultiDrawArraysIndirectBindlessCountNV_P(mode, indirect, drawCount, maxDrawCount, stride, vertexBufferCount)}
var glMultiDrawArraysIndirectBindlessCountNV_P:@convention(c)(GLenum, UnsafeRawPointer, GLsizei, GLsizei, GLsizei, GLint) -> Void = glMultiDrawArraysIndirectBindlessCountNV_L
public func glMultiDrawArraysIndirectBindlessNV(_ mode:GLenum, _ indirect:UnsafeRawPointer, _ drawCount:GLsizei, _ stride:GLsizei, _ vertexBufferCount:GLint) {glMultiDrawArraysIndirectBindlessNV_P(mode, indirect, drawCount, stride, vertexBufferCount)}
public func glMultiDrawArraysIndirectBindlessNV(mode:GLenum, indirect:UnsafeRawPointer, drawCount:GLsizei, stride:GLsizei, vertexBufferCount:GLint) {glMultiDrawArraysIndirectBindlessNV_P(mode, indirect, drawCount, stride, vertexBufferCount)}
var glMultiDrawArraysIndirectBindlessNV_P:@convention(c)(GLenum, UnsafeRawPointer, GLsizei, GLsizei, GLint) -> Void = glMultiDrawArraysIndirectBindlessNV_L
public func glMultiDrawArraysIndirectCountARB(_ mode:GLenum, _ indirect:GLintptr, _ drawcount:GLintptr, _ maxdrawcount:GLsizei, _ stride:GLsizei) {glMultiDrawArraysIndirectCountARB_P(mode, indirect, drawcount, maxdrawcount, stride)}
public func glMultiDrawArraysIndirectCountARB(mode:GLenum, indirect:GLintptr, drawcount:GLintptr, maxdrawcount:GLsizei, stride:GLsizei) {glMultiDrawArraysIndirectCountARB_P(mode, indirect, drawcount, maxdrawcount, stride)}
var glMultiDrawArraysIndirectCountARB_P:@convention(c)(GLenum, GLintptr, GLintptr, GLsizei, GLsizei) -> Void = glMultiDrawArraysIndirectCountARB_L
public func glMultiDrawArraysIndirectEXT(_ mode:GLenum, _ indirect:UnsafeRawPointer, _ drawcount:GLsizei, _ stride:GLsizei) {glMultiDrawArraysIndirectEXT_P(mode, indirect, drawcount, stride)}
public func glMultiDrawArraysIndirectEXT(mode:GLenum, indirect:UnsafeRawPointer, drawcount:GLsizei, stride:GLsizei) {glMultiDrawArraysIndirectEXT_P(mode, indirect, drawcount, stride)}
var glMultiDrawArraysIndirectEXT_P:@convention(c)(GLenum, UnsafeRawPointer, GLsizei, GLsizei) -> Void = glMultiDrawArraysIndirectEXT_L
public func glMultiDrawElementArrayAPPLE(_ mode:GLenum, _ first:UnsafePointer<GLint>, _ count:UnsafePointer<GLsizei>, _ primcount:GLsizei) {glMultiDrawElementArrayAPPLE_P(mode, first, count, primcount)}
public func glMultiDrawElementArrayAPPLE(mode:GLenum, first:UnsafePointer<GLint>, count:UnsafePointer<GLsizei>, primcount:GLsizei) {glMultiDrawElementArrayAPPLE_P(mode, first, count, primcount)}
var glMultiDrawElementArrayAPPLE_P:@convention(c)(GLenum, UnsafePointer<GLint>, UnsafePointer<GLsizei>, GLsizei) -> Void = glMultiDrawElementArrayAPPLE_L
public func glMultiDrawElements(_ mode:GLenum, _ count:UnsafePointer<GLsizei>, _ type:GLenum, _ indices:UnsafePointer<UnsafeRawPointer>, _ drawcount:GLsizei) {glMultiDrawElements_P(mode, count, type, indices, drawcount)}
public func glMultiDrawElements(mode:GLenum, count:UnsafePointer<GLsizei>, type:GLenum, indices:UnsafePointer<UnsafeRawPointer>, drawcount:GLsizei) {glMultiDrawElements_P(mode, count, type, indices, drawcount)}
var glMultiDrawElements_P:@convention(c)(GLenum, UnsafePointer<GLsizei>, GLenum, UnsafePointer<UnsafeRawPointer>, GLsizei) -> Void = glMultiDrawElements_L
public func glMultiDrawElementsBaseVertex(_ mode:GLenum, _ count:UnsafePointer<GLsizei>, _ type:GLenum, _ indices:UnsafePointer<UnsafeRawPointer>, _ drawcount:GLsizei, _ basevertex:UnsafePointer<GLint>) {glMultiDrawElementsBaseVertex_P(mode, count, type, indices, drawcount, basevertex)}
public func glMultiDrawElementsBaseVertex(mode:GLenum, count:UnsafePointer<GLsizei>, type:GLenum, indices:UnsafePointer<UnsafeRawPointer>, drawcount:GLsizei, basevertex:UnsafePointer<GLint>) {glMultiDrawElementsBaseVertex_P(mode, count, type, indices, drawcount, basevertex)}
var glMultiDrawElementsBaseVertex_P:@convention(c)(GLenum, UnsafePointer<GLsizei>, GLenum, UnsafePointer<UnsafeRawPointer>, GLsizei, UnsafePointer<GLint>) -> Void = glMultiDrawElementsBaseVertex_L
public func glMultiDrawElementsBaseVertexEXT(_ mode:GLenum, _ count:UnsafePointer<GLsizei>, _ type:GLenum, _ indices:UnsafePointer<UnsafeRawPointer>, _ primcount:GLsizei, _ basevertex:UnsafePointer<GLint>) {glMultiDrawElementsBaseVertexEXT_P(mode, count, type, indices, primcount, basevertex)}
public func glMultiDrawElementsBaseVertexEXT(mode:GLenum, count:UnsafePointer<GLsizei>, type:GLenum, indices:UnsafePointer<UnsafeRawPointer>, primcount:GLsizei, basevertex:UnsafePointer<GLint>) {glMultiDrawElementsBaseVertexEXT_P(mode, count, type, indices, primcount, basevertex)}
var glMultiDrawElementsBaseVertexEXT_P:@convention(c)(GLenum, UnsafePointer<GLsizei>, GLenum, UnsafePointer<UnsafeRawPointer>, GLsizei, UnsafePointer<GLint>) -> Void = glMultiDrawElementsBaseVertexEXT_L
public func glMultiDrawElementsBaseVertexOES(_ mode:GLenum, _ count:UnsafePointer<GLsizei>, _ type:GLenum, _ indices:UnsafePointer<UnsafeRawPointer>, _ primcount:GLsizei, _ basevertex:UnsafePointer<GLint>) {glMultiDrawElementsBaseVertexOES_P(mode, count, type, indices, primcount, basevertex)}
public func glMultiDrawElementsBaseVertexOES(mode:GLenum, count:UnsafePointer<GLsizei>, type:GLenum, indices:UnsafePointer<UnsafeRawPointer>, primcount:GLsizei, basevertex:UnsafePointer<GLint>) {glMultiDrawElementsBaseVertexOES_P(mode, count, type, indices, primcount, basevertex)}
var glMultiDrawElementsBaseVertexOES_P:@convention(c)(GLenum, UnsafePointer<GLsizei>, GLenum, UnsafePointer<UnsafeRawPointer>, GLsizei, UnsafePointer<GLint>) -> Void = glMultiDrawElementsBaseVertexOES_L
public func glMultiDrawElementsEXT(_ mode:GLenum, _ count:UnsafePointer<GLsizei>, _ type:GLenum, _ indices:UnsafePointer<UnsafeRawPointer>, _ primcount:GLsizei) {glMultiDrawElementsEXT_P(mode, count, type, indices, primcount)}
public func glMultiDrawElementsEXT(mode:GLenum, count:UnsafePointer<GLsizei>, type:GLenum, indices:UnsafePointer<UnsafeRawPointer>, primcount:GLsizei) {glMultiDrawElementsEXT_P(mode, count, type, indices, primcount)}
var glMultiDrawElementsEXT_P:@convention(c)(GLenum, UnsafePointer<GLsizei>, GLenum, UnsafePointer<UnsafeRawPointer>, GLsizei) -> Void = glMultiDrawElementsEXT_L
public func glMultiDrawElementsIndirect(_ mode:GLenum, _ type:GLenum, _ indirect:UnsafeRawPointer, _ drawcount:GLsizei, _ stride:GLsizei) {glMultiDrawElementsIndirect_P(mode, type, indirect, drawcount, stride)}
public func glMultiDrawElementsIndirect(mode:GLenum, type:GLenum, indirect:UnsafeRawPointer, drawcount:GLsizei, stride:GLsizei) {glMultiDrawElementsIndirect_P(mode, type, indirect, drawcount, stride)}
var glMultiDrawElementsIndirect_P:@convention(c)(GLenum, GLenum, UnsafeRawPointer, GLsizei, GLsizei) -> Void = glMultiDrawElementsIndirect_L
public func glMultiDrawElementsIndirectAMD(_ mode:GLenum, _ type:GLenum, _ indirect:UnsafeRawPointer, _ primcount:GLsizei, _ stride:GLsizei) {glMultiDrawElementsIndirectAMD_P(mode, type, indirect, primcount, stride)}
public func glMultiDrawElementsIndirectAMD(mode:GLenum, type:GLenum, indirect:UnsafeRawPointer, primcount:GLsizei, stride:GLsizei) {glMultiDrawElementsIndirectAMD_P(mode, type, indirect, primcount, stride)}
var glMultiDrawElementsIndirectAMD_P:@convention(c)(GLenum, GLenum, UnsafeRawPointer, GLsizei, GLsizei) -> Void = glMultiDrawElementsIndirectAMD_L
public func glMultiDrawElementsIndirectBindlessCountNV(_ mode:GLenum, _ type:GLenum, _ indirect:UnsafeRawPointer, _ drawCount:GLsizei, _ maxDrawCount:GLsizei, _ stride:GLsizei, _ vertexBufferCount:GLint) {glMultiDrawElementsIndirectBindlessCountNV_P(mode, type, indirect, drawCount, maxDrawCount, stride, vertexBufferCount)}
public func glMultiDrawElementsIndirectBindlessCountNV(mode:GLenum, type:GLenum, indirect:UnsafeRawPointer, drawCount:GLsizei, maxDrawCount:GLsizei, stride:GLsizei, vertexBufferCount:GLint) {glMultiDrawElementsIndirectBindlessCountNV_P(mode, type, indirect, drawCount, maxDrawCount, stride, vertexBufferCount)}
var glMultiDrawElementsIndirectBindlessCountNV_P:@convention(c)(GLenum, GLenum, UnsafeRawPointer, GLsizei, GLsizei, GLsizei, GLint) -> Void = glMultiDrawElementsIndirectBindlessCountNV_L
public func glMultiDrawElementsIndirectBindlessNV(_ mode:GLenum, _ type:GLenum, _ indirect:UnsafeRawPointer, _ drawCount:GLsizei, _ stride:GLsizei, _ vertexBufferCount:GLint) {glMultiDrawElementsIndirectBindlessNV_P(mode, type, indirect, drawCount, stride, vertexBufferCount)}
public func glMultiDrawElementsIndirectBindlessNV(mode:GLenum, type:GLenum, indirect:UnsafeRawPointer, drawCount:GLsizei, stride:GLsizei, vertexBufferCount:GLint) {glMultiDrawElementsIndirectBindlessNV_P(mode, type, indirect, drawCount, stride, vertexBufferCount)}
var glMultiDrawElementsIndirectBindlessNV_P:@convention(c)(GLenum, GLenum, UnsafeRawPointer, GLsizei, GLsizei, GLint) -> Void = glMultiDrawElementsIndirectBindlessNV_L
public func glMultiDrawElementsIndirectCountARB(_ mode:GLenum, _ type:GLenum, _ indirect:GLintptr, _ drawcount:GLintptr, _ maxdrawcount:GLsizei, _ stride:GLsizei) {glMultiDrawElementsIndirectCountARB_P(mode, type, indirect, drawcount, maxdrawcount, stride)}
public func glMultiDrawElementsIndirectCountARB(mode:GLenum, type:GLenum, indirect:GLintptr, drawcount:GLintptr, maxdrawcount:GLsizei, stride:GLsizei) {glMultiDrawElementsIndirectCountARB_P(mode, type, indirect, drawcount, maxdrawcount, stride)}
var glMultiDrawElementsIndirectCountARB_P:@convention(c)(GLenum, GLenum, GLintptr, GLintptr, GLsizei, GLsizei) -> Void = glMultiDrawElementsIndirectCountARB_L
public func glMultiDrawElementsIndirectEXT(_ mode:GLenum, _ type:GLenum, _ indirect:UnsafeRawPointer, _ drawcount:GLsizei, _ stride:GLsizei) {glMultiDrawElementsIndirectEXT_P(mode, type, indirect, drawcount, stride)}
public func glMultiDrawElementsIndirectEXT(mode:GLenum, type:GLenum, indirect:UnsafeRawPointer, drawcount:GLsizei, stride:GLsizei) {glMultiDrawElementsIndirectEXT_P(mode, type, indirect, drawcount, stride)}
var glMultiDrawElementsIndirectEXT_P:@convention(c)(GLenum, GLenum, UnsafeRawPointer, GLsizei, GLsizei) -> Void = glMultiDrawElementsIndirectEXT_L
public func glMultiDrawRangeElementArrayAPPLE(_ mode:GLenum, _ start:GLuint, _ end:GLuint, _ first:UnsafePointer<GLint>, _ count:UnsafePointer<GLsizei>, _ primcount:GLsizei) {glMultiDrawRangeElementArrayAPPLE_P(mode, start, end, first, count, primcount)}
public func glMultiDrawRangeElementArrayAPPLE(mode:GLenum, start:GLuint, end:GLuint, first:UnsafePointer<GLint>, count:UnsafePointer<GLsizei>, primcount:GLsizei) {glMultiDrawRangeElementArrayAPPLE_P(mode, start, end, first, count, primcount)}
var glMultiDrawRangeElementArrayAPPLE_P:@convention(c)(GLenum, GLuint, GLuint, UnsafePointer<GLint>, UnsafePointer<GLsizei>, GLsizei) -> Void = glMultiDrawRangeElementArrayAPPLE_L
public func glMultiModeDrawArraysIBM(_ mode:UnsafePointer<GLenum>, _ first:UnsafePointer<GLint>, _ count:UnsafePointer<GLsizei>, _ primcount:GLsizei, _ modestride:GLint) {glMultiModeDrawArraysIBM_P(mode, first, count, primcount, modestride)}
public func glMultiModeDrawArraysIBM(mode:UnsafePointer<GLenum>, first:UnsafePointer<GLint>, count:UnsafePointer<GLsizei>, primcount:GLsizei, modestride:GLint) {glMultiModeDrawArraysIBM_P(mode, first, count, primcount, modestride)}
var glMultiModeDrawArraysIBM_P:@convention(c)(UnsafePointer<GLenum>, UnsafePointer<GLint>, UnsafePointer<GLsizei>, GLsizei, GLint) -> Void = glMultiModeDrawArraysIBM_L
public func glMultiModeDrawElementsIBM(_ mode:UnsafePointer<GLenum>, _ count:UnsafePointer<GLsizei>, _ type:GLenum, _ indices:UnsafePointer<UnsafeRawPointer>, _ primcount:GLsizei, _ modestride:GLint) {glMultiModeDrawElementsIBM_P(mode, count, type, indices, primcount, modestride)}
public func glMultiModeDrawElementsIBM(mode:UnsafePointer<GLenum>, count:UnsafePointer<GLsizei>, type:GLenum, indices:UnsafePointer<UnsafeRawPointer>, primcount:GLsizei, modestride:GLint) {glMultiModeDrawElementsIBM_P(mode, count, type, indices, primcount, modestride)}
var glMultiModeDrawElementsIBM_P:@convention(c)(UnsafePointer<GLenum>, UnsafePointer<GLsizei>, GLenum, UnsafePointer<UnsafeRawPointer>, GLsizei, GLint) -> Void = glMultiModeDrawElementsIBM_L
public func glMultiTexBufferEXT(_ texunit:GLenum, _ target:GLenum, _ internalformat:GLenum, _ buffer:GLuint) {glMultiTexBufferEXT_P(texunit, target, internalformat, buffer)}
public func glMultiTexBufferEXT(texunit:GLenum, target:GLenum, internalformat:GLenum, buffer:GLuint) {glMultiTexBufferEXT_P(texunit, target, internalformat, buffer)}
var glMultiTexBufferEXT_P:@convention(c)(GLenum, GLenum, GLenum, GLuint) -> Void = glMultiTexBufferEXT_L
public func glMultiTexCoord1bOES(_ texture:GLenum, _ s:GLbyte) {glMultiTexCoord1bOES_P(texture, s)}
public func glMultiTexCoord1bOES(texture:GLenum, s:GLbyte) {glMultiTexCoord1bOES_P(texture, s)}
var glMultiTexCoord1bOES_P:@convention(c)(GLenum, GLbyte) -> Void = glMultiTexCoord1bOES_L
public func glMultiTexCoord1bvOES(_ texture:GLenum, _ coords:UnsafePointer<GLbyte>) {glMultiTexCoord1bvOES_P(texture, coords)}
public func glMultiTexCoord1bvOES(texture:GLenum, coords:UnsafePointer<GLbyte>) {glMultiTexCoord1bvOES_P(texture, coords)}
var glMultiTexCoord1bvOES_P:@convention(c)(GLenum, UnsafePointer<GLbyte>) -> Void = glMultiTexCoord1bvOES_L
public func glMultiTexCoord1d(_ target:GLenum, _ s:GLdouble) {glMultiTexCoord1d_P(target, s)}
public func glMultiTexCoord1d(target:GLenum, s:GLdouble) {glMultiTexCoord1d_P(target, s)}
var glMultiTexCoord1d_P:@convention(c)(GLenum, GLdouble) -> Void = glMultiTexCoord1d_L
public func glMultiTexCoord1dARB(_ target:GLenum, _ s:GLdouble) {glMultiTexCoord1dARB_P(target, s)}
public func glMultiTexCoord1dARB(target:GLenum, s:GLdouble) {glMultiTexCoord1dARB_P(target, s)}
var glMultiTexCoord1dARB_P:@convention(c)(GLenum, GLdouble) -> Void = glMultiTexCoord1dARB_L
public func glMultiTexCoord1dv(_ target:GLenum, _ v:UnsafePointer<GLdouble>) {glMultiTexCoord1dv_P(target, v)}
public func glMultiTexCoord1dv(target:GLenum, v:UnsafePointer<GLdouble>) {glMultiTexCoord1dv_P(target, v)}
var glMultiTexCoord1dv_P:@convention(c)(GLenum, UnsafePointer<GLdouble>) -> Void = glMultiTexCoord1dv_L
public func glMultiTexCoord1dvARB(_ target:GLenum, _ v:UnsafePointer<GLdouble>) {glMultiTexCoord1dvARB_P(target, v)}
public func glMultiTexCoord1dvARB(target:GLenum, v:UnsafePointer<GLdouble>) {glMultiTexCoord1dvARB_P(target, v)}
var glMultiTexCoord1dvARB_P:@convention(c)(GLenum, UnsafePointer<GLdouble>) -> Void = glMultiTexCoord1dvARB_L
public func glMultiTexCoord1f(_ target:GLenum, _ s:GLfloat) {glMultiTexCoord1f_P(target, s)}
public func glMultiTexCoord1f(target:GLenum, s:GLfloat) {glMultiTexCoord1f_P(target, s)}
var glMultiTexCoord1f_P:@convention(c)(GLenum, GLfloat) -> Void = glMultiTexCoord1f_L
public func glMultiTexCoord1fARB(_ target:GLenum, _ s:GLfloat) {glMultiTexCoord1fARB_P(target, s)}
public func glMultiTexCoord1fARB(target:GLenum, s:GLfloat) {glMultiTexCoord1fARB_P(target, s)}
var glMultiTexCoord1fARB_P:@convention(c)(GLenum, GLfloat) -> Void = glMultiTexCoord1fARB_L
public func glMultiTexCoord1fv(_ target:GLenum, _ v:UnsafePointer<GLfloat>) {glMultiTexCoord1fv_P(target, v)}
public func glMultiTexCoord1fv(target:GLenum, v:UnsafePointer<GLfloat>) {glMultiTexCoord1fv_P(target, v)}
var glMultiTexCoord1fv_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glMultiTexCoord1fv_L
public func glMultiTexCoord1fvARB(_ target:GLenum, _ v:UnsafePointer<GLfloat>) {glMultiTexCoord1fvARB_P(target, v)}
public func glMultiTexCoord1fvARB(target:GLenum, v:UnsafePointer<GLfloat>) {glMultiTexCoord1fvARB_P(target, v)}
var glMultiTexCoord1fvARB_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glMultiTexCoord1fvARB_L
public func glMultiTexCoord1hNV(_ target:GLenum, _ s:GLhalfNV) {glMultiTexCoord1hNV_P(target, s)}
public func glMultiTexCoord1hNV(target:GLenum, s:GLhalfNV) {glMultiTexCoord1hNV_P(target, s)}
var glMultiTexCoord1hNV_P:@convention(c)(GLenum, GLhalfNV) -> Void = glMultiTexCoord1hNV_L
public func glMultiTexCoord1hvNV(_ target:GLenum, _ v:UnsafePointer<GLhalfNV>) {glMultiTexCoord1hvNV_P(target, v)}
public func glMultiTexCoord1hvNV(target:GLenum, v:UnsafePointer<GLhalfNV>) {glMultiTexCoord1hvNV_P(target, v)}
var glMultiTexCoord1hvNV_P:@convention(c)(GLenum, UnsafePointer<GLhalfNV>) -> Void = glMultiTexCoord1hvNV_L
public func glMultiTexCoord1i(_ target:GLenum, _ s:GLint) {glMultiTexCoord1i_P(target, s)}
public func glMultiTexCoord1i(target:GLenum, s:GLint) {glMultiTexCoord1i_P(target, s)}
var glMultiTexCoord1i_P:@convention(c)(GLenum, GLint) -> Void = glMultiTexCoord1i_L
public func glMultiTexCoord1iARB(_ target:GLenum, _ s:GLint) {glMultiTexCoord1iARB_P(target, s)}
public func glMultiTexCoord1iARB(target:GLenum, s:GLint) {glMultiTexCoord1iARB_P(target, s)}
var glMultiTexCoord1iARB_P:@convention(c)(GLenum, GLint) -> Void = glMultiTexCoord1iARB_L
public func glMultiTexCoord1iv(_ target:GLenum, _ v:UnsafePointer<GLint>) {glMultiTexCoord1iv_P(target, v)}
public func glMultiTexCoord1iv(target:GLenum, v:UnsafePointer<GLint>) {glMultiTexCoord1iv_P(target, v)}
var glMultiTexCoord1iv_P:@convention(c)(GLenum, UnsafePointer<GLint>) -> Void = glMultiTexCoord1iv_L
public func glMultiTexCoord1ivARB(_ target:GLenum, _ v:UnsafePointer<GLint>) {glMultiTexCoord1ivARB_P(target, v)}
public func glMultiTexCoord1ivARB(target:GLenum, v:UnsafePointer<GLint>) {glMultiTexCoord1ivARB_P(target, v)}
var glMultiTexCoord1ivARB_P:@convention(c)(GLenum, UnsafePointer<GLint>) -> Void = glMultiTexCoord1ivARB_L
public func glMultiTexCoord1s(_ target:GLenum, _ s:GLshort) {glMultiTexCoord1s_P(target, s)}
public func glMultiTexCoord1s(target:GLenum, s:GLshort) {glMultiTexCoord1s_P(target, s)}
var glMultiTexCoord1s_P:@convention(c)(GLenum, GLshort) -> Void = glMultiTexCoord1s_L
public func glMultiTexCoord1sARB(_ target:GLenum, _ s:GLshort) {glMultiTexCoord1sARB_P(target, s)}
public func glMultiTexCoord1sARB(target:GLenum, s:GLshort) {glMultiTexCoord1sARB_P(target, s)}
var glMultiTexCoord1sARB_P:@convention(c)(GLenum, GLshort) -> Void = glMultiTexCoord1sARB_L
public func glMultiTexCoord1sv(_ target:GLenum, _ v:UnsafePointer<GLshort>) {glMultiTexCoord1sv_P(target, v)}
public func glMultiTexCoord1sv(target:GLenum, v:UnsafePointer<GLshort>) {glMultiTexCoord1sv_P(target, v)}
var glMultiTexCoord1sv_P:@convention(c)(GLenum, UnsafePointer<GLshort>) -> Void = glMultiTexCoord1sv_L
public func glMultiTexCoord1svARB(_ target:GLenum, _ v:UnsafePointer<GLshort>) {glMultiTexCoord1svARB_P(target, v)}
public func glMultiTexCoord1svARB(target:GLenum, v:UnsafePointer<GLshort>) {glMultiTexCoord1svARB_P(target, v)}
var glMultiTexCoord1svARB_P:@convention(c)(GLenum, UnsafePointer<GLshort>) -> Void = glMultiTexCoord1svARB_L
public func glMultiTexCoord1xOES(_ texture:GLenum, _ s:GLfixed) {glMultiTexCoord1xOES_P(texture, s)}
public func glMultiTexCoord1xOES(texture:GLenum, s:GLfixed) {glMultiTexCoord1xOES_P(texture, s)}
var glMultiTexCoord1xOES_P:@convention(c)(GLenum, GLfixed) -> Void = glMultiTexCoord1xOES_L
public func glMultiTexCoord1xvOES(_ texture:GLenum, _ coords:UnsafePointer<GLfixed>) {glMultiTexCoord1xvOES_P(texture, coords)}
public func glMultiTexCoord1xvOES(texture:GLenum, coords:UnsafePointer<GLfixed>) {glMultiTexCoord1xvOES_P(texture, coords)}
var glMultiTexCoord1xvOES_P:@convention(c)(GLenum, UnsafePointer<GLfixed>) -> Void = glMultiTexCoord1xvOES_L
public func glMultiTexCoord2bOES(_ texture:GLenum, _ s:GLbyte, _ t:GLbyte) {glMultiTexCoord2bOES_P(texture, s, t)}
public func glMultiTexCoord2bOES(texture:GLenum, s:GLbyte, t:GLbyte) {glMultiTexCoord2bOES_P(texture, s, t)}
var glMultiTexCoord2bOES_P:@convention(c)(GLenum, GLbyte, GLbyte) -> Void = glMultiTexCoord2bOES_L
public func glMultiTexCoord2bvOES(_ texture:GLenum, _ coords:UnsafePointer<GLbyte>) {glMultiTexCoord2bvOES_P(texture, coords)}
public func glMultiTexCoord2bvOES(texture:GLenum, coords:UnsafePointer<GLbyte>) {glMultiTexCoord2bvOES_P(texture, coords)}
var glMultiTexCoord2bvOES_P:@convention(c)(GLenum, UnsafePointer<GLbyte>) -> Void = glMultiTexCoord2bvOES_L
public func glMultiTexCoord2d(_ target:GLenum, _ s:GLdouble, _ t:GLdouble) {glMultiTexCoord2d_P(target, s, t)}
public func glMultiTexCoord2d(target:GLenum, s:GLdouble, t:GLdouble) {glMultiTexCoord2d_P(target, s, t)}
var glMultiTexCoord2d_P:@convention(c)(GLenum, GLdouble, GLdouble) -> Void = glMultiTexCoord2d_L
public func glMultiTexCoord2dARB(_ target:GLenum, _ s:GLdouble, _ t:GLdouble) {glMultiTexCoord2dARB_P(target, s, t)}
public func glMultiTexCoord2dARB(target:GLenum, s:GLdouble, t:GLdouble) {glMultiTexCoord2dARB_P(target, s, t)}
var glMultiTexCoord2dARB_P:@convention(c)(GLenum, GLdouble, GLdouble) -> Void = glMultiTexCoord2dARB_L
public func glMultiTexCoord2dv(_ target:GLenum, _ v:UnsafePointer<GLdouble>) {glMultiTexCoord2dv_P(target, v)}
public func glMultiTexCoord2dv(target:GLenum, v:UnsafePointer<GLdouble>) {glMultiTexCoord2dv_P(target, v)}
var glMultiTexCoord2dv_P:@convention(c)(GLenum, UnsafePointer<GLdouble>) -> Void = glMultiTexCoord2dv_L
public func glMultiTexCoord2dvARB(_ target:GLenum, _ v:UnsafePointer<GLdouble>) {glMultiTexCoord2dvARB_P(target, v)}
public func glMultiTexCoord2dvARB(target:GLenum, v:UnsafePointer<GLdouble>) {glMultiTexCoord2dvARB_P(target, v)}
var glMultiTexCoord2dvARB_P:@convention(c)(GLenum, UnsafePointer<GLdouble>) -> Void = glMultiTexCoord2dvARB_L
public func glMultiTexCoord2f(_ target:GLenum, _ s:GLfloat, _ t:GLfloat) {glMultiTexCoord2f_P(target, s, t)}
public func glMultiTexCoord2f(target:GLenum, s:GLfloat, t:GLfloat) {glMultiTexCoord2f_P(target, s, t)}
var glMultiTexCoord2f_P:@convention(c)(GLenum, GLfloat, GLfloat) -> Void = glMultiTexCoord2f_L
public func glMultiTexCoord2fARB(_ target:GLenum, _ s:GLfloat, _ t:GLfloat) {glMultiTexCoord2fARB_P(target, s, t)}
public func glMultiTexCoord2fARB(target:GLenum, s:GLfloat, t:GLfloat) {glMultiTexCoord2fARB_P(target, s, t)}
var glMultiTexCoord2fARB_P:@convention(c)(GLenum, GLfloat, GLfloat) -> Void = glMultiTexCoord2fARB_L
public func glMultiTexCoord2fv(_ target:GLenum, _ v:UnsafePointer<GLfloat>) {glMultiTexCoord2fv_P(target, v)}
public func glMultiTexCoord2fv(target:GLenum, v:UnsafePointer<GLfloat>) {glMultiTexCoord2fv_P(target, v)}
var glMultiTexCoord2fv_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glMultiTexCoord2fv_L
public func glMultiTexCoord2fvARB(_ target:GLenum, _ v:UnsafePointer<GLfloat>) {glMultiTexCoord2fvARB_P(target, v)}
public func glMultiTexCoord2fvARB(target:GLenum, v:UnsafePointer<GLfloat>) {glMultiTexCoord2fvARB_P(target, v)}
var glMultiTexCoord2fvARB_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glMultiTexCoord2fvARB_L
public func glMultiTexCoord2hNV(_ target:GLenum, _ s:GLhalfNV, _ t:GLhalfNV) {glMultiTexCoord2hNV_P(target, s, t)}
public func glMultiTexCoord2hNV(target:GLenum, s:GLhalfNV, t:GLhalfNV) {glMultiTexCoord2hNV_P(target, s, t)}
var glMultiTexCoord2hNV_P:@convention(c)(GLenum, GLhalfNV, GLhalfNV) -> Void = glMultiTexCoord2hNV_L
public func glMultiTexCoord2hvNV(_ target:GLenum, _ v:UnsafePointer<GLhalfNV>) {glMultiTexCoord2hvNV_P(target, v)}
public func glMultiTexCoord2hvNV(target:GLenum, v:UnsafePointer<GLhalfNV>) {glMultiTexCoord2hvNV_P(target, v)}
var glMultiTexCoord2hvNV_P:@convention(c)(GLenum, UnsafePointer<GLhalfNV>) -> Void = glMultiTexCoord2hvNV_L
public func glMultiTexCoord2i(_ target:GLenum, _ s:GLint, _ t:GLint) {glMultiTexCoord2i_P(target, s, t)}
public func glMultiTexCoord2i(target:GLenum, s:GLint, t:GLint) {glMultiTexCoord2i_P(target, s, t)}
var glMultiTexCoord2i_P:@convention(c)(GLenum, GLint, GLint) -> Void = glMultiTexCoord2i_L
public func glMultiTexCoord2iARB(_ target:GLenum, _ s:GLint, _ t:GLint) {glMultiTexCoord2iARB_P(target, s, t)}
public func glMultiTexCoord2iARB(target:GLenum, s:GLint, t:GLint) {glMultiTexCoord2iARB_P(target, s, t)}
var glMultiTexCoord2iARB_P:@convention(c)(GLenum, GLint, GLint) -> Void = glMultiTexCoord2iARB_L
public func glMultiTexCoord2iv(_ target:GLenum, _ v:UnsafePointer<GLint>) {glMultiTexCoord2iv_P(target, v)}
public func glMultiTexCoord2iv(target:GLenum, v:UnsafePointer<GLint>) {glMultiTexCoord2iv_P(target, v)}
var glMultiTexCoord2iv_P:@convention(c)(GLenum, UnsafePointer<GLint>) -> Void = glMultiTexCoord2iv_L
public func glMultiTexCoord2ivARB(_ target:GLenum, _ v:UnsafePointer<GLint>) {glMultiTexCoord2ivARB_P(target, v)}
public func glMultiTexCoord2ivARB(target:GLenum, v:UnsafePointer<GLint>) {glMultiTexCoord2ivARB_P(target, v)}
var glMultiTexCoord2ivARB_P:@convention(c)(GLenum, UnsafePointer<GLint>) -> Void = glMultiTexCoord2ivARB_L
public func glMultiTexCoord2s(_ target:GLenum, _ s:GLshort, _ t:GLshort) {glMultiTexCoord2s_P(target, s, t)}
public func glMultiTexCoord2s(target:GLenum, s:GLshort, t:GLshort) {glMultiTexCoord2s_P(target, s, t)}
var glMultiTexCoord2s_P:@convention(c)(GLenum, GLshort, GLshort) -> Void = glMultiTexCoord2s_L
public func glMultiTexCoord2sARB(_ target:GLenum, _ s:GLshort, _ t:GLshort) {glMultiTexCoord2sARB_P(target, s, t)}
public func glMultiTexCoord2sARB(target:GLenum, s:GLshort, t:GLshort) {glMultiTexCoord2sARB_P(target, s, t)}
var glMultiTexCoord2sARB_P:@convention(c)(GLenum, GLshort, GLshort) -> Void = glMultiTexCoord2sARB_L
public func glMultiTexCoord2sv(_ target:GLenum, _ v:UnsafePointer<GLshort>) {glMultiTexCoord2sv_P(target, v)}
public func glMultiTexCoord2sv(target:GLenum, v:UnsafePointer<GLshort>) {glMultiTexCoord2sv_P(target, v)}
var glMultiTexCoord2sv_P:@convention(c)(GLenum, UnsafePointer<GLshort>) -> Void = glMultiTexCoord2sv_L
public func glMultiTexCoord2svARB(_ target:GLenum, _ v:UnsafePointer<GLshort>) {glMultiTexCoord2svARB_P(target, v)}
public func glMultiTexCoord2svARB(target:GLenum, v:UnsafePointer<GLshort>) {glMultiTexCoord2svARB_P(target, v)}
var glMultiTexCoord2svARB_P:@convention(c)(GLenum, UnsafePointer<GLshort>) -> Void = glMultiTexCoord2svARB_L
public func glMultiTexCoord2xOES(_ texture:GLenum, _ s:GLfixed, _ t:GLfixed) {glMultiTexCoord2xOES_P(texture, s, t)}
public func glMultiTexCoord2xOES(texture:GLenum, s:GLfixed, t:GLfixed) {glMultiTexCoord2xOES_P(texture, s, t)}
var glMultiTexCoord2xOES_P:@convention(c)(GLenum, GLfixed, GLfixed) -> Void = glMultiTexCoord2xOES_L
public func glMultiTexCoord2xvOES(_ texture:GLenum, _ coords:UnsafePointer<GLfixed>) {glMultiTexCoord2xvOES_P(texture, coords)}
public func glMultiTexCoord2xvOES(texture:GLenum, coords:UnsafePointer<GLfixed>) {glMultiTexCoord2xvOES_P(texture, coords)}
var glMultiTexCoord2xvOES_P:@convention(c)(GLenum, UnsafePointer<GLfixed>) -> Void = glMultiTexCoord2xvOES_L
public func glMultiTexCoord3bOES(_ texture:GLenum, _ s:GLbyte, _ t:GLbyte, _ r:GLbyte) {glMultiTexCoord3bOES_P(texture, s, t, r)}
public func glMultiTexCoord3bOES(texture:GLenum, s:GLbyte, t:GLbyte, r:GLbyte) {glMultiTexCoord3bOES_P(texture, s, t, r)}
var glMultiTexCoord3bOES_P:@convention(c)(GLenum, GLbyte, GLbyte, GLbyte) -> Void = glMultiTexCoord3bOES_L
public func glMultiTexCoord3bvOES(_ texture:GLenum, _ coords:UnsafePointer<GLbyte>) {glMultiTexCoord3bvOES_P(texture, coords)}
public func glMultiTexCoord3bvOES(texture:GLenum, coords:UnsafePointer<GLbyte>) {glMultiTexCoord3bvOES_P(texture, coords)}
var glMultiTexCoord3bvOES_P:@convention(c)(GLenum, UnsafePointer<GLbyte>) -> Void = glMultiTexCoord3bvOES_L
public func glMultiTexCoord3d(_ target:GLenum, _ s:GLdouble, _ t:GLdouble, _ r:GLdouble) {glMultiTexCoord3d_P(target, s, t, r)}
public func glMultiTexCoord3d(target:GLenum, s:GLdouble, t:GLdouble, r:GLdouble) {glMultiTexCoord3d_P(target, s, t, r)}
var glMultiTexCoord3d_P:@convention(c)(GLenum, GLdouble, GLdouble, GLdouble) -> Void = glMultiTexCoord3d_L
public func glMultiTexCoord3dARB(_ target:GLenum, _ s:GLdouble, _ t:GLdouble, _ r:GLdouble) {glMultiTexCoord3dARB_P(target, s, t, r)}
public func glMultiTexCoord3dARB(target:GLenum, s:GLdouble, t:GLdouble, r:GLdouble) {glMultiTexCoord3dARB_P(target, s, t, r)}
var glMultiTexCoord3dARB_P:@convention(c)(GLenum, GLdouble, GLdouble, GLdouble) -> Void = glMultiTexCoord3dARB_L
public func glMultiTexCoord3dv(_ target:GLenum, _ v:UnsafePointer<GLdouble>) {glMultiTexCoord3dv_P(target, v)}
public func glMultiTexCoord3dv(target:GLenum, v:UnsafePointer<GLdouble>) {glMultiTexCoord3dv_P(target, v)}
var glMultiTexCoord3dv_P:@convention(c)(GLenum, UnsafePointer<GLdouble>) -> Void = glMultiTexCoord3dv_L
public func glMultiTexCoord3dvARB(_ target:GLenum, _ v:UnsafePointer<GLdouble>) {glMultiTexCoord3dvARB_P(target, v)}
public func glMultiTexCoord3dvARB(target:GLenum, v:UnsafePointer<GLdouble>) {glMultiTexCoord3dvARB_P(target, v)}
var glMultiTexCoord3dvARB_P:@convention(c)(GLenum, UnsafePointer<GLdouble>) -> Void = glMultiTexCoord3dvARB_L
public func glMultiTexCoord3f(_ target:GLenum, _ s:GLfloat, _ t:GLfloat, _ r:GLfloat) {glMultiTexCoord3f_P(target, s, t, r)}
public func glMultiTexCoord3f(target:GLenum, s:GLfloat, t:GLfloat, r:GLfloat) {glMultiTexCoord3f_P(target, s, t, r)}
var glMultiTexCoord3f_P:@convention(c)(GLenum, GLfloat, GLfloat, GLfloat) -> Void = glMultiTexCoord3f_L
public func glMultiTexCoord3fARB(_ target:GLenum, _ s:GLfloat, _ t:GLfloat, _ r:GLfloat) {glMultiTexCoord3fARB_P(target, s, t, r)}
public func glMultiTexCoord3fARB(target:GLenum, s:GLfloat, t:GLfloat, r:GLfloat) {glMultiTexCoord3fARB_P(target, s, t, r)}
var glMultiTexCoord3fARB_P:@convention(c)(GLenum, GLfloat, GLfloat, GLfloat) -> Void = glMultiTexCoord3fARB_L
public func glMultiTexCoord3fv(_ target:GLenum, _ v:UnsafePointer<GLfloat>) {glMultiTexCoord3fv_P(target, v)}
public func glMultiTexCoord3fv(target:GLenum, v:UnsafePointer<GLfloat>) {glMultiTexCoord3fv_P(target, v)}
var glMultiTexCoord3fv_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glMultiTexCoord3fv_L
public func glMultiTexCoord3fvARB(_ target:GLenum, _ v:UnsafePointer<GLfloat>) {glMultiTexCoord3fvARB_P(target, v)}
public func glMultiTexCoord3fvARB(target:GLenum, v:UnsafePointer<GLfloat>) {glMultiTexCoord3fvARB_P(target, v)}
var glMultiTexCoord3fvARB_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glMultiTexCoord3fvARB_L
public func glMultiTexCoord3hNV(_ target:GLenum, _ s:GLhalfNV, _ t:GLhalfNV, _ r:GLhalfNV) {glMultiTexCoord3hNV_P(target, s, t, r)}
public func glMultiTexCoord3hNV(target:GLenum, s:GLhalfNV, t:GLhalfNV, r:GLhalfNV) {glMultiTexCoord3hNV_P(target, s, t, r)}
var glMultiTexCoord3hNV_P:@convention(c)(GLenum, GLhalfNV, GLhalfNV, GLhalfNV) -> Void = glMultiTexCoord3hNV_L
public func glMultiTexCoord3hvNV(_ target:GLenum, _ v:UnsafePointer<GLhalfNV>) {glMultiTexCoord3hvNV_P(target, v)}
public func glMultiTexCoord3hvNV(target:GLenum, v:UnsafePointer<GLhalfNV>) {glMultiTexCoord3hvNV_P(target, v)}
var glMultiTexCoord3hvNV_P:@convention(c)(GLenum, UnsafePointer<GLhalfNV>) -> Void = glMultiTexCoord3hvNV_L
public func glMultiTexCoord3i(_ target:GLenum, _ s:GLint, _ t:GLint, _ r:GLint) {glMultiTexCoord3i_P(target, s, t, r)}
public func glMultiTexCoord3i(target:GLenum, s:GLint, t:GLint, r:GLint) {glMultiTexCoord3i_P(target, s, t, r)}
var glMultiTexCoord3i_P:@convention(c)(GLenum, GLint, GLint, GLint) -> Void = glMultiTexCoord3i_L
public func glMultiTexCoord3iARB(_ target:GLenum, _ s:GLint, _ t:GLint, _ r:GLint) {glMultiTexCoord3iARB_P(target, s, t, r)}
public func glMultiTexCoord3iARB(target:GLenum, s:GLint, t:GLint, r:GLint) {glMultiTexCoord3iARB_P(target, s, t, r)}
var glMultiTexCoord3iARB_P:@convention(c)(GLenum, GLint, GLint, GLint) -> Void = glMultiTexCoord3iARB_L
public func glMultiTexCoord3iv(_ target:GLenum, _ v:UnsafePointer<GLint>) {glMultiTexCoord3iv_P(target, v)}
public func glMultiTexCoord3iv(target:GLenum, v:UnsafePointer<GLint>) {glMultiTexCoord3iv_P(target, v)}
var glMultiTexCoord3iv_P:@convention(c)(GLenum, UnsafePointer<GLint>) -> Void = glMultiTexCoord3iv_L
public func glMultiTexCoord3ivARB(_ target:GLenum, _ v:UnsafePointer<GLint>) {glMultiTexCoord3ivARB_P(target, v)}
public func glMultiTexCoord3ivARB(target:GLenum, v:UnsafePointer<GLint>) {glMultiTexCoord3ivARB_P(target, v)}
var glMultiTexCoord3ivARB_P:@convention(c)(GLenum, UnsafePointer<GLint>) -> Void = glMultiTexCoord3ivARB_L
public func glMultiTexCoord3s(_ target:GLenum, _ s:GLshort, _ t:GLshort, _ r:GLshort) {glMultiTexCoord3s_P(target, s, t, r)}
public func glMultiTexCoord3s(target:GLenum, s:GLshort, t:GLshort, r:GLshort) {glMultiTexCoord3s_P(target, s, t, r)}
var glMultiTexCoord3s_P:@convention(c)(GLenum, GLshort, GLshort, GLshort) -> Void = glMultiTexCoord3s_L
public func glMultiTexCoord3sARB(_ target:GLenum, _ s:GLshort, _ t:GLshort, _ r:GLshort) {glMultiTexCoord3sARB_P(target, s, t, r)}
public func glMultiTexCoord3sARB(target:GLenum, s:GLshort, t:GLshort, r:GLshort) {glMultiTexCoord3sARB_P(target, s, t, r)}
var glMultiTexCoord3sARB_P:@convention(c)(GLenum, GLshort, GLshort, GLshort) -> Void = glMultiTexCoord3sARB_L
public func glMultiTexCoord3sv(_ target:GLenum, _ v:UnsafePointer<GLshort>) {glMultiTexCoord3sv_P(target, v)}
public func glMultiTexCoord3sv(target:GLenum, v:UnsafePointer<GLshort>) {glMultiTexCoord3sv_P(target, v)}
var glMultiTexCoord3sv_P:@convention(c)(GLenum, UnsafePointer<GLshort>) -> Void = glMultiTexCoord3sv_L
public func glMultiTexCoord3svARB(_ target:GLenum, _ v:UnsafePointer<GLshort>) {glMultiTexCoord3svARB_P(target, v)}
public func glMultiTexCoord3svARB(target:GLenum, v:UnsafePointer<GLshort>) {glMultiTexCoord3svARB_P(target, v)}
var glMultiTexCoord3svARB_P:@convention(c)(GLenum, UnsafePointer<GLshort>) -> Void = glMultiTexCoord3svARB_L
public func glMultiTexCoord3xOES(_ texture:GLenum, _ s:GLfixed, _ t:GLfixed, _ r:GLfixed) {glMultiTexCoord3xOES_P(texture, s, t, r)}
public func glMultiTexCoord3xOES(texture:GLenum, s:GLfixed, t:GLfixed, r:GLfixed) {glMultiTexCoord3xOES_P(texture, s, t, r)}
var glMultiTexCoord3xOES_P:@convention(c)(GLenum, GLfixed, GLfixed, GLfixed) -> Void = glMultiTexCoord3xOES_L
public func glMultiTexCoord3xvOES(_ texture:GLenum, _ coords:UnsafePointer<GLfixed>) {glMultiTexCoord3xvOES_P(texture, coords)}
public func glMultiTexCoord3xvOES(texture:GLenum, coords:UnsafePointer<GLfixed>) {glMultiTexCoord3xvOES_P(texture, coords)}
var glMultiTexCoord3xvOES_P:@convention(c)(GLenum, UnsafePointer<GLfixed>) -> Void = glMultiTexCoord3xvOES_L
public func glMultiTexCoord4bOES(_ texture:GLenum, _ s:GLbyte, _ t:GLbyte, _ r:GLbyte, _ q:GLbyte) {glMultiTexCoord4bOES_P(texture, s, t, r, q)}
public func glMultiTexCoord4bOES(texture:GLenum, s:GLbyte, t:GLbyte, r:GLbyte, q:GLbyte) {glMultiTexCoord4bOES_P(texture, s, t, r, q)}
var glMultiTexCoord4bOES_P:@convention(c)(GLenum, GLbyte, GLbyte, GLbyte, GLbyte) -> Void = glMultiTexCoord4bOES_L
public func glMultiTexCoord4bvOES(_ texture:GLenum, _ coords:UnsafePointer<GLbyte>) {glMultiTexCoord4bvOES_P(texture, coords)}
public func glMultiTexCoord4bvOES(texture:GLenum, coords:UnsafePointer<GLbyte>) {glMultiTexCoord4bvOES_P(texture, coords)}
var glMultiTexCoord4bvOES_P:@convention(c)(GLenum, UnsafePointer<GLbyte>) -> Void = glMultiTexCoord4bvOES_L
public func glMultiTexCoord4d(_ target:GLenum, _ s:GLdouble, _ t:GLdouble, _ r:GLdouble, _ q:GLdouble) {glMultiTexCoord4d_P(target, s, t, r, q)}
public func glMultiTexCoord4d(target:GLenum, s:GLdouble, t:GLdouble, r:GLdouble, q:GLdouble) {glMultiTexCoord4d_P(target, s, t, r, q)}
var glMultiTexCoord4d_P:@convention(c)(GLenum, GLdouble, GLdouble, GLdouble, GLdouble) -> Void = glMultiTexCoord4d_L
public func glMultiTexCoord4dARB(_ target:GLenum, _ s:GLdouble, _ t:GLdouble, _ r:GLdouble, _ q:GLdouble) {glMultiTexCoord4dARB_P(target, s, t, r, q)}
public func glMultiTexCoord4dARB(target:GLenum, s:GLdouble, t:GLdouble, r:GLdouble, q:GLdouble) {glMultiTexCoord4dARB_P(target, s, t, r, q)}
var glMultiTexCoord4dARB_P:@convention(c)(GLenum, GLdouble, GLdouble, GLdouble, GLdouble) -> Void = glMultiTexCoord4dARB_L
public func glMultiTexCoord4dv(_ target:GLenum, _ v:UnsafePointer<GLdouble>) {glMultiTexCoord4dv_P(target, v)}
public func glMultiTexCoord4dv(target:GLenum, v:UnsafePointer<GLdouble>) {glMultiTexCoord4dv_P(target, v)}
var glMultiTexCoord4dv_P:@convention(c)(GLenum, UnsafePointer<GLdouble>) -> Void = glMultiTexCoord4dv_L
public func glMultiTexCoord4dvARB(_ target:GLenum, _ v:UnsafePointer<GLdouble>) {glMultiTexCoord4dvARB_P(target, v)}
public func glMultiTexCoord4dvARB(target:GLenum, v:UnsafePointer<GLdouble>) {glMultiTexCoord4dvARB_P(target, v)}
var glMultiTexCoord4dvARB_P:@convention(c)(GLenum, UnsafePointer<GLdouble>) -> Void = glMultiTexCoord4dvARB_L
public func glMultiTexCoord4f(_ target:GLenum, _ s:GLfloat, _ t:GLfloat, _ r:GLfloat, _ q:GLfloat) {glMultiTexCoord4f_P(target, s, t, r, q)}
public func glMultiTexCoord4f(target:GLenum, s:GLfloat, t:GLfloat, r:GLfloat, q:GLfloat) {glMultiTexCoord4f_P(target, s, t, r, q)}
var glMultiTexCoord4f_P:@convention(c)(GLenum, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glMultiTexCoord4f_L
public func glMultiTexCoord4fARB(_ target:GLenum, _ s:GLfloat, _ t:GLfloat, _ r:GLfloat, _ q:GLfloat) {glMultiTexCoord4fARB_P(target, s, t, r, q)}
public func glMultiTexCoord4fARB(target:GLenum, s:GLfloat, t:GLfloat, r:GLfloat, q:GLfloat) {glMultiTexCoord4fARB_P(target, s, t, r, q)}
var glMultiTexCoord4fARB_P:@convention(c)(GLenum, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glMultiTexCoord4fARB_L
public func glMultiTexCoord4fv(_ target:GLenum, _ v:UnsafePointer<GLfloat>) {glMultiTexCoord4fv_P(target, v)}
public func glMultiTexCoord4fv(target:GLenum, v:UnsafePointer<GLfloat>) {glMultiTexCoord4fv_P(target, v)}
var glMultiTexCoord4fv_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glMultiTexCoord4fv_L
public func glMultiTexCoord4fvARB(_ target:GLenum, _ v:UnsafePointer<GLfloat>) {glMultiTexCoord4fvARB_P(target, v)}
public func glMultiTexCoord4fvARB(target:GLenum, v:UnsafePointer<GLfloat>) {glMultiTexCoord4fvARB_P(target, v)}
var glMultiTexCoord4fvARB_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glMultiTexCoord4fvARB_L
public func glMultiTexCoord4hNV(_ target:GLenum, _ s:GLhalfNV, _ t:GLhalfNV, _ r:GLhalfNV, _ q:GLhalfNV) {glMultiTexCoord4hNV_P(target, s, t, r, q)}
public func glMultiTexCoord4hNV(target:GLenum, s:GLhalfNV, t:GLhalfNV, r:GLhalfNV, q:GLhalfNV) {glMultiTexCoord4hNV_P(target, s, t, r, q)}
var glMultiTexCoord4hNV_P:@convention(c)(GLenum, GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) -> Void = glMultiTexCoord4hNV_L
public func glMultiTexCoord4hvNV(_ target:GLenum, _ v:UnsafePointer<GLhalfNV>) {glMultiTexCoord4hvNV_P(target, v)}
public func glMultiTexCoord4hvNV(target:GLenum, v:UnsafePointer<GLhalfNV>) {glMultiTexCoord4hvNV_P(target, v)}
var glMultiTexCoord4hvNV_P:@convention(c)(GLenum, UnsafePointer<GLhalfNV>) -> Void = glMultiTexCoord4hvNV_L
public func glMultiTexCoord4i(_ target:GLenum, _ s:GLint, _ t:GLint, _ r:GLint, _ q:GLint) {glMultiTexCoord4i_P(target, s, t, r, q)}
public func glMultiTexCoord4i(target:GLenum, s:GLint, t:GLint, r:GLint, q:GLint) {glMultiTexCoord4i_P(target, s, t, r, q)}
var glMultiTexCoord4i_P:@convention(c)(GLenum, GLint, GLint, GLint, GLint) -> Void = glMultiTexCoord4i_L
public func glMultiTexCoord4iARB(_ target:GLenum, _ s:GLint, _ t:GLint, _ r:GLint, _ q:GLint) {glMultiTexCoord4iARB_P(target, s, t, r, q)}
public func glMultiTexCoord4iARB(target:GLenum, s:GLint, t:GLint, r:GLint, q:GLint) {glMultiTexCoord4iARB_P(target, s, t, r, q)}
var glMultiTexCoord4iARB_P:@convention(c)(GLenum, GLint, GLint, GLint, GLint) -> Void = glMultiTexCoord4iARB_L
public func glMultiTexCoord4iv(_ target:GLenum, _ v:UnsafePointer<GLint>) {glMultiTexCoord4iv_P(target, v)}
public func glMultiTexCoord4iv(target:GLenum, v:UnsafePointer<GLint>) {glMultiTexCoord4iv_P(target, v)}
var glMultiTexCoord4iv_P:@convention(c)(GLenum, UnsafePointer<GLint>) -> Void = glMultiTexCoord4iv_L
public func glMultiTexCoord4ivARB(_ target:GLenum, _ v:UnsafePointer<GLint>) {glMultiTexCoord4ivARB_P(target, v)}
public func glMultiTexCoord4ivARB(target:GLenum, v:UnsafePointer<GLint>) {glMultiTexCoord4ivARB_P(target, v)}
var glMultiTexCoord4ivARB_P:@convention(c)(GLenum, UnsafePointer<GLint>) -> Void = glMultiTexCoord4ivARB_L
public func glMultiTexCoord4s(_ target:GLenum, _ s:GLshort, _ t:GLshort, _ r:GLshort, _ q:GLshort) {glMultiTexCoord4s_P(target, s, t, r, q)}
public func glMultiTexCoord4s(target:GLenum, s:GLshort, t:GLshort, r:GLshort, q:GLshort) {glMultiTexCoord4s_P(target, s, t, r, q)}
var glMultiTexCoord4s_P:@convention(c)(GLenum, GLshort, GLshort, GLshort, GLshort) -> Void = glMultiTexCoord4s_L
public func glMultiTexCoord4sARB(_ target:GLenum, _ s:GLshort, _ t:GLshort, _ r:GLshort, _ q:GLshort) {glMultiTexCoord4sARB_P(target, s, t, r, q)}
public func glMultiTexCoord4sARB(target:GLenum, s:GLshort, t:GLshort, r:GLshort, q:GLshort) {glMultiTexCoord4sARB_P(target, s, t, r, q)}
var glMultiTexCoord4sARB_P:@convention(c)(GLenum, GLshort, GLshort, GLshort, GLshort) -> Void = glMultiTexCoord4sARB_L
public func glMultiTexCoord4sv(_ target:GLenum, _ v:UnsafePointer<GLshort>) {glMultiTexCoord4sv_P(target, v)}
public func glMultiTexCoord4sv(target:GLenum, v:UnsafePointer<GLshort>) {glMultiTexCoord4sv_P(target, v)}
var glMultiTexCoord4sv_P:@convention(c)(GLenum, UnsafePointer<GLshort>) -> Void = glMultiTexCoord4sv_L
public func glMultiTexCoord4svARB(_ target:GLenum, _ v:UnsafePointer<GLshort>) {glMultiTexCoord4svARB_P(target, v)}
public func glMultiTexCoord4svARB(target:GLenum, v:UnsafePointer<GLshort>) {glMultiTexCoord4svARB_P(target, v)}
var glMultiTexCoord4svARB_P:@convention(c)(GLenum, UnsafePointer<GLshort>) -> Void = glMultiTexCoord4svARB_L
public func glMultiTexCoord4x(_ texture:GLenum, _ s:GLfixed, _ t:GLfixed, _ r:GLfixed, _ q:GLfixed) {glMultiTexCoord4x_P(texture, s, t, r, q)}
public func glMultiTexCoord4x(texture:GLenum, s:GLfixed, t:GLfixed, r:GLfixed, q:GLfixed) {glMultiTexCoord4x_P(texture, s, t, r, q)}
var glMultiTexCoord4x_P:@convention(c)(GLenum, GLfixed, GLfixed, GLfixed, GLfixed) -> Void = glMultiTexCoord4x_L
public func glMultiTexCoord4xOES(_ texture:GLenum, _ s:GLfixed, _ t:GLfixed, _ r:GLfixed, _ q:GLfixed) {glMultiTexCoord4xOES_P(texture, s, t, r, q)}
public func glMultiTexCoord4xOES(texture:GLenum, s:GLfixed, t:GLfixed, r:GLfixed, q:GLfixed) {glMultiTexCoord4xOES_P(texture, s, t, r, q)}
var glMultiTexCoord4xOES_P:@convention(c)(GLenum, GLfixed, GLfixed, GLfixed, GLfixed) -> Void = glMultiTexCoord4xOES_L
public func glMultiTexCoord4xvOES(_ texture:GLenum, _ coords:UnsafePointer<GLfixed>) {glMultiTexCoord4xvOES_P(texture, coords)}
public func glMultiTexCoord4xvOES(texture:GLenum, coords:UnsafePointer<GLfixed>) {glMultiTexCoord4xvOES_P(texture, coords)}
var glMultiTexCoord4xvOES_P:@convention(c)(GLenum, UnsafePointer<GLfixed>) -> Void = glMultiTexCoord4xvOES_L
public func glMultiTexCoordP1ui(_ texture:GLenum, _ type:GLenum, _ coords:GLuint) {glMultiTexCoordP1ui_P(texture, type, coords)}
public func glMultiTexCoordP1ui(texture:GLenum, type:GLenum, coords:GLuint) {glMultiTexCoordP1ui_P(texture, type, coords)}
var glMultiTexCoordP1ui_P:@convention(c)(GLenum, GLenum, GLuint) -> Void = glMultiTexCoordP1ui_L
public func glMultiTexCoordP1uiv(_ texture:GLenum, _ type:GLenum, _ coords:UnsafePointer<GLuint>) {glMultiTexCoordP1uiv_P(texture, type, coords)}
public func glMultiTexCoordP1uiv(texture:GLenum, type:GLenum, coords:UnsafePointer<GLuint>) {glMultiTexCoordP1uiv_P(texture, type, coords)}
var glMultiTexCoordP1uiv_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLuint>) -> Void = glMultiTexCoordP1uiv_L
public func glMultiTexCoordP2ui(_ texture:GLenum, _ type:GLenum, _ coords:GLuint) {glMultiTexCoordP2ui_P(texture, type, coords)}
public func glMultiTexCoordP2ui(texture:GLenum, type:GLenum, coords:GLuint) {glMultiTexCoordP2ui_P(texture, type, coords)}
var glMultiTexCoordP2ui_P:@convention(c)(GLenum, GLenum, GLuint) -> Void = glMultiTexCoordP2ui_L
public func glMultiTexCoordP2uiv(_ texture:GLenum, _ type:GLenum, _ coords:UnsafePointer<GLuint>) {glMultiTexCoordP2uiv_P(texture, type, coords)}
public func glMultiTexCoordP2uiv(texture:GLenum, type:GLenum, coords:UnsafePointer<GLuint>) {glMultiTexCoordP2uiv_P(texture, type, coords)}
var glMultiTexCoordP2uiv_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLuint>) -> Void = glMultiTexCoordP2uiv_L
public func glMultiTexCoordP3ui(_ texture:GLenum, _ type:GLenum, _ coords:GLuint) {glMultiTexCoordP3ui_P(texture, type, coords)}
public func glMultiTexCoordP3ui(texture:GLenum, type:GLenum, coords:GLuint) {glMultiTexCoordP3ui_P(texture, type, coords)}
var glMultiTexCoordP3ui_P:@convention(c)(GLenum, GLenum, GLuint) -> Void = glMultiTexCoordP3ui_L
public func glMultiTexCoordP3uiv(_ texture:GLenum, _ type:GLenum, _ coords:UnsafePointer<GLuint>) {glMultiTexCoordP3uiv_P(texture, type, coords)}
public func glMultiTexCoordP3uiv(texture:GLenum, type:GLenum, coords:UnsafePointer<GLuint>) {glMultiTexCoordP3uiv_P(texture, type, coords)}
var glMultiTexCoordP3uiv_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLuint>) -> Void = glMultiTexCoordP3uiv_L
public func glMultiTexCoordP4ui(_ texture:GLenum, _ type:GLenum, _ coords:GLuint) {glMultiTexCoordP4ui_P(texture, type, coords)}
public func glMultiTexCoordP4ui(texture:GLenum, type:GLenum, coords:GLuint) {glMultiTexCoordP4ui_P(texture, type, coords)}
var glMultiTexCoordP4ui_P:@convention(c)(GLenum, GLenum, GLuint) -> Void = glMultiTexCoordP4ui_L
public func glMultiTexCoordP4uiv(_ texture:GLenum, _ type:GLenum, _ coords:UnsafePointer<GLuint>) {glMultiTexCoordP4uiv_P(texture, type, coords)}
public func glMultiTexCoordP4uiv(texture:GLenum, type:GLenum, coords:UnsafePointer<GLuint>) {glMultiTexCoordP4uiv_P(texture, type, coords)}
var glMultiTexCoordP4uiv_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLuint>) -> Void = glMultiTexCoordP4uiv_L
public func glMultiTexCoordPointerEXT(_ texunit:GLenum, _ size:GLint, _ type:GLenum, _ stride:GLsizei, _ pointer:UnsafeRawPointer) {glMultiTexCoordPointerEXT_P(texunit, size, type, stride, pointer)}
public func glMultiTexCoordPointerEXT(texunit:GLenum, size:GLint, type:GLenum, stride:GLsizei, pointer:UnsafeRawPointer) {glMultiTexCoordPointerEXT_P(texunit, size, type, stride, pointer)}
var glMultiTexCoordPointerEXT_P:@convention(c)(GLenum, GLint, GLenum, GLsizei, UnsafeRawPointer) -> Void = glMultiTexCoordPointerEXT_L
public func glMultiTexEnvfEXT(_ texunit:GLenum, _ target:GLenum, _ pname:GLenum, _ param:GLfloat) {glMultiTexEnvfEXT_P(texunit, target, pname, param)}
public func glMultiTexEnvfEXT(texunit:GLenum, target:GLenum, pname:GLenum, param:GLfloat) {glMultiTexEnvfEXT_P(texunit, target, pname, param)}
var glMultiTexEnvfEXT_P:@convention(c)(GLenum, GLenum, GLenum, GLfloat) -> Void = glMultiTexEnvfEXT_L
public func glMultiTexEnvfvEXT(_ texunit:GLenum, _ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLfloat>) {glMultiTexEnvfvEXT_P(texunit, target, pname, params)}
public func glMultiTexEnvfvEXT(texunit:GLenum, target:GLenum, pname:GLenum, params:UnsafePointer<GLfloat>) {glMultiTexEnvfvEXT_P(texunit, target, pname, params)}
var glMultiTexEnvfvEXT_P:@convention(c)(GLenum, GLenum, GLenum, UnsafePointer<GLfloat>) -> Void = glMultiTexEnvfvEXT_L
public func glMultiTexEnviEXT(_ texunit:GLenum, _ target:GLenum, _ pname:GLenum, _ param:GLint) {glMultiTexEnviEXT_P(texunit, target, pname, param)}
public func glMultiTexEnviEXT(texunit:GLenum, target:GLenum, pname:GLenum, param:GLint) {glMultiTexEnviEXT_P(texunit, target, pname, param)}
var glMultiTexEnviEXT_P:@convention(c)(GLenum, GLenum, GLenum, GLint) -> Void = glMultiTexEnviEXT_L
public func glMultiTexEnvivEXT(_ texunit:GLenum, _ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLint>) {glMultiTexEnvivEXT_P(texunit, target, pname, params)}
public func glMultiTexEnvivEXT(texunit:GLenum, target:GLenum, pname:GLenum, params:UnsafePointer<GLint>) {glMultiTexEnvivEXT_P(texunit, target, pname, params)}
var glMultiTexEnvivEXT_P:@convention(c)(GLenum, GLenum, GLenum, UnsafePointer<GLint>) -> Void = glMultiTexEnvivEXT_L
public func glMultiTexGendEXT(_ texunit:GLenum, _ coord:GLenum, _ pname:GLenum, _ param:GLdouble) {glMultiTexGendEXT_P(texunit, coord, pname, param)}
public func glMultiTexGendEXT(texunit:GLenum, coord:GLenum, pname:GLenum, param:GLdouble) {glMultiTexGendEXT_P(texunit, coord, pname, param)}
var glMultiTexGendEXT_P:@convention(c)(GLenum, GLenum, GLenum, GLdouble) -> Void = glMultiTexGendEXT_L
public func glMultiTexGendvEXT(_ texunit:GLenum, _ coord:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLdouble>) {glMultiTexGendvEXT_P(texunit, coord, pname, params)}
public func glMultiTexGendvEXT(texunit:GLenum, coord:GLenum, pname:GLenum, params:UnsafePointer<GLdouble>) {glMultiTexGendvEXT_P(texunit, coord, pname, params)}
var glMultiTexGendvEXT_P:@convention(c)(GLenum, GLenum, GLenum, UnsafePointer<GLdouble>) -> Void = glMultiTexGendvEXT_L
public func glMultiTexGenfEXT(_ texunit:GLenum, _ coord:GLenum, _ pname:GLenum, _ param:GLfloat) {glMultiTexGenfEXT_P(texunit, coord, pname, param)}
public func glMultiTexGenfEXT(texunit:GLenum, coord:GLenum, pname:GLenum, param:GLfloat) {glMultiTexGenfEXT_P(texunit, coord, pname, param)}
var glMultiTexGenfEXT_P:@convention(c)(GLenum, GLenum, GLenum, GLfloat) -> Void = glMultiTexGenfEXT_L
public func glMultiTexGenfvEXT(_ texunit:GLenum, _ coord:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLfloat>) {glMultiTexGenfvEXT_P(texunit, coord, pname, params)}
public func glMultiTexGenfvEXT(texunit:GLenum, coord:GLenum, pname:GLenum, params:UnsafePointer<GLfloat>) {glMultiTexGenfvEXT_P(texunit, coord, pname, params)}
var glMultiTexGenfvEXT_P:@convention(c)(GLenum, GLenum, GLenum, UnsafePointer<GLfloat>) -> Void = glMultiTexGenfvEXT_L
public func glMultiTexGeniEXT(_ texunit:GLenum, _ coord:GLenum, _ pname:GLenum, _ param:GLint) {glMultiTexGeniEXT_P(texunit, coord, pname, param)}
public func glMultiTexGeniEXT(texunit:GLenum, coord:GLenum, pname:GLenum, param:GLint) {glMultiTexGeniEXT_P(texunit, coord, pname, param)}
var glMultiTexGeniEXT_P:@convention(c)(GLenum, GLenum, GLenum, GLint) -> Void = glMultiTexGeniEXT_L
public func glMultiTexGenivEXT(_ texunit:GLenum, _ coord:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLint>) {glMultiTexGenivEXT_P(texunit, coord, pname, params)}
public func glMultiTexGenivEXT(texunit:GLenum, coord:GLenum, pname:GLenum, params:UnsafePointer<GLint>) {glMultiTexGenivEXT_P(texunit, coord, pname, params)}
var glMultiTexGenivEXT_P:@convention(c)(GLenum, GLenum, GLenum, UnsafePointer<GLint>) -> Void = glMultiTexGenivEXT_L
public func glMultiTexImage1DEXT(_ texunit:GLenum, _ target:GLenum, _ level:GLint, _ internalformat:GLint, _ width:GLsizei, _ border:GLint, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeRawPointer) {glMultiTexImage1DEXT_P(texunit, target, level, internalformat, width, border, format, type, pixels)}
public func glMultiTexImage1DEXT(texunit:GLenum, target:GLenum, level:GLint, internalformat:GLint, width:GLsizei, border:GLint, format:GLenum, type:GLenum, pixels:UnsafeRawPointer) {glMultiTexImage1DEXT_P(texunit, target, level, internalformat, width, border, format, type, pixels)}
var glMultiTexImage1DEXT_P:@convention(c)(GLenum, GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, UnsafeRawPointer) -> Void = glMultiTexImage1DEXT_L
public func glMultiTexImage2DEXT(_ texunit:GLenum, _ target:GLenum, _ level:GLint, _ internalformat:GLint, _ width:GLsizei, _ height:GLsizei, _ border:GLint, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeRawPointer) {glMultiTexImage2DEXT_P(texunit, target, level, internalformat, width, height, border, format, type, pixels)}
public func glMultiTexImage2DEXT(texunit:GLenum, target:GLenum, level:GLint, internalformat:GLint, width:GLsizei, height:GLsizei, border:GLint, format:GLenum, type:GLenum, pixels:UnsafeRawPointer) {glMultiTexImage2DEXT_P(texunit, target, level, internalformat, width, height, border, format, type, pixels)}
var glMultiTexImage2DEXT_P:@convention(c)(GLenum, GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, UnsafeRawPointer) -> Void = glMultiTexImage2DEXT_L
public func glMultiTexImage3DEXT(_ texunit:GLenum, _ target:GLenum, _ level:GLint, _ internalformat:GLint, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ border:GLint, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeRawPointer) {glMultiTexImage3DEXT_P(texunit, target, level, internalformat, width, height, depth, border, format, type, pixels)}
public func glMultiTexImage3DEXT(texunit:GLenum, target:GLenum, level:GLint, internalformat:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, border:GLint, format:GLenum, type:GLenum, pixels:UnsafeRawPointer) {glMultiTexImage3DEXT_P(texunit, target, level, internalformat, width, height, depth, border, format, type, pixels)}
var glMultiTexImage3DEXT_P:@convention(c)(GLenum, GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, UnsafeRawPointer) -> Void = glMultiTexImage3DEXT_L
public func glMultiTexParameterIivEXT(_ texunit:GLenum, _ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLint>) {glMultiTexParameterIivEXT_P(texunit, target, pname, params)}
public func glMultiTexParameterIivEXT(texunit:GLenum, target:GLenum, pname:GLenum, params:UnsafePointer<GLint>) {glMultiTexParameterIivEXT_P(texunit, target, pname, params)}
var glMultiTexParameterIivEXT_P:@convention(c)(GLenum, GLenum, GLenum, UnsafePointer<GLint>) -> Void = glMultiTexParameterIivEXT_L
public func glMultiTexParameterIuivEXT(_ texunit:GLenum, _ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLuint>) {glMultiTexParameterIuivEXT_P(texunit, target, pname, params)}
public func glMultiTexParameterIuivEXT(texunit:GLenum, target:GLenum, pname:GLenum, params:UnsafePointer<GLuint>) {glMultiTexParameterIuivEXT_P(texunit, target, pname, params)}
var glMultiTexParameterIuivEXT_P:@convention(c)(GLenum, GLenum, GLenum, UnsafePointer<GLuint>) -> Void = glMultiTexParameterIuivEXT_L
public func glMultiTexParameterfEXT(_ texunit:GLenum, _ target:GLenum, _ pname:GLenum, _ param:GLfloat) {glMultiTexParameterfEXT_P(texunit, target, pname, param)}
public func glMultiTexParameterfEXT(texunit:GLenum, target:GLenum, pname:GLenum, param:GLfloat) {glMultiTexParameterfEXT_P(texunit, target, pname, param)}
var glMultiTexParameterfEXT_P:@convention(c)(GLenum, GLenum, GLenum, GLfloat) -> Void = glMultiTexParameterfEXT_L
public func glMultiTexParameterfvEXT(_ texunit:GLenum, _ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLfloat>) {glMultiTexParameterfvEXT_P(texunit, target, pname, params)}
public func glMultiTexParameterfvEXT(texunit:GLenum, target:GLenum, pname:GLenum, params:UnsafePointer<GLfloat>) {glMultiTexParameterfvEXT_P(texunit, target, pname, params)}
var glMultiTexParameterfvEXT_P:@convention(c)(GLenum, GLenum, GLenum, UnsafePointer<GLfloat>) -> Void = glMultiTexParameterfvEXT_L
public func glMultiTexParameteriEXT(_ texunit:GLenum, _ target:GLenum, _ pname:GLenum, _ param:GLint) {glMultiTexParameteriEXT_P(texunit, target, pname, param)}
public func glMultiTexParameteriEXT(texunit:GLenum, target:GLenum, pname:GLenum, param:GLint) {glMultiTexParameteriEXT_P(texunit, target, pname, param)}
var glMultiTexParameteriEXT_P:@convention(c)(GLenum, GLenum, GLenum, GLint) -> Void = glMultiTexParameteriEXT_L
public func glMultiTexParameterivEXT(_ texunit:GLenum, _ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLint>) {glMultiTexParameterivEXT_P(texunit, target, pname, params)}
public func glMultiTexParameterivEXT(texunit:GLenum, target:GLenum, pname:GLenum, params:UnsafePointer<GLint>) {glMultiTexParameterivEXT_P(texunit, target, pname, params)}
var glMultiTexParameterivEXT_P:@convention(c)(GLenum, GLenum, GLenum, UnsafePointer<GLint>) -> Void = glMultiTexParameterivEXT_L
public func glMultiTexRenderbufferEXT(_ texunit:GLenum, _ target:GLenum, _ renderbuffer:GLuint) {glMultiTexRenderbufferEXT_P(texunit, target, renderbuffer)}
public func glMultiTexRenderbufferEXT(texunit:GLenum, target:GLenum, renderbuffer:GLuint) {glMultiTexRenderbufferEXT_P(texunit, target, renderbuffer)}
var glMultiTexRenderbufferEXT_P:@convention(c)(GLenum, GLenum, GLuint) -> Void = glMultiTexRenderbufferEXT_L
public func glMultiTexSubImage1DEXT(_ texunit:GLenum, _ target:GLenum, _ level:GLint, _ xoffset:GLint, _ width:GLsizei, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeRawPointer) {glMultiTexSubImage1DEXT_P(texunit, target, level, xoffset, width, format, type, pixels)}
public func glMultiTexSubImage1DEXT(texunit:GLenum, target:GLenum, level:GLint, xoffset:GLint, width:GLsizei, format:GLenum, type:GLenum, pixels:UnsafeRawPointer) {glMultiTexSubImage1DEXT_P(texunit, target, level, xoffset, width, format, type, pixels)}
var glMultiTexSubImage1DEXT_P:@convention(c)(GLenum, GLenum, GLint, GLint, GLsizei, GLenum, GLenum, UnsafeRawPointer) -> Void = glMultiTexSubImage1DEXT_L
public func glMultiTexSubImage2DEXT(_ texunit:GLenum, _ target:GLenum, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ width:GLsizei, _ height:GLsizei, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeRawPointer) {glMultiTexSubImage2DEXT_P(texunit, target, level, xoffset, yoffset, width, height, format, type, pixels)}
public func glMultiTexSubImage2DEXT(texunit:GLenum, target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, width:GLsizei, height:GLsizei, format:GLenum, type:GLenum, pixels:UnsafeRawPointer) {glMultiTexSubImage2DEXT_P(texunit, target, level, xoffset, yoffset, width, height, format, type, pixels)}
var glMultiTexSubImage2DEXT_P:@convention(c)(GLenum, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, UnsafeRawPointer) -> Void = glMultiTexSubImage2DEXT_L
public func glMultiTexSubImage3DEXT(_ texunit:GLenum, _ target:GLenum, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ zoffset:GLint, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeRawPointer) {glMultiTexSubImage3DEXT_P(texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)}
public func glMultiTexSubImage3DEXT(texunit:GLenum, target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, format:GLenum, type:GLenum, pixels:UnsafeRawPointer) {glMultiTexSubImage3DEXT_P(texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)}
var glMultiTexSubImage3DEXT_P:@convention(c)(GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, UnsafeRawPointer) -> Void = glMultiTexSubImage3DEXT_L
public func glNamedBufferData(_ buffer:GLuint, _ size:GLsizeiptr, _ data:UnsafeRawPointer, _ usage:GLenum) {glNamedBufferData_P(buffer, size, data, usage)}
public func glNamedBufferData(buffer:GLuint, size:GLsizeiptr, data:UnsafeRawPointer, usage:GLenum) {glNamedBufferData_P(buffer, size, data, usage)}
var glNamedBufferData_P:@convention(c)(GLuint, GLsizeiptr, UnsafeRawPointer, GLenum) -> Void = glNamedBufferData_L
public func glNamedBufferDataEXT(_ buffer:GLuint, _ size:GLsizeiptr, _ data:UnsafeRawPointer, _ usage:GLenum) {glNamedBufferDataEXT_P(buffer, size, data, usage)}
public func glNamedBufferDataEXT(buffer:GLuint, size:GLsizeiptr, data:UnsafeRawPointer, usage:GLenum) {glNamedBufferDataEXT_P(buffer, size, data, usage)}
var glNamedBufferDataEXT_P:@convention(c)(GLuint, GLsizeiptr, UnsafeRawPointer, GLenum) -> Void = glNamedBufferDataEXT_L
public func glNamedBufferPageCommitmentARB(_ buffer:GLuint, _ offset:GLintptr, _ size:GLsizeiptr, _ commit:GLboolean) {glNamedBufferPageCommitmentARB_P(buffer, offset, size, commit)}
public func glNamedBufferPageCommitmentARB(buffer:GLuint, offset:GLintptr, size:GLsizeiptr, commit:GLboolean) {glNamedBufferPageCommitmentARB_P(buffer, offset, size, commit)}
var glNamedBufferPageCommitmentARB_P:@convention(c)(GLuint, GLintptr, GLsizeiptr, GLboolean) -> Void = glNamedBufferPageCommitmentARB_L
public func glNamedBufferPageCommitmentEXT(_ buffer:GLuint, _ offset:GLintptr, _ size:GLsizeiptr, _ commit:GLboolean) {glNamedBufferPageCommitmentEXT_P(buffer, offset, size, commit)}
public func glNamedBufferPageCommitmentEXT(buffer:GLuint, offset:GLintptr, size:GLsizeiptr, commit:GLboolean) {glNamedBufferPageCommitmentEXT_P(buffer, offset, size, commit)}
var glNamedBufferPageCommitmentEXT_P:@convention(c)(GLuint, GLintptr, GLsizeiptr, GLboolean) -> Void = glNamedBufferPageCommitmentEXT_L
public func glNamedBufferStorage(_ buffer:GLuint, _ size:GLsizeiptr, _ data:UnsafeRawPointer, _ flags:GLbitfield) {glNamedBufferStorage_P(buffer, size, data, flags)}
public func glNamedBufferStorage(buffer:GLuint, size:GLsizeiptr, data:UnsafeRawPointer, flags:GLbitfield) {glNamedBufferStorage_P(buffer, size, data, flags)}
var glNamedBufferStorage_P:@convention(c)(GLuint, GLsizeiptr, UnsafeRawPointer, GLbitfield) -> Void = glNamedBufferStorage_L
public func glNamedBufferStorageEXT(_ buffer:GLuint, _ size:GLsizeiptr, _ data:UnsafeRawPointer, _ flags:GLbitfield) {glNamedBufferStorageEXT_P(buffer, size, data, flags)}
public func glNamedBufferStorageEXT(buffer:GLuint, size:GLsizeiptr, data:UnsafeRawPointer, flags:GLbitfield) {glNamedBufferStorageEXT_P(buffer, size, data, flags)}
var glNamedBufferStorageEXT_P:@convention(c)(GLuint, GLsizeiptr, UnsafeRawPointer, GLbitfield) -> Void = glNamedBufferStorageEXT_L
public func glNamedBufferSubData(_ buffer:GLuint, _ offset:GLintptr, _ size:GLsizeiptr, _ data:UnsafeRawPointer) {glNamedBufferSubData_P(buffer, offset, size, data)}
public func glNamedBufferSubData(buffer:GLuint, offset:GLintptr, size:GLsizeiptr, data:UnsafeRawPointer) {glNamedBufferSubData_P(buffer, offset, size, data)}
var glNamedBufferSubData_P:@convention(c)(GLuint, GLintptr, GLsizeiptr, UnsafeRawPointer) -> Void = glNamedBufferSubData_L
public func glNamedBufferSubDataEXT(_ buffer:GLuint, _ offset:GLintptr, _ size:GLsizeiptr, _ data:UnsafeRawPointer) {glNamedBufferSubDataEXT_P(buffer, offset, size, data)}
public func glNamedBufferSubDataEXT(buffer:GLuint, offset:GLintptr, size:GLsizeiptr, data:UnsafeRawPointer) {glNamedBufferSubDataEXT_P(buffer, offset, size, data)}
var glNamedBufferSubDataEXT_P:@convention(c)(GLuint, GLintptr, GLsizeiptr, UnsafeRawPointer) -> Void = glNamedBufferSubDataEXT_L
public func glNamedCopyBufferSubDataEXT(_ readBuffer:GLuint, _ writeBuffer:GLuint, _ readOffset:GLintptr, _ writeOffset:GLintptr, _ size:GLsizeiptr) {glNamedCopyBufferSubDataEXT_P(readBuffer, writeBuffer, readOffset, writeOffset, size)}
public func glNamedCopyBufferSubDataEXT(readBuffer:GLuint, writeBuffer:GLuint, readOffset:GLintptr, writeOffset:GLintptr, size:GLsizeiptr) {glNamedCopyBufferSubDataEXT_P(readBuffer, writeBuffer, readOffset, writeOffset, size)}
var glNamedCopyBufferSubDataEXT_P:@convention(c)(GLuint, GLuint, GLintptr, GLintptr, GLsizeiptr) -> Void = glNamedCopyBufferSubDataEXT_L
public func glNamedFramebufferDrawBuffer(_ framebuffer:GLuint, _ buf:GLenum) {glNamedFramebufferDrawBuffer_P(framebuffer, buf)}
public func glNamedFramebufferDrawBuffer(framebuffer:GLuint, buf:GLenum) {glNamedFramebufferDrawBuffer_P(framebuffer, buf)}
var glNamedFramebufferDrawBuffer_P:@convention(c)(GLuint, GLenum) -> Void = glNamedFramebufferDrawBuffer_L
public func glNamedFramebufferDrawBuffers(_ framebuffer:GLuint, _ n:GLsizei, _ bufs:UnsafePointer<GLenum>) {glNamedFramebufferDrawBuffers_P(framebuffer, n, bufs)}
public func glNamedFramebufferDrawBuffers(framebuffer:GLuint, n:GLsizei, bufs:UnsafePointer<GLenum>) {glNamedFramebufferDrawBuffers_P(framebuffer, n, bufs)}
var glNamedFramebufferDrawBuffers_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLenum>) -> Void = glNamedFramebufferDrawBuffers_L
public func glNamedFramebufferParameteri(_ framebuffer:GLuint, _ pname:GLenum, _ param:GLint) {glNamedFramebufferParameteri_P(framebuffer, pname, param)}
public func glNamedFramebufferParameteri(framebuffer:GLuint, pname:GLenum, param:GLint) {glNamedFramebufferParameteri_P(framebuffer, pname, param)}
var glNamedFramebufferParameteri_P:@convention(c)(GLuint, GLenum, GLint) -> Void = glNamedFramebufferParameteri_L
public func glNamedFramebufferParameteriEXT(_ framebuffer:GLuint, _ pname:GLenum, _ param:GLint) {glNamedFramebufferParameteriEXT_P(framebuffer, pname, param)}
public func glNamedFramebufferParameteriEXT(framebuffer:GLuint, pname:GLenum, param:GLint) {glNamedFramebufferParameteriEXT_P(framebuffer, pname, param)}
var glNamedFramebufferParameteriEXT_P:@convention(c)(GLuint, GLenum, GLint) -> Void = glNamedFramebufferParameteriEXT_L
public func glNamedFramebufferReadBuffer(_ framebuffer:GLuint, _ src:GLenum) {glNamedFramebufferReadBuffer_P(framebuffer, src)}
public func glNamedFramebufferReadBuffer(framebuffer:GLuint, src:GLenum) {glNamedFramebufferReadBuffer_P(framebuffer, src)}
var glNamedFramebufferReadBuffer_P:@convention(c)(GLuint, GLenum) -> Void = glNamedFramebufferReadBuffer_L
public func glNamedFramebufferRenderbuffer(_ framebuffer:GLuint, _ attachment:GLenum, _ renderbuffertarget:GLenum, _ renderbuffer:GLuint) {glNamedFramebufferRenderbuffer_P(framebuffer, attachment, renderbuffertarget, renderbuffer)}
public func glNamedFramebufferRenderbuffer(framebuffer:GLuint, attachment:GLenum, renderbuffertarget:GLenum, renderbuffer:GLuint) {glNamedFramebufferRenderbuffer_P(framebuffer, attachment, renderbuffertarget, renderbuffer)}
var glNamedFramebufferRenderbuffer_P:@convention(c)(GLuint, GLenum, GLenum, GLuint) -> Void = glNamedFramebufferRenderbuffer_L
public func glNamedFramebufferRenderbufferEXT(_ framebuffer:GLuint, _ attachment:GLenum, _ renderbuffertarget:GLenum, _ renderbuffer:GLuint) {glNamedFramebufferRenderbufferEXT_P(framebuffer, attachment, renderbuffertarget, renderbuffer)}
public func glNamedFramebufferRenderbufferEXT(framebuffer:GLuint, attachment:GLenum, renderbuffertarget:GLenum, renderbuffer:GLuint) {glNamedFramebufferRenderbufferEXT_P(framebuffer, attachment, renderbuffertarget, renderbuffer)}
var glNamedFramebufferRenderbufferEXT_P:@convention(c)(GLuint, GLenum, GLenum, GLuint) -> Void = glNamedFramebufferRenderbufferEXT_L
public func glNamedFramebufferSampleLocationsfvARB(_ framebuffer:GLuint, _ start:GLuint, _ count:GLsizei, _ v:UnsafePointer<GLfloat>) {glNamedFramebufferSampleLocationsfvARB_P(framebuffer, start, count, v)}
public func glNamedFramebufferSampleLocationsfvARB(framebuffer:GLuint, start:GLuint, count:GLsizei, v:UnsafePointer<GLfloat>) {glNamedFramebufferSampleLocationsfvARB_P(framebuffer, start, count, v)}
var glNamedFramebufferSampleLocationsfvARB_P:@convention(c)(GLuint, GLuint, GLsizei, UnsafePointer<GLfloat>) -> Void = glNamedFramebufferSampleLocationsfvARB_L
public func glNamedFramebufferSampleLocationsfvNV(_ framebuffer:GLuint, _ start:GLuint, _ count:GLsizei, _ v:UnsafePointer<GLfloat>) {glNamedFramebufferSampleLocationsfvNV_P(framebuffer, start, count, v)}
public func glNamedFramebufferSampleLocationsfvNV(framebuffer:GLuint, start:GLuint, count:GLsizei, v:UnsafePointer<GLfloat>) {glNamedFramebufferSampleLocationsfvNV_P(framebuffer, start, count, v)}
var glNamedFramebufferSampleLocationsfvNV_P:@convention(c)(GLuint, GLuint, GLsizei, UnsafePointer<GLfloat>) -> Void = glNamedFramebufferSampleLocationsfvNV_L
public func glNamedFramebufferTexture(_ framebuffer:GLuint, _ attachment:GLenum, _ texture:GLuint, _ level:GLint) {glNamedFramebufferTexture_P(framebuffer, attachment, texture, level)}
public func glNamedFramebufferTexture(framebuffer:GLuint, attachment:GLenum, texture:GLuint, level:GLint) {glNamedFramebufferTexture_P(framebuffer, attachment, texture, level)}
var glNamedFramebufferTexture_P:@convention(c)(GLuint, GLenum, GLuint, GLint) -> Void = glNamedFramebufferTexture_L
public func glNamedFramebufferTexture1DEXT(_ framebuffer:GLuint, _ attachment:GLenum, _ textarget:GLenum, _ texture:GLuint, _ level:GLint) {glNamedFramebufferTexture1DEXT_P(framebuffer, attachment, textarget, texture, level)}
public func glNamedFramebufferTexture1DEXT(framebuffer:GLuint, attachment:GLenum, textarget:GLenum, texture:GLuint, level:GLint) {glNamedFramebufferTexture1DEXT_P(framebuffer, attachment, textarget, texture, level)}
var glNamedFramebufferTexture1DEXT_P:@convention(c)(GLuint, GLenum, GLenum, GLuint, GLint) -> Void = glNamedFramebufferTexture1DEXT_L
public func glNamedFramebufferTexture2DEXT(_ framebuffer:GLuint, _ attachment:GLenum, _ textarget:GLenum, _ texture:GLuint, _ level:GLint) {glNamedFramebufferTexture2DEXT_P(framebuffer, attachment, textarget, texture, level)}
public func glNamedFramebufferTexture2DEXT(framebuffer:GLuint, attachment:GLenum, textarget:GLenum, texture:GLuint, level:GLint) {glNamedFramebufferTexture2DEXT_P(framebuffer, attachment, textarget, texture, level)}
var glNamedFramebufferTexture2DEXT_P:@convention(c)(GLuint, GLenum, GLenum, GLuint, GLint) -> Void = glNamedFramebufferTexture2DEXT_L
public func glNamedFramebufferTexture3DEXT(_ framebuffer:GLuint, _ attachment:GLenum, _ textarget:GLenum, _ texture:GLuint, _ level:GLint, _ zoffset:GLint) {glNamedFramebufferTexture3DEXT_P(framebuffer, attachment, textarget, texture, level, zoffset)}
public func glNamedFramebufferTexture3DEXT(framebuffer:GLuint, attachment:GLenum, textarget:GLenum, texture:GLuint, level:GLint, zoffset:GLint) {glNamedFramebufferTexture3DEXT_P(framebuffer, attachment, textarget, texture, level, zoffset)}
var glNamedFramebufferTexture3DEXT_P:@convention(c)(GLuint, GLenum, GLenum, GLuint, GLint, GLint) -> Void = glNamedFramebufferTexture3DEXT_L
public func glNamedFramebufferTextureEXT(_ framebuffer:GLuint, _ attachment:GLenum, _ texture:GLuint, _ level:GLint) {glNamedFramebufferTextureEXT_P(framebuffer, attachment, texture, level)}
public func glNamedFramebufferTextureEXT(framebuffer:GLuint, attachment:GLenum, texture:GLuint, level:GLint) {glNamedFramebufferTextureEXT_P(framebuffer, attachment, texture, level)}
var glNamedFramebufferTextureEXT_P:@convention(c)(GLuint, GLenum, GLuint, GLint) -> Void = glNamedFramebufferTextureEXT_L
public func glNamedFramebufferTextureFaceEXT(_ framebuffer:GLuint, _ attachment:GLenum, _ texture:GLuint, _ level:GLint, _ face:GLenum) {glNamedFramebufferTextureFaceEXT_P(framebuffer, attachment, texture, level, face)}
public func glNamedFramebufferTextureFaceEXT(framebuffer:GLuint, attachment:GLenum, texture:GLuint, level:GLint, face:GLenum) {glNamedFramebufferTextureFaceEXT_P(framebuffer, attachment, texture, level, face)}
var glNamedFramebufferTextureFaceEXT_P:@convention(c)(GLuint, GLenum, GLuint, GLint, GLenum) -> Void = glNamedFramebufferTextureFaceEXT_L
public func glNamedFramebufferTextureLayer(_ framebuffer:GLuint, _ attachment:GLenum, _ texture:GLuint, _ level:GLint, _ layer:GLint) {glNamedFramebufferTextureLayer_P(framebuffer, attachment, texture, level, layer)}
public func glNamedFramebufferTextureLayer(framebuffer:GLuint, attachment:GLenum, texture:GLuint, level:GLint, layer:GLint) {glNamedFramebufferTextureLayer_P(framebuffer, attachment, texture, level, layer)}
var glNamedFramebufferTextureLayer_P:@convention(c)(GLuint, GLenum, GLuint, GLint, GLint) -> Void = glNamedFramebufferTextureLayer_L
public func glNamedFramebufferTextureLayerEXT(_ framebuffer:GLuint, _ attachment:GLenum, _ texture:GLuint, _ level:GLint, _ layer:GLint) {glNamedFramebufferTextureLayerEXT_P(framebuffer, attachment, texture, level, layer)}
public func glNamedFramebufferTextureLayerEXT(framebuffer:GLuint, attachment:GLenum, texture:GLuint, level:GLint, layer:GLint) {glNamedFramebufferTextureLayerEXT_P(framebuffer, attachment, texture, level, layer)}
var glNamedFramebufferTextureLayerEXT_P:@convention(c)(GLuint, GLenum, GLuint, GLint, GLint) -> Void = glNamedFramebufferTextureLayerEXT_L
public func glNamedProgramLocalParameter4dEXT(_ program:GLuint, _ target:GLenum, _ index:GLuint, _ x:GLdouble, _ y:GLdouble, _ z:GLdouble, _ w:GLdouble) {glNamedProgramLocalParameter4dEXT_P(program, target, index, x, y, z, w)}
public func glNamedProgramLocalParameter4dEXT(program:GLuint, target:GLenum, index:GLuint, x:GLdouble, y:GLdouble, z:GLdouble, w:GLdouble) {glNamedProgramLocalParameter4dEXT_P(program, target, index, x, y, z, w)}
var glNamedProgramLocalParameter4dEXT_P:@convention(c)(GLuint, GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble) -> Void = glNamedProgramLocalParameter4dEXT_L
public func glNamedProgramLocalParameter4dvEXT(_ program:GLuint, _ target:GLenum, _ index:GLuint, _ params:UnsafePointer<GLdouble>) {glNamedProgramLocalParameter4dvEXT_P(program, target, index, params)}
public func glNamedProgramLocalParameter4dvEXT(program:GLuint, target:GLenum, index:GLuint, params:UnsafePointer<GLdouble>) {glNamedProgramLocalParameter4dvEXT_P(program, target, index, params)}
var glNamedProgramLocalParameter4dvEXT_P:@convention(c)(GLuint, GLenum, GLuint, UnsafePointer<GLdouble>) -> Void = glNamedProgramLocalParameter4dvEXT_L
public func glNamedProgramLocalParameter4fEXT(_ program:GLuint, _ target:GLenum, _ index:GLuint, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat, _ w:GLfloat) {glNamedProgramLocalParameter4fEXT_P(program, target, index, x, y, z, w)}
public func glNamedProgramLocalParameter4fEXT(program:GLuint, target:GLenum, index:GLuint, x:GLfloat, y:GLfloat, z:GLfloat, w:GLfloat) {glNamedProgramLocalParameter4fEXT_P(program, target, index, x, y, z, w)}
var glNamedProgramLocalParameter4fEXT_P:@convention(c)(GLuint, GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glNamedProgramLocalParameter4fEXT_L
public func glNamedProgramLocalParameter4fvEXT(_ program:GLuint, _ target:GLenum, _ index:GLuint, _ params:UnsafePointer<GLfloat>) {glNamedProgramLocalParameter4fvEXT_P(program, target, index, params)}
public func glNamedProgramLocalParameter4fvEXT(program:GLuint, target:GLenum, index:GLuint, params:UnsafePointer<GLfloat>) {glNamedProgramLocalParameter4fvEXT_P(program, target, index, params)}
var glNamedProgramLocalParameter4fvEXT_P:@convention(c)(GLuint, GLenum, GLuint, UnsafePointer<GLfloat>) -> Void = glNamedProgramLocalParameter4fvEXT_L
public func glNamedProgramLocalParameterI4iEXT(_ program:GLuint, _ target:GLenum, _ index:GLuint, _ x:GLint, _ y:GLint, _ z:GLint, _ w:GLint) {glNamedProgramLocalParameterI4iEXT_P(program, target, index, x, y, z, w)}
public func glNamedProgramLocalParameterI4iEXT(program:GLuint, target:GLenum, index:GLuint, x:GLint, y:GLint, z:GLint, w:GLint) {glNamedProgramLocalParameterI4iEXT_P(program, target, index, x, y, z, w)}
var glNamedProgramLocalParameterI4iEXT_P:@convention(c)(GLuint, GLenum, GLuint, GLint, GLint, GLint, GLint) -> Void = glNamedProgramLocalParameterI4iEXT_L
public func glNamedProgramLocalParameterI4ivEXT(_ program:GLuint, _ target:GLenum, _ index:GLuint, _ params:UnsafePointer<GLint>) {glNamedProgramLocalParameterI4ivEXT_P(program, target, index, params)}
public func glNamedProgramLocalParameterI4ivEXT(program:GLuint, target:GLenum, index:GLuint, params:UnsafePointer<GLint>) {glNamedProgramLocalParameterI4ivEXT_P(program, target, index, params)}
var glNamedProgramLocalParameterI4ivEXT_P:@convention(c)(GLuint, GLenum, GLuint, UnsafePointer<GLint>) -> Void = glNamedProgramLocalParameterI4ivEXT_L
public func glNamedProgramLocalParameterI4uiEXT(_ program:GLuint, _ target:GLenum, _ index:GLuint, _ x:GLuint, _ y:GLuint, _ z:GLuint, _ w:GLuint) {glNamedProgramLocalParameterI4uiEXT_P(program, target, index, x, y, z, w)}
public func glNamedProgramLocalParameterI4uiEXT(program:GLuint, target:GLenum, index:GLuint, x:GLuint, y:GLuint, z:GLuint, w:GLuint) {glNamedProgramLocalParameterI4uiEXT_P(program, target, index, x, y, z, w)}
var glNamedProgramLocalParameterI4uiEXT_P:@convention(c)(GLuint, GLenum, GLuint, GLuint, GLuint, GLuint, GLuint) -> Void = glNamedProgramLocalParameterI4uiEXT_L
public func glNamedProgramLocalParameterI4uivEXT(_ program:GLuint, _ target:GLenum, _ index:GLuint, _ params:UnsafePointer<GLuint>) {glNamedProgramLocalParameterI4uivEXT_P(program, target, index, params)}
public func glNamedProgramLocalParameterI4uivEXT(program:GLuint, target:GLenum, index:GLuint, params:UnsafePointer<GLuint>) {glNamedProgramLocalParameterI4uivEXT_P(program, target, index, params)}
var glNamedProgramLocalParameterI4uivEXT_P:@convention(c)(GLuint, GLenum, GLuint, UnsafePointer<GLuint>) -> Void = glNamedProgramLocalParameterI4uivEXT_L
public func glNamedProgramLocalParameters4fvEXT(_ program:GLuint, _ target:GLenum, _ index:GLuint, _ count:GLsizei, _ params:UnsafePointer<GLfloat>) {glNamedProgramLocalParameters4fvEXT_P(program, target, index, count, params)}
public func glNamedProgramLocalParameters4fvEXT(program:GLuint, target:GLenum, index:GLuint, count:GLsizei, params:UnsafePointer<GLfloat>) {glNamedProgramLocalParameters4fvEXT_P(program, target, index, count, params)}
var glNamedProgramLocalParameters4fvEXT_P:@convention(c)(GLuint, GLenum, GLuint, GLsizei, UnsafePointer<GLfloat>) -> Void = glNamedProgramLocalParameters4fvEXT_L
public func glNamedProgramLocalParametersI4ivEXT(_ program:GLuint, _ target:GLenum, _ index:GLuint, _ count:GLsizei, _ params:UnsafePointer<GLint>) {glNamedProgramLocalParametersI4ivEXT_P(program, target, index, count, params)}
public func glNamedProgramLocalParametersI4ivEXT(program:GLuint, target:GLenum, index:GLuint, count:GLsizei, params:UnsafePointer<GLint>) {glNamedProgramLocalParametersI4ivEXT_P(program, target, index, count, params)}
var glNamedProgramLocalParametersI4ivEXT_P:@convention(c)(GLuint, GLenum, GLuint, GLsizei, UnsafePointer<GLint>) -> Void = glNamedProgramLocalParametersI4ivEXT_L
public func glNamedProgramLocalParametersI4uivEXT(_ program:GLuint, _ target:GLenum, _ index:GLuint, _ count:GLsizei, _ params:UnsafePointer<GLuint>) {glNamedProgramLocalParametersI4uivEXT_P(program, target, index, count, params)}
public func glNamedProgramLocalParametersI4uivEXT(program:GLuint, target:GLenum, index:GLuint, count:GLsizei, params:UnsafePointer<GLuint>) {glNamedProgramLocalParametersI4uivEXT_P(program, target, index, count, params)}
var glNamedProgramLocalParametersI4uivEXT_P:@convention(c)(GLuint, GLenum, GLuint, GLsizei, UnsafePointer<GLuint>) -> Void = glNamedProgramLocalParametersI4uivEXT_L
public func glNamedProgramStringEXT(_ program:GLuint, _ target:GLenum, _ format:GLenum, _ len:GLsizei, _ string:UnsafeRawPointer) {glNamedProgramStringEXT_P(program, target, format, len, string)}
public func glNamedProgramStringEXT(program:GLuint, target:GLenum, format:GLenum, len:GLsizei, string:UnsafeRawPointer) {glNamedProgramStringEXT_P(program, target, format, len, string)}
var glNamedProgramStringEXT_P:@convention(c)(GLuint, GLenum, GLenum, GLsizei, UnsafeRawPointer) -> Void = glNamedProgramStringEXT_L
public func glNamedRenderbufferStorage(_ renderbuffer:GLuint, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei) {glNamedRenderbufferStorage_P(renderbuffer, internalformat, width, height)}
public func glNamedRenderbufferStorage(renderbuffer:GLuint, internalformat:GLenum, width:GLsizei, height:GLsizei) {glNamedRenderbufferStorage_P(renderbuffer, internalformat, width, height)}
var glNamedRenderbufferStorage_P:@convention(c)(GLuint, GLenum, GLsizei, GLsizei) -> Void = glNamedRenderbufferStorage_L
public func glNamedRenderbufferStorageEXT(_ renderbuffer:GLuint, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei) {glNamedRenderbufferStorageEXT_P(renderbuffer, internalformat, width, height)}
public func glNamedRenderbufferStorageEXT(renderbuffer:GLuint, internalformat:GLenum, width:GLsizei, height:GLsizei) {glNamedRenderbufferStorageEXT_P(renderbuffer, internalformat, width, height)}
var glNamedRenderbufferStorageEXT_P:@convention(c)(GLuint, GLenum, GLsizei, GLsizei) -> Void = glNamedRenderbufferStorageEXT_L
public func glNamedRenderbufferStorageMultisample(_ renderbuffer:GLuint, _ samples:GLsizei, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei) {glNamedRenderbufferStorageMultisample_P(renderbuffer, samples, internalformat, width, height)}
public func glNamedRenderbufferStorageMultisample(renderbuffer:GLuint, samples:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei) {glNamedRenderbufferStorageMultisample_P(renderbuffer, samples, internalformat, width, height)}
var glNamedRenderbufferStorageMultisample_P:@convention(c)(GLuint, GLsizei, GLenum, GLsizei, GLsizei) -> Void = glNamedRenderbufferStorageMultisample_L
public func glNamedRenderbufferStorageMultisampleCoverageEXT(_ renderbuffer:GLuint, _ coverageSamples:GLsizei, _ colorSamples:GLsizei, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei) {glNamedRenderbufferStorageMultisampleCoverageEXT_P(renderbuffer, coverageSamples, colorSamples, internalformat, width, height)}
public func glNamedRenderbufferStorageMultisampleCoverageEXT(renderbuffer:GLuint, coverageSamples:GLsizei, colorSamples:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei) {glNamedRenderbufferStorageMultisampleCoverageEXT_P(renderbuffer, coverageSamples, colorSamples, internalformat, width, height)}
var glNamedRenderbufferStorageMultisampleCoverageEXT_P:@convention(c)(GLuint, GLsizei, GLsizei, GLenum, GLsizei, GLsizei) -> Void = glNamedRenderbufferStorageMultisampleCoverageEXT_L
public func glNamedRenderbufferStorageMultisampleEXT(_ renderbuffer:GLuint, _ samples:GLsizei, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei) {glNamedRenderbufferStorageMultisampleEXT_P(renderbuffer, samples, internalformat, width, height)}
public func glNamedRenderbufferStorageMultisampleEXT(renderbuffer:GLuint, samples:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei) {glNamedRenderbufferStorageMultisampleEXT_P(renderbuffer, samples, internalformat, width, height)}
var glNamedRenderbufferStorageMultisampleEXT_P:@convention(c)(GLuint, GLsizei, GLenum, GLsizei, GLsizei) -> Void = glNamedRenderbufferStorageMultisampleEXT_L
public func glNamedStringARB(_ type:GLenum, _ namelen:GLint, _ name:UnsafePointer<GLchar>, _ stringlen:GLint, _ string:UnsafePointer<GLchar>) {glNamedStringARB_P(type, namelen, name, stringlen, string)}
public func glNamedStringARB(type:GLenum, namelen:GLint, name:UnsafePointer<GLchar>, stringlen:GLint, string:UnsafePointer<GLchar>) {glNamedStringARB_P(type, namelen, name, stringlen, string)}
var glNamedStringARB_P:@convention(c)(GLenum, GLint, UnsafePointer<GLchar>, GLint, UnsafePointer<GLchar>) -> Void = glNamedStringARB_L
public func glNewList(_ list:GLuint, _ mode:GLenum) {glNewList_P(list, mode)}
public func glNewList(list:GLuint, mode:GLenum) {glNewList_P(list, mode)}
var glNewList_P:@convention(c)(GLuint, GLenum) -> Void = glNewList_L
public func glNewObjectBufferATI(_ size:GLsizei, _ pointer:UnsafeRawPointer, _ usage:GLenum) -> GLuint {return glNewObjectBufferATI_P(size, pointer, usage)}
public func glNewObjectBufferATI(size:GLsizei, pointer:UnsafeRawPointer, usage:GLenum) -> GLuint {return glNewObjectBufferATI_P(size, pointer, usage)}
var glNewObjectBufferATI_P:@convention(c)(GLsizei, UnsafeRawPointer, GLenum) -> GLuint = glNewObjectBufferATI_L
public func glNormal3b(_ nx:GLbyte, _ ny:GLbyte, _ nz:GLbyte) {glNormal3b_P(nx, ny, nz)}
public func glNormal3b(nx:GLbyte, ny:GLbyte, nz:GLbyte) {glNormal3b_P(nx, ny, nz)}
var glNormal3b_P:@convention(c)(GLbyte, GLbyte, GLbyte) -> Void = glNormal3b_L
public func glNormal3bv(_ v:UnsafePointer<GLbyte>) {glNormal3bv_P(v)}
public func glNormal3bv(v:UnsafePointer<GLbyte>) {glNormal3bv_P(v)}
var glNormal3bv_P:@convention(c)(UnsafePointer<GLbyte>) -> Void = glNormal3bv_L
public func glNormal3d(_ nx:GLdouble, _ ny:GLdouble, _ nz:GLdouble) {glNormal3d_P(nx, ny, nz)}
public func glNormal3d(nx:GLdouble, ny:GLdouble, nz:GLdouble) {glNormal3d_P(nx, ny, nz)}
var glNormal3d_P:@convention(c)(GLdouble, GLdouble, GLdouble) -> Void = glNormal3d_L
public func glNormal3dv(_ v:UnsafePointer<GLdouble>) {glNormal3dv_P(v)}
public func glNormal3dv(v:UnsafePointer<GLdouble>) {glNormal3dv_P(v)}
var glNormal3dv_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glNormal3dv_L
public func glNormal3f(_ nx:GLfloat, _ ny:GLfloat, _ nz:GLfloat) {glNormal3f_P(nx, ny, nz)}
public func glNormal3f(nx:GLfloat, ny:GLfloat, nz:GLfloat) {glNormal3f_P(nx, ny, nz)}
var glNormal3f_P:@convention(c)(GLfloat, GLfloat, GLfloat) -> Void = glNormal3f_L
public func glNormal3fVertex3fSUN(_ nx:GLfloat, _ ny:GLfloat, _ nz:GLfloat, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat) {glNormal3fVertex3fSUN_P(nx, ny, nz, x, y, z)}
public func glNormal3fVertex3fSUN(nx:GLfloat, ny:GLfloat, nz:GLfloat, x:GLfloat, y:GLfloat, z:GLfloat) {glNormal3fVertex3fSUN_P(nx, ny, nz, x, y, z)}
var glNormal3fVertex3fSUN_P:@convention(c)(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glNormal3fVertex3fSUN_L
public func glNormal3fVertex3fvSUN(_ n:UnsafePointer<GLfloat>, _ v:UnsafePointer<GLfloat>) {glNormal3fVertex3fvSUN_P(n, v)}
public func glNormal3fVertex3fvSUN(n:UnsafePointer<GLfloat>, v:UnsafePointer<GLfloat>) {glNormal3fVertex3fvSUN_P(n, v)}
var glNormal3fVertex3fvSUN_P:@convention(c)(UnsafePointer<GLfloat>, UnsafePointer<GLfloat>) -> Void = glNormal3fVertex3fvSUN_L
public func glNormal3fv(_ v:UnsafePointer<GLfloat>) {glNormal3fv_P(v)}
public func glNormal3fv(v:UnsafePointer<GLfloat>) {glNormal3fv_P(v)}
var glNormal3fv_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glNormal3fv_L
public func glNormal3hNV(_ nx:GLhalfNV, _ ny:GLhalfNV, _ nz:GLhalfNV) {glNormal3hNV_P(nx, ny, nz)}
public func glNormal3hNV(nx:GLhalfNV, ny:GLhalfNV, nz:GLhalfNV) {glNormal3hNV_P(nx, ny, nz)}
var glNormal3hNV_P:@convention(c)(GLhalfNV, GLhalfNV, GLhalfNV) -> Void = glNormal3hNV_L
public func glNormal3hvNV(_ v:UnsafePointer<GLhalfNV>) {glNormal3hvNV_P(v)}
public func glNormal3hvNV(v:UnsafePointer<GLhalfNV>) {glNormal3hvNV_P(v)}
var glNormal3hvNV_P:@convention(c)(UnsafePointer<GLhalfNV>) -> Void = glNormal3hvNV_L
public func glNormal3i(_ nx:GLint, _ ny:GLint, _ nz:GLint) {glNormal3i_P(nx, ny, nz)}
public func glNormal3i(nx:GLint, ny:GLint, nz:GLint) {glNormal3i_P(nx, ny, nz)}
var glNormal3i_P:@convention(c)(GLint, GLint, GLint) -> Void = glNormal3i_L
public func glNormal3iv(_ v:UnsafePointer<GLint>) {glNormal3iv_P(v)}
public func glNormal3iv(v:UnsafePointer<GLint>) {glNormal3iv_P(v)}
var glNormal3iv_P:@convention(c)(UnsafePointer<GLint>) -> Void = glNormal3iv_L
public func glNormal3s(_ nx:GLshort, _ ny:GLshort, _ nz:GLshort) {glNormal3s_P(nx, ny, nz)}
public func glNormal3s(nx:GLshort, ny:GLshort, nz:GLshort) {glNormal3s_P(nx, ny, nz)}
var glNormal3s_P:@convention(c)(GLshort, GLshort, GLshort) -> Void = glNormal3s_L
public func glNormal3sv(_ v:UnsafePointer<GLshort>) {glNormal3sv_P(v)}
public func glNormal3sv(v:UnsafePointer<GLshort>) {glNormal3sv_P(v)}
var glNormal3sv_P:@convention(c)(UnsafePointer<GLshort>) -> Void = glNormal3sv_L
public func glNormal3x(_ nx:GLfixed, _ ny:GLfixed, _ nz:GLfixed) {glNormal3x_P(nx, ny, nz)}
public func glNormal3x(nx:GLfixed, ny:GLfixed, nz:GLfixed) {glNormal3x_P(nx, ny, nz)}
var glNormal3x_P:@convention(c)(GLfixed, GLfixed, GLfixed) -> Void = glNormal3x_L
public func glNormal3xOES(_ nx:GLfixed, _ ny:GLfixed, _ nz:GLfixed) {glNormal3xOES_P(nx, ny, nz)}
public func glNormal3xOES(nx:GLfixed, ny:GLfixed, nz:GLfixed) {glNormal3xOES_P(nx, ny, nz)}
var glNormal3xOES_P:@convention(c)(GLfixed, GLfixed, GLfixed) -> Void = glNormal3xOES_L
public func glNormal3xvOES(_ coords:UnsafePointer<GLfixed>) {glNormal3xvOES_P(coords)}
public func glNormal3xvOES(coords:UnsafePointer<GLfixed>) {glNormal3xvOES_P(coords)}
var glNormal3xvOES_P:@convention(c)(UnsafePointer<GLfixed>) -> Void = glNormal3xvOES_L
public func glNormalFormatNV(_ type:GLenum, _ stride:GLsizei) {glNormalFormatNV_P(type, stride)}
public func glNormalFormatNV(type:GLenum, stride:GLsizei) {glNormalFormatNV_P(type, stride)}
var glNormalFormatNV_P:@convention(c)(GLenum, GLsizei) -> Void = glNormalFormatNV_L
public func glNormalP3ui(_ type:GLenum, _ coords:GLuint) {glNormalP3ui_P(type, coords)}
public func glNormalP3ui(type:GLenum, coords:GLuint) {glNormalP3ui_P(type, coords)}
var glNormalP3ui_P:@convention(c)(GLenum, GLuint) -> Void = glNormalP3ui_L
public func glNormalP3uiv(_ type:GLenum, _ coords:UnsafePointer<GLuint>) {glNormalP3uiv_P(type, coords)}
public func glNormalP3uiv(type:GLenum, coords:UnsafePointer<GLuint>) {glNormalP3uiv_P(type, coords)}
var glNormalP3uiv_P:@convention(c)(GLenum, UnsafePointer<GLuint>) -> Void = glNormalP3uiv_L
public func glNormalPointer(_ type:GLenum, _ stride:GLsizei, _ pointer:UnsafeRawPointer) {glNormalPointer_P(type, stride, pointer)}
public func glNormalPointer(type:GLenum, stride:GLsizei, pointer:UnsafeRawPointer) {glNormalPointer_P(type, stride, pointer)}
var glNormalPointer_P:@convention(c)(GLenum, GLsizei, UnsafeRawPointer) -> Void = glNormalPointer_L
public func glNormalPointerEXT(_ type:GLenum, _ stride:GLsizei, _ count:GLsizei, _ pointer:UnsafeRawPointer) {glNormalPointerEXT_P(type, stride, count, pointer)}
public func glNormalPointerEXT(type:GLenum, stride:GLsizei, count:GLsizei, pointer:UnsafeRawPointer) {glNormalPointerEXT_P(type, stride, count, pointer)}
var glNormalPointerEXT_P:@convention(c)(GLenum, GLsizei, GLsizei, UnsafeRawPointer) -> Void = glNormalPointerEXT_L
public func glNormalPointerListIBM(_ type:GLenum, _ stride:GLint, _ pointer:UnsafeMutablePointer<UnsafeRawPointer>, _ ptrstride:GLint) {glNormalPointerListIBM_P(type, stride, pointer, ptrstride)}
public func glNormalPointerListIBM(type:GLenum, stride:GLint, pointer:UnsafeMutablePointer<UnsafeRawPointer>, ptrstride:GLint) {glNormalPointerListIBM_P(type, stride, pointer, ptrstride)}
var glNormalPointerListIBM_P:@convention(c)(GLenum, GLint, UnsafeMutablePointer<UnsafeRawPointer>, GLint) -> Void = glNormalPointerListIBM_L
public func glNormalPointervINTEL(_ type:GLenum, _ pointer:UnsafeMutablePointer<UnsafeRawPointer>) {glNormalPointervINTEL_P(type, pointer)}
public func glNormalPointervINTEL(type:GLenum, pointer:UnsafeMutablePointer<UnsafeRawPointer>) {glNormalPointervINTEL_P(type, pointer)}
var glNormalPointervINTEL_P:@convention(c)(GLenum, UnsafeMutablePointer<UnsafeRawPointer>) -> Void = glNormalPointervINTEL_L
public func glNormalStream3bATI(_ stream:GLenum, _ nx:GLbyte, _ ny:GLbyte, _ nz:GLbyte) {glNormalStream3bATI_P(stream, nx, ny, nz)}
public func glNormalStream3bATI(stream:GLenum, nx:GLbyte, ny:GLbyte, nz:GLbyte) {glNormalStream3bATI_P(stream, nx, ny, nz)}
var glNormalStream3bATI_P:@convention(c)(GLenum, GLbyte, GLbyte, GLbyte) -> Void = glNormalStream3bATI_L
public func glNormalStream3bvATI(_ stream:GLenum, _ coords:UnsafePointer<GLbyte>) {glNormalStream3bvATI_P(stream, coords)}
public func glNormalStream3bvATI(stream:GLenum, coords:UnsafePointer<GLbyte>) {glNormalStream3bvATI_P(stream, coords)}
var glNormalStream3bvATI_P:@convention(c)(GLenum, UnsafePointer<GLbyte>) -> Void = glNormalStream3bvATI_L
public func glNormalStream3dATI(_ stream:GLenum, _ nx:GLdouble, _ ny:GLdouble, _ nz:GLdouble) {glNormalStream3dATI_P(stream, nx, ny, nz)}
public func glNormalStream3dATI(stream:GLenum, nx:GLdouble, ny:GLdouble, nz:GLdouble) {glNormalStream3dATI_P(stream, nx, ny, nz)}
var glNormalStream3dATI_P:@convention(c)(GLenum, GLdouble, GLdouble, GLdouble) -> Void = glNormalStream3dATI_L
public func glNormalStream3dvATI(_ stream:GLenum, _ coords:UnsafePointer<GLdouble>) {glNormalStream3dvATI_P(stream, coords)}
public func glNormalStream3dvATI(stream:GLenum, coords:UnsafePointer<GLdouble>) {glNormalStream3dvATI_P(stream, coords)}
var glNormalStream3dvATI_P:@convention(c)(GLenum, UnsafePointer<GLdouble>) -> Void = glNormalStream3dvATI_L
public func glNormalStream3fATI(_ stream:GLenum, _ nx:GLfloat, _ ny:GLfloat, _ nz:GLfloat) {glNormalStream3fATI_P(stream, nx, ny, nz)}
public func glNormalStream3fATI(stream:GLenum, nx:GLfloat, ny:GLfloat, nz:GLfloat) {glNormalStream3fATI_P(stream, nx, ny, nz)}
var glNormalStream3fATI_P:@convention(c)(GLenum, GLfloat, GLfloat, GLfloat) -> Void = glNormalStream3fATI_L
public func glNormalStream3fvATI(_ stream:GLenum, _ coords:UnsafePointer<GLfloat>) {glNormalStream3fvATI_P(stream, coords)}
public func glNormalStream3fvATI(stream:GLenum, coords:UnsafePointer<GLfloat>) {glNormalStream3fvATI_P(stream, coords)}
var glNormalStream3fvATI_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glNormalStream3fvATI_L
public func glNormalStream3iATI(_ stream:GLenum, _ nx:GLint, _ ny:GLint, _ nz:GLint) {glNormalStream3iATI_P(stream, nx, ny, nz)}
public func glNormalStream3iATI(stream:GLenum, nx:GLint, ny:GLint, nz:GLint) {glNormalStream3iATI_P(stream, nx, ny, nz)}
var glNormalStream3iATI_P:@convention(c)(GLenum, GLint, GLint, GLint) -> Void = glNormalStream3iATI_L
public func glNormalStream3ivATI(_ stream:GLenum, _ coords:UnsafePointer<GLint>) {glNormalStream3ivATI_P(stream, coords)}
public func glNormalStream3ivATI(stream:GLenum, coords:UnsafePointer<GLint>) {glNormalStream3ivATI_P(stream, coords)}
var glNormalStream3ivATI_P:@convention(c)(GLenum, UnsafePointer<GLint>) -> Void = glNormalStream3ivATI_L
public func glNormalStream3sATI(_ stream:GLenum, _ nx:GLshort, _ ny:GLshort, _ nz:GLshort) {glNormalStream3sATI_P(stream, nx, ny, nz)}
public func glNormalStream3sATI(stream:GLenum, nx:GLshort, ny:GLshort, nz:GLshort) {glNormalStream3sATI_P(stream, nx, ny, nz)}
var glNormalStream3sATI_P:@convention(c)(GLenum, GLshort, GLshort, GLshort) -> Void = glNormalStream3sATI_L
public func glNormalStream3svATI(_ stream:GLenum, _ coords:UnsafePointer<GLshort>) {glNormalStream3svATI_P(stream, coords)}
public func glNormalStream3svATI(stream:GLenum, coords:UnsafePointer<GLshort>) {glNormalStream3svATI_P(stream, coords)}
var glNormalStream3svATI_P:@convention(c)(GLenum, UnsafePointer<GLshort>) -> Void = glNormalStream3svATI_L
public func glObjectLabel(_ identifier:GLenum, _ name:GLuint, _ length:GLsizei, _ label:UnsafePointer<GLchar>) {glObjectLabel_P(identifier, name, length, label)}
public func glObjectLabel(identifier:GLenum, name:GLuint, length:GLsizei, label:UnsafePointer<GLchar>) {glObjectLabel_P(identifier, name, length, label)}
var glObjectLabel_P:@convention(c)(GLenum, GLuint, GLsizei, UnsafePointer<GLchar>) -> Void = glObjectLabel_L
public func glObjectLabelKHR(_ identifier:GLenum, _ name:GLuint, _ length:GLsizei, _ label:UnsafePointer<GLchar>) {glObjectLabelKHR_P(identifier, name, length, label)}
public func glObjectLabelKHR(identifier:GLenum, name:GLuint, length:GLsizei, label:UnsafePointer<GLchar>) {glObjectLabelKHR_P(identifier, name, length, label)}
var glObjectLabelKHR_P:@convention(c)(GLenum, GLuint, GLsizei, UnsafePointer<GLchar>) -> Void = glObjectLabelKHR_L
public func glObjectPtrLabel(_ ptr:UnsafeRawPointer, _ length:GLsizei, _ label:UnsafePointer<GLchar>) {glObjectPtrLabel_P(ptr, length, label)}
public func glObjectPtrLabel(ptr:UnsafeRawPointer, length:GLsizei, label:UnsafePointer<GLchar>) {glObjectPtrLabel_P(ptr, length, label)}
var glObjectPtrLabel_P:@convention(c)(UnsafeRawPointer, GLsizei, UnsafePointer<GLchar>) -> Void = glObjectPtrLabel_L
public func glObjectPtrLabelKHR(_ ptr:UnsafeRawPointer, _ length:GLsizei, _ label:UnsafePointer<GLchar>) {glObjectPtrLabelKHR_P(ptr, length, label)}
public func glObjectPtrLabelKHR(ptr:UnsafeRawPointer, length:GLsizei, label:UnsafePointer<GLchar>) {glObjectPtrLabelKHR_P(ptr, length, label)}
var glObjectPtrLabelKHR_P:@convention(c)(UnsafeRawPointer, GLsizei, UnsafePointer<GLchar>) -> Void = glObjectPtrLabelKHR_L
public func glObjectPurgeableAPPLE(_ objectType:GLenum, _ name:GLuint, _ option:GLenum) -> GLenum {return glObjectPurgeableAPPLE_P(objectType, name, option)}
public func glObjectPurgeableAPPLE(objectType:GLenum, name:GLuint, option:GLenum) -> GLenum {return glObjectPurgeableAPPLE_P(objectType, name, option)}
var glObjectPurgeableAPPLE_P:@convention(c)(GLenum, GLuint, GLenum) -> GLenum = glObjectPurgeableAPPLE_L
public func glObjectUnpurgeableAPPLE(_ objectType:GLenum, _ name:GLuint, _ option:GLenum) -> GLenum {return glObjectUnpurgeableAPPLE_P(objectType, name, option)}
public func glObjectUnpurgeableAPPLE(objectType:GLenum, name:GLuint, option:GLenum) -> GLenum {return glObjectUnpurgeableAPPLE_P(objectType, name, option)}
var glObjectUnpurgeableAPPLE_P:@convention(c)(GLenum, GLuint, GLenum) -> GLenum = glObjectUnpurgeableAPPLE_L
public func glOrtho(_ left:GLdouble, _ right:GLdouble, _ bottom:GLdouble, _ top:GLdouble, _ zNear:GLdouble, _ zFar:GLdouble) {glOrtho_P(left, right, bottom, top, zNear, zFar)}
public func glOrtho(left:GLdouble, right:GLdouble, bottom:GLdouble, top:GLdouble, zNear:GLdouble, zFar:GLdouble) {glOrtho_P(left, right, bottom, top, zNear, zFar)}
var glOrtho_P:@convention(c)(GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble) -> Void = glOrtho_L
public func glOrthof(_ l:GLfloat, _ r:GLfloat, _ b:GLfloat, _ t:GLfloat, _ n:GLfloat, _ f:GLfloat) {glOrthof_P(l, r, b, t, n, f)}
public func glOrthof(l:GLfloat, r:GLfloat, b:GLfloat, t:GLfloat, n:GLfloat, f:GLfloat) {glOrthof_P(l, r, b, t, n, f)}
var glOrthof_P:@convention(c)(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glOrthof_L
public func glOrthofOES(_ l:GLfloat, _ r:GLfloat, _ b:GLfloat, _ t:GLfloat, _ n:GLfloat, _ f:GLfloat) {glOrthofOES_P(l, r, b, t, n, f)}
public func glOrthofOES(l:GLfloat, r:GLfloat, b:GLfloat, t:GLfloat, n:GLfloat, f:GLfloat) {glOrthofOES_P(l, r, b, t, n, f)}
var glOrthofOES_P:@convention(c)(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glOrthofOES_L
public func glOrthox(_ l:GLfixed, _ r:GLfixed, _ b:GLfixed, _ t:GLfixed, _ n:GLfixed, _ f:GLfixed) {glOrthox_P(l, r, b, t, n, f)}
public func glOrthox(l:GLfixed, r:GLfixed, b:GLfixed, t:GLfixed, n:GLfixed, f:GLfixed) {glOrthox_P(l, r, b, t, n, f)}
var glOrthox_P:@convention(c)(GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed) -> Void = glOrthox_L
public func glOrthoxOES(_ l:GLfixed, _ r:GLfixed, _ b:GLfixed, _ t:GLfixed, _ n:GLfixed, _ f:GLfixed) {glOrthoxOES_P(l, r, b, t, n, f)}
public func glOrthoxOES(l:GLfixed, r:GLfixed, b:GLfixed, t:GLfixed, n:GLfixed, f:GLfixed) {glOrthoxOES_P(l, r, b, t, n, f)}
var glOrthoxOES_P:@convention(c)(GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed) -> Void = glOrthoxOES_L
public func glPNTrianglesfATI(_ pname:GLenum, _ param:GLfloat) {glPNTrianglesfATI_P(pname, param)}
public func glPNTrianglesfATI(pname:GLenum, param:GLfloat) {glPNTrianglesfATI_P(pname, param)}
var glPNTrianglesfATI_P:@convention(c)(GLenum, GLfloat) -> Void = glPNTrianglesfATI_L
public func glPNTrianglesiATI(_ pname:GLenum, _ param:GLint) {glPNTrianglesiATI_P(pname, param)}
public func glPNTrianglesiATI(pname:GLenum, param:GLint) {glPNTrianglesiATI_P(pname, param)}
var glPNTrianglesiATI_P:@convention(c)(GLenum, GLint) -> Void = glPNTrianglesiATI_L
public func glPassTexCoordATI(_ dst:GLuint, _ coord:GLuint, _ swizzle:GLenum) {glPassTexCoordATI_P(dst, coord, swizzle)}
public func glPassTexCoordATI(dst:GLuint, coord:GLuint, swizzle:GLenum) {glPassTexCoordATI_P(dst, coord, swizzle)}
var glPassTexCoordATI_P:@convention(c)(GLuint, GLuint, GLenum) -> Void = glPassTexCoordATI_L
public func glPassThrough(_ token:GLfloat) {glPassThrough_P(token)}
public func glPassThrough(token:GLfloat) {glPassThrough_P(token)}
var glPassThrough_P:@convention(c)(GLfloat) -> Void = glPassThrough_L
public func glPassThroughxOES(_ token:GLfixed) {glPassThroughxOES_P(token)}
public func glPassThroughxOES(token:GLfixed) {glPassThroughxOES_P(token)}
var glPassThroughxOES_P:@convention(c)(GLfixed) -> Void = glPassThroughxOES_L
public func glPatchParameterfv(_ pname:GLenum, _ values:UnsafePointer<GLfloat>) {glPatchParameterfv_P(pname, values)}
public func glPatchParameterfv(pname:GLenum, values:UnsafePointer<GLfloat>) {glPatchParameterfv_P(pname, values)}
var glPatchParameterfv_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glPatchParameterfv_L
public func glPatchParameteri(_ pname:GLenum, _ value:GLint) {glPatchParameteri_P(pname, value)}
public func glPatchParameteri(pname:GLenum, value:GLint) {glPatchParameteri_P(pname, value)}
var glPatchParameteri_P:@convention(c)(GLenum, GLint) -> Void = glPatchParameteri_L
public func glPatchParameteriEXT(_ pname:GLenum, _ value:GLint) {glPatchParameteriEXT_P(pname, value)}
public func glPatchParameteriEXT(pname:GLenum, value:GLint) {glPatchParameteriEXT_P(pname, value)}
var glPatchParameteriEXT_P:@convention(c)(GLenum, GLint) -> Void = glPatchParameteriEXT_L
public func glPatchParameteriOES(_ pname:GLenum, _ value:GLint) {glPatchParameteriOES_P(pname, value)}
public func glPatchParameteriOES(pname:GLenum, value:GLint) {glPatchParameteriOES_P(pname, value)}
var glPatchParameteriOES_P:@convention(c)(GLenum, GLint) -> Void = glPatchParameteriOES_L
public func glPathColorGenNV(_ color:GLenum, _ genMode:GLenum, _ colorFormat:GLenum, _ coeffs:UnsafePointer<GLfloat>) {glPathColorGenNV_P(color, genMode, colorFormat, coeffs)}
public func glPathColorGenNV(color:GLenum, genMode:GLenum, colorFormat:GLenum, coeffs:UnsafePointer<GLfloat>) {glPathColorGenNV_P(color, genMode, colorFormat, coeffs)}
var glPathColorGenNV_P:@convention(c)(GLenum, GLenum, GLenum, UnsafePointer<GLfloat>) -> Void = glPathColorGenNV_L
public func glPathCommandsNV(_ path:GLuint, _ numCommands:GLsizei, _ commands:UnsafePointer<GLubyte>, _ numCoords:GLsizei, _ coordType:GLenum, _ coords:UnsafeRawPointer) {glPathCommandsNV_P(path, numCommands, commands, numCoords, coordType, coords)}
public func glPathCommandsNV(path:GLuint, numCommands:GLsizei, commands:UnsafePointer<GLubyte>, numCoords:GLsizei, coordType:GLenum, coords:UnsafeRawPointer) {glPathCommandsNV_P(path, numCommands, commands, numCoords, coordType, coords)}
var glPathCommandsNV_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLubyte>, GLsizei, GLenum, UnsafeRawPointer) -> Void = glPathCommandsNV_L
public func glPathCoordsNV(_ path:GLuint, _ numCoords:GLsizei, _ coordType:GLenum, _ coords:UnsafeRawPointer) {glPathCoordsNV_P(path, numCoords, coordType, coords)}
public func glPathCoordsNV(path:GLuint, numCoords:GLsizei, coordType:GLenum, coords:UnsafeRawPointer) {glPathCoordsNV_P(path, numCoords, coordType, coords)}
var glPathCoordsNV_P:@convention(c)(GLuint, GLsizei, GLenum, UnsafeRawPointer) -> Void = glPathCoordsNV_L
public func glPathCoverDepthFuncNV(_ fn:GLenum) {glPathCoverDepthFuncNV_P(fn)}
public func glPathCoverDepthFuncNV(fn:GLenum) {glPathCoverDepthFuncNV_P(fn)}
var glPathCoverDepthFuncNV_P:@convention(c)(GLenum) -> Void = glPathCoverDepthFuncNV_L
public func glPathDashArrayNV(_ path:GLuint, _ dashCount:GLsizei, _ dashArray:UnsafePointer<GLfloat>) {glPathDashArrayNV_P(path, dashCount, dashArray)}
public func glPathDashArrayNV(path:GLuint, dashCount:GLsizei, dashArray:UnsafePointer<GLfloat>) {glPathDashArrayNV_P(path, dashCount, dashArray)}
var glPathDashArrayNV_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLfloat>) -> Void = glPathDashArrayNV_L
public func glPathFogGenNV(_ genMode:GLenum) {glPathFogGenNV_P(genMode)}
public func glPathFogGenNV(genMode:GLenum) {glPathFogGenNV_P(genMode)}
var glPathFogGenNV_P:@convention(c)(GLenum) -> Void = glPathFogGenNV_L
public func glPathGlyphIndexArrayNV(_ firstPathName:GLuint, _ fontTarget:GLenum, _ fontName:UnsafeRawPointer, _ fontStyle:GLbitfield, _ firstGlyphIndex:GLuint, _ numGlyphs:GLsizei, _ pathParameterTemplate:GLuint, _ emScale:GLfloat) -> GLenum {return glPathGlyphIndexArrayNV_P(firstPathName, fontTarget, fontName, fontStyle, firstGlyphIndex, numGlyphs, pathParameterTemplate, emScale)}
public func glPathGlyphIndexArrayNV(firstPathName:GLuint, fontTarget:GLenum, fontName:UnsafeRawPointer, fontStyle:GLbitfield, firstGlyphIndex:GLuint, numGlyphs:GLsizei, pathParameterTemplate:GLuint, emScale:GLfloat) -> GLenum {return glPathGlyphIndexArrayNV_P(firstPathName, fontTarget, fontName, fontStyle, firstGlyphIndex, numGlyphs, pathParameterTemplate, emScale)}
var glPathGlyphIndexArrayNV_P:@convention(c)(GLuint, GLenum, UnsafeRawPointer, GLbitfield, GLuint, GLsizei, GLuint, GLfloat) -> GLenum = glPathGlyphIndexArrayNV_L
public func glPathGlyphIndexRangeNV(_ fontTarget:GLenum, _ fontName:UnsafeRawPointer, _ fontStyle:GLbitfield, _ pathParameterTemplate:GLuint, _ emScale:GLfloat, _ baseAndCount:GLuint) -> GLenum {return glPathGlyphIndexRangeNV_P(fontTarget, fontName, fontStyle, pathParameterTemplate, emScale, baseAndCount)}
public func glPathGlyphIndexRangeNV(fontTarget:GLenum, fontName:UnsafeRawPointer, fontStyle:GLbitfield, pathParameterTemplate:GLuint, emScale:GLfloat, baseAndCount:GLuint) -> GLenum {return glPathGlyphIndexRangeNV_P(fontTarget, fontName, fontStyle, pathParameterTemplate, emScale, baseAndCount)}
var glPathGlyphIndexRangeNV_P:@convention(c)(GLenum, UnsafeRawPointer, GLbitfield, GLuint, GLfloat, GLuint) -> GLenum = glPathGlyphIndexRangeNV_L
public func glPathGlyphRangeNV(_ firstPathName:GLuint, _ fontTarget:GLenum, _ fontName:UnsafeRawPointer, _ fontStyle:GLbitfield, _ firstGlyph:GLuint, _ numGlyphs:GLsizei, _ handleMissingGlyphs:GLenum, _ pathParameterTemplate:GLuint, _ emScale:GLfloat) {glPathGlyphRangeNV_P(firstPathName, fontTarget, fontName, fontStyle, firstGlyph, numGlyphs, handleMissingGlyphs, pathParameterTemplate, emScale)}
public func glPathGlyphRangeNV(firstPathName:GLuint, fontTarget:GLenum, fontName:UnsafeRawPointer, fontStyle:GLbitfield, firstGlyph:GLuint, numGlyphs:GLsizei, handleMissingGlyphs:GLenum, pathParameterTemplate:GLuint, emScale:GLfloat) {glPathGlyphRangeNV_P(firstPathName, fontTarget, fontName, fontStyle, firstGlyph, numGlyphs, handleMissingGlyphs, pathParameterTemplate, emScale)}
var glPathGlyphRangeNV_P:@convention(c)(GLuint, GLenum, UnsafeRawPointer, GLbitfield, GLuint, GLsizei, GLenum, GLuint, GLfloat) -> Void = glPathGlyphRangeNV_L
public func glPathGlyphsNV(_ firstPathName:GLuint, _ fontTarget:GLenum, _ fontName:UnsafeRawPointer, _ fontStyle:GLbitfield, _ numGlyphs:GLsizei, _ type:GLenum, _ charcodes:UnsafeRawPointer, _ handleMissingGlyphs:GLenum, _ pathParameterTemplate:GLuint, _ emScale:GLfloat) {glPathGlyphsNV_P(firstPathName, fontTarget, fontName, fontStyle, numGlyphs, type, charcodes, handleMissingGlyphs, pathParameterTemplate, emScale)}
public func glPathGlyphsNV(firstPathName:GLuint, fontTarget:GLenum, fontName:UnsafeRawPointer, fontStyle:GLbitfield, numGlyphs:GLsizei, type:GLenum, charcodes:UnsafeRawPointer, handleMissingGlyphs:GLenum, pathParameterTemplate:GLuint, emScale:GLfloat) {glPathGlyphsNV_P(firstPathName, fontTarget, fontName, fontStyle, numGlyphs, type, charcodes, handleMissingGlyphs, pathParameterTemplate, emScale)}
var glPathGlyphsNV_P:@convention(c)(GLuint, GLenum, UnsafeRawPointer, GLbitfield, GLsizei, GLenum, UnsafeRawPointer, GLenum, GLuint, GLfloat) -> Void = glPathGlyphsNV_L
public func glPathMemoryGlyphIndexArrayNV(_ firstPathName:GLuint, _ fontTarget:GLenum, _ fontSize:GLsizeiptr, _ fontData:UnsafeRawPointer, _ faceIndex:GLsizei, _ firstGlyphIndex:GLuint, _ numGlyphs:GLsizei, _ pathParameterTemplate:GLuint, _ emScale:GLfloat) -> GLenum {return glPathMemoryGlyphIndexArrayNV_P(firstPathName, fontTarget, fontSize, fontData, faceIndex, firstGlyphIndex, numGlyphs, pathParameterTemplate, emScale)}
public func glPathMemoryGlyphIndexArrayNV(firstPathName:GLuint, fontTarget:GLenum, fontSize:GLsizeiptr, fontData:UnsafeRawPointer, faceIndex:GLsizei, firstGlyphIndex:GLuint, numGlyphs:GLsizei, pathParameterTemplate:GLuint, emScale:GLfloat) -> GLenum {return glPathMemoryGlyphIndexArrayNV_P(firstPathName, fontTarget, fontSize, fontData, faceIndex, firstGlyphIndex, numGlyphs, pathParameterTemplate, emScale)}
var glPathMemoryGlyphIndexArrayNV_P:@convention(c)(GLuint, GLenum, GLsizeiptr, UnsafeRawPointer, GLsizei, GLuint, GLsizei, GLuint, GLfloat) -> GLenum = glPathMemoryGlyphIndexArrayNV_L
public func glPathParameterfNV(_ path:GLuint, _ pname:GLenum, _ value:GLfloat) {glPathParameterfNV_P(path, pname, value)}
public func glPathParameterfNV(path:GLuint, pname:GLenum, value:GLfloat) {glPathParameterfNV_P(path, pname, value)}
var glPathParameterfNV_P:@convention(c)(GLuint, GLenum, GLfloat) -> Void = glPathParameterfNV_L
public func glPathParameterfvNV(_ path:GLuint, _ pname:GLenum, _ value:UnsafePointer<GLfloat>) {glPathParameterfvNV_P(path, pname, value)}
public func glPathParameterfvNV(path:GLuint, pname:GLenum, value:UnsafePointer<GLfloat>) {glPathParameterfvNV_P(path, pname, value)}
var glPathParameterfvNV_P:@convention(c)(GLuint, GLenum, UnsafePointer<GLfloat>) -> Void = glPathParameterfvNV_L
public func glPathParameteriNV(_ path:GLuint, _ pname:GLenum, _ value:GLint) {glPathParameteriNV_P(path, pname, value)}
public func glPathParameteriNV(path:GLuint, pname:GLenum, value:GLint) {glPathParameteriNV_P(path, pname, value)}
var glPathParameteriNV_P:@convention(c)(GLuint, GLenum, GLint) -> Void = glPathParameteriNV_L
public func glPathParameterivNV(_ path:GLuint, _ pname:GLenum, _ value:UnsafePointer<GLint>) {glPathParameterivNV_P(path, pname, value)}
public func glPathParameterivNV(path:GLuint, pname:GLenum, value:UnsafePointer<GLint>) {glPathParameterivNV_P(path, pname, value)}
var glPathParameterivNV_P:@convention(c)(GLuint, GLenum, UnsafePointer<GLint>) -> Void = glPathParameterivNV_L
public func glPathStencilDepthOffsetNV(_ factor:GLfloat, _ units:GLfloat) {glPathStencilDepthOffsetNV_P(factor, units)}
public func glPathStencilDepthOffsetNV(factor:GLfloat, units:GLfloat) {glPathStencilDepthOffsetNV_P(factor, units)}
var glPathStencilDepthOffsetNV_P:@convention(c)(GLfloat, GLfloat) -> Void = glPathStencilDepthOffsetNV_L
public func glPathStencilFuncNV(_ fn:GLenum, _ ref:GLint, _ mask:GLuint) {glPathStencilFuncNV_P(fn, ref, mask)}
public func glPathStencilFuncNV(fn:GLenum, ref:GLint, mask:GLuint) {glPathStencilFuncNV_P(fn, ref, mask)}
var glPathStencilFuncNV_P:@convention(c)(GLenum, GLint, GLuint) -> Void = glPathStencilFuncNV_L
public func glPathStringNV(_ path:GLuint, _ format:GLenum, _ length:GLsizei, _ pathString:UnsafeRawPointer) {glPathStringNV_P(path, format, length, pathString)}
public func glPathStringNV(path:GLuint, format:GLenum, length:GLsizei, pathString:UnsafeRawPointer) {glPathStringNV_P(path, format, length, pathString)}
var glPathStringNV_P:@convention(c)(GLuint, GLenum, GLsizei, UnsafeRawPointer) -> Void = glPathStringNV_L
public func glPathSubCommandsNV(_ path:GLuint, _ commandStart:GLsizei, _ commandsToDelete:GLsizei, _ numCommands:GLsizei, _ commands:UnsafePointer<GLubyte>, _ numCoords:GLsizei, _ coordType:GLenum, _ coords:UnsafeRawPointer) {glPathSubCommandsNV_P(path, commandStart, commandsToDelete, numCommands, commands, numCoords, coordType, coords)}
public func glPathSubCommandsNV(path:GLuint, commandStart:GLsizei, commandsToDelete:GLsizei, numCommands:GLsizei, commands:UnsafePointer<GLubyte>, numCoords:GLsizei, coordType:GLenum, coords:UnsafeRawPointer) {glPathSubCommandsNV_P(path, commandStart, commandsToDelete, numCommands, commands, numCoords, coordType, coords)}
var glPathSubCommandsNV_P:@convention(c)(GLuint, GLsizei, GLsizei, GLsizei, UnsafePointer<GLubyte>, GLsizei, GLenum, UnsafeRawPointer) -> Void = glPathSubCommandsNV_L
public func glPathSubCoordsNV(_ path:GLuint, _ coordStart:GLsizei, _ numCoords:GLsizei, _ coordType:GLenum, _ coords:UnsafeRawPointer) {glPathSubCoordsNV_P(path, coordStart, numCoords, coordType, coords)}
public func glPathSubCoordsNV(path:GLuint, coordStart:GLsizei, numCoords:GLsizei, coordType:GLenum, coords:UnsafeRawPointer) {glPathSubCoordsNV_P(path, coordStart, numCoords, coordType, coords)}
var glPathSubCoordsNV_P:@convention(c)(GLuint, GLsizei, GLsizei, GLenum, UnsafeRawPointer) -> Void = glPathSubCoordsNV_L
public func glPathTexGenNV(_ texCoordSet:GLenum, _ genMode:GLenum, _ components:GLint, _ coeffs:UnsafePointer<GLfloat>) {glPathTexGenNV_P(texCoordSet, genMode, components, coeffs)}
public func glPathTexGenNV(texCoordSet:GLenum, genMode:GLenum, components:GLint, coeffs:UnsafePointer<GLfloat>) {glPathTexGenNV_P(texCoordSet, genMode, components, coeffs)}
var glPathTexGenNV_P:@convention(c)(GLenum, GLenum, GLint, UnsafePointer<GLfloat>) -> Void = glPathTexGenNV_L
public func glPauseTransformFeedback() {glPauseTransformFeedback_P()}
var glPauseTransformFeedback_P:@convention(c)() -> Void = glPauseTransformFeedback_L
public func glPauseTransformFeedbackNV() {glPauseTransformFeedbackNV_P()}
var glPauseTransformFeedbackNV_P:@convention(c)() -> Void = glPauseTransformFeedbackNV_L
public func glPixelDataRangeNV(_ target:GLenum, _ length:GLsizei, _ pointer:UnsafeRawPointer) {glPixelDataRangeNV_P(target, length, pointer)}
public func glPixelDataRangeNV(target:GLenum, length:GLsizei, pointer:UnsafeRawPointer) {glPixelDataRangeNV_P(target, length, pointer)}
var glPixelDataRangeNV_P:@convention(c)(GLenum, GLsizei, UnsafeRawPointer) -> Void = glPixelDataRangeNV_L
public func glPixelMapfv(_ map:GLenum, _ mapsize:GLsizei, _ values:UnsafePointer<GLfloat>) {glPixelMapfv_P(map, mapsize, values)}
public func glPixelMapfv(map:GLenum, mapsize:GLsizei, values:UnsafePointer<GLfloat>) {glPixelMapfv_P(map, mapsize, values)}
var glPixelMapfv_P:@convention(c)(GLenum, GLsizei, UnsafePointer<GLfloat>) -> Void = glPixelMapfv_L
public func glPixelMapuiv(_ map:GLenum, _ mapsize:GLsizei, _ values:UnsafePointer<GLuint>) {glPixelMapuiv_P(map, mapsize, values)}
public func glPixelMapuiv(map:GLenum, mapsize:GLsizei, values:UnsafePointer<GLuint>) {glPixelMapuiv_P(map, mapsize, values)}
var glPixelMapuiv_P:@convention(c)(GLenum, GLsizei, UnsafePointer<GLuint>) -> Void = glPixelMapuiv_L
public func glPixelMapusv(_ map:GLenum, _ mapsize:GLsizei, _ values:UnsafePointer<GLushort>) {glPixelMapusv_P(map, mapsize, values)}
public func glPixelMapusv(map:GLenum, mapsize:GLsizei, values:UnsafePointer<GLushort>) {glPixelMapusv_P(map, mapsize, values)}
var glPixelMapusv_P:@convention(c)(GLenum, GLsizei, UnsafePointer<GLushort>) -> Void = glPixelMapusv_L
public func glPixelMapx(_ map:GLenum, _ size:GLint, _ values:UnsafePointer<GLfixed>) {glPixelMapx_P(map, size, values)}
public func glPixelMapx(map:GLenum, size:GLint, values:UnsafePointer<GLfixed>) {glPixelMapx_P(map, size, values)}
var glPixelMapx_P:@convention(c)(GLenum, GLint, UnsafePointer<GLfixed>) -> Void = glPixelMapx_L
public func glPixelStoref(_ pname:GLenum, _ param:GLfloat) {glPixelStoref_P(pname, param)}
public func glPixelStoref(pname:GLenum, param:GLfloat) {glPixelStoref_P(pname, param)}
var glPixelStoref_P:@convention(c)(GLenum, GLfloat) -> Void = glPixelStoref_L
public func glPixelStorei(_ pname:GLenum, _ param:GLint) {glPixelStorei_P(pname, param)}
public func glPixelStorei(pname:GLenum, param:GLint) {glPixelStorei_P(pname, param)}
var glPixelStorei_P:@convention(c)(GLenum, GLint) -> Void = glPixelStorei_L
public func glPixelStorex(_ pname:GLenum, _ param:GLfixed) {glPixelStorex_P(pname, param)}
public func glPixelStorex(pname:GLenum, param:GLfixed) {glPixelStorex_P(pname, param)}
var glPixelStorex_P:@convention(c)(GLenum, GLfixed) -> Void = glPixelStorex_L
public func glPixelTexGenParameterfSGIS(_ pname:GLenum, _ param:GLfloat) {glPixelTexGenParameterfSGIS_P(pname, param)}
public func glPixelTexGenParameterfSGIS(pname:GLenum, param:GLfloat) {glPixelTexGenParameterfSGIS_P(pname, param)}
var glPixelTexGenParameterfSGIS_P:@convention(c)(GLenum, GLfloat) -> Void = glPixelTexGenParameterfSGIS_L
public func glPixelTexGenParameterfvSGIS(_ pname:GLenum, _ params:UnsafePointer<GLfloat>) {glPixelTexGenParameterfvSGIS_P(pname, params)}
public func glPixelTexGenParameterfvSGIS(pname:GLenum, params:UnsafePointer<GLfloat>) {glPixelTexGenParameterfvSGIS_P(pname, params)}
var glPixelTexGenParameterfvSGIS_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glPixelTexGenParameterfvSGIS_L
public func glPixelTexGenParameteriSGIS(_ pname:GLenum, _ param:GLint) {glPixelTexGenParameteriSGIS_P(pname, param)}
public func glPixelTexGenParameteriSGIS(pname:GLenum, param:GLint) {glPixelTexGenParameteriSGIS_P(pname, param)}
var glPixelTexGenParameteriSGIS_P:@convention(c)(GLenum, GLint) -> Void = glPixelTexGenParameteriSGIS_L
public func glPixelTexGenParameterivSGIS(_ pname:GLenum, _ params:UnsafePointer<GLint>) {glPixelTexGenParameterivSGIS_P(pname, params)}
public func glPixelTexGenParameterivSGIS(pname:GLenum, params:UnsafePointer<GLint>) {glPixelTexGenParameterivSGIS_P(pname, params)}
var glPixelTexGenParameterivSGIS_P:@convention(c)(GLenum, UnsafePointer<GLint>) -> Void = glPixelTexGenParameterivSGIS_L
public func glPixelTexGenSGIX(_ mode:GLenum) {glPixelTexGenSGIX_P(mode)}
public func glPixelTexGenSGIX(mode:GLenum) {glPixelTexGenSGIX_P(mode)}
var glPixelTexGenSGIX_P:@convention(c)(GLenum) -> Void = glPixelTexGenSGIX_L
public func glPixelTransferf(_ pname:GLenum, _ param:GLfloat) {glPixelTransferf_P(pname, param)}
public func glPixelTransferf(pname:GLenum, param:GLfloat) {glPixelTransferf_P(pname, param)}
var glPixelTransferf_P:@convention(c)(GLenum, GLfloat) -> Void = glPixelTransferf_L
public func glPixelTransferi(_ pname:GLenum, _ param:GLint) {glPixelTransferi_P(pname, param)}
public func glPixelTransferi(pname:GLenum, param:GLint) {glPixelTransferi_P(pname, param)}
var glPixelTransferi_P:@convention(c)(GLenum, GLint) -> Void = glPixelTransferi_L
public func glPixelTransferxOES(_ pname:GLenum, _ param:GLfixed) {glPixelTransferxOES_P(pname, param)}
public func glPixelTransferxOES(pname:GLenum, param:GLfixed) {glPixelTransferxOES_P(pname, param)}
var glPixelTransferxOES_P:@convention(c)(GLenum, GLfixed) -> Void = glPixelTransferxOES_L
public func glPixelTransformParameterfEXT(_ target:GLenum, _ pname:GLenum, _ param:GLfloat) {glPixelTransformParameterfEXT_P(target, pname, param)}
public func glPixelTransformParameterfEXT(target:GLenum, pname:GLenum, param:GLfloat) {glPixelTransformParameterfEXT_P(target, pname, param)}
var glPixelTransformParameterfEXT_P:@convention(c)(GLenum, GLenum, GLfloat) -> Void = glPixelTransformParameterfEXT_L
public func glPixelTransformParameterfvEXT(_ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLfloat>) {glPixelTransformParameterfvEXT_P(target, pname, params)}
public func glPixelTransformParameterfvEXT(target:GLenum, pname:GLenum, params:UnsafePointer<GLfloat>) {glPixelTransformParameterfvEXT_P(target, pname, params)}
var glPixelTransformParameterfvEXT_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLfloat>) -> Void = glPixelTransformParameterfvEXT_L
public func glPixelTransformParameteriEXT(_ target:GLenum, _ pname:GLenum, _ param:GLint) {glPixelTransformParameteriEXT_P(target, pname, param)}
public func glPixelTransformParameteriEXT(target:GLenum, pname:GLenum, param:GLint) {glPixelTransformParameteriEXT_P(target, pname, param)}
var glPixelTransformParameteriEXT_P:@convention(c)(GLenum, GLenum, GLint) -> Void = glPixelTransformParameteriEXT_L
public func glPixelTransformParameterivEXT(_ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLint>) {glPixelTransformParameterivEXT_P(target, pname, params)}
public func glPixelTransformParameterivEXT(target:GLenum, pname:GLenum, params:UnsafePointer<GLint>) {glPixelTransformParameterivEXT_P(target, pname, params)}
var glPixelTransformParameterivEXT_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLint>) -> Void = glPixelTransformParameterivEXT_L
public func glPixelZoom(_ xfactor:GLfloat, _ yfactor:GLfloat) {glPixelZoom_P(xfactor, yfactor)}
public func glPixelZoom(xfactor:GLfloat, yfactor:GLfloat) {glPixelZoom_P(xfactor, yfactor)}
var glPixelZoom_P:@convention(c)(GLfloat, GLfloat) -> Void = glPixelZoom_L
public func glPixelZoomxOES(_ xfactor:GLfixed, _ yfactor:GLfixed) {glPixelZoomxOES_P(xfactor, yfactor)}
public func glPixelZoomxOES(xfactor:GLfixed, yfactor:GLfixed) {glPixelZoomxOES_P(xfactor, yfactor)}
var glPixelZoomxOES_P:@convention(c)(GLfixed, GLfixed) -> Void = glPixelZoomxOES_L
public func glPointAlongPathNV(_ path:GLuint, _ startSegment:GLsizei, _ numSegments:GLsizei, _ distance:GLfloat, _ x:UnsafeMutablePointer<GLfloat>, _ y:UnsafeMutablePointer<GLfloat>, _ tangentX:UnsafeMutablePointer<GLfloat>, _ tangentY:UnsafeMutablePointer<GLfloat>) -> GLboolean {return glPointAlongPathNV_P(path, startSegment, numSegments, distance, x, y, tangentX, tangentY)}
public func glPointAlongPathNV(path:GLuint, startSegment:GLsizei, numSegments:GLsizei, distance:GLfloat, x:UnsafeMutablePointer<GLfloat>, y:UnsafeMutablePointer<GLfloat>, tangentX:UnsafeMutablePointer<GLfloat>, tangentY:UnsafeMutablePointer<GLfloat>) -> GLboolean {return glPointAlongPathNV_P(path, startSegment, numSegments, distance, x, y, tangentX, tangentY)}
var glPointAlongPathNV_P:@convention(c)(GLuint, GLsizei, GLsizei, GLfloat, UnsafeMutablePointer<GLfloat>, UnsafeMutablePointer<GLfloat>, UnsafeMutablePointer<GLfloat>, UnsafeMutablePointer<GLfloat>) -> GLboolean = glPointAlongPathNV_L
public func glPointParameterf(_ pname:GLenum, _ param:GLfloat) {glPointParameterf_P(pname, param)}
public func glPointParameterf(pname:GLenum, param:GLfloat) {glPointParameterf_P(pname, param)}
var glPointParameterf_P:@convention(c)(GLenum, GLfloat) -> Void = glPointParameterf_L
public func glPointParameterfARB(_ pname:GLenum, _ param:GLfloat) {glPointParameterfARB_P(pname, param)}
public func glPointParameterfARB(pname:GLenum, param:GLfloat) {glPointParameterfARB_P(pname, param)}
var glPointParameterfARB_P:@convention(c)(GLenum, GLfloat) -> Void = glPointParameterfARB_L
public func glPointParameterfEXT(_ pname:GLenum, _ param:GLfloat) {glPointParameterfEXT_P(pname, param)}
public func glPointParameterfEXT(pname:GLenum, param:GLfloat) {glPointParameterfEXT_P(pname, param)}
var glPointParameterfEXT_P:@convention(c)(GLenum, GLfloat) -> Void = glPointParameterfEXT_L
public func glPointParameterfSGIS(_ pname:GLenum, _ param:GLfloat) {glPointParameterfSGIS_P(pname, param)}
public func glPointParameterfSGIS(pname:GLenum, param:GLfloat) {glPointParameterfSGIS_P(pname, param)}
var glPointParameterfSGIS_P:@convention(c)(GLenum, GLfloat) -> Void = glPointParameterfSGIS_L
public func glPointParameterfv(_ pname:GLenum, _ params:UnsafePointer<GLfloat>) {glPointParameterfv_P(pname, params)}
public func glPointParameterfv(pname:GLenum, params:UnsafePointer<GLfloat>) {glPointParameterfv_P(pname, params)}
var glPointParameterfv_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glPointParameterfv_L
public func glPointParameterfvARB(_ pname:GLenum, _ params:UnsafePointer<GLfloat>) {glPointParameterfvARB_P(pname, params)}
public func glPointParameterfvARB(pname:GLenum, params:UnsafePointer<GLfloat>) {glPointParameterfvARB_P(pname, params)}
var glPointParameterfvARB_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glPointParameterfvARB_L
public func glPointParameterfvEXT(_ pname:GLenum, _ params:UnsafePointer<GLfloat>) {glPointParameterfvEXT_P(pname, params)}
public func glPointParameterfvEXT(pname:GLenum, params:UnsafePointer<GLfloat>) {glPointParameterfvEXT_P(pname, params)}
var glPointParameterfvEXT_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glPointParameterfvEXT_L
public func glPointParameterfvSGIS(_ pname:GLenum, _ params:UnsafePointer<GLfloat>) {glPointParameterfvSGIS_P(pname, params)}
public func glPointParameterfvSGIS(pname:GLenum, params:UnsafePointer<GLfloat>) {glPointParameterfvSGIS_P(pname, params)}
var glPointParameterfvSGIS_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glPointParameterfvSGIS_L
public func glPointParameteri(_ pname:GLenum, _ param:GLint) {glPointParameteri_P(pname, param)}
public func glPointParameteri(pname:GLenum, param:GLint) {glPointParameteri_P(pname, param)}
var glPointParameteri_P:@convention(c)(GLenum, GLint) -> Void = glPointParameteri_L
public func glPointParameteriNV(_ pname:GLenum, _ param:GLint) {glPointParameteriNV_P(pname, param)}
public func glPointParameteriNV(pname:GLenum, param:GLint) {glPointParameteriNV_P(pname, param)}
var glPointParameteriNV_P:@convention(c)(GLenum, GLint) -> Void = glPointParameteriNV_L
public func glPointParameteriv(_ pname:GLenum, _ params:UnsafePointer<GLint>) {glPointParameteriv_P(pname, params)}
public func glPointParameteriv(pname:GLenum, params:UnsafePointer<GLint>) {glPointParameteriv_P(pname, params)}
var glPointParameteriv_P:@convention(c)(GLenum, UnsafePointer<GLint>) -> Void = glPointParameteriv_L
public func glPointParameterivNV(_ pname:GLenum, _ params:UnsafePointer<GLint>) {glPointParameterivNV_P(pname, params)}
public func glPointParameterivNV(pname:GLenum, params:UnsafePointer<GLint>) {glPointParameterivNV_P(pname, params)}
var glPointParameterivNV_P:@convention(c)(GLenum, UnsafePointer<GLint>) -> Void = glPointParameterivNV_L
public func glPointParameterx(_ pname:GLenum, _ param:GLfixed) {glPointParameterx_P(pname, param)}
public func glPointParameterx(pname:GLenum, param:GLfixed) {glPointParameterx_P(pname, param)}
var glPointParameterx_P:@convention(c)(GLenum, GLfixed) -> Void = glPointParameterx_L
public func glPointParameterxOES(_ pname:GLenum, _ param:GLfixed) {glPointParameterxOES_P(pname, param)}
public func glPointParameterxOES(pname:GLenum, param:GLfixed) {glPointParameterxOES_P(pname, param)}
var glPointParameterxOES_P:@convention(c)(GLenum, GLfixed) -> Void = glPointParameterxOES_L
public func glPointParameterxv(_ pname:GLenum, _ params:UnsafePointer<GLfixed>) {glPointParameterxv_P(pname, params)}
public func glPointParameterxv(pname:GLenum, params:UnsafePointer<GLfixed>) {glPointParameterxv_P(pname, params)}
var glPointParameterxv_P:@convention(c)(GLenum, UnsafePointer<GLfixed>) -> Void = glPointParameterxv_L
public func glPointParameterxvOES(_ pname:GLenum, _ params:UnsafePointer<GLfixed>) {glPointParameterxvOES_P(pname, params)}
public func glPointParameterxvOES(pname:GLenum, params:UnsafePointer<GLfixed>) {glPointParameterxvOES_P(pname, params)}
var glPointParameterxvOES_P:@convention(c)(GLenum, UnsafePointer<GLfixed>) -> Void = glPointParameterxvOES_L
public func glPointSize(_ size:GLfloat) {glPointSize_P(size)}
public func glPointSize(size:GLfloat) {glPointSize_P(size)}
var glPointSize_P:@convention(c)(GLfloat) -> Void = glPointSize_L
public func glPointSizePointerOES(_ type:GLenum, _ stride:GLsizei, _ pointer:UnsafeRawPointer) {glPointSizePointerOES_P(type, stride, pointer)}
public func glPointSizePointerOES(type:GLenum, stride:GLsizei, pointer:UnsafeRawPointer) {glPointSizePointerOES_P(type, stride, pointer)}
var glPointSizePointerOES_P:@convention(c)(GLenum, GLsizei, UnsafeRawPointer) -> Void = glPointSizePointerOES_L
public func glPointSizex(_ size:GLfixed) {glPointSizex_P(size)}
public func glPointSizex(size:GLfixed) {glPointSizex_P(size)}
var glPointSizex_P:@convention(c)(GLfixed) -> Void = glPointSizex_L
public func glPointSizexOES(_ size:GLfixed) {glPointSizexOES_P(size)}
public func glPointSizexOES(size:GLfixed) {glPointSizexOES_P(size)}
var glPointSizexOES_P:@convention(c)(GLfixed) -> Void = glPointSizexOES_L
public func glPollAsyncSGIX(_ markerp:UnsafeMutablePointer<GLuint>) -> GLint {return glPollAsyncSGIX_P(markerp)}
public func glPollAsyncSGIX(markerp:UnsafeMutablePointer<GLuint>) -> GLint {return glPollAsyncSGIX_P(markerp)}
var glPollAsyncSGIX_P:@convention(c)(UnsafeMutablePointer<GLuint>) -> GLint = glPollAsyncSGIX_L
public func glPollInstrumentsSGIX(_ marker_p:UnsafeMutablePointer<GLint>) -> GLint {return glPollInstrumentsSGIX_P(marker_p)}
public func glPollInstrumentsSGIX(marker_p:UnsafeMutablePointer<GLint>) -> GLint {return glPollInstrumentsSGIX_P(marker_p)}
var glPollInstrumentsSGIX_P:@convention(c)(UnsafeMutablePointer<GLint>) -> GLint = glPollInstrumentsSGIX_L
public func glPolygonMode(_ face:GLenum, _ mode:GLenum) {glPolygonMode_P(face, mode)}
public func glPolygonMode(face:GLenum, mode:GLenum) {glPolygonMode_P(face, mode)}
var glPolygonMode_P:@convention(c)(GLenum, GLenum) -> Void = glPolygonMode_L
public func glPolygonModeNV(_ face:GLenum, _ mode:GLenum) {glPolygonModeNV_P(face, mode)}
public func glPolygonModeNV(face:GLenum, mode:GLenum) {glPolygonModeNV_P(face, mode)}
var glPolygonModeNV_P:@convention(c)(GLenum, GLenum) -> Void = glPolygonModeNV_L
public func glPolygonOffset(_ factor:GLfloat, _ units:GLfloat) {glPolygonOffset_P(factor, units)}
public func glPolygonOffset(factor:GLfloat, units:GLfloat) {glPolygonOffset_P(factor, units)}
var glPolygonOffset_P:@convention(c)(GLfloat, GLfloat) -> Void = glPolygonOffset_L
public func glPolygonOffsetClampEXT(_ factor:GLfloat, _ units:GLfloat, _ clamp:GLfloat) {glPolygonOffsetClampEXT_P(factor, units, clamp)}
public func glPolygonOffsetClampEXT(factor:GLfloat, units:GLfloat, clamp:GLfloat) {glPolygonOffsetClampEXT_P(factor, units, clamp)}
var glPolygonOffsetClampEXT_P:@convention(c)(GLfloat, GLfloat, GLfloat) -> Void = glPolygonOffsetClampEXT_L
public func glPolygonOffsetEXT(_ factor:GLfloat, _ bias:GLfloat) {glPolygonOffsetEXT_P(factor, bias)}
public func glPolygonOffsetEXT(factor:GLfloat, bias:GLfloat) {glPolygonOffsetEXT_P(factor, bias)}
var glPolygonOffsetEXT_P:@convention(c)(GLfloat, GLfloat) -> Void = glPolygonOffsetEXT_L
public func glPolygonOffsetx(_ factor:GLfixed, _ units:GLfixed) {glPolygonOffsetx_P(factor, units)}
public func glPolygonOffsetx(factor:GLfixed, units:GLfixed) {glPolygonOffsetx_P(factor, units)}
var glPolygonOffsetx_P:@convention(c)(GLfixed, GLfixed) -> Void = glPolygonOffsetx_L
public func glPolygonOffsetxOES(_ factor:GLfixed, _ units:GLfixed) {glPolygonOffsetxOES_P(factor, units)}
public func glPolygonOffsetxOES(factor:GLfixed, units:GLfixed) {glPolygonOffsetxOES_P(factor, units)}
var glPolygonOffsetxOES_P:@convention(c)(GLfixed, GLfixed) -> Void = glPolygonOffsetxOES_L
public func glPolygonStipple(_ mask:UnsafePointer<GLubyte>) {glPolygonStipple_P(mask)}
public func glPolygonStipple(mask:UnsafePointer<GLubyte>) {glPolygonStipple_P(mask)}
var glPolygonStipple_P:@convention(c)(UnsafePointer<GLubyte>) -> Void = glPolygonStipple_L
public func glPopAttrib() {glPopAttrib_P()}
var glPopAttrib_P:@convention(c)() -> Void = glPopAttrib_L
public func glPopClientAttrib() {glPopClientAttrib_P()}
var glPopClientAttrib_P:@convention(c)() -> Void = glPopClientAttrib_L
public func glPopDebugGroup() {glPopDebugGroup_P()}
var glPopDebugGroup_P:@convention(c)() -> Void = glPopDebugGroup_L
public func glPopDebugGroupKHR() {glPopDebugGroupKHR_P()}
var glPopDebugGroupKHR_P:@convention(c)() -> Void = glPopDebugGroupKHR_L
public func glPopGroupMarkerEXT() {glPopGroupMarkerEXT_P()}
var glPopGroupMarkerEXT_P:@convention(c)() -> Void = glPopGroupMarkerEXT_L
public func glPopMatrix() {glPopMatrix_P()}
var glPopMatrix_P:@convention(c)() -> Void = glPopMatrix_L
public func glPopName() {glPopName_P()}
var glPopName_P:@convention(c)() -> Void = glPopName_L
public func glPresentFrameDualFillNV(_ video_slot:GLuint, _ minPresentTime:GLuint64EXT, _ beginPresentTimeId:GLuint, _ presentDurationId:GLuint, _ type:GLenum, _ target0:GLenum, _ fill0:GLuint, _ target1:GLenum, _ fill1:GLuint, _ target2:GLenum, _ fill2:GLuint, _ target3:GLenum, _ fill3:GLuint) {glPresentFrameDualFillNV_P(video_slot, minPresentTime, beginPresentTimeId, presentDurationId, type, target0, fill0, target1, fill1, target2, fill2, target3, fill3)}
public func glPresentFrameDualFillNV(video_slot:GLuint, minPresentTime:GLuint64EXT, beginPresentTimeId:GLuint, presentDurationId:GLuint, type:GLenum, target0:GLenum, fill0:GLuint, target1:GLenum, fill1:GLuint, target2:GLenum, fill2:GLuint, target3:GLenum, fill3:GLuint) {glPresentFrameDualFillNV_P(video_slot, minPresentTime, beginPresentTimeId, presentDurationId, type, target0, fill0, target1, fill1, target2, fill2, target3, fill3)}
var glPresentFrameDualFillNV_P:@convention(c)(GLuint, GLuint64EXT, GLuint, GLuint, GLenum, GLenum, GLuint, GLenum, GLuint, GLenum, GLuint, GLenum, GLuint) -> Void = glPresentFrameDualFillNV_L
public func glPresentFrameKeyedNV(_ video_slot:GLuint, _ minPresentTime:GLuint64EXT, _ beginPresentTimeId:GLuint, _ presentDurationId:GLuint, _ type:GLenum, _ target0:GLenum, _ fill0:GLuint, _ key0:GLuint, _ target1:GLenum, _ fill1:GLuint, _ key1:GLuint) {glPresentFrameKeyedNV_P(video_slot, minPresentTime, beginPresentTimeId, presentDurationId, type, target0, fill0, key0, target1, fill1, key1)}
public func glPresentFrameKeyedNV(video_slot:GLuint, minPresentTime:GLuint64EXT, beginPresentTimeId:GLuint, presentDurationId:GLuint, type:GLenum, target0:GLenum, fill0:GLuint, key0:GLuint, target1:GLenum, fill1:GLuint, key1:GLuint) {glPresentFrameKeyedNV_P(video_slot, minPresentTime, beginPresentTimeId, presentDurationId, type, target0, fill0, key0, target1, fill1, key1)}
var glPresentFrameKeyedNV_P:@convention(c)(GLuint, GLuint64EXT, GLuint, GLuint, GLenum, GLenum, GLuint, GLuint, GLenum, GLuint, GLuint) -> Void = glPresentFrameKeyedNV_L
public func glPrimitiveBoundingBox(_ minX:GLfloat, _ minY:GLfloat, _ minZ:GLfloat, _ minW:GLfloat, _ maxX:GLfloat, _ maxY:GLfloat, _ maxZ:GLfloat, _ maxW:GLfloat) {glPrimitiveBoundingBox_P(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW)}
public func glPrimitiveBoundingBox(minX:GLfloat, minY:GLfloat, minZ:GLfloat, minW:GLfloat, maxX:GLfloat, maxY:GLfloat, maxZ:GLfloat, maxW:GLfloat) {glPrimitiveBoundingBox_P(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW)}
var glPrimitiveBoundingBox_P:@convention(c)(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glPrimitiveBoundingBox_L
public func glPrimitiveBoundingBoxARB(_ minX:GLfloat, _ minY:GLfloat, _ minZ:GLfloat, _ minW:GLfloat, _ maxX:GLfloat, _ maxY:GLfloat, _ maxZ:GLfloat, _ maxW:GLfloat) {glPrimitiveBoundingBoxARB_P(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW)}
public func glPrimitiveBoundingBoxARB(minX:GLfloat, minY:GLfloat, minZ:GLfloat, minW:GLfloat, maxX:GLfloat, maxY:GLfloat, maxZ:GLfloat, maxW:GLfloat) {glPrimitiveBoundingBoxARB_P(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW)}
var glPrimitiveBoundingBoxARB_P:@convention(c)(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glPrimitiveBoundingBoxARB_L
public func glPrimitiveBoundingBoxEXT(_ minX:GLfloat, _ minY:GLfloat, _ minZ:GLfloat, _ minW:GLfloat, _ maxX:GLfloat, _ maxY:GLfloat, _ maxZ:GLfloat, _ maxW:GLfloat) {glPrimitiveBoundingBoxEXT_P(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW)}
public func glPrimitiveBoundingBoxEXT(minX:GLfloat, minY:GLfloat, minZ:GLfloat, minW:GLfloat, maxX:GLfloat, maxY:GLfloat, maxZ:GLfloat, maxW:GLfloat) {glPrimitiveBoundingBoxEXT_P(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW)}
var glPrimitiveBoundingBoxEXT_P:@convention(c)(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glPrimitiveBoundingBoxEXT_L
public func glPrimitiveBoundingBoxOES(_ minX:GLfloat, _ minY:GLfloat, _ minZ:GLfloat, _ minW:GLfloat, _ maxX:GLfloat, _ maxY:GLfloat, _ maxZ:GLfloat, _ maxW:GLfloat) {glPrimitiveBoundingBoxOES_P(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW)}
public func glPrimitiveBoundingBoxOES(minX:GLfloat, minY:GLfloat, minZ:GLfloat, minW:GLfloat, maxX:GLfloat, maxY:GLfloat, maxZ:GLfloat, maxW:GLfloat) {glPrimitiveBoundingBoxOES_P(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW)}
var glPrimitiveBoundingBoxOES_P:@convention(c)(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glPrimitiveBoundingBoxOES_L
public func glPrimitiveRestartIndex(_ index:GLuint) {glPrimitiveRestartIndex_P(index)}
public func glPrimitiveRestartIndex(index:GLuint) {glPrimitiveRestartIndex_P(index)}
var glPrimitiveRestartIndex_P:@convention(c)(GLuint) -> Void = glPrimitiveRestartIndex_L
public func glPrimitiveRestartIndexNV(_ index:GLuint) {glPrimitiveRestartIndexNV_P(index)}
public func glPrimitiveRestartIndexNV(index:GLuint) {glPrimitiveRestartIndexNV_P(index)}
var glPrimitiveRestartIndexNV_P:@convention(c)(GLuint) -> Void = glPrimitiveRestartIndexNV_L
public func glPrimitiveRestartNV() {glPrimitiveRestartNV_P()}
var glPrimitiveRestartNV_P:@convention(c)() -> Void = glPrimitiveRestartNV_L
public func glPrioritizeTextures(_ n:GLsizei, _ textures:UnsafePointer<GLuint>, _ priorities:UnsafePointer<GLfloat>) {glPrioritizeTextures_P(n, textures, priorities)}
public func glPrioritizeTextures(n:GLsizei, textures:UnsafePointer<GLuint>, priorities:UnsafePointer<GLfloat>) {glPrioritizeTextures_P(n, textures, priorities)}
var glPrioritizeTextures_P:@convention(c)(GLsizei, UnsafePointer<GLuint>, UnsafePointer<GLfloat>) -> Void = glPrioritizeTextures_L
public func glPrioritizeTexturesEXT(_ n:GLsizei, _ textures:UnsafePointer<GLuint>, _ priorities:UnsafePointer<GLclampf>) {glPrioritizeTexturesEXT_P(n, textures, priorities)}
public func glPrioritizeTexturesEXT(n:GLsizei, textures:UnsafePointer<GLuint>, priorities:UnsafePointer<GLclampf>) {glPrioritizeTexturesEXT_P(n, textures, priorities)}
var glPrioritizeTexturesEXT_P:@convention(c)(GLsizei, UnsafePointer<GLuint>, UnsafePointer<GLclampf>) -> Void = glPrioritizeTexturesEXT_L
public func glPrioritizeTexturesxOES(_ n:GLsizei, _ textures:UnsafePointer<GLuint>, _ priorities:UnsafePointer<GLfixed>) {glPrioritizeTexturesxOES_P(n, textures, priorities)}
public func glPrioritizeTexturesxOES(n:GLsizei, textures:UnsafePointer<GLuint>, priorities:UnsafePointer<GLfixed>) {glPrioritizeTexturesxOES_P(n, textures, priorities)}
var glPrioritizeTexturesxOES_P:@convention(c)(GLsizei, UnsafePointer<GLuint>, UnsafePointer<GLfixed>) -> Void = glPrioritizeTexturesxOES_L
public func glProgramBinary(_ program:GLuint, _ binaryFormat:GLenum, _ binary:UnsafeRawPointer, _ length:GLsizei) {glProgramBinary_P(program, binaryFormat, binary, length)}
public func glProgramBinary(program:GLuint, binaryFormat:GLenum, binary:UnsafeRawPointer, length:GLsizei) {glProgramBinary_P(program, binaryFormat, binary, length)}
var glProgramBinary_P:@convention(c)(GLuint, GLenum, UnsafeRawPointer, GLsizei) -> Void = glProgramBinary_L
public func glProgramBinaryOES(_ program:GLuint, _ binaryFormat:GLenum, _ binary:UnsafeRawPointer, _ length:GLint) {glProgramBinaryOES_P(program, binaryFormat, binary, length)}
public func glProgramBinaryOES(program:GLuint, binaryFormat:GLenum, binary:UnsafeRawPointer, length:GLint) {glProgramBinaryOES_P(program, binaryFormat, binary, length)}
var glProgramBinaryOES_P:@convention(c)(GLuint, GLenum, UnsafeRawPointer, GLint) -> Void = glProgramBinaryOES_L
public func glProgramBufferParametersIivNV(_ target:GLenum, _ bindingIndex:GLuint, _ wordIndex:GLuint, _ count:GLsizei, _ params:UnsafePointer<GLint>) {glProgramBufferParametersIivNV_P(target, bindingIndex, wordIndex, count, params)}
public func glProgramBufferParametersIivNV(target:GLenum, bindingIndex:GLuint, wordIndex:GLuint, count:GLsizei, params:UnsafePointer<GLint>) {glProgramBufferParametersIivNV_P(target, bindingIndex, wordIndex, count, params)}
var glProgramBufferParametersIivNV_P:@convention(c)(GLenum, GLuint, GLuint, GLsizei, UnsafePointer<GLint>) -> Void = glProgramBufferParametersIivNV_L
public func glProgramBufferParametersIuivNV(_ target:GLenum, _ bindingIndex:GLuint, _ wordIndex:GLuint, _ count:GLsizei, _ params:UnsafePointer<GLuint>) {glProgramBufferParametersIuivNV_P(target, bindingIndex, wordIndex, count, params)}
public func glProgramBufferParametersIuivNV(target:GLenum, bindingIndex:GLuint, wordIndex:GLuint, count:GLsizei, params:UnsafePointer<GLuint>) {glProgramBufferParametersIuivNV_P(target, bindingIndex, wordIndex, count, params)}
var glProgramBufferParametersIuivNV_P:@convention(c)(GLenum, GLuint, GLuint, GLsizei, UnsafePointer<GLuint>) -> Void = glProgramBufferParametersIuivNV_L
public func glProgramBufferParametersfvNV(_ target:GLenum, _ bindingIndex:GLuint, _ wordIndex:GLuint, _ count:GLsizei, _ params:UnsafePointer<GLfloat>) {glProgramBufferParametersfvNV_P(target, bindingIndex, wordIndex, count, params)}
public func glProgramBufferParametersfvNV(target:GLenum, bindingIndex:GLuint, wordIndex:GLuint, count:GLsizei, params:UnsafePointer<GLfloat>) {glProgramBufferParametersfvNV_P(target, bindingIndex, wordIndex, count, params)}
var glProgramBufferParametersfvNV_P:@convention(c)(GLenum, GLuint, GLuint, GLsizei, UnsafePointer<GLfloat>) -> Void = glProgramBufferParametersfvNV_L
public func glProgramEnvParameter4dARB(_ target:GLenum, _ index:GLuint, _ x:GLdouble, _ y:GLdouble, _ z:GLdouble, _ w:GLdouble) {glProgramEnvParameter4dARB_P(target, index, x, y, z, w)}
public func glProgramEnvParameter4dARB(target:GLenum, index:GLuint, x:GLdouble, y:GLdouble, z:GLdouble, w:GLdouble) {glProgramEnvParameter4dARB_P(target, index, x, y, z, w)}
var glProgramEnvParameter4dARB_P:@convention(c)(GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble) -> Void = glProgramEnvParameter4dARB_L
public func glProgramEnvParameter4dvARB(_ target:GLenum, _ index:GLuint, _ params:UnsafePointer<GLdouble>) {glProgramEnvParameter4dvARB_P(target, index, params)}
public func glProgramEnvParameter4dvARB(target:GLenum, index:GLuint, params:UnsafePointer<GLdouble>) {glProgramEnvParameter4dvARB_P(target, index, params)}
var glProgramEnvParameter4dvARB_P:@convention(c)(GLenum, GLuint, UnsafePointer<GLdouble>) -> Void = glProgramEnvParameter4dvARB_L
public func glProgramEnvParameter4fARB(_ target:GLenum, _ index:GLuint, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat, _ w:GLfloat) {glProgramEnvParameter4fARB_P(target, index, x, y, z, w)}
public func glProgramEnvParameter4fARB(target:GLenum, index:GLuint, x:GLfloat, y:GLfloat, z:GLfloat, w:GLfloat) {glProgramEnvParameter4fARB_P(target, index, x, y, z, w)}
var glProgramEnvParameter4fARB_P:@convention(c)(GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glProgramEnvParameter4fARB_L
public func glProgramEnvParameter4fvARB(_ target:GLenum, _ index:GLuint, _ params:UnsafePointer<GLfloat>) {glProgramEnvParameter4fvARB_P(target, index, params)}
public func glProgramEnvParameter4fvARB(target:GLenum, index:GLuint, params:UnsafePointer<GLfloat>) {glProgramEnvParameter4fvARB_P(target, index, params)}
var glProgramEnvParameter4fvARB_P:@convention(c)(GLenum, GLuint, UnsafePointer<GLfloat>) -> Void = glProgramEnvParameter4fvARB_L
public func glProgramEnvParameterI4iNV(_ target:GLenum, _ index:GLuint, _ x:GLint, _ y:GLint, _ z:GLint, _ w:GLint) {glProgramEnvParameterI4iNV_P(target, index, x, y, z, w)}
public func glProgramEnvParameterI4iNV(target:GLenum, index:GLuint, x:GLint, y:GLint, z:GLint, w:GLint) {glProgramEnvParameterI4iNV_P(target, index, x, y, z, w)}
var glProgramEnvParameterI4iNV_P:@convention(c)(GLenum, GLuint, GLint, GLint, GLint, GLint) -> Void = glProgramEnvParameterI4iNV_L
public func glProgramEnvParameterI4ivNV(_ target:GLenum, _ index:GLuint, _ params:UnsafePointer<GLint>) {glProgramEnvParameterI4ivNV_P(target, index, params)}
public func glProgramEnvParameterI4ivNV(target:GLenum, index:GLuint, params:UnsafePointer<GLint>) {glProgramEnvParameterI4ivNV_P(target, index, params)}
var glProgramEnvParameterI4ivNV_P:@convention(c)(GLenum, GLuint, UnsafePointer<GLint>) -> Void = glProgramEnvParameterI4ivNV_L
public func glProgramEnvParameterI4uiNV(_ target:GLenum, _ index:GLuint, _ x:GLuint, _ y:GLuint, _ z:GLuint, _ w:GLuint) {glProgramEnvParameterI4uiNV_P(target, index, x, y, z, w)}
public func glProgramEnvParameterI4uiNV(target:GLenum, index:GLuint, x:GLuint, y:GLuint, z:GLuint, w:GLuint) {glProgramEnvParameterI4uiNV_P(target, index, x, y, z, w)}
var glProgramEnvParameterI4uiNV_P:@convention(c)(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint) -> Void = glProgramEnvParameterI4uiNV_L
public func glProgramEnvParameterI4uivNV(_ target:GLenum, _ index:GLuint, _ params:UnsafePointer<GLuint>) {glProgramEnvParameterI4uivNV_P(target, index, params)}
public func glProgramEnvParameterI4uivNV(target:GLenum, index:GLuint, params:UnsafePointer<GLuint>) {glProgramEnvParameterI4uivNV_P(target, index, params)}
var glProgramEnvParameterI4uivNV_P:@convention(c)(GLenum, GLuint, UnsafePointer<GLuint>) -> Void = glProgramEnvParameterI4uivNV_L
public func glProgramEnvParameters4fvEXT(_ target:GLenum, _ index:GLuint, _ count:GLsizei, _ params:UnsafePointer<GLfloat>) {glProgramEnvParameters4fvEXT_P(target, index, count, params)}
public func glProgramEnvParameters4fvEXT(target:GLenum, index:GLuint, count:GLsizei, params:UnsafePointer<GLfloat>) {glProgramEnvParameters4fvEXT_P(target, index, count, params)}
var glProgramEnvParameters4fvEXT_P:@convention(c)(GLenum, GLuint, GLsizei, UnsafePointer<GLfloat>) -> Void = glProgramEnvParameters4fvEXT_L
public func glProgramEnvParametersI4ivNV(_ target:GLenum, _ index:GLuint, _ count:GLsizei, _ params:UnsafePointer<GLint>) {glProgramEnvParametersI4ivNV_P(target, index, count, params)}
public func glProgramEnvParametersI4ivNV(target:GLenum, index:GLuint, count:GLsizei, params:UnsafePointer<GLint>) {glProgramEnvParametersI4ivNV_P(target, index, count, params)}
var glProgramEnvParametersI4ivNV_P:@convention(c)(GLenum, GLuint, GLsizei, UnsafePointer<GLint>) -> Void = glProgramEnvParametersI4ivNV_L
public func glProgramEnvParametersI4uivNV(_ target:GLenum, _ index:GLuint, _ count:GLsizei, _ params:UnsafePointer<GLuint>) {glProgramEnvParametersI4uivNV_P(target, index, count, params)}
public func glProgramEnvParametersI4uivNV(target:GLenum, index:GLuint, count:GLsizei, params:UnsafePointer<GLuint>) {glProgramEnvParametersI4uivNV_P(target, index, count, params)}
var glProgramEnvParametersI4uivNV_P:@convention(c)(GLenum, GLuint, GLsizei, UnsafePointer<GLuint>) -> Void = glProgramEnvParametersI4uivNV_L
public func glProgramLocalParameter4dARB(_ target:GLenum, _ index:GLuint, _ x:GLdouble, _ y:GLdouble, _ z:GLdouble, _ w:GLdouble) {glProgramLocalParameter4dARB_P(target, index, x, y, z, w)}
public func glProgramLocalParameter4dARB(target:GLenum, index:GLuint, x:GLdouble, y:GLdouble, z:GLdouble, w:GLdouble) {glProgramLocalParameter4dARB_P(target, index, x, y, z, w)}
var glProgramLocalParameter4dARB_P:@convention(c)(GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble) -> Void = glProgramLocalParameter4dARB_L
public func glProgramLocalParameter4dvARB(_ target:GLenum, _ index:GLuint, _ params:UnsafePointer<GLdouble>) {glProgramLocalParameter4dvARB_P(target, index, params)}
public func glProgramLocalParameter4dvARB(target:GLenum, index:GLuint, params:UnsafePointer<GLdouble>) {glProgramLocalParameter4dvARB_P(target, index, params)}
var glProgramLocalParameter4dvARB_P:@convention(c)(GLenum, GLuint, UnsafePointer<GLdouble>) -> Void = glProgramLocalParameter4dvARB_L
public func glProgramLocalParameter4fARB(_ target:GLenum, _ index:GLuint, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat, _ w:GLfloat) {glProgramLocalParameter4fARB_P(target, index, x, y, z, w)}
public func glProgramLocalParameter4fARB(target:GLenum, index:GLuint, x:GLfloat, y:GLfloat, z:GLfloat, w:GLfloat) {glProgramLocalParameter4fARB_P(target, index, x, y, z, w)}
var glProgramLocalParameter4fARB_P:@convention(c)(GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glProgramLocalParameter4fARB_L
public func glProgramLocalParameter4fvARB(_ target:GLenum, _ index:GLuint, _ params:UnsafePointer<GLfloat>) {glProgramLocalParameter4fvARB_P(target, index, params)}
public func glProgramLocalParameter4fvARB(target:GLenum, index:GLuint, params:UnsafePointer<GLfloat>) {glProgramLocalParameter4fvARB_P(target, index, params)}
var glProgramLocalParameter4fvARB_P:@convention(c)(GLenum, GLuint, UnsafePointer<GLfloat>) -> Void = glProgramLocalParameter4fvARB_L
public func glProgramLocalParameterI4iNV(_ target:GLenum, _ index:GLuint, _ x:GLint, _ y:GLint, _ z:GLint, _ w:GLint) {glProgramLocalParameterI4iNV_P(target, index, x, y, z, w)}
public func glProgramLocalParameterI4iNV(target:GLenum, index:GLuint, x:GLint, y:GLint, z:GLint, w:GLint) {glProgramLocalParameterI4iNV_P(target, index, x, y, z, w)}
var glProgramLocalParameterI4iNV_P:@convention(c)(GLenum, GLuint, GLint, GLint, GLint, GLint) -> Void = glProgramLocalParameterI4iNV_L
public func glProgramLocalParameterI4ivNV(_ target:GLenum, _ index:GLuint, _ params:UnsafePointer<GLint>) {glProgramLocalParameterI4ivNV_P(target, index, params)}
public func glProgramLocalParameterI4ivNV(target:GLenum, index:GLuint, params:UnsafePointer<GLint>) {glProgramLocalParameterI4ivNV_P(target, index, params)}
var glProgramLocalParameterI4ivNV_P:@convention(c)(GLenum, GLuint, UnsafePointer<GLint>) -> Void = glProgramLocalParameterI4ivNV_L
public func glProgramLocalParameterI4uiNV(_ target:GLenum, _ index:GLuint, _ x:GLuint, _ y:GLuint, _ z:GLuint, _ w:GLuint) {glProgramLocalParameterI4uiNV_P(target, index, x, y, z, w)}
public func glProgramLocalParameterI4uiNV(target:GLenum, index:GLuint, x:GLuint, y:GLuint, z:GLuint, w:GLuint) {glProgramLocalParameterI4uiNV_P(target, index, x, y, z, w)}
var glProgramLocalParameterI4uiNV_P:@convention(c)(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint) -> Void = glProgramLocalParameterI4uiNV_L
public func glProgramLocalParameterI4uivNV(_ target:GLenum, _ index:GLuint, _ params:UnsafePointer<GLuint>) {glProgramLocalParameterI4uivNV_P(target, index, params)}
public func glProgramLocalParameterI4uivNV(target:GLenum, index:GLuint, params:UnsafePointer<GLuint>) {glProgramLocalParameterI4uivNV_P(target, index, params)}
var glProgramLocalParameterI4uivNV_P:@convention(c)(GLenum, GLuint, UnsafePointer<GLuint>) -> Void = glProgramLocalParameterI4uivNV_L
public func glProgramLocalParameters4fvEXT(_ target:GLenum, _ index:GLuint, _ count:GLsizei, _ params:UnsafePointer<GLfloat>) {glProgramLocalParameters4fvEXT_P(target, index, count, params)}
public func glProgramLocalParameters4fvEXT(target:GLenum, index:GLuint, count:GLsizei, params:UnsafePointer<GLfloat>) {glProgramLocalParameters4fvEXT_P(target, index, count, params)}
var glProgramLocalParameters4fvEXT_P:@convention(c)(GLenum, GLuint, GLsizei, UnsafePointer<GLfloat>) -> Void = glProgramLocalParameters4fvEXT_L
public func glProgramLocalParametersI4ivNV(_ target:GLenum, _ index:GLuint, _ count:GLsizei, _ params:UnsafePointer<GLint>) {glProgramLocalParametersI4ivNV_P(target, index, count, params)}
public func glProgramLocalParametersI4ivNV(target:GLenum, index:GLuint, count:GLsizei, params:UnsafePointer<GLint>) {glProgramLocalParametersI4ivNV_P(target, index, count, params)}
var glProgramLocalParametersI4ivNV_P:@convention(c)(GLenum, GLuint, GLsizei, UnsafePointer<GLint>) -> Void = glProgramLocalParametersI4ivNV_L
public func glProgramLocalParametersI4uivNV(_ target:GLenum, _ index:GLuint, _ count:GLsizei, _ params:UnsafePointer<GLuint>) {glProgramLocalParametersI4uivNV_P(target, index, count, params)}
public func glProgramLocalParametersI4uivNV(target:GLenum, index:GLuint, count:GLsizei, params:UnsafePointer<GLuint>) {glProgramLocalParametersI4uivNV_P(target, index, count, params)}
var glProgramLocalParametersI4uivNV_P:@convention(c)(GLenum, GLuint, GLsizei, UnsafePointer<GLuint>) -> Void = glProgramLocalParametersI4uivNV_L
public func glProgramNamedParameter4dNV(_ id:GLuint, _ len:GLsizei, _ name:UnsafePointer<GLubyte>, _ x:GLdouble, _ y:GLdouble, _ z:GLdouble, _ w:GLdouble) {glProgramNamedParameter4dNV_P(id, len, name, x, y, z, w)}
public func glProgramNamedParameter4dNV(id:GLuint, len:GLsizei, name:UnsafePointer<GLubyte>, x:GLdouble, y:GLdouble, z:GLdouble, w:GLdouble) {glProgramNamedParameter4dNV_P(id, len, name, x, y, z, w)}
var glProgramNamedParameter4dNV_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLubyte>, GLdouble, GLdouble, GLdouble, GLdouble) -> Void = glProgramNamedParameter4dNV_L
public func glProgramNamedParameter4dvNV(_ id:GLuint, _ len:GLsizei, _ name:UnsafePointer<GLubyte>, _ v:UnsafePointer<GLdouble>) {glProgramNamedParameter4dvNV_P(id, len, name, v)}
public func glProgramNamedParameter4dvNV(id:GLuint, len:GLsizei, name:UnsafePointer<GLubyte>, v:UnsafePointer<GLdouble>) {glProgramNamedParameter4dvNV_P(id, len, name, v)}
var glProgramNamedParameter4dvNV_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLubyte>, UnsafePointer<GLdouble>) -> Void = glProgramNamedParameter4dvNV_L
public func glProgramNamedParameter4fNV(_ id:GLuint, _ len:GLsizei, _ name:UnsafePointer<GLubyte>, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat, _ w:GLfloat) {glProgramNamedParameter4fNV_P(id, len, name, x, y, z, w)}
public func glProgramNamedParameter4fNV(id:GLuint, len:GLsizei, name:UnsafePointer<GLubyte>, x:GLfloat, y:GLfloat, z:GLfloat, w:GLfloat) {glProgramNamedParameter4fNV_P(id, len, name, x, y, z, w)}
var glProgramNamedParameter4fNV_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLubyte>, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glProgramNamedParameter4fNV_L
public func glProgramNamedParameter4fvNV(_ id:GLuint, _ len:GLsizei, _ name:UnsafePointer<GLubyte>, _ v:UnsafePointer<GLfloat>) {glProgramNamedParameter4fvNV_P(id, len, name, v)}
public func glProgramNamedParameter4fvNV(id:GLuint, len:GLsizei, name:UnsafePointer<GLubyte>, v:UnsafePointer<GLfloat>) {glProgramNamedParameter4fvNV_P(id, len, name, v)}
var glProgramNamedParameter4fvNV_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLubyte>, UnsafePointer<GLfloat>) -> Void = glProgramNamedParameter4fvNV_L
public func glProgramParameter4dNV(_ target:GLenum, _ index:GLuint, _ x:GLdouble, _ y:GLdouble, _ z:GLdouble, _ w:GLdouble) {glProgramParameter4dNV_P(target, index, x, y, z, w)}
public func glProgramParameter4dNV(target:GLenum, index:GLuint, x:GLdouble, y:GLdouble, z:GLdouble, w:GLdouble) {glProgramParameter4dNV_P(target, index, x, y, z, w)}
var glProgramParameter4dNV_P:@convention(c)(GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble) -> Void = glProgramParameter4dNV_L
public func glProgramParameter4dvNV(_ target:GLenum, _ index:GLuint, _ v:UnsafePointer<GLdouble>) {glProgramParameter4dvNV_P(target, index, v)}
public func glProgramParameter4dvNV(target:GLenum, index:GLuint, v:UnsafePointer<GLdouble>) {glProgramParameter4dvNV_P(target, index, v)}
var glProgramParameter4dvNV_P:@convention(c)(GLenum, GLuint, UnsafePointer<GLdouble>) -> Void = glProgramParameter4dvNV_L
public func glProgramParameter4fNV(_ target:GLenum, _ index:GLuint, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat, _ w:GLfloat) {glProgramParameter4fNV_P(target, index, x, y, z, w)}
public func glProgramParameter4fNV(target:GLenum, index:GLuint, x:GLfloat, y:GLfloat, z:GLfloat, w:GLfloat) {glProgramParameter4fNV_P(target, index, x, y, z, w)}
var glProgramParameter4fNV_P:@convention(c)(GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glProgramParameter4fNV_L
public func glProgramParameter4fvNV(_ target:GLenum, _ index:GLuint, _ v:UnsafePointer<GLfloat>) {glProgramParameter4fvNV_P(target, index, v)}
public func glProgramParameter4fvNV(target:GLenum, index:GLuint, v:UnsafePointer<GLfloat>) {glProgramParameter4fvNV_P(target, index, v)}
var glProgramParameter4fvNV_P:@convention(c)(GLenum, GLuint, UnsafePointer<GLfloat>) -> Void = glProgramParameter4fvNV_L
public func glProgramParameteri(_ program:GLuint, _ pname:GLenum, _ value:GLint) {glProgramParameteri_P(program, pname, value)}
public func glProgramParameteri(program:GLuint, pname:GLenum, value:GLint) {glProgramParameteri_P(program, pname, value)}
var glProgramParameteri_P:@convention(c)(GLuint, GLenum, GLint) -> Void = glProgramParameteri_L
public func glProgramParameteriARB(_ program:GLuint, _ pname:GLenum, _ value:GLint) {glProgramParameteriARB_P(program, pname, value)}
public func glProgramParameteriARB(program:GLuint, pname:GLenum, value:GLint) {glProgramParameteriARB_P(program, pname, value)}
var glProgramParameteriARB_P:@convention(c)(GLuint, GLenum, GLint) -> Void = glProgramParameteriARB_L
public func glProgramParameteriEXT(_ program:GLuint, _ pname:GLenum, _ value:GLint) {glProgramParameteriEXT_P(program, pname, value)}
public func glProgramParameteriEXT(program:GLuint, pname:GLenum, value:GLint) {glProgramParameteriEXT_P(program, pname, value)}
var glProgramParameteriEXT_P:@convention(c)(GLuint, GLenum, GLint) -> Void = glProgramParameteriEXT_L
public func glProgramParameters4dvNV(_ target:GLenum, _ index:GLuint, _ count:GLsizei, _ v:UnsafePointer<GLdouble>) {glProgramParameters4dvNV_P(target, index, count, v)}
public func glProgramParameters4dvNV(target:GLenum, index:GLuint, count:GLsizei, v:UnsafePointer<GLdouble>) {glProgramParameters4dvNV_P(target, index, count, v)}
var glProgramParameters4dvNV_P:@convention(c)(GLenum, GLuint, GLsizei, UnsafePointer<GLdouble>) -> Void = glProgramParameters4dvNV_L
public func glProgramParameters4fvNV(_ target:GLenum, _ index:GLuint, _ count:GLsizei, _ v:UnsafePointer<GLfloat>) {glProgramParameters4fvNV_P(target, index, count, v)}
public func glProgramParameters4fvNV(target:GLenum, index:GLuint, count:GLsizei, v:UnsafePointer<GLfloat>) {glProgramParameters4fvNV_P(target, index, count, v)}
var glProgramParameters4fvNV_P:@convention(c)(GLenum, GLuint, GLsizei, UnsafePointer<GLfloat>) -> Void = glProgramParameters4fvNV_L
public func glProgramPathFragmentInputGenNV(_ program:GLuint, _ location:GLint, _ genMode:GLenum, _ components:GLint, _ coeffs:UnsafePointer<GLfloat>) {glProgramPathFragmentInputGenNV_P(program, location, genMode, components, coeffs)}
public func glProgramPathFragmentInputGenNV(program:GLuint, location:GLint, genMode:GLenum, components:GLint, coeffs:UnsafePointer<GLfloat>) {glProgramPathFragmentInputGenNV_P(program, location, genMode, components, coeffs)}
var glProgramPathFragmentInputGenNV_P:@convention(c)(GLuint, GLint, GLenum, GLint, UnsafePointer<GLfloat>) -> Void = glProgramPathFragmentInputGenNV_L
public func glProgramStringARB(_ target:GLenum, _ format:GLenum, _ len:GLsizei, _ string:UnsafeRawPointer) {glProgramStringARB_P(target, format, len, string)}
public func glProgramStringARB(target:GLenum, format:GLenum, len:GLsizei, string:UnsafeRawPointer) {glProgramStringARB_P(target, format, len, string)}
var glProgramStringARB_P:@convention(c)(GLenum, GLenum, GLsizei, UnsafeRawPointer) -> Void = glProgramStringARB_L
public func glProgramSubroutineParametersuivNV(_ target:GLenum, _ count:GLsizei, _ params:UnsafePointer<GLuint>) {glProgramSubroutineParametersuivNV_P(target, count, params)}
public func glProgramSubroutineParametersuivNV(target:GLenum, count:GLsizei, params:UnsafePointer<GLuint>) {glProgramSubroutineParametersuivNV_P(target, count, params)}
var glProgramSubroutineParametersuivNV_P:@convention(c)(GLenum, GLsizei, UnsafePointer<GLuint>) -> Void = glProgramSubroutineParametersuivNV_L
public func glProgramUniform1d(_ program:GLuint, _ location:GLint, _ v0:GLdouble) {glProgramUniform1d_P(program, location, v0)}
public func glProgramUniform1d(program:GLuint, location:GLint, v0:GLdouble) {glProgramUniform1d_P(program, location, v0)}
var glProgramUniform1d_P:@convention(c)(GLuint, GLint, GLdouble) -> Void = glProgramUniform1d_L
public func glProgramUniform1dEXT(_ program:GLuint, _ location:GLint, _ x:GLdouble) {glProgramUniform1dEXT_P(program, location, x)}
public func glProgramUniform1dEXT(program:GLuint, location:GLint, x:GLdouble) {glProgramUniform1dEXT_P(program, location, x)}
var glProgramUniform1dEXT_P:@convention(c)(GLuint, GLint, GLdouble) -> Void = glProgramUniform1dEXT_L
public func glProgramUniform1dv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLdouble>) {glProgramUniform1dv_P(program, location, count, value)}
public func glProgramUniform1dv(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLdouble>) {glProgramUniform1dv_P(program, location, count, value)}
var glProgramUniform1dv_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLdouble>) -> Void = glProgramUniform1dv_L
public func glProgramUniform1dvEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLdouble>) {glProgramUniform1dvEXT_P(program, location, count, value)}
public func glProgramUniform1dvEXT(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLdouble>) {glProgramUniform1dvEXT_P(program, location, count, value)}
var glProgramUniform1dvEXT_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLdouble>) -> Void = glProgramUniform1dvEXT_L
public func glProgramUniform1f(_ program:GLuint, _ location:GLint, _ v0:GLfloat) {glProgramUniform1f_P(program, location, v0)}
public func glProgramUniform1f(program:GLuint, location:GLint, v0:GLfloat) {glProgramUniform1f_P(program, location, v0)}
var glProgramUniform1f_P:@convention(c)(GLuint, GLint, GLfloat) -> Void = glProgramUniform1f_L
public func glProgramUniform1fEXT(_ program:GLuint, _ location:GLint, _ v0:GLfloat) {glProgramUniform1fEXT_P(program, location, v0)}
public func glProgramUniform1fEXT(program:GLuint, location:GLint, v0:GLfloat) {glProgramUniform1fEXT_P(program, location, v0)}
var glProgramUniform1fEXT_P:@convention(c)(GLuint, GLint, GLfloat) -> Void = glProgramUniform1fEXT_L
public func glProgramUniform1fv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLfloat>) {glProgramUniform1fv_P(program, location, count, value)}
public func glProgramUniform1fv(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLfloat>) {glProgramUniform1fv_P(program, location, count, value)}
var glProgramUniform1fv_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLfloat>) -> Void = glProgramUniform1fv_L
public func glProgramUniform1fvEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLfloat>) {glProgramUniform1fvEXT_P(program, location, count, value)}
public func glProgramUniform1fvEXT(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLfloat>) {glProgramUniform1fvEXT_P(program, location, count, value)}
var glProgramUniform1fvEXT_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLfloat>) -> Void = glProgramUniform1fvEXT_L
public func glProgramUniform1i(_ program:GLuint, _ location:GLint, _ v0:GLint) {glProgramUniform1i_P(program, location, v0)}
public func glProgramUniform1i(program:GLuint, location:GLint, v0:GLint) {glProgramUniform1i_P(program, location, v0)}
var glProgramUniform1i_P:@convention(c)(GLuint, GLint, GLint) -> Void = glProgramUniform1i_L
public func glProgramUniform1i64ARB(_ program:GLuint, _ location:GLint, _ x:GLint64) {glProgramUniform1i64ARB_P(program, location, x)}
public func glProgramUniform1i64ARB(program:GLuint, location:GLint, x:GLint64) {glProgramUniform1i64ARB_P(program, location, x)}
var glProgramUniform1i64ARB_P:@convention(c)(GLuint, GLint, GLint64) -> Void = glProgramUniform1i64ARB_L
public func glProgramUniform1i64NV(_ program:GLuint, _ location:GLint, _ x:GLint64EXT) {glProgramUniform1i64NV_P(program, location, x)}
public func glProgramUniform1i64NV(program:GLuint, location:GLint, x:GLint64EXT) {glProgramUniform1i64NV_P(program, location, x)}
var glProgramUniform1i64NV_P:@convention(c)(GLuint, GLint, GLint64EXT) -> Void = glProgramUniform1i64NV_L
public func glProgramUniform1i64vARB(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLint64>) {glProgramUniform1i64vARB_P(program, location, count, value)}
public func glProgramUniform1i64vARB(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLint64>) {glProgramUniform1i64vARB_P(program, location, count, value)}
var glProgramUniform1i64vARB_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLint64>) -> Void = glProgramUniform1i64vARB_L
public func glProgramUniform1i64vNV(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLint64EXT>) {glProgramUniform1i64vNV_P(program, location, count, value)}
public func glProgramUniform1i64vNV(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLint64EXT>) {glProgramUniform1i64vNV_P(program, location, count, value)}
var glProgramUniform1i64vNV_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLint64EXT>) -> Void = glProgramUniform1i64vNV_L
public func glProgramUniform1iEXT(_ program:GLuint, _ location:GLint, _ v0:GLint) {glProgramUniform1iEXT_P(program, location, v0)}
public func glProgramUniform1iEXT(program:GLuint, location:GLint, v0:GLint) {glProgramUniform1iEXT_P(program, location, v0)}
var glProgramUniform1iEXT_P:@convention(c)(GLuint, GLint, GLint) -> Void = glProgramUniform1iEXT_L
public func glProgramUniform1iv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLint>) {glProgramUniform1iv_P(program, location, count, value)}
public func glProgramUniform1iv(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLint>) {glProgramUniform1iv_P(program, location, count, value)}
var glProgramUniform1iv_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLint>) -> Void = glProgramUniform1iv_L
public func glProgramUniform1ivEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLint>) {glProgramUniform1ivEXT_P(program, location, count, value)}
public func glProgramUniform1ivEXT(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLint>) {glProgramUniform1ivEXT_P(program, location, count, value)}
var glProgramUniform1ivEXT_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLint>) -> Void = glProgramUniform1ivEXT_L
public func glProgramUniform1ui(_ program:GLuint, _ location:GLint, _ v0:GLuint) {glProgramUniform1ui_P(program, location, v0)}
public func glProgramUniform1ui(program:GLuint, location:GLint, v0:GLuint) {glProgramUniform1ui_P(program, location, v0)}
var glProgramUniform1ui_P:@convention(c)(GLuint, GLint, GLuint) -> Void = glProgramUniform1ui_L
public func glProgramUniform1ui64ARB(_ program:GLuint, _ location:GLint, _ x:GLuint64) {glProgramUniform1ui64ARB_P(program, location, x)}
public func glProgramUniform1ui64ARB(program:GLuint, location:GLint, x:GLuint64) {glProgramUniform1ui64ARB_P(program, location, x)}
var glProgramUniform1ui64ARB_P:@convention(c)(GLuint, GLint, GLuint64) -> Void = glProgramUniform1ui64ARB_L
public func glProgramUniform1ui64NV(_ program:GLuint, _ location:GLint, _ x:GLuint64EXT) {glProgramUniform1ui64NV_P(program, location, x)}
public func glProgramUniform1ui64NV(program:GLuint, location:GLint, x:GLuint64EXT) {glProgramUniform1ui64NV_P(program, location, x)}
var glProgramUniform1ui64NV_P:@convention(c)(GLuint, GLint, GLuint64EXT) -> Void = glProgramUniform1ui64NV_L
public func glProgramUniform1ui64vARB(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint64>) {glProgramUniform1ui64vARB_P(program, location, count, value)}
public func glProgramUniform1ui64vARB(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLuint64>) {glProgramUniform1ui64vARB_P(program, location, count, value)}
var glProgramUniform1ui64vARB_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLuint64>) -> Void = glProgramUniform1ui64vARB_L
public func glProgramUniform1ui64vNV(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint64EXT>) {glProgramUniform1ui64vNV_P(program, location, count, value)}
public func glProgramUniform1ui64vNV(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLuint64EXT>) {glProgramUniform1ui64vNV_P(program, location, count, value)}
var glProgramUniform1ui64vNV_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLuint64EXT>) -> Void = glProgramUniform1ui64vNV_L
public func glProgramUniform1uiEXT(_ program:GLuint, _ location:GLint, _ v0:GLuint) {glProgramUniform1uiEXT_P(program, location, v0)}
public func glProgramUniform1uiEXT(program:GLuint, location:GLint, v0:GLuint) {glProgramUniform1uiEXT_P(program, location, v0)}
var glProgramUniform1uiEXT_P:@convention(c)(GLuint, GLint, GLuint) -> Void = glProgramUniform1uiEXT_L
public func glProgramUniform1uiv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint>) {glProgramUniform1uiv_P(program, location, count, value)}
public func glProgramUniform1uiv(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLuint>) {glProgramUniform1uiv_P(program, location, count, value)}
var glProgramUniform1uiv_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLuint>) -> Void = glProgramUniform1uiv_L
public func glProgramUniform1uivEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint>) {glProgramUniform1uivEXT_P(program, location, count, value)}
public func glProgramUniform1uivEXT(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLuint>) {glProgramUniform1uivEXT_P(program, location, count, value)}
var glProgramUniform1uivEXT_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLuint>) -> Void = glProgramUniform1uivEXT_L
public func glProgramUniform2d(_ program:GLuint, _ location:GLint, _ v0:GLdouble, _ v1:GLdouble) {glProgramUniform2d_P(program, location, v0, v1)}
public func glProgramUniform2d(program:GLuint, location:GLint, v0:GLdouble, v1:GLdouble) {glProgramUniform2d_P(program, location, v0, v1)}
var glProgramUniform2d_P:@convention(c)(GLuint, GLint, GLdouble, GLdouble) -> Void = glProgramUniform2d_L
public func glProgramUniform2dEXT(_ program:GLuint, _ location:GLint, _ x:GLdouble, _ y:GLdouble) {glProgramUniform2dEXT_P(program, location, x, y)}
public func glProgramUniform2dEXT(program:GLuint, location:GLint, x:GLdouble, y:GLdouble) {glProgramUniform2dEXT_P(program, location, x, y)}
var glProgramUniform2dEXT_P:@convention(c)(GLuint, GLint, GLdouble, GLdouble) -> Void = glProgramUniform2dEXT_L
public func glProgramUniform2dv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLdouble>) {glProgramUniform2dv_P(program, location, count, value)}
public func glProgramUniform2dv(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLdouble>) {glProgramUniform2dv_P(program, location, count, value)}
var glProgramUniform2dv_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLdouble>) -> Void = glProgramUniform2dv_L
public func glProgramUniform2dvEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLdouble>) {glProgramUniform2dvEXT_P(program, location, count, value)}
public func glProgramUniform2dvEXT(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLdouble>) {glProgramUniform2dvEXT_P(program, location, count, value)}
var glProgramUniform2dvEXT_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLdouble>) -> Void = glProgramUniform2dvEXT_L
public func glProgramUniform2f(_ program:GLuint, _ location:GLint, _ v0:GLfloat, _ v1:GLfloat) {glProgramUniform2f_P(program, location, v0, v1)}
public func glProgramUniform2f(program:GLuint, location:GLint, v0:GLfloat, v1:GLfloat) {glProgramUniform2f_P(program, location, v0, v1)}
var glProgramUniform2f_P:@convention(c)(GLuint, GLint, GLfloat, GLfloat) -> Void = glProgramUniform2f_L
public func glProgramUniform2fEXT(_ program:GLuint, _ location:GLint, _ v0:GLfloat, _ v1:GLfloat) {glProgramUniform2fEXT_P(program, location, v0, v1)}
public func glProgramUniform2fEXT(program:GLuint, location:GLint, v0:GLfloat, v1:GLfloat) {glProgramUniform2fEXT_P(program, location, v0, v1)}
var glProgramUniform2fEXT_P:@convention(c)(GLuint, GLint, GLfloat, GLfloat) -> Void = glProgramUniform2fEXT_L
public func glProgramUniform2fv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLfloat>) {glProgramUniform2fv_P(program, location, count, value)}
public func glProgramUniform2fv(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLfloat>) {glProgramUniform2fv_P(program, location, count, value)}
var glProgramUniform2fv_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLfloat>) -> Void = glProgramUniform2fv_L
public func glProgramUniform2fvEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLfloat>) {glProgramUniform2fvEXT_P(program, location, count, value)}
public func glProgramUniform2fvEXT(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLfloat>) {glProgramUniform2fvEXT_P(program, location, count, value)}
var glProgramUniform2fvEXT_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLfloat>) -> Void = glProgramUniform2fvEXT_L
public func glProgramUniform2i(_ program:GLuint, _ location:GLint, _ v0:GLint, _ v1:GLint) {glProgramUniform2i_P(program, location, v0, v1)}
public func glProgramUniform2i(program:GLuint, location:GLint, v0:GLint, v1:GLint) {glProgramUniform2i_P(program, location, v0, v1)}
var glProgramUniform2i_P:@convention(c)(GLuint, GLint, GLint, GLint) -> Void = glProgramUniform2i_L
public func glProgramUniform2i64ARB(_ program:GLuint, _ location:GLint, _ x:GLint64, _ y:GLint64) {glProgramUniform2i64ARB_P(program, location, x, y)}
public func glProgramUniform2i64ARB(program:GLuint, location:GLint, x:GLint64, y:GLint64) {glProgramUniform2i64ARB_P(program, location, x, y)}
var glProgramUniform2i64ARB_P:@convention(c)(GLuint, GLint, GLint64, GLint64) -> Void = glProgramUniform2i64ARB_L
public func glProgramUniform2i64NV(_ program:GLuint, _ location:GLint, _ x:GLint64EXT, _ y:GLint64EXT) {glProgramUniform2i64NV_P(program, location, x, y)}
public func glProgramUniform2i64NV(program:GLuint, location:GLint, x:GLint64EXT, y:GLint64EXT) {glProgramUniform2i64NV_P(program, location, x, y)}
var glProgramUniform2i64NV_P:@convention(c)(GLuint, GLint, GLint64EXT, GLint64EXT) -> Void = glProgramUniform2i64NV_L
public func glProgramUniform2i64vARB(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLint64>) {glProgramUniform2i64vARB_P(program, location, count, value)}
public func glProgramUniform2i64vARB(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLint64>) {glProgramUniform2i64vARB_P(program, location, count, value)}
var glProgramUniform2i64vARB_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLint64>) -> Void = glProgramUniform2i64vARB_L
public func glProgramUniform2i64vNV(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLint64EXT>) {glProgramUniform2i64vNV_P(program, location, count, value)}
public func glProgramUniform2i64vNV(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLint64EXT>) {glProgramUniform2i64vNV_P(program, location, count, value)}
var glProgramUniform2i64vNV_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLint64EXT>) -> Void = glProgramUniform2i64vNV_L
public func glProgramUniform2iEXT(_ program:GLuint, _ location:GLint, _ v0:GLint, _ v1:GLint) {glProgramUniform2iEXT_P(program, location, v0, v1)}
public func glProgramUniform2iEXT(program:GLuint, location:GLint, v0:GLint, v1:GLint) {glProgramUniform2iEXT_P(program, location, v0, v1)}
var glProgramUniform2iEXT_P:@convention(c)(GLuint, GLint, GLint, GLint) -> Void = glProgramUniform2iEXT_L
public func glProgramUniform2iv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLint>) {glProgramUniform2iv_P(program, location, count, value)}
public func glProgramUniform2iv(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLint>) {glProgramUniform2iv_P(program, location, count, value)}
var glProgramUniform2iv_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLint>) -> Void = glProgramUniform2iv_L
public func glProgramUniform2ivEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLint>) {glProgramUniform2ivEXT_P(program, location, count, value)}
public func glProgramUniform2ivEXT(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLint>) {glProgramUniform2ivEXT_P(program, location, count, value)}
var glProgramUniform2ivEXT_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLint>) -> Void = glProgramUniform2ivEXT_L
public func glProgramUniform2ui(_ program:GLuint, _ location:GLint, _ v0:GLuint, _ v1:GLuint) {glProgramUniform2ui_P(program, location, v0, v1)}
public func glProgramUniform2ui(program:GLuint, location:GLint, v0:GLuint, v1:GLuint) {glProgramUniform2ui_P(program, location, v0, v1)}
var glProgramUniform2ui_P:@convention(c)(GLuint, GLint, GLuint, GLuint) -> Void = glProgramUniform2ui_L
public func glProgramUniform2ui64ARB(_ program:GLuint, _ location:GLint, _ x:GLuint64, _ y:GLuint64) {glProgramUniform2ui64ARB_P(program, location, x, y)}
public func glProgramUniform2ui64ARB(program:GLuint, location:GLint, x:GLuint64, y:GLuint64) {glProgramUniform2ui64ARB_P(program, location, x, y)}
var glProgramUniform2ui64ARB_P:@convention(c)(GLuint, GLint, GLuint64, GLuint64) -> Void = glProgramUniform2ui64ARB_L
public func glProgramUniform2ui64NV(_ program:GLuint, _ location:GLint, _ x:GLuint64EXT, _ y:GLuint64EXT) {glProgramUniform2ui64NV_P(program, location, x, y)}
public func glProgramUniform2ui64NV(program:GLuint, location:GLint, x:GLuint64EXT, y:GLuint64EXT) {glProgramUniform2ui64NV_P(program, location, x, y)}
var glProgramUniform2ui64NV_P:@convention(c)(GLuint, GLint, GLuint64EXT, GLuint64EXT) -> Void = glProgramUniform2ui64NV_L
public func glProgramUniform2ui64vARB(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint64>) {glProgramUniform2ui64vARB_P(program, location, count, value)}
public func glProgramUniform2ui64vARB(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLuint64>) {glProgramUniform2ui64vARB_P(program, location, count, value)}
var glProgramUniform2ui64vARB_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLuint64>) -> Void = glProgramUniform2ui64vARB_L
public func glProgramUniform2ui64vNV(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint64EXT>) {glProgramUniform2ui64vNV_P(program, location, count, value)}
public func glProgramUniform2ui64vNV(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLuint64EXT>) {glProgramUniform2ui64vNV_P(program, location, count, value)}
var glProgramUniform2ui64vNV_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLuint64EXT>) -> Void = glProgramUniform2ui64vNV_L
public func glProgramUniform2uiEXT(_ program:GLuint, _ location:GLint, _ v0:GLuint, _ v1:GLuint) {glProgramUniform2uiEXT_P(program, location, v0, v1)}
public func glProgramUniform2uiEXT(program:GLuint, location:GLint, v0:GLuint, v1:GLuint) {glProgramUniform2uiEXT_P(program, location, v0, v1)}
var glProgramUniform2uiEXT_P:@convention(c)(GLuint, GLint, GLuint, GLuint) -> Void = glProgramUniform2uiEXT_L
public func glProgramUniform2uiv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint>) {glProgramUniform2uiv_P(program, location, count, value)}
public func glProgramUniform2uiv(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLuint>) {glProgramUniform2uiv_P(program, location, count, value)}
var glProgramUniform2uiv_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLuint>) -> Void = glProgramUniform2uiv_L
public func glProgramUniform2uivEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint>) {glProgramUniform2uivEXT_P(program, location, count, value)}
public func glProgramUniform2uivEXT(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLuint>) {glProgramUniform2uivEXT_P(program, location, count, value)}
var glProgramUniform2uivEXT_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLuint>) -> Void = glProgramUniform2uivEXT_L
public func glProgramUniform3d(_ program:GLuint, _ location:GLint, _ v0:GLdouble, _ v1:GLdouble, _ v2:GLdouble) {glProgramUniform3d_P(program, location, v0, v1, v2)}
public func glProgramUniform3d(program:GLuint, location:GLint, v0:GLdouble, v1:GLdouble, v2:GLdouble) {glProgramUniform3d_P(program, location, v0, v1, v2)}
var glProgramUniform3d_P:@convention(c)(GLuint, GLint, GLdouble, GLdouble, GLdouble) -> Void = glProgramUniform3d_L
public func glProgramUniform3dEXT(_ program:GLuint, _ location:GLint, _ x:GLdouble, _ y:GLdouble, _ z:GLdouble) {glProgramUniform3dEXT_P(program, location, x, y, z)}
public func glProgramUniform3dEXT(program:GLuint, location:GLint, x:GLdouble, y:GLdouble, z:GLdouble) {glProgramUniform3dEXT_P(program, location, x, y, z)}
var glProgramUniform3dEXT_P:@convention(c)(GLuint, GLint, GLdouble, GLdouble, GLdouble) -> Void = glProgramUniform3dEXT_L
public func glProgramUniform3dv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLdouble>) {glProgramUniform3dv_P(program, location, count, value)}
public func glProgramUniform3dv(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLdouble>) {glProgramUniform3dv_P(program, location, count, value)}
var glProgramUniform3dv_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLdouble>) -> Void = glProgramUniform3dv_L
public func glProgramUniform3dvEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLdouble>) {glProgramUniform3dvEXT_P(program, location, count, value)}
public func glProgramUniform3dvEXT(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLdouble>) {glProgramUniform3dvEXT_P(program, location, count, value)}
var glProgramUniform3dvEXT_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLdouble>) -> Void = glProgramUniform3dvEXT_L
public func glProgramUniform3f(_ program:GLuint, _ location:GLint, _ v0:GLfloat, _ v1:GLfloat, _ v2:GLfloat) {glProgramUniform3f_P(program, location, v0, v1, v2)}
public func glProgramUniform3f(program:GLuint, location:GLint, v0:GLfloat, v1:GLfloat, v2:GLfloat) {glProgramUniform3f_P(program, location, v0, v1, v2)}
var glProgramUniform3f_P:@convention(c)(GLuint, GLint, GLfloat, GLfloat, GLfloat) -> Void = glProgramUniform3f_L
public func glProgramUniform3fEXT(_ program:GLuint, _ location:GLint, _ v0:GLfloat, _ v1:GLfloat, _ v2:GLfloat) {glProgramUniform3fEXT_P(program, location, v0, v1, v2)}
public func glProgramUniform3fEXT(program:GLuint, location:GLint, v0:GLfloat, v1:GLfloat, v2:GLfloat) {glProgramUniform3fEXT_P(program, location, v0, v1, v2)}
var glProgramUniform3fEXT_P:@convention(c)(GLuint, GLint, GLfloat, GLfloat, GLfloat) -> Void = glProgramUniform3fEXT_L
public func glProgramUniform3fv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLfloat>) {glProgramUniform3fv_P(program, location, count, value)}
public func glProgramUniform3fv(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLfloat>) {glProgramUniform3fv_P(program, location, count, value)}
var glProgramUniform3fv_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLfloat>) -> Void = glProgramUniform3fv_L
public func glProgramUniform3fvEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLfloat>) {glProgramUniform3fvEXT_P(program, location, count, value)}
public func glProgramUniform3fvEXT(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLfloat>) {glProgramUniform3fvEXT_P(program, location, count, value)}
var glProgramUniform3fvEXT_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLfloat>) -> Void = glProgramUniform3fvEXT_L
public func glProgramUniform3i(_ program:GLuint, _ location:GLint, _ v0:GLint, _ v1:GLint, _ v2:GLint) {glProgramUniform3i_P(program, location, v0, v1, v2)}
public func glProgramUniform3i(program:GLuint, location:GLint, v0:GLint, v1:GLint, v2:GLint) {glProgramUniform3i_P(program, location, v0, v1, v2)}
var glProgramUniform3i_P:@convention(c)(GLuint, GLint, GLint, GLint, GLint) -> Void = glProgramUniform3i_L
public func glProgramUniform3i64ARB(_ program:GLuint, _ location:GLint, _ x:GLint64, _ y:GLint64, _ z:GLint64) {glProgramUniform3i64ARB_P(program, location, x, y, z)}
public func glProgramUniform3i64ARB(program:GLuint, location:GLint, x:GLint64, y:GLint64, z:GLint64) {glProgramUniform3i64ARB_P(program, location, x, y, z)}
var glProgramUniform3i64ARB_P:@convention(c)(GLuint, GLint, GLint64, GLint64, GLint64) -> Void = glProgramUniform3i64ARB_L
public func glProgramUniform3i64NV(_ program:GLuint, _ location:GLint, _ x:GLint64EXT, _ y:GLint64EXT, _ z:GLint64EXT) {glProgramUniform3i64NV_P(program, location, x, y, z)}
public func glProgramUniform3i64NV(program:GLuint, location:GLint, x:GLint64EXT, y:GLint64EXT, z:GLint64EXT) {glProgramUniform3i64NV_P(program, location, x, y, z)}
var glProgramUniform3i64NV_P:@convention(c)(GLuint, GLint, GLint64EXT, GLint64EXT, GLint64EXT) -> Void = glProgramUniform3i64NV_L
public func glProgramUniform3i64vARB(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLint64>) {glProgramUniform3i64vARB_P(program, location, count, value)}
public func glProgramUniform3i64vARB(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLint64>) {glProgramUniform3i64vARB_P(program, location, count, value)}
var glProgramUniform3i64vARB_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLint64>) -> Void = glProgramUniform3i64vARB_L
public func glProgramUniform3i64vNV(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLint64EXT>) {glProgramUniform3i64vNV_P(program, location, count, value)}
public func glProgramUniform3i64vNV(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLint64EXT>) {glProgramUniform3i64vNV_P(program, location, count, value)}
var glProgramUniform3i64vNV_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLint64EXT>) -> Void = glProgramUniform3i64vNV_L
public func glProgramUniform3iEXT(_ program:GLuint, _ location:GLint, _ v0:GLint, _ v1:GLint, _ v2:GLint) {glProgramUniform3iEXT_P(program, location, v0, v1, v2)}
public func glProgramUniform3iEXT(program:GLuint, location:GLint, v0:GLint, v1:GLint, v2:GLint) {glProgramUniform3iEXT_P(program, location, v0, v1, v2)}
var glProgramUniform3iEXT_P:@convention(c)(GLuint, GLint, GLint, GLint, GLint) -> Void = glProgramUniform3iEXT_L
public func glProgramUniform3iv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLint>) {glProgramUniform3iv_P(program, location, count, value)}
public func glProgramUniform3iv(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLint>) {glProgramUniform3iv_P(program, location, count, value)}
var glProgramUniform3iv_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLint>) -> Void = glProgramUniform3iv_L
public func glProgramUniform3ivEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLint>) {glProgramUniform3ivEXT_P(program, location, count, value)}
public func glProgramUniform3ivEXT(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLint>) {glProgramUniform3ivEXT_P(program, location, count, value)}
var glProgramUniform3ivEXT_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLint>) -> Void = glProgramUniform3ivEXT_L
public func glProgramUniform3ui(_ program:GLuint, _ location:GLint, _ v0:GLuint, _ v1:GLuint, _ v2:GLuint) {glProgramUniform3ui_P(program, location, v0, v1, v2)}
public func glProgramUniform3ui(program:GLuint, location:GLint, v0:GLuint, v1:GLuint, v2:GLuint) {glProgramUniform3ui_P(program, location, v0, v1, v2)}
var glProgramUniform3ui_P:@convention(c)(GLuint, GLint, GLuint, GLuint, GLuint) -> Void = glProgramUniform3ui_L
public func glProgramUniform3ui64ARB(_ program:GLuint, _ location:GLint, _ x:GLuint64, _ y:GLuint64, _ z:GLuint64) {glProgramUniform3ui64ARB_P(program, location, x, y, z)}
public func glProgramUniform3ui64ARB(program:GLuint, location:GLint, x:GLuint64, y:GLuint64, z:GLuint64) {glProgramUniform3ui64ARB_P(program, location, x, y, z)}
var glProgramUniform3ui64ARB_P:@convention(c)(GLuint, GLint, GLuint64, GLuint64, GLuint64) -> Void = glProgramUniform3ui64ARB_L
public func glProgramUniform3ui64NV(_ program:GLuint, _ location:GLint, _ x:GLuint64EXT, _ y:GLuint64EXT, _ z:GLuint64EXT) {glProgramUniform3ui64NV_P(program, location, x, y, z)}
public func glProgramUniform3ui64NV(program:GLuint, location:GLint, x:GLuint64EXT, y:GLuint64EXT, z:GLuint64EXT) {glProgramUniform3ui64NV_P(program, location, x, y, z)}
var glProgramUniform3ui64NV_P:@convention(c)(GLuint, GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT) -> Void = glProgramUniform3ui64NV_L
public func glProgramUniform3ui64vARB(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint64>) {glProgramUniform3ui64vARB_P(program, location, count, value)}
public func glProgramUniform3ui64vARB(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLuint64>) {glProgramUniform3ui64vARB_P(program, location, count, value)}
var glProgramUniform3ui64vARB_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLuint64>) -> Void = glProgramUniform3ui64vARB_L
public func glProgramUniform3ui64vNV(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint64EXT>) {glProgramUniform3ui64vNV_P(program, location, count, value)}
public func glProgramUniform3ui64vNV(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLuint64EXT>) {glProgramUniform3ui64vNV_P(program, location, count, value)}
var glProgramUniform3ui64vNV_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLuint64EXT>) -> Void = glProgramUniform3ui64vNV_L
public func glProgramUniform3uiEXT(_ program:GLuint, _ location:GLint, _ v0:GLuint, _ v1:GLuint, _ v2:GLuint) {glProgramUniform3uiEXT_P(program, location, v0, v1, v2)}
public func glProgramUniform3uiEXT(program:GLuint, location:GLint, v0:GLuint, v1:GLuint, v2:GLuint) {glProgramUniform3uiEXT_P(program, location, v0, v1, v2)}
var glProgramUniform3uiEXT_P:@convention(c)(GLuint, GLint, GLuint, GLuint, GLuint) -> Void = glProgramUniform3uiEXT_L
public func glProgramUniform3uiv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint>) {glProgramUniform3uiv_P(program, location, count, value)}
public func glProgramUniform3uiv(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLuint>) {glProgramUniform3uiv_P(program, location, count, value)}
var glProgramUniform3uiv_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLuint>) -> Void = glProgramUniform3uiv_L
public func glProgramUniform3uivEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint>) {glProgramUniform3uivEXT_P(program, location, count, value)}
public func glProgramUniform3uivEXT(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLuint>) {glProgramUniform3uivEXT_P(program, location, count, value)}
var glProgramUniform3uivEXT_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLuint>) -> Void = glProgramUniform3uivEXT_L
public func glProgramUniform4d(_ program:GLuint, _ location:GLint, _ v0:GLdouble, _ v1:GLdouble, _ v2:GLdouble, _ v3:GLdouble) {glProgramUniform4d_P(program, location, v0, v1, v2, v3)}
public func glProgramUniform4d(program:GLuint, location:GLint, v0:GLdouble, v1:GLdouble, v2:GLdouble, v3:GLdouble) {glProgramUniform4d_P(program, location, v0, v1, v2, v3)}
var glProgramUniform4d_P:@convention(c)(GLuint, GLint, GLdouble, GLdouble, GLdouble, GLdouble) -> Void = glProgramUniform4d_L
public func glProgramUniform4dEXT(_ program:GLuint, _ location:GLint, _ x:GLdouble, _ y:GLdouble, _ z:GLdouble, _ w:GLdouble) {glProgramUniform4dEXT_P(program, location, x, y, z, w)}
public func glProgramUniform4dEXT(program:GLuint, location:GLint, x:GLdouble, y:GLdouble, z:GLdouble, w:GLdouble) {glProgramUniform4dEXT_P(program, location, x, y, z, w)}
var glProgramUniform4dEXT_P:@convention(c)(GLuint, GLint, GLdouble, GLdouble, GLdouble, GLdouble) -> Void = glProgramUniform4dEXT_L
public func glProgramUniform4dv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLdouble>) {glProgramUniform4dv_P(program, location, count, value)}
public func glProgramUniform4dv(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLdouble>) {glProgramUniform4dv_P(program, location, count, value)}
var glProgramUniform4dv_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLdouble>) -> Void = glProgramUniform4dv_L
public func glProgramUniform4dvEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLdouble>) {glProgramUniform4dvEXT_P(program, location, count, value)}
public func glProgramUniform4dvEXT(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLdouble>) {glProgramUniform4dvEXT_P(program, location, count, value)}
var glProgramUniform4dvEXT_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLdouble>) -> Void = glProgramUniform4dvEXT_L
public func glProgramUniform4f(_ program:GLuint, _ location:GLint, _ v0:GLfloat, _ v1:GLfloat, _ v2:GLfloat, _ v3:GLfloat) {glProgramUniform4f_P(program, location, v0, v1, v2, v3)}
public func glProgramUniform4f(program:GLuint, location:GLint, v0:GLfloat, v1:GLfloat, v2:GLfloat, v3:GLfloat) {glProgramUniform4f_P(program, location, v0, v1, v2, v3)}
var glProgramUniform4f_P:@convention(c)(GLuint, GLint, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glProgramUniform4f_L
public func glProgramUniform4fEXT(_ program:GLuint, _ location:GLint, _ v0:GLfloat, _ v1:GLfloat, _ v2:GLfloat, _ v3:GLfloat) {glProgramUniform4fEXT_P(program, location, v0, v1, v2, v3)}
public func glProgramUniform4fEXT(program:GLuint, location:GLint, v0:GLfloat, v1:GLfloat, v2:GLfloat, v3:GLfloat) {glProgramUniform4fEXT_P(program, location, v0, v1, v2, v3)}
var glProgramUniform4fEXT_P:@convention(c)(GLuint, GLint, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glProgramUniform4fEXT_L
public func glProgramUniform4fv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLfloat>) {glProgramUniform4fv_P(program, location, count, value)}
public func glProgramUniform4fv(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLfloat>) {glProgramUniform4fv_P(program, location, count, value)}
var glProgramUniform4fv_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLfloat>) -> Void = glProgramUniform4fv_L
public func glProgramUniform4fvEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLfloat>) {glProgramUniform4fvEXT_P(program, location, count, value)}
public func glProgramUniform4fvEXT(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLfloat>) {glProgramUniform4fvEXT_P(program, location, count, value)}
var glProgramUniform4fvEXT_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLfloat>) -> Void = glProgramUniform4fvEXT_L
public func glProgramUniform4i(_ program:GLuint, _ location:GLint, _ v0:GLint, _ v1:GLint, _ v2:GLint, _ v3:GLint) {glProgramUniform4i_P(program, location, v0, v1, v2, v3)}
public func glProgramUniform4i(program:GLuint, location:GLint, v0:GLint, v1:GLint, v2:GLint, v3:GLint) {glProgramUniform4i_P(program, location, v0, v1, v2, v3)}
var glProgramUniform4i_P:@convention(c)(GLuint, GLint, GLint, GLint, GLint, GLint) -> Void = glProgramUniform4i_L
public func glProgramUniform4i64ARB(_ program:GLuint, _ location:GLint, _ x:GLint64, _ y:GLint64, _ z:GLint64, _ w:GLint64) {glProgramUniform4i64ARB_P(program, location, x, y, z, w)}
public func glProgramUniform4i64ARB(program:GLuint, location:GLint, x:GLint64, y:GLint64, z:GLint64, w:GLint64) {glProgramUniform4i64ARB_P(program, location, x, y, z, w)}
var glProgramUniform4i64ARB_P:@convention(c)(GLuint, GLint, GLint64, GLint64, GLint64, GLint64) -> Void = glProgramUniform4i64ARB_L
public func glProgramUniform4i64NV(_ program:GLuint, _ location:GLint, _ x:GLint64EXT, _ y:GLint64EXT, _ z:GLint64EXT, _ w:GLint64EXT) {glProgramUniform4i64NV_P(program, location, x, y, z, w)}
public func glProgramUniform4i64NV(program:GLuint, location:GLint, x:GLint64EXT, y:GLint64EXT, z:GLint64EXT, w:GLint64EXT) {glProgramUniform4i64NV_P(program, location, x, y, z, w)}
var glProgramUniform4i64NV_P:@convention(c)(GLuint, GLint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT) -> Void = glProgramUniform4i64NV_L
public func glProgramUniform4i64vARB(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLint64>) {glProgramUniform4i64vARB_P(program, location, count, value)}
public func glProgramUniform4i64vARB(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLint64>) {glProgramUniform4i64vARB_P(program, location, count, value)}
var glProgramUniform4i64vARB_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLint64>) -> Void = glProgramUniform4i64vARB_L
public func glProgramUniform4i64vNV(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLint64EXT>) {glProgramUniform4i64vNV_P(program, location, count, value)}
public func glProgramUniform4i64vNV(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLint64EXT>) {glProgramUniform4i64vNV_P(program, location, count, value)}
var glProgramUniform4i64vNV_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLint64EXT>) -> Void = glProgramUniform4i64vNV_L
public func glProgramUniform4iEXT(_ program:GLuint, _ location:GLint, _ v0:GLint, _ v1:GLint, _ v2:GLint, _ v3:GLint) {glProgramUniform4iEXT_P(program, location, v0, v1, v2, v3)}
public func glProgramUniform4iEXT(program:GLuint, location:GLint, v0:GLint, v1:GLint, v2:GLint, v3:GLint) {glProgramUniform4iEXT_P(program, location, v0, v1, v2, v3)}
var glProgramUniform4iEXT_P:@convention(c)(GLuint, GLint, GLint, GLint, GLint, GLint) -> Void = glProgramUniform4iEXT_L
public func glProgramUniform4iv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLint>) {glProgramUniform4iv_P(program, location, count, value)}
public func glProgramUniform4iv(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLint>) {glProgramUniform4iv_P(program, location, count, value)}
var glProgramUniform4iv_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLint>) -> Void = glProgramUniform4iv_L
public func glProgramUniform4ivEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLint>) {glProgramUniform4ivEXT_P(program, location, count, value)}
public func glProgramUniform4ivEXT(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLint>) {glProgramUniform4ivEXT_P(program, location, count, value)}
var glProgramUniform4ivEXT_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLint>) -> Void = glProgramUniform4ivEXT_L
public func glProgramUniform4ui(_ program:GLuint, _ location:GLint, _ v0:GLuint, _ v1:GLuint, _ v2:GLuint, _ v3:GLuint) {glProgramUniform4ui_P(program, location, v0, v1, v2, v3)}
public func glProgramUniform4ui(program:GLuint, location:GLint, v0:GLuint, v1:GLuint, v2:GLuint, v3:GLuint) {glProgramUniform4ui_P(program, location, v0, v1, v2, v3)}
var glProgramUniform4ui_P:@convention(c)(GLuint, GLint, GLuint, GLuint, GLuint, GLuint) -> Void = glProgramUniform4ui_L
public func glProgramUniform4ui64ARB(_ program:GLuint, _ location:GLint, _ x:GLuint64, _ y:GLuint64, _ z:GLuint64, _ w:GLuint64) {glProgramUniform4ui64ARB_P(program, location, x, y, z, w)}
public func glProgramUniform4ui64ARB(program:GLuint, location:GLint, x:GLuint64, y:GLuint64, z:GLuint64, w:GLuint64) {glProgramUniform4ui64ARB_P(program, location, x, y, z, w)}
var glProgramUniform4ui64ARB_P:@convention(c)(GLuint, GLint, GLuint64, GLuint64, GLuint64, GLuint64) -> Void = glProgramUniform4ui64ARB_L
public func glProgramUniform4ui64NV(_ program:GLuint, _ location:GLint, _ x:GLuint64EXT, _ y:GLuint64EXT, _ z:GLuint64EXT, _ w:GLuint64EXT) {glProgramUniform4ui64NV_P(program, location, x, y, z, w)}
public func glProgramUniform4ui64NV(program:GLuint, location:GLint, x:GLuint64EXT, y:GLuint64EXT, z:GLuint64EXT, w:GLuint64EXT) {glProgramUniform4ui64NV_P(program, location, x, y, z, w)}
var glProgramUniform4ui64NV_P:@convention(c)(GLuint, GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT) -> Void = glProgramUniform4ui64NV_L
public func glProgramUniform4ui64vARB(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint64>) {glProgramUniform4ui64vARB_P(program, location, count, value)}
public func glProgramUniform4ui64vARB(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLuint64>) {glProgramUniform4ui64vARB_P(program, location, count, value)}
var glProgramUniform4ui64vARB_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLuint64>) -> Void = glProgramUniform4ui64vARB_L
public func glProgramUniform4ui64vNV(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint64EXT>) {glProgramUniform4ui64vNV_P(program, location, count, value)}
public func glProgramUniform4ui64vNV(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLuint64EXT>) {glProgramUniform4ui64vNV_P(program, location, count, value)}
var glProgramUniform4ui64vNV_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLuint64EXT>) -> Void = glProgramUniform4ui64vNV_L
public func glProgramUniform4uiEXT(_ program:GLuint, _ location:GLint, _ v0:GLuint, _ v1:GLuint, _ v2:GLuint, _ v3:GLuint) {glProgramUniform4uiEXT_P(program, location, v0, v1, v2, v3)}
public func glProgramUniform4uiEXT(program:GLuint, location:GLint, v0:GLuint, v1:GLuint, v2:GLuint, v3:GLuint) {glProgramUniform4uiEXT_P(program, location, v0, v1, v2, v3)}
var glProgramUniform4uiEXT_P:@convention(c)(GLuint, GLint, GLuint, GLuint, GLuint, GLuint) -> Void = glProgramUniform4uiEXT_L
public func glProgramUniform4uiv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint>) {glProgramUniform4uiv_P(program, location, count, value)}
public func glProgramUniform4uiv(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLuint>) {glProgramUniform4uiv_P(program, location, count, value)}
var glProgramUniform4uiv_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLuint>) -> Void = glProgramUniform4uiv_L
public func glProgramUniform4uivEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint>) {glProgramUniform4uivEXT_P(program, location, count, value)}
public func glProgramUniform4uivEXT(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLuint>) {glProgramUniform4uivEXT_P(program, location, count, value)}
var glProgramUniform4uivEXT_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLuint>) -> Void = glProgramUniform4uivEXT_L
public func glProgramUniformHandleui64ARB(_ program:GLuint, _ location:GLint, _ value:GLuint64) {glProgramUniformHandleui64ARB_P(program, location, value)}
public func glProgramUniformHandleui64ARB(program:GLuint, location:GLint, value:GLuint64) {glProgramUniformHandleui64ARB_P(program, location, value)}
var glProgramUniformHandleui64ARB_P:@convention(c)(GLuint, GLint, GLuint64) -> Void = glProgramUniformHandleui64ARB_L
public func glProgramUniformHandleui64NV(_ program:GLuint, _ location:GLint, _ value:GLuint64) {glProgramUniformHandleui64NV_P(program, location, value)}
public func glProgramUniformHandleui64NV(program:GLuint, location:GLint, value:GLuint64) {glProgramUniformHandleui64NV_P(program, location, value)}
var glProgramUniformHandleui64NV_P:@convention(c)(GLuint, GLint, GLuint64) -> Void = glProgramUniformHandleui64NV_L
public func glProgramUniformHandleui64vARB(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ values:UnsafePointer<GLuint64>) {glProgramUniformHandleui64vARB_P(program, location, count, values)}
public func glProgramUniformHandleui64vARB(program:GLuint, location:GLint, count:GLsizei, values:UnsafePointer<GLuint64>) {glProgramUniformHandleui64vARB_P(program, location, count, values)}
var glProgramUniformHandleui64vARB_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLuint64>) -> Void = glProgramUniformHandleui64vARB_L
public func glProgramUniformHandleui64vNV(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ values:UnsafePointer<GLuint64>) {glProgramUniformHandleui64vNV_P(program, location, count, values)}
public func glProgramUniformHandleui64vNV(program:GLuint, location:GLint, count:GLsizei, values:UnsafePointer<GLuint64>) {glProgramUniformHandleui64vNV_P(program, location, count, values)}
var glProgramUniformHandleui64vNV_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLuint64>) -> Void = glProgramUniformHandleui64vNV_L
public func glProgramUniformMatrix2dv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLdouble>) {glProgramUniformMatrix2dv_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix2dv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLdouble>) {glProgramUniformMatrix2dv_P(program, location, count, transpose, value)}
var glProgramUniformMatrix2dv_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLdouble>) -> Void = glProgramUniformMatrix2dv_L
public func glProgramUniformMatrix2dvEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLdouble>) {glProgramUniformMatrix2dvEXT_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix2dvEXT(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLdouble>) {glProgramUniformMatrix2dvEXT_P(program, location, count, transpose, value)}
var glProgramUniformMatrix2dvEXT_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLdouble>) -> Void = glProgramUniformMatrix2dvEXT_L
public func glProgramUniformMatrix2fv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glProgramUniformMatrix2fv_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix2fv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glProgramUniformMatrix2fv_P(program, location, count, transpose, value)}
var glProgramUniformMatrix2fv_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glProgramUniformMatrix2fv_L
public func glProgramUniformMatrix2fvEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glProgramUniformMatrix2fvEXT_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix2fvEXT(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glProgramUniformMatrix2fvEXT_P(program, location, count, transpose, value)}
var glProgramUniformMatrix2fvEXT_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glProgramUniformMatrix2fvEXT_L
public func glProgramUniformMatrix2x3dv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLdouble>) {glProgramUniformMatrix2x3dv_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix2x3dv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLdouble>) {glProgramUniformMatrix2x3dv_P(program, location, count, transpose, value)}
var glProgramUniformMatrix2x3dv_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLdouble>) -> Void = glProgramUniformMatrix2x3dv_L
public func glProgramUniformMatrix2x3dvEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLdouble>) {glProgramUniformMatrix2x3dvEXT_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix2x3dvEXT(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLdouble>) {glProgramUniformMatrix2x3dvEXT_P(program, location, count, transpose, value)}
var glProgramUniformMatrix2x3dvEXT_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLdouble>) -> Void = glProgramUniformMatrix2x3dvEXT_L
public func glProgramUniformMatrix2x3fv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glProgramUniformMatrix2x3fv_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix2x3fv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glProgramUniformMatrix2x3fv_P(program, location, count, transpose, value)}
var glProgramUniformMatrix2x3fv_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glProgramUniformMatrix2x3fv_L
public func glProgramUniformMatrix2x3fvEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glProgramUniformMatrix2x3fvEXT_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix2x3fvEXT(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glProgramUniformMatrix2x3fvEXT_P(program, location, count, transpose, value)}
var glProgramUniformMatrix2x3fvEXT_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glProgramUniformMatrix2x3fvEXT_L
public func glProgramUniformMatrix2x4dv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLdouble>) {glProgramUniformMatrix2x4dv_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix2x4dv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLdouble>) {glProgramUniformMatrix2x4dv_P(program, location, count, transpose, value)}
var glProgramUniformMatrix2x4dv_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLdouble>) -> Void = glProgramUniformMatrix2x4dv_L
public func glProgramUniformMatrix2x4dvEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLdouble>) {glProgramUniformMatrix2x4dvEXT_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix2x4dvEXT(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLdouble>) {glProgramUniformMatrix2x4dvEXT_P(program, location, count, transpose, value)}
var glProgramUniformMatrix2x4dvEXT_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLdouble>) -> Void = glProgramUniformMatrix2x4dvEXT_L
public func glProgramUniformMatrix2x4fv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glProgramUniformMatrix2x4fv_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix2x4fv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glProgramUniformMatrix2x4fv_P(program, location, count, transpose, value)}
var glProgramUniformMatrix2x4fv_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glProgramUniformMatrix2x4fv_L
public func glProgramUniformMatrix2x4fvEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glProgramUniformMatrix2x4fvEXT_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix2x4fvEXT(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glProgramUniformMatrix2x4fvEXT_P(program, location, count, transpose, value)}
var glProgramUniformMatrix2x4fvEXT_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glProgramUniformMatrix2x4fvEXT_L
public func glProgramUniformMatrix3dv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLdouble>) {glProgramUniformMatrix3dv_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix3dv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLdouble>) {glProgramUniformMatrix3dv_P(program, location, count, transpose, value)}
var glProgramUniformMatrix3dv_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLdouble>) -> Void = glProgramUniformMatrix3dv_L
public func glProgramUniformMatrix3dvEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLdouble>) {glProgramUniformMatrix3dvEXT_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix3dvEXT(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLdouble>) {glProgramUniformMatrix3dvEXT_P(program, location, count, transpose, value)}
var glProgramUniformMatrix3dvEXT_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLdouble>) -> Void = glProgramUniformMatrix3dvEXT_L
public func glProgramUniformMatrix3fv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glProgramUniformMatrix3fv_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix3fv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glProgramUniformMatrix3fv_P(program, location, count, transpose, value)}
var glProgramUniformMatrix3fv_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glProgramUniformMatrix3fv_L
public func glProgramUniformMatrix3fvEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glProgramUniformMatrix3fvEXT_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix3fvEXT(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glProgramUniformMatrix3fvEXT_P(program, location, count, transpose, value)}
var glProgramUniformMatrix3fvEXT_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glProgramUniformMatrix3fvEXT_L
public func glProgramUniformMatrix3x2dv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLdouble>) {glProgramUniformMatrix3x2dv_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix3x2dv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLdouble>) {glProgramUniformMatrix3x2dv_P(program, location, count, transpose, value)}
var glProgramUniformMatrix3x2dv_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLdouble>) -> Void = glProgramUniformMatrix3x2dv_L
public func glProgramUniformMatrix3x2dvEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLdouble>) {glProgramUniformMatrix3x2dvEXT_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix3x2dvEXT(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLdouble>) {glProgramUniformMatrix3x2dvEXT_P(program, location, count, transpose, value)}
var glProgramUniformMatrix3x2dvEXT_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLdouble>) -> Void = glProgramUniformMatrix3x2dvEXT_L
public func glProgramUniformMatrix3x2fv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glProgramUniformMatrix3x2fv_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix3x2fv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glProgramUniformMatrix3x2fv_P(program, location, count, transpose, value)}
var glProgramUniformMatrix3x2fv_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glProgramUniformMatrix3x2fv_L
public func glProgramUniformMatrix3x2fvEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glProgramUniformMatrix3x2fvEXT_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix3x2fvEXT(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glProgramUniformMatrix3x2fvEXT_P(program, location, count, transpose, value)}
var glProgramUniformMatrix3x2fvEXT_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glProgramUniformMatrix3x2fvEXT_L
public func glProgramUniformMatrix3x4dv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLdouble>) {glProgramUniformMatrix3x4dv_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix3x4dv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLdouble>) {glProgramUniformMatrix3x4dv_P(program, location, count, transpose, value)}
var glProgramUniformMatrix3x4dv_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLdouble>) -> Void = glProgramUniformMatrix3x4dv_L
public func glProgramUniformMatrix3x4dvEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLdouble>) {glProgramUniformMatrix3x4dvEXT_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix3x4dvEXT(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLdouble>) {glProgramUniformMatrix3x4dvEXT_P(program, location, count, transpose, value)}
var glProgramUniformMatrix3x4dvEXT_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLdouble>) -> Void = glProgramUniformMatrix3x4dvEXT_L
public func glProgramUniformMatrix3x4fv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glProgramUniformMatrix3x4fv_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix3x4fv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glProgramUniformMatrix3x4fv_P(program, location, count, transpose, value)}
var glProgramUniformMatrix3x4fv_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glProgramUniformMatrix3x4fv_L
public func glProgramUniformMatrix3x4fvEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glProgramUniformMatrix3x4fvEXT_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix3x4fvEXT(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glProgramUniformMatrix3x4fvEXT_P(program, location, count, transpose, value)}
var glProgramUniformMatrix3x4fvEXT_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glProgramUniformMatrix3x4fvEXT_L
public func glProgramUniformMatrix4dv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLdouble>) {glProgramUniformMatrix4dv_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix4dv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLdouble>) {glProgramUniformMatrix4dv_P(program, location, count, transpose, value)}
var glProgramUniformMatrix4dv_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLdouble>) -> Void = glProgramUniformMatrix4dv_L
public func glProgramUniformMatrix4dvEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLdouble>) {glProgramUniformMatrix4dvEXT_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix4dvEXT(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLdouble>) {glProgramUniformMatrix4dvEXT_P(program, location, count, transpose, value)}
var glProgramUniformMatrix4dvEXT_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLdouble>) -> Void = glProgramUniformMatrix4dvEXT_L
public func glProgramUniformMatrix4fv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glProgramUniformMatrix4fv_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix4fv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glProgramUniformMatrix4fv_P(program, location, count, transpose, value)}
var glProgramUniformMatrix4fv_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glProgramUniformMatrix4fv_L
public func glProgramUniformMatrix4fvEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glProgramUniformMatrix4fvEXT_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix4fvEXT(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glProgramUniformMatrix4fvEXT_P(program, location, count, transpose, value)}
var glProgramUniformMatrix4fvEXT_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glProgramUniformMatrix4fvEXT_L
public func glProgramUniformMatrix4x2dv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLdouble>) {glProgramUniformMatrix4x2dv_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix4x2dv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLdouble>) {glProgramUniformMatrix4x2dv_P(program, location, count, transpose, value)}
var glProgramUniformMatrix4x2dv_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLdouble>) -> Void = glProgramUniformMatrix4x2dv_L
public func glProgramUniformMatrix4x2dvEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLdouble>) {glProgramUniformMatrix4x2dvEXT_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix4x2dvEXT(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLdouble>) {glProgramUniformMatrix4x2dvEXT_P(program, location, count, transpose, value)}
var glProgramUniformMatrix4x2dvEXT_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLdouble>) -> Void = glProgramUniformMatrix4x2dvEXT_L
public func glProgramUniformMatrix4x2fv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glProgramUniformMatrix4x2fv_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix4x2fv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glProgramUniformMatrix4x2fv_P(program, location, count, transpose, value)}
var glProgramUniformMatrix4x2fv_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glProgramUniformMatrix4x2fv_L
public func glProgramUniformMatrix4x2fvEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glProgramUniformMatrix4x2fvEXT_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix4x2fvEXT(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glProgramUniformMatrix4x2fvEXT_P(program, location, count, transpose, value)}
var glProgramUniformMatrix4x2fvEXT_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glProgramUniformMatrix4x2fvEXT_L
public func glProgramUniformMatrix4x3dv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLdouble>) {glProgramUniformMatrix4x3dv_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix4x3dv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLdouble>) {glProgramUniformMatrix4x3dv_P(program, location, count, transpose, value)}
var glProgramUniformMatrix4x3dv_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLdouble>) -> Void = glProgramUniformMatrix4x3dv_L
public func glProgramUniformMatrix4x3dvEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLdouble>) {glProgramUniformMatrix4x3dvEXT_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix4x3dvEXT(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLdouble>) {glProgramUniformMatrix4x3dvEXT_P(program, location, count, transpose, value)}
var glProgramUniformMatrix4x3dvEXT_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLdouble>) -> Void = glProgramUniformMatrix4x3dvEXT_L
public func glProgramUniformMatrix4x3fv(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glProgramUniformMatrix4x3fv_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix4x3fv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glProgramUniformMatrix4x3fv_P(program, location, count, transpose, value)}
var glProgramUniformMatrix4x3fv_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glProgramUniformMatrix4x3fv_L
public func glProgramUniformMatrix4x3fvEXT(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glProgramUniformMatrix4x3fvEXT_P(program, location, count, transpose, value)}
public func glProgramUniformMatrix4x3fvEXT(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glProgramUniformMatrix4x3fvEXT_P(program, location, count, transpose, value)}
var glProgramUniformMatrix4x3fvEXT_P:@convention(c)(GLuint, GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glProgramUniformMatrix4x3fvEXT_L
public func glProgramUniformui64NV(_ program:GLuint, _ location:GLint, _ value:GLuint64EXT) {glProgramUniformui64NV_P(program, location, value)}
public func glProgramUniformui64NV(program:GLuint, location:GLint, value:GLuint64EXT) {glProgramUniformui64NV_P(program, location, value)}
var glProgramUniformui64NV_P:@convention(c)(GLuint, GLint, GLuint64EXT) -> Void = glProgramUniformui64NV_L
public func glProgramUniformui64vNV(_ program:GLuint, _ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint64EXT>) {glProgramUniformui64vNV_P(program, location, count, value)}
public func glProgramUniformui64vNV(program:GLuint, location:GLint, count:GLsizei, value:UnsafePointer<GLuint64EXT>) {glProgramUniformui64vNV_P(program, location, count, value)}
var glProgramUniformui64vNV_P:@convention(c)(GLuint, GLint, GLsizei, UnsafePointer<GLuint64EXT>) -> Void = glProgramUniformui64vNV_L
public func glProgramVertexLimitNV(_ target:GLenum, _ limit:GLint) {glProgramVertexLimitNV_P(target, limit)}
public func glProgramVertexLimitNV(target:GLenum, limit:GLint) {glProgramVertexLimitNV_P(target, limit)}
var glProgramVertexLimitNV_P:@convention(c)(GLenum, GLint) -> Void = glProgramVertexLimitNV_L
public func glProvokingVertex(_ mode:GLenum) {glProvokingVertex_P(mode)}
public func glProvokingVertex(mode:GLenum) {glProvokingVertex_P(mode)}
var glProvokingVertex_P:@convention(c)(GLenum) -> Void = glProvokingVertex_L
public func glProvokingVertexEXT(_ mode:GLenum) {glProvokingVertexEXT_P(mode)}
public func glProvokingVertexEXT(mode:GLenum) {glProvokingVertexEXT_P(mode)}
var glProvokingVertexEXT_P:@convention(c)(GLenum) -> Void = glProvokingVertexEXT_L
public func glPushAttrib(_ mask:GLbitfield) {glPushAttrib_P(mask)}
public func glPushAttrib(mask:GLbitfield) {glPushAttrib_P(mask)}
var glPushAttrib_P:@convention(c)(GLbitfield) -> Void = glPushAttrib_L
public func glPushClientAttrib(_ mask:GLbitfield) {glPushClientAttrib_P(mask)}
public func glPushClientAttrib(mask:GLbitfield) {glPushClientAttrib_P(mask)}
var glPushClientAttrib_P:@convention(c)(GLbitfield) -> Void = glPushClientAttrib_L
public func glPushClientAttribDefaultEXT(_ mask:GLbitfield) {glPushClientAttribDefaultEXT_P(mask)}
public func glPushClientAttribDefaultEXT(mask:GLbitfield) {glPushClientAttribDefaultEXT_P(mask)}
var glPushClientAttribDefaultEXT_P:@convention(c)(GLbitfield) -> Void = glPushClientAttribDefaultEXT_L
public func glPushDebugGroup(_ source:GLenum, _ id:GLuint, _ length:GLsizei, _ message:UnsafePointer<GLchar>) {glPushDebugGroup_P(source, id, length, message)}
public func glPushDebugGroup(source:GLenum, id:GLuint, length:GLsizei, message:UnsafePointer<GLchar>) {glPushDebugGroup_P(source, id, length, message)}
var glPushDebugGroup_P:@convention(c)(GLenum, GLuint, GLsizei, UnsafePointer<GLchar>) -> Void = glPushDebugGroup_L
public func glPushDebugGroupKHR(_ source:GLenum, _ id:GLuint, _ length:GLsizei, _ message:UnsafePointer<GLchar>) {glPushDebugGroupKHR_P(source, id, length, message)}
public func glPushDebugGroupKHR(source:GLenum, id:GLuint, length:GLsizei, message:UnsafePointer<GLchar>) {glPushDebugGroupKHR_P(source, id, length, message)}
var glPushDebugGroupKHR_P:@convention(c)(GLenum, GLuint, GLsizei, UnsafePointer<GLchar>) -> Void = glPushDebugGroupKHR_L
public func glPushGroupMarkerEXT(_ length:GLsizei, _ marker:UnsafePointer<GLchar>) {glPushGroupMarkerEXT_P(length, marker)}
public func glPushGroupMarkerEXT(length:GLsizei, marker:UnsafePointer<GLchar>) {glPushGroupMarkerEXT_P(length, marker)}
var glPushGroupMarkerEXT_P:@convention(c)(GLsizei, UnsafePointer<GLchar>) -> Void = glPushGroupMarkerEXT_L
public func glPushMatrix() {glPushMatrix_P()}
var glPushMatrix_P:@convention(c)() -> Void = glPushMatrix_L
public func glPushName(_ name:GLuint) {glPushName_P(name)}
public func glPushName(name:GLuint) {glPushName_P(name)}
var glPushName_P:@convention(c)(GLuint) -> Void = glPushName_L
public func glQueryCounter(_ id:GLuint, _ target:GLenum) {glQueryCounter_P(id, target)}
public func glQueryCounter(id:GLuint, target:GLenum) {glQueryCounter_P(id, target)}
var glQueryCounter_P:@convention(c)(GLuint, GLenum) -> Void = glQueryCounter_L
public func glQueryCounterEXT(_ id:GLuint, _ target:GLenum) {glQueryCounterEXT_P(id, target)}
public func glQueryCounterEXT(id:GLuint, target:GLenum) {glQueryCounterEXT_P(id, target)}
var glQueryCounterEXT_P:@convention(c)(GLuint, GLenum) -> Void = glQueryCounterEXT_L
public func glQueryMatrixxOES(_ mantissa:UnsafeMutablePointer<GLfixed>, _ exponent:UnsafeMutablePointer<GLint>) -> GLbitfield {return glQueryMatrixxOES_P(mantissa, exponent)}
public func glQueryMatrixxOES(mantissa:UnsafeMutablePointer<GLfixed>, exponent:UnsafeMutablePointer<GLint>) -> GLbitfield {return glQueryMatrixxOES_P(mantissa, exponent)}
var glQueryMatrixxOES_P:@convention(c)(UnsafeMutablePointer<GLfixed>, UnsafeMutablePointer<GLint>) -> GLbitfield = glQueryMatrixxOES_L
public func glQueryObjectParameteruiAMD(_ target:GLenum, _ id:GLuint, _ pname:GLenum, _ param:GLuint) {glQueryObjectParameteruiAMD_P(target, id, pname, param)}
public func glQueryObjectParameteruiAMD(target:GLenum, id:GLuint, pname:GLenum, param:GLuint) {glQueryObjectParameteruiAMD_P(target, id, pname, param)}
var glQueryObjectParameteruiAMD_P:@convention(c)(GLenum, GLuint, GLenum, GLuint) -> Void = glQueryObjectParameteruiAMD_L
public func glRasterPos2d(_ x:GLdouble, _ y:GLdouble) {glRasterPos2d_P(x, y)}
public func glRasterPos2d(x:GLdouble, y:GLdouble) {glRasterPos2d_P(x, y)}
var glRasterPos2d_P:@convention(c)(GLdouble, GLdouble) -> Void = glRasterPos2d_L
public func glRasterPos2dv(_ v:UnsafePointer<GLdouble>) {glRasterPos2dv_P(v)}
public func glRasterPos2dv(v:UnsafePointer<GLdouble>) {glRasterPos2dv_P(v)}
var glRasterPos2dv_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glRasterPos2dv_L
public func glRasterPos2f(_ x:GLfloat, _ y:GLfloat) {glRasterPos2f_P(x, y)}
public func glRasterPos2f(x:GLfloat, y:GLfloat) {glRasterPos2f_P(x, y)}
var glRasterPos2f_P:@convention(c)(GLfloat, GLfloat) -> Void = glRasterPos2f_L
public func glRasterPos2fv(_ v:UnsafePointer<GLfloat>) {glRasterPos2fv_P(v)}
public func glRasterPos2fv(v:UnsafePointer<GLfloat>) {glRasterPos2fv_P(v)}
var glRasterPos2fv_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glRasterPos2fv_L
public func glRasterPos2i(_ x:GLint, _ y:GLint) {glRasterPos2i_P(x, y)}
public func glRasterPos2i(x:GLint, y:GLint) {glRasterPos2i_P(x, y)}
var glRasterPos2i_P:@convention(c)(GLint, GLint) -> Void = glRasterPos2i_L
public func glRasterPos2iv(_ v:UnsafePointer<GLint>) {glRasterPos2iv_P(v)}
public func glRasterPos2iv(v:UnsafePointer<GLint>) {glRasterPos2iv_P(v)}
var glRasterPos2iv_P:@convention(c)(UnsafePointer<GLint>) -> Void = glRasterPos2iv_L
public func glRasterPos2s(_ x:GLshort, _ y:GLshort) {glRasterPos2s_P(x, y)}
public func glRasterPos2s(x:GLshort, y:GLshort) {glRasterPos2s_P(x, y)}
var glRasterPos2s_P:@convention(c)(GLshort, GLshort) -> Void = glRasterPos2s_L
public func glRasterPos2sv(_ v:UnsafePointer<GLshort>) {glRasterPos2sv_P(v)}
public func glRasterPos2sv(v:UnsafePointer<GLshort>) {glRasterPos2sv_P(v)}
var glRasterPos2sv_P:@convention(c)(UnsafePointer<GLshort>) -> Void = glRasterPos2sv_L
public func glRasterPos2xOES(_ x:GLfixed, _ y:GLfixed) {glRasterPos2xOES_P(x, y)}
public func glRasterPos2xOES(x:GLfixed, y:GLfixed) {glRasterPos2xOES_P(x, y)}
var glRasterPos2xOES_P:@convention(c)(GLfixed, GLfixed) -> Void = glRasterPos2xOES_L
public func glRasterPos2xvOES(_ coords:UnsafePointer<GLfixed>) {glRasterPos2xvOES_P(coords)}
public func glRasterPos2xvOES(coords:UnsafePointer<GLfixed>) {glRasterPos2xvOES_P(coords)}
var glRasterPos2xvOES_P:@convention(c)(UnsafePointer<GLfixed>) -> Void = glRasterPos2xvOES_L
public func glRasterPos3d(_ x:GLdouble, _ y:GLdouble, _ z:GLdouble) {glRasterPos3d_P(x, y, z)}
public func glRasterPos3d(x:GLdouble, y:GLdouble, z:GLdouble) {glRasterPos3d_P(x, y, z)}
var glRasterPos3d_P:@convention(c)(GLdouble, GLdouble, GLdouble) -> Void = glRasterPos3d_L
public func glRasterPos3dv(_ v:UnsafePointer<GLdouble>) {glRasterPos3dv_P(v)}
public func glRasterPos3dv(v:UnsafePointer<GLdouble>) {glRasterPos3dv_P(v)}
var glRasterPos3dv_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glRasterPos3dv_L
public func glRasterPos3f(_ x:GLfloat, _ y:GLfloat, _ z:GLfloat) {glRasterPos3f_P(x, y, z)}
public func glRasterPos3f(x:GLfloat, y:GLfloat, z:GLfloat) {glRasterPos3f_P(x, y, z)}
var glRasterPos3f_P:@convention(c)(GLfloat, GLfloat, GLfloat) -> Void = glRasterPos3f_L
public func glRasterPos3fv(_ v:UnsafePointer<GLfloat>) {glRasterPos3fv_P(v)}
public func glRasterPos3fv(v:UnsafePointer<GLfloat>) {glRasterPos3fv_P(v)}
var glRasterPos3fv_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glRasterPos3fv_L
public func glRasterPos3i(_ x:GLint, _ y:GLint, _ z:GLint) {glRasterPos3i_P(x, y, z)}
public func glRasterPos3i(x:GLint, y:GLint, z:GLint) {glRasterPos3i_P(x, y, z)}
var glRasterPos3i_P:@convention(c)(GLint, GLint, GLint) -> Void = glRasterPos3i_L
public func glRasterPos3iv(_ v:UnsafePointer<GLint>) {glRasterPos3iv_P(v)}
public func glRasterPos3iv(v:UnsafePointer<GLint>) {glRasterPos3iv_P(v)}
var glRasterPos3iv_P:@convention(c)(UnsafePointer<GLint>) -> Void = glRasterPos3iv_L
public func glRasterPos3s(_ x:GLshort, _ y:GLshort, _ z:GLshort) {glRasterPos3s_P(x, y, z)}
public func glRasterPos3s(x:GLshort, y:GLshort, z:GLshort) {glRasterPos3s_P(x, y, z)}
var glRasterPos3s_P:@convention(c)(GLshort, GLshort, GLshort) -> Void = glRasterPos3s_L
public func glRasterPos3sv(_ v:UnsafePointer<GLshort>) {glRasterPos3sv_P(v)}
public func glRasterPos3sv(v:UnsafePointer<GLshort>) {glRasterPos3sv_P(v)}
var glRasterPos3sv_P:@convention(c)(UnsafePointer<GLshort>) -> Void = glRasterPos3sv_L
public func glRasterPos3xOES(_ x:GLfixed, _ y:GLfixed, _ z:GLfixed) {glRasterPos3xOES_P(x, y, z)}
public func glRasterPos3xOES(x:GLfixed, y:GLfixed, z:GLfixed) {glRasterPos3xOES_P(x, y, z)}
var glRasterPos3xOES_P:@convention(c)(GLfixed, GLfixed, GLfixed) -> Void = glRasterPos3xOES_L
public func glRasterPos3xvOES(_ coords:UnsafePointer<GLfixed>) {glRasterPos3xvOES_P(coords)}
public func glRasterPos3xvOES(coords:UnsafePointer<GLfixed>) {glRasterPos3xvOES_P(coords)}
var glRasterPos3xvOES_P:@convention(c)(UnsafePointer<GLfixed>) -> Void = glRasterPos3xvOES_L
public func glRasterPos4d(_ x:GLdouble, _ y:GLdouble, _ z:GLdouble, _ w:GLdouble) {glRasterPos4d_P(x, y, z, w)}
public func glRasterPos4d(x:GLdouble, y:GLdouble, z:GLdouble, w:GLdouble) {glRasterPos4d_P(x, y, z, w)}
var glRasterPos4d_P:@convention(c)(GLdouble, GLdouble, GLdouble, GLdouble) -> Void = glRasterPos4d_L
public func glRasterPos4dv(_ v:UnsafePointer<GLdouble>) {glRasterPos4dv_P(v)}
public func glRasterPos4dv(v:UnsafePointer<GLdouble>) {glRasterPos4dv_P(v)}
var glRasterPos4dv_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glRasterPos4dv_L
public func glRasterPos4f(_ x:GLfloat, _ y:GLfloat, _ z:GLfloat, _ w:GLfloat) {glRasterPos4f_P(x, y, z, w)}
public func glRasterPos4f(x:GLfloat, y:GLfloat, z:GLfloat, w:GLfloat) {glRasterPos4f_P(x, y, z, w)}
var glRasterPos4f_P:@convention(c)(GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glRasterPos4f_L
public func glRasterPos4fv(_ v:UnsafePointer<GLfloat>) {glRasterPos4fv_P(v)}
public func glRasterPos4fv(v:UnsafePointer<GLfloat>) {glRasterPos4fv_P(v)}
var glRasterPos4fv_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glRasterPos4fv_L
public func glRasterPos4i(_ x:GLint, _ y:GLint, _ z:GLint, _ w:GLint) {glRasterPos4i_P(x, y, z, w)}
public func glRasterPos4i(x:GLint, y:GLint, z:GLint, w:GLint) {glRasterPos4i_P(x, y, z, w)}
var glRasterPos4i_P:@convention(c)(GLint, GLint, GLint, GLint) -> Void = glRasterPos4i_L
public func glRasterPos4iv(_ v:UnsafePointer<GLint>) {glRasterPos4iv_P(v)}
public func glRasterPos4iv(v:UnsafePointer<GLint>) {glRasterPos4iv_P(v)}
var glRasterPos4iv_P:@convention(c)(UnsafePointer<GLint>) -> Void = glRasterPos4iv_L
public func glRasterPos4s(_ x:GLshort, _ y:GLshort, _ z:GLshort, _ w:GLshort) {glRasterPos4s_P(x, y, z, w)}
public func glRasterPos4s(x:GLshort, y:GLshort, z:GLshort, w:GLshort) {glRasterPos4s_P(x, y, z, w)}
var glRasterPos4s_P:@convention(c)(GLshort, GLshort, GLshort, GLshort) -> Void = glRasterPos4s_L
public func glRasterPos4sv(_ v:UnsafePointer<GLshort>) {glRasterPos4sv_P(v)}
public func glRasterPos4sv(v:UnsafePointer<GLshort>) {glRasterPos4sv_P(v)}
var glRasterPos4sv_P:@convention(c)(UnsafePointer<GLshort>) -> Void = glRasterPos4sv_L
public func glRasterPos4xOES(_ x:GLfixed, _ y:GLfixed, _ z:GLfixed, _ w:GLfixed) {glRasterPos4xOES_P(x, y, z, w)}
public func glRasterPos4xOES(x:GLfixed, y:GLfixed, z:GLfixed, w:GLfixed) {glRasterPos4xOES_P(x, y, z, w)}
var glRasterPos4xOES_P:@convention(c)(GLfixed, GLfixed, GLfixed, GLfixed) -> Void = glRasterPos4xOES_L
public func glRasterPos4xvOES(_ coords:UnsafePointer<GLfixed>) {glRasterPos4xvOES_P(coords)}
public func glRasterPos4xvOES(coords:UnsafePointer<GLfixed>) {glRasterPos4xvOES_P(coords)}
var glRasterPos4xvOES_P:@convention(c)(UnsafePointer<GLfixed>) -> Void = glRasterPos4xvOES_L
public func glRasterSamplesEXT(_ samples:GLuint, _ fixedsamplelocations:GLboolean) {glRasterSamplesEXT_P(samples, fixedsamplelocations)}
public func glRasterSamplesEXT(samples:GLuint, fixedsamplelocations:GLboolean) {glRasterSamplesEXT_P(samples, fixedsamplelocations)}
var glRasterSamplesEXT_P:@convention(c)(GLuint, GLboolean) -> Void = glRasterSamplesEXT_L
public func glReadBuffer(_ src:GLenum) {glReadBuffer_P(src)}
public func glReadBuffer(src:GLenum) {glReadBuffer_P(src)}
var glReadBuffer_P:@convention(c)(GLenum) -> Void = glReadBuffer_L
public func glReadBufferIndexedEXT(_ src:GLenum, _ index:GLint) {glReadBufferIndexedEXT_P(src, index)}
public func glReadBufferIndexedEXT(src:GLenum, index:GLint) {glReadBufferIndexedEXT_P(src, index)}
var glReadBufferIndexedEXT_P:@convention(c)(GLenum, GLint) -> Void = glReadBufferIndexedEXT_L
public func glReadBufferNV(_ mode:GLenum) {glReadBufferNV_P(mode)}
public func glReadBufferNV(mode:GLenum) {glReadBufferNV_P(mode)}
var glReadBufferNV_P:@convention(c)(GLenum) -> Void = glReadBufferNV_L
public func glReadInstrumentsSGIX(_ marker:GLint) {glReadInstrumentsSGIX_P(marker)}
public func glReadInstrumentsSGIX(marker:GLint) {glReadInstrumentsSGIX_P(marker)}
var glReadInstrumentsSGIX_P:@convention(c)(GLint) -> Void = glReadInstrumentsSGIX_L
public func glReadPixels(_ x:GLint, _ y:GLint, _ width:GLsizei, _ height:GLsizei, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeMutableRawPointer) {glReadPixels_P(x, y, width, height, format, type, pixels)}
public func glReadPixels(x:GLint, y:GLint, width:GLsizei, height:GLsizei, format:GLenum, type:GLenum, pixels:UnsafeMutableRawPointer) {glReadPixels_P(x, y, width, height, format, type, pixels)}
var glReadPixels_P:@convention(c)(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, UnsafeMutableRawPointer) -> Void = glReadPixels_L
public func glReadnPixels(_ x:GLint, _ y:GLint, _ width:GLsizei, _ height:GLsizei, _ format:GLenum, _ type:GLenum, _ bufSize:GLsizei, _ data:UnsafeMutableRawPointer) {glReadnPixels_P(x, y, width, height, format, type, bufSize, data)}
public func glReadnPixels(x:GLint, y:GLint, width:GLsizei, height:GLsizei, format:GLenum, type:GLenum, bufSize:GLsizei, data:UnsafeMutableRawPointer) {glReadnPixels_P(x, y, width, height, format, type, bufSize, data)}
var glReadnPixels_P:@convention(c)(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, UnsafeMutableRawPointer) -> Void = glReadnPixels_L
public func glReadnPixelsARB(_ x:GLint, _ y:GLint, _ width:GLsizei, _ height:GLsizei, _ format:GLenum, _ type:GLenum, _ bufSize:GLsizei, _ data:UnsafeMutableRawPointer) {glReadnPixelsARB_P(x, y, width, height, format, type, bufSize, data)}
public func glReadnPixelsARB(x:GLint, y:GLint, width:GLsizei, height:GLsizei, format:GLenum, type:GLenum, bufSize:GLsizei, data:UnsafeMutableRawPointer) {glReadnPixelsARB_P(x, y, width, height, format, type, bufSize, data)}
var glReadnPixelsARB_P:@convention(c)(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, UnsafeMutableRawPointer) -> Void = glReadnPixelsARB_L
public func glReadnPixelsEXT(_ x:GLint, _ y:GLint, _ width:GLsizei, _ height:GLsizei, _ format:GLenum, _ type:GLenum, _ bufSize:GLsizei, _ data:UnsafeMutableRawPointer) {glReadnPixelsEXT_P(x, y, width, height, format, type, bufSize, data)}
public func glReadnPixelsEXT(x:GLint, y:GLint, width:GLsizei, height:GLsizei, format:GLenum, type:GLenum, bufSize:GLsizei, data:UnsafeMutableRawPointer) {glReadnPixelsEXT_P(x, y, width, height, format, type, bufSize, data)}
var glReadnPixelsEXT_P:@convention(c)(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, UnsafeMutableRawPointer) -> Void = glReadnPixelsEXT_L
public func glReadnPixelsKHR(_ x:GLint, _ y:GLint, _ width:GLsizei, _ height:GLsizei, _ format:GLenum, _ type:GLenum, _ bufSize:GLsizei, _ data:UnsafeMutableRawPointer) {glReadnPixelsKHR_P(x, y, width, height, format, type, bufSize, data)}
public func glReadnPixelsKHR(x:GLint, y:GLint, width:GLsizei, height:GLsizei, format:GLenum, type:GLenum, bufSize:GLsizei, data:UnsafeMutableRawPointer) {glReadnPixelsKHR_P(x, y, width, height, format, type, bufSize, data)}
var glReadnPixelsKHR_P:@convention(c)(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, UnsafeMutableRawPointer) -> Void = glReadnPixelsKHR_L
public func glRectd(_ x1:GLdouble, _ y1:GLdouble, _ x2:GLdouble, _ y2:GLdouble) {glRectd_P(x1, y1, x2, y2)}
public func glRectd(x1:GLdouble, y1:GLdouble, x2:GLdouble, y2:GLdouble) {glRectd_P(x1, y1, x2, y2)}
var glRectd_P:@convention(c)(GLdouble, GLdouble, GLdouble, GLdouble) -> Void = glRectd_L
public func glRectdv(_ v1:UnsafePointer<GLdouble>, _ v2:UnsafePointer<GLdouble>) {glRectdv_P(v1, v2)}
public func glRectdv(v1:UnsafePointer<GLdouble>, v2:UnsafePointer<GLdouble>) {glRectdv_P(v1, v2)}
var glRectdv_P:@convention(c)(UnsafePointer<GLdouble>, UnsafePointer<GLdouble>) -> Void = glRectdv_L
public func glRectf(_ x1:GLfloat, _ y1:GLfloat, _ x2:GLfloat, _ y2:GLfloat) {glRectf_P(x1, y1, x2, y2)}
public func glRectf(x1:GLfloat, y1:GLfloat, x2:GLfloat, y2:GLfloat) {glRectf_P(x1, y1, x2, y2)}
var glRectf_P:@convention(c)(GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glRectf_L
public func glRectfv(_ v1:UnsafePointer<GLfloat>, _ v2:UnsafePointer<GLfloat>) {glRectfv_P(v1, v2)}
public func glRectfv(v1:UnsafePointer<GLfloat>, v2:UnsafePointer<GLfloat>) {glRectfv_P(v1, v2)}
var glRectfv_P:@convention(c)(UnsafePointer<GLfloat>, UnsafePointer<GLfloat>) -> Void = glRectfv_L
public func glRecti(_ x1:GLint, _ y1:GLint, _ x2:GLint, _ y2:GLint) {glRecti_P(x1, y1, x2, y2)}
public func glRecti(x1:GLint, y1:GLint, x2:GLint, y2:GLint) {glRecti_P(x1, y1, x2, y2)}
var glRecti_P:@convention(c)(GLint, GLint, GLint, GLint) -> Void = glRecti_L
public func glRectiv(_ v1:UnsafePointer<GLint>, _ v2:UnsafePointer<GLint>) {glRectiv_P(v1, v2)}
public func glRectiv(v1:UnsafePointer<GLint>, v2:UnsafePointer<GLint>) {glRectiv_P(v1, v2)}
var glRectiv_P:@convention(c)(UnsafePointer<GLint>, UnsafePointer<GLint>) -> Void = glRectiv_L
public func glRects(_ x1:GLshort, _ y1:GLshort, _ x2:GLshort, _ y2:GLshort) {glRects_P(x1, y1, x2, y2)}
public func glRects(x1:GLshort, y1:GLshort, x2:GLshort, y2:GLshort) {glRects_P(x1, y1, x2, y2)}
var glRects_P:@convention(c)(GLshort, GLshort, GLshort, GLshort) -> Void = glRects_L
public func glRectsv(_ v1:UnsafePointer<GLshort>, _ v2:UnsafePointer<GLshort>) {glRectsv_P(v1, v2)}
public func glRectsv(v1:UnsafePointer<GLshort>, v2:UnsafePointer<GLshort>) {glRectsv_P(v1, v2)}
var glRectsv_P:@convention(c)(UnsafePointer<GLshort>, UnsafePointer<GLshort>) -> Void = glRectsv_L
public func glRectxOES(_ x1:GLfixed, _ y1:GLfixed, _ x2:GLfixed, _ y2:GLfixed) {glRectxOES_P(x1, y1, x2, y2)}
public func glRectxOES(x1:GLfixed, y1:GLfixed, x2:GLfixed, y2:GLfixed) {glRectxOES_P(x1, y1, x2, y2)}
var glRectxOES_P:@convention(c)(GLfixed, GLfixed, GLfixed, GLfixed) -> Void = glRectxOES_L
public func glRectxvOES(_ v1:UnsafePointer<GLfixed>, _ v2:UnsafePointer<GLfixed>) {glRectxvOES_P(v1, v2)}
public func glRectxvOES(v1:UnsafePointer<GLfixed>, v2:UnsafePointer<GLfixed>) {glRectxvOES_P(v1, v2)}
var glRectxvOES_P:@convention(c)(UnsafePointer<GLfixed>, UnsafePointer<GLfixed>) -> Void = glRectxvOES_L
public func glReferencePlaneSGIX(_ equation:UnsafePointer<GLdouble>) {glReferencePlaneSGIX_P(equation)}
public func glReferencePlaneSGIX(equation:UnsafePointer<GLdouble>) {glReferencePlaneSGIX_P(equation)}
var glReferencePlaneSGIX_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glReferencePlaneSGIX_L
public func glReleaseShaderCompiler() {glReleaseShaderCompiler_P()}
var glReleaseShaderCompiler_P:@convention(c)() -> Void = glReleaseShaderCompiler_L
public func glRenderMode(_ mode:GLenum) -> GLint {return glRenderMode_P(mode)}
public func glRenderMode(mode:GLenum) -> GLint {return glRenderMode_P(mode)}
var glRenderMode_P:@convention(c)(GLenum) -> GLint = glRenderMode_L
public func glRenderbufferStorage(_ target:GLenum, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei) {glRenderbufferStorage_P(target, internalformat, width, height)}
public func glRenderbufferStorage(target:GLenum, internalformat:GLenum, width:GLsizei, height:GLsizei) {glRenderbufferStorage_P(target, internalformat, width, height)}
var glRenderbufferStorage_P:@convention(c)(GLenum, GLenum, GLsizei, GLsizei) -> Void = glRenderbufferStorage_L
public func glRenderbufferStorageEXT(_ target:GLenum, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei) {glRenderbufferStorageEXT_P(target, internalformat, width, height)}
public func glRenderbufferStorageEXT(target:GLenum, internalformat:GLenum, width:GLsizei, height:GLsizei) {glRenderbufferStorageEXT_P(target, internalformat, width, height)}
var glRenderbufferStorageEXT_P:@convention(c)(GLenum, GLenum, GLsizei, GLsizei) -> Void = glRenderbufferStorageEXT_L
public func glRenderbufferStorageMultisample(_ target:GLenum, _ samples:GLsizei, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei) {glRenderbufferStorageMultisample_P(target, samples, internalformat, width, height)}
public func glRenderbufferStorageMultisample(target:GLenum, samples:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei) {glRenderbufferStorageMultisample_P(target, samples, internalformat, width, height)}
var glRenderbufferStorageMultisample_P:@convention(c)(GLenum, GLsizei, GLenum, GLsizei, GLsizei) -> Void = glRenderbufferStorageMultisample_L
public func glRenderbufferStorageMultisampleANGLE(_ target:GLenum, _ samples:GLsizei, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei) {glRenderbufferStorageMultisampleANGLE_P(target, samples, internalformat, width, height)}
public func glRenderbufferStorageMultisampleANGLE(target:GLenum, samples:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei) {glRenderbufferStorageMultisampleANGLE_P(target, samples, internalformat, width, height)}
var glRenderbufferStorageMultisampleANGLE_P:@convention(c)(GLenum, GLsizei, GLenum, GLsizei, GLsizei) -> Void = glRenderbufferStorageMultisampleANGLE_L
public func glRenderbufferStorageMultisampleAPPLE(_ target:GLenum, _ samples:GLsizei, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei) {glRenderbufferStorageMultisampleAPPLE_P(target, samples, internalformat, width, height)}
public func glRenderbufferStorageMultisampleAPPLE(target:GLenum, samples:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei) {glRenderbufferStorageMultisampleAPPLE_P(target, samples, internalformat, width, height)}
var glRenderbufferStorageMultisampleAPPLE_P:@convention(c)(GLenum, GLsizei, GLenum, GLsizei, GLsizei) -> Void = glRenderbufferStorageMultisampleAPPLE_L
public func glRenderbufferStorageMultisampleCoverageNV(_ target:GLenum, _ coverageSamples:GLsizei, _ colorSamples:GLsizei, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei) {glRenderbufferStorageMultisampleCoverageNV_P(target, coverageSamples, colorSamples, internalformat, width, height)}
public func glRenderbufferStorageMultisampleCoverageNV(target:GLenum, coverageSamples:GLsizei, colorSamples:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei) {glRenderbufferStorageMultisampleCoverageNV_P(target, coverageSamples, colorSamples, internalformat, width, height)}
var glRenderbufferStorageMultisampleCoverageNV_P:@convention(c)(GLenum, GLsizei, GLsizei, GLenum, GLsizei, GLsizei) -> Void = glRenderbufferStorageMultisampleCoverageNV_L
public func glRenderbufferStorageMultisampleEXT(_ target:GLenum, _ samples:GLsizei, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei) {glRenderbufferStorageMultisampleEXT_P(target, samples, internalformat, width, height)}
public func glRenderbufferStorageMultisampleEXT(target:GLenum, samples:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei) {glRenderbufferStorageMultisampleEXT_P(target, samples, internalformat, width, height)}
var glRenderbufferStorageMultisampleEXT_P:@convention(c)(GLenum, GLsizei, GLenum, GLsizei, GLsizei) -> Void = glRenderbufferStorageMultisampleEXT_L
public func glRenderbufferStorageMultisampleIMG(_ target:GLenum, _ samples:GLsizei, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei) {glRenderbufferStorageMultisampleIMG_P(target, samples, internalformat, width, height)}
public func glRenderbufferStorageMultisampleIMG(target:GLenum, samples:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei) {glRenderbufferStorageMultisampleIMG_P(target, samples, internalformat, width, height)}
var glRenderbufferStorageMultisampleIMG_P:@convention(c)(GLenum, GLsizei, GLenum, GLsizei, GLsizei) -> Void = glRenderbufferStorageMultisampleIMG_L
public func glRenderbufferStorageMultisampleNV(_ target:GLenum, _ samples:GLsizei, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei) {glRenderbufferStorageMultisampleNV_P(target, samples, internalformat, width, height)}
public func glRenderbufferStorageMultisampleNV(target:GLenum, samples:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei) {glRenderbufferStorageMultisampleNV_P(target, samples, internalformat, width, height)}
var glRenderbufferStorageMultisampleNV_P:@convention(c)(GLenum, GLsizei, GLenum, GLsizei, GLsizei) -> Void = glRenderbufferStorageMultisampleNV_L
public func glRenderbufferStorageOES(_ target:GLenum, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei) {glRenderbufferStorageOES_P(target, internalformat, width, height)}
public func glRenderbufferStorageOES(target:GLenum, internalformat:GLenum, width:GLsizei, height:GLsizei) {glRenderbufferStorageOES_P(target, internalformat, width, height)}
var glRenderbufferStorageOES_P:@convention(c)(GLenum, GLenum, GLsizei, GLsizei) -> Void = glRenderbufferStorageOES_L
public func glReplacementCodePointerSUN(_ type:GLenum, _ stride:GLsizei, _ pointer:UnsafeMutablePointer<UnsafeRawPointer>) {glReplacementCodePointerSUN_P(type, stride, pointer)}
public func glReplacementCodePointerSUN(type:GLenum, stride:GLsizei, pointer:UnsafeMutablePointer<UnsafeRawPointer>) {glReplacementCodePointerSUN_P(type, stride, pointer)}
var glReplacementCodePointerSUN_P:@convention(c)(GLenum, GLsizei, UnsafeMutablePointer<UnsafeRawPointer>) -> Void = glReplacementCodePointerSUN_L
public func glReplacementCodeubSUN(_ code:GLubyte) {glReplacementCodeubSUN_P(code)}
public func glReplacementCodeubSUN(code:GLubyte) {glReplacementCodeubSUN_P(code)}
var glReplacementCodeubSUN_P:@convention(c)(GLubyte) -> Void = glReplacementCodeubSUN_L
public func glReplacementCodeubvSUN(_ code:UnsafePointer<GLubyte>) {glReplacementCodeubvSUN_P(code)}
public func glReplacementCodeubvSUN(code:UnsafePointer<GLubyte>) {glReplacementCodeubvSUN_P(code)}
var glReplacementCodeubvSUN_P:@convention(c)(UnsafePointer<GLubyte>) -> Void = glReplacementCodeubvSUN_L
public func glReplacementCodeuiColor3fVertex3fSUN(_ rc:GLuint, _ r:GLfloat, _ g:GLfloat, _ b:GLfloat, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat) {glReplacementCodeuiColor3fVertex3fSUN_P(rc, r, g, b, x, y, z)}
public func glReplacementCodeuiColor3fVertex3fSUN(rc:GLuint, r:GLfloat, g:GLfloat, b:GLfloat, x:GLfloat, y:GLfloat, z:GLfloat) {glReplacementCodeuiColor3fVertex3fSUN_P(rc, r, g, b, x, y, z)}
var glReplacementCodeuiColor3fVertex3fSUN_P:@convention(c)(GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glReplacementCodeuiColor3fVertex3fSUN_L
public func glReplacementCodeuiColor3fVertex3fvSUN(_ rc:UnsafePointer<GLuint>, _ c:UnsafePointer<GLfloat>, _ v:UnsafePointer<GLfloat>) {glReplacementCodeuiColor3fVertex3fvSUN_P(rc, c, v)}
public func glReplacementCodeuiColor3fVertex3fvSUN(rc:UnsafePointer<GLuint>, c:UnsafePointer<GLfloat>, v:UnsafePointer<GLfloat>) {glReplacementCodeuiColor3fVertex3fvSUN_P(rc, c, v)}
var glReplacementCodeuiColor3fVertex3fvSUN_P:@convention(c)(UnsafePointer<GLuint>, UnsafePointer<GLfloat>, UnsafePointer<GLfloat>) -> Void = glReplacementCodeuiColor3fVertex3fvSUN_L
public func glReplacementCodeuiColor4fNormal3fVertex3fSUN(_ rc:GLuint, _ r:GLfloat, _ g:GLfloat, _ b:GLfloat, _ a:GLfloat, _ nx:GLfloat, _ ny:GLfloat, _ nz:GLfloat, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat) {glReplacementCodeuiColor4fNormal3fVertex3fSUN_P(rc, r, g, b, a, nx, ny, nz, x, y, z)}
public func glReplacementCodeuiColor4fNormal3fVertex3fSUN(rc:GLuint, r:GLfloat, g:GLfloat, b:GLfloat, a:GLfloat, nx:GLfloat, ny:GLfloat, nz:GLfloat, x:GLfloat, y:GLfloat, z:GLfloat) {glReplacementCodeuiColor4fNormal3fVertex3fSUN_P(rc, r, g, b, a, nx, ny, nz, x, y, z)}
var glReplacementCodeuiColor4fNormal3fVertex3fSUN_P:@convention(c)(GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glReplacementCodeuiColor4fNormal3fVertex3fSUN_L
public func glReplacementCodeuiColor4fNormal3fVertex3fvSUN(_ rc:UnsafePointer<GLuint>, _ c:UnsafePointer<GLfloat>, _ n:UnsafePointer<GLfloat>, _ v:UnsafePointer<GLfloat>) {glReplacementCodeuiColor4fNormal3fVertex3fvSUN_P(rc, c, n, v)}
public func glReplacementCodeuiColor4fNormal3fVertex3fvSUN(rc:UnsafePointer<GLuint>, c:UnsafePointer<GLfloat>, n:UnsafePointer<GLfloat>, v:UnsafePointer<GLfloat>) {glReplacementCodeuiColor4fNormal3fVertex3fvSUN_P(rc, c, n, v)}
var glReplacementCodeuiColor4fNormal3fVertex3fvSUN_P:@convention(c)(UnsafePointer<GLuint>, UnsafePointer<GLfloat>, UnsafePointer<GLfloat>, UnsafePointer<GLfloat>) -> Void = glReplacementCodeuiColor4fNormal3fVertex3fvSUN_L
public func glReplacementCodeuiColor4ubVertex3fSUN(_ rc:GLuint, _ r:GLubyte, _ g:GLubyte, _ b:GLubyte, _ a:GLubyte, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat) {glReplacementCodeuiColor4ubVertex3fSUN_P(rc, r, g, b, a, x, y, z)}
public func glReplacementCodeuiColor4ubVertex3fSUN(rc:GLuint, r:GLubyte, g:GLubyte, b:GLubyte, a:GLubyte, x:GLfloat, y:GLfloat, z:GLfloat) {glReplacementCodeuiColor4ubVertex3fSUN_P(rc, r, g, b, a, x, y, z)}
var glReplacementCodeuiColor4ubVertex3fSUN_P:@convention(c)(GLuint, GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat) -> Void = glReplacementCodeuiColor4ubVertex3fSUN_L
public func glReplacementCodeuiColor4ubVertex3fvSUN(_ rc:UnsafePointer<GLuint>, _ c:UnsafePointer<GLubyte>, _ v:UnsafePointer<GLfloat>) {glReplacementCodeuiColor4ubVertex3fvSUN_P(rc, c, v)}
public func glReplacementCodeuiColor4ubVertex3fvSUN(rc:UnsafePointer<GLuint>, c:UnsafePointer<GLubyte>, v:UnsafePointer<GLfloat>) {glReplacementCodeuiColor4ubVertex3fvSUN_P(rc, c, v)}
var glReplacementCodeuiColor4ubVertex3fvSUN_P:@convention(c)(UnsafePointer<GLuint>, UnsafePointer<GLubyte>, UnsafePointer<GLfloat>) -> Void = glReplacementCodeuiColor4ubVertex3fvSUN_L
public func glReplacementCodeuiNormal3fVertex3fSUN(_ rc:GLuint, _ nx:GLfloat, _ ny:GLfloat, _ nz:GLfloat, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat) {glReplacementCodeuiNormal3fVertex3fSUN_P(rc, nx, ny, nz, x, y, z)}
public func glReplacementCodeuiNormal3fVertex3fSUN(rc:GLuint, nx:GLfloat, ny:GLfloat, nz:GLfloat, x:GLfloat, y:GLfloat, z:GLfloat) {glReplacementCodeuiNormal3fVertex3fSUN_P(rc, nx, ny, nz, x, y, z)}
var glReplacementCodeuiNormal3fVertex3fSUN_P:@convention(c)(GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glReplacementCodeuiNormal3fVertex3fSUN_L
public func glReplacementCodeuiNormal3fVertex3fvSUN(_ rc:UnsafePointer<GLuint>, _ n:UnsafePointer<GLfloat>, _ v:UnsafePointer<GLfloat>) {glReplacementCodeuiNormal3fVertex3fvSUN_P(rc, n, v)}
public func glReplacementCodeuiNormal3fVertex3fvSUN(rc:UnsafePointer<GLuint>, n:UnsafePointer<GLfloat>, v:UnsafePointer<GLfloat>) {glReplacementCodeuiNormal3fVertex3fvSUN_P(rc, n, v)}
var glReplacementCodeuiNormal3fVertex3fvSUN_P:@convention(c)(UnsafePointer<GLuint>, UnsafePointer<GLfloat>, UnsafePointer<GLfloat>) -> Void = glReplacementCodeuiNormal3fVertex3fvSUN_L
public func glReplacementCodeuiSUN(_ code:GLuint) {glReplacementCodeuiSUN_P(code)}
public func glReplacementCodeuiSUN(code:GLuint) {glReplacementCodeuiSUN_P(code)}
var glReplacementCodeuiSUN_P:@convention(c)(GLuint) -> Void = glReplacementCodeuiSUN_L
public func glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(_ rc:GLuint, _ s:GLfloat, _ t:GLfloat, _ r:GLfloat, _ g:GLfloat, _ b:GLfloat, _ a:GLfloat, _ nx:GLfloat, _ ny:GLfloat, _ nz:GLfloat, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat) {glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN_P(rc, s, t, r, g, b, a, nx, ny, nz, x, y, z)}
public func glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(rc:GLuint, s:GLfloat, t:GLfloat, r:GLfloat, g:GLfloat, b:GLfloat, a:GLfloat, nx:GLfloat, ny:GLfloat, nz:GLfloat, x:GLfloat, y:GLfloat, z:GLfloat) {glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN_P(rc, s, t, r, g, b, a, nx, ny, nz, x, y, z)}
var glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN_P:@convention(c)(GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN_L
public func glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(_ rc:UnsafePointer<GLuint>, _ tc:UnsafePointer<GLfloat>, _ c:UnsafePointer<GLfloat>, _ n:UnsafePointer<GLfloat>, _ v:UnsafePointer<GLfloat>) {glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN_P(rc, tc, c, n, v)}
public func glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(rc:UnsafePointer<GLuint>, tc:UnsafePointer<GLfloat>, c:UnsafePointer<GLfloat>, n:UnsafePointer<GLfloat>, v:UnsafePointer<GLfloat>) {glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN_P(rc, tc, c, n, v)}
var glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN_P:@convention(c)(UnsafePointer<GLuint>, UnsafePointer<GLfloat>, UnsafePointer<GLfloat>, UnsafePointer<GLfloat>, UnsafePointer<GLfloat>) -> Void = glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN_L
public func glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(_ rc:GLuint, _ s:GLfloat, _ t:GLfloat, _ nx:GLfloat, _ ny:GLfloat, _ nz:GLfloat, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat) {glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN_P(rc, s, t, nx, ny, nz, x, y, z)}
public func glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(rc:GLuint, s:GLfloat, t:GLfloat, nx:GLfloat, ny:GLfloat, nz:GLfloat, x:GLfloat, y:GLfloat, z:GLfloat) {glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN_P(rc, s, t, nx, ny, nz, x, y, z)}
var glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN_P:@convention(c)(GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN_L
public func glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(_ rc:UnsafePointer<GLuint>, _ tc:UnsafePointer<GLfloat>, _ n:UnsafePointer<GLfloat>, _ v:UnsafePointer<GLfloat>) {glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN_P(rc, tc, n, v)}
public func glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(rc:UnsafePointer<GLuint>, tc:UnsafePointer<GLfloat>, n:UnsafePointer<GLfloat>, v:UnsafePointer<GLfloat>) {glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN_P(rc, tc, n, v)}
var glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN_P:@convention(c)(UnsafePointer<GLuint>, UnsafePointer<GLfloat>, UnsafePointer<GLfloat>, UnsafePointer<GLfloat>) -> Void = glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN_L
public func glReplacementCodeuiTexCoord2fVertex3fSUN(_ rc:GLuint, _ s:GLfloat, _ t:GLfloat, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat) {glReplacementCodeuiTexCoord2fVertex3fSUN_P(rc, s, t, x, y, z)}
public func glReplacementCodeuiTexCoord2fVertex3fSUN(rc:GLuint, s:GLfloat, t:GLfloat, x:GLfloat, y:GLfloat, z:GLfloat) {glReplacementCodeuiTexCoord2fVertex3fSUN_P(rc, s, t, x, y, z)}
var glReplacementCodeuiTexCoord2fVertex3fSUN_P:@convention(c)(GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glReplacementCodeuiTexCoord2fVertex3fSUN_L
public func glReplacementCodeuiTexCoord2fVertex3fvSUN(_ rc:UnsafePointer<GLuint>, _ tc:UnsafePointer<GLfloat>, _ v:UnsafePointer<GLfloat>) {glReplacementCodeuiTexCoord2fVertex3fvSUN_P(rc, tc, v)}
public func glReplacementCodeuiTexCoord2fVertex3fvSUN(rc:UnsafePointer<GLuint>, tc:UnsafePointer<GLfloat>, v:UnsafePointer<GLfloat>) {glReplacementCodeuiTexCoord2fVertex3fvSUN_P(rc, tc, v)}
var glReplacementCodeuiTexCoord2fVertex3fvSUN_P:@convention(c)(UnsafePointer<GLuint>, UnsafePointer<GLfloat>, UnsafePointer<GLfloat>) -> Void = glReplacementCodeuiTexCoord2fVertex3fvSUN_L
public func glReplacementCodeuiVertex3fSUN(_ rc:GLuint, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat) {glReplacementCodeuiVertex3fSUN_P(rc, x, y, z)}
public func glReplacementCodeuiVertex3fSUN(rc:GLuint, x:GLfloat, y:GLfloat, z:GLfloat) {glReplacementCodeuiVertex3fSUN_P(rc, x, y, z)}
var glReplacementCodeuiVertex3fSUN_P:@convention(c)(GLuint, GLfloat, GLfloat, GLfloat) -> Void = glReplacementCodeuiVertex3fSUN_L
public func glReplacementCodeuiVertex3fvSUN(_ rc:UnsafePointer<GLuint>, _ v:UnsafePointer<GLfloat>) {glReplacementCodeuiVertex3fvSUN_P(rc, v)}
public func glReplacementCodeuiVertex3fvSUN(rc:UnsafePointer<GLuint>, v:UnsafePointer<GLfloat>) {glReplacementCodeuiVertex3fvSUN_P(rc, v)}
var glReplacementCodeuiVertex3fvSUN_P:@convention(c)(UnsafePointer<GLuint>, UnsafePointer<GLfloat>) -> Void = glReplacementCodeuiVertex3fvSUN_L
public func glReplacementCodeuivSUN(_ code:UnsafePointer<GLuint>) {glReplacementCodeuivSUN_P(code)}
public func glReplacementCodeuivSUN(code:UnsafePointer<GLuint>) {glReplacementCodeuivSUN_P(code)}
var glReplacementCodeuivSUN_P:@convention(c)(UnsafePointer<GLuint>) -> Void = glReplacementCodeuivSUN_L
public func glReplacementCodeusSUN(_ code:GLushort) {glReplacementCodeusSUN_P(code)}
public func glReplacementCodeusSUN(code:GLushort) {glReplacementCodeusSUN_P(code)}
var glReplacementCodeusSUN_P:@convention(c)(GLushort) -> Void = glReplacementCodeusSUN_L
public func glReplacementCodeusvSUN(_ code:UnsafePointer<GLushort>) {glReplacementCodeusvSUN_P(code)}
public func glReplacementCodeusvSUN(code:UnsafePointer<GLushort>) {glReplacementCodeusvSUN_P(code)}
var glReplacementCodeusvSUN_P:@convention(c)(UnsafePointer<GLushort>) -> Void = glReplacementCodeusvSUN_L
public func glRequestResidentProgramsNV(_ n:GLsizei, _ programs:UnsafePointer<GLuint>) {glRequestResidentProgramsNV_P(n, programs)}
public func glRequestResidentProgramsNV(n:GLsizei, programs:UnsafePointer<GLuint>) {glRequestResidentProgramsNV_P(n, programs)}
var glRequestResidentProgramsNV_P:@convention(c)(GLsizei, UnsafePointer<GLuint>) -> Void = glRequestResidentProgramsNV_L
public func glResetHistogram(_ target:GLenum) {glResetHistogram_P(target)}
public func glResetHistogram(target:GLenum) {glResetHistogram_P(target)}
var glResetHistogram_P:@convention(c)(GLenum) -> Void = glResetHistogram_L
public func glResetHistogramEXT(_ target:GLenum) {glResetHistogramEXT_P(target)}
public func glResetHistogramEXT(target:GLenum) {glResetHistogramEXT_P(target)}
var glResetHistogramEXT_P:@convention(c)(GLenum) -> Void = glResetHistogramEXT_L
public func glResetMinmax(_ target:GLenum) {glResetMinmax_P(target)}
public func glResetMinmax(target:GLenum) {glResetMinmax_P(target)}
var glResetMinmax_P:@convention(c)(GLenum) -> Void = glResetMinmax_L
public func glResetMinmaxEXT(_ target:GLenum) {glResetMinmaxEXT_P(target)}
public func glResetMinmaxEXT(target:GLenum) {glResetMinmaxEXT_P(target)}
var glResetMinmaxEXT_P:@convention(c)(GLenum) -> Void = glResetMinmaxEXT_L
public func glResizeBuffersMESA() {glResizeBuffersMESA_P()}
var glResizeBuffersMESA_P:@convention(c)() -> Void = glResizeBuffersMESA_L
public func glResolveDepthValuesNV() {glResolveDepthValuesNV_P()}
var glResolveDepthValuesNV_P:@convention(c)() -> Void = glResolveDepthValuesNV_L
public func glResolveMultisampleFramebufferAPPLE() {glResolveMultisampleFramebufferAPPLE_P()}
var glResolveMultisampleFramebufferAPPLE_P:@convention(c)() -> Void = glResolveMultisampleFramebufferAPPLE_L
public func glResumeTransformFeedback() {glResumeTransformFeedback_P()}
var glResumeTransformFeedback_P:@convention(c)() -> Void = glResumeTransformFeedback_L
public func glResumeTransformFeedbackNV() {glResumeTransformFeedbackNV_P()}
var glResumeTransformFeedbackNV_P:@convention(c)() -> Void = glResumeTransformFeedbackNV_L
public func glRotated(_ angle:GLdouble, _ x:GLdouble, _ y:GLdouble, _ z:GLdouble) {glRotated_P(angle, x, y, z)}
public func glRotated(angle:GLdouble, x:GLdouble, y:GLdouble, z:GLdouble) {glRotated_P(angle, x, y, z)}
var glRotated_P:@convention(c)(GLdouble, GLdouble, GLdouble, GLdouble) -> Void = glRotated_L
public func glRotatef(_ angle:GLfloat, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat) {glRotatef_P(angle, x, y, z)}
public func glRotatef(angle:GLfloat, x:GLfloat, y:GLfloat, z:GLfloat) {glRotatef_P(angle, x, y, z)}
var glRotatef_P:@convention(c)(GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glRotatef_L
public func glRotatex(_ angle:GLfixed, _ x:GLfixed, _ y:GLfixed, _ z:GLfixed) {glRotatex_P(angle, x, y, z)}
public func glRotatex(angle:GLfixed, x:GLfixed, y:GLfixed, z:GLfixed) {glRotatex_P(angle, x, y, z)}
var glRotatex_P:@convention(c)(GLfixed, GLfixed, GLfixed, GLfixed) -> Void = glRotatex_L
public func glRotatexOES(_ angle:GLfixed, _ x:GLfixed, _ y:GLfixed, _ z:GLfixed) {glRotatexOES_P(angle, x, y, z)}
public func glRotatexOES(angle:GLfixed, x:GLfixed, y:GLfixed, z:GLfixed) {glRotatexOES_P(angle, x, y, z)}
var glRotatexOES_P:@convention(c)(GLfixed, GLfixed, GLfixed, GLfixed) -> Void = glRotatexOES_L
public func glSampleCoverage(_ value:GLfloat, _ invert:GLboolean) {glSampleCoverage_P(value, invert)}
public func glSampleCoverage(value:GLfloat, invert:GLboolean) {glSampleCoverage_P(value, invert)}
var glSampleCoverage_P:@convention(c)(GLfloat, GLboolean) -> Void = glSampleCoverage_L
public func glSampleCoverageARB(_ value:GLfloat, _ invert:GLboolean) {glSampleCoverageARB_P(value, invert)}
public func glSampleCoverageARB(value:GLfloat, invert:GLboolean) {glSampleCoverageARB_P(value, invert)}
var glSampleCoverageARB_P:@convention(c)(GLfloat, GLboolean) -> Void = glSampleCoverageARB_L
public func glSampleCoveragex(_ value:GLclampx, _ invert:GLboolean) {glSampleCoveragex_P(value, invert)}
public func glSampleCoveragex(value:GLclampx, invert:GLboolean) {glSampleCoveragex_P(value, invert)}
var glSampleCoveragex_P:@convention(c)(GLclampx, GLboolean) -> Void = glSampleCoveragex_L
public func glSampleCoveragexOES(_ value:GLclampx, _ invert:GLboolean) {glSampleCoveragexOES_P(value, invert)}
public func glSampleCoveragexOES(value:GLclampx, invert:GLboolean) {glSampleCoveragexOES_P(value, invert)}
var glSampleCoveragexOES_P:@convention(c)(GLclampx, GLboolean) -> Void = glSampleCoveragexOES_L
public func glSampleMapATI(_ dst:GLuint, _ interp:GLuint, _ swizzle:GLenum) {glSampleMapATI_P(dst, interp, swizzle)}
public func glSampleMapATI(dst:GLuint, interp:GLuint, swizzle:GLenum) {glSampleMapATI_P(dst, interp, swizzle)}
var glSampleMapATI_P:@convention(c)(GLuint, GLuint, GLenum) -> Void = glSampleMapATI_L
public func glSampleMaskEXT(_ value:GLclampf, _ invert:GLboolean) {glSampleMaskEXT_P(value, invert)}
public func glSampleMaskEXT(value:GLclampf, invert:GLboolean) {glSampleMaskEXT_P(value, invert)}
var glSampleMaskEXT_P:@convention(c)(GLclampf, GLboolean) -> Void = glSampleMaskEXT_L
public func glSampleMaskIndexedNV(_ index:GLuint, _ mask:GLbitfield) {glSampleMaskIndexedNV_P(index, mask)}
public func glSampleMaskIndexedNV(index:GLuint, mask:GLbitfield) {glSampleMaskIndexedNV_P(index, mask)}
var glSampleMaskIndexedNV_P:@convention(c)(GLuint, GLbitfield) -> Void = glSampleMaskIndexedNV_L
public func glSampleMaskSGIS(_ value:GLclampf, _ invert:GLboolean) {glSampleMaskSGIS_P(value, invert)}
public func glSampleMaskSGIS(value:GLclampf, invert:GLboolean) {glSampleMaskSGIS_P(value, invert)}
var glSampleMaskSGIS_P:@convention(c)(GLclampf, GLboolean) -> Void = glSampleMaskSGIS_L
public func glSampleMaski(_ maskNumber:GLuint, _ mask:GLbitfield) {glSampleMaski_P(maskNumber, mask)}
public func glSampleMaski(maskNumber:GLuint, mask:GLbitfield) {glSampleMaski_P(maskNumber, mask)}
var glSampleMaski_P:@convention(c)(GLuint, GLbitfield) -> Void = glSampleMaski_L
public func glSamplePatternEXT(_ pattern:GLenum) {glSamplePatternEXT_P(pattern)}
public func glSamplePatternEXT(pattern:GLenum) {glSamplePatternEXT_P(pattern)}
var glSamplePatternEXT_P:@convention(c)(GLenum) -> Void = glSamplePatternEXT_L
public func glSamplePatternSGIS(_ pattern:GLenum) {glSamplePatternSGIS_P(pattern)}
public func glSamplePatternSGIS(pattern:GLenum) {glSamplePatternSGIS_P(pattern)}
var glSamplePatternSGIS_P:@convention(c)(GLenum) -> Void = glSamplePatternSGIS_L
public func glSamplerParameterIiv(_ sampler:GLuint, _ pname:GLenum, _ param:UnsafePointer<GLint>) {glSamplerParameterIiv_P(sampler, pname, param)}
public func glSamplerParameterIiv(sampler:GLuint, pname:GLenum, param:UnsafePointer<GLint>) {glSamplerParameterIiv_P(sampler, pname, param)}
var glSamplerParameterIiv_P:@convention(c)(GLuint, GLenum, UnsafePointer<GLint>) -> Void = glSamplerParameterIiv_L
public func glSamplerParameterIivEXT(_ sampler:GLuint, _ pname:GLenum, _ param:UnsafePointer<GLint>) {glSamplerParameterIivEXT_P(sampler, pname, param)}
public func glSamplerParameterIivEXT(sampler:GLuint, pname:GLenum, param:UnsafePointer<GLint>) {glSamplerParameterIivEXT_P(sampler, pname, param)}
var glSamplerParameterIivEXT_P:@convention(c)(GLuint, GLenum, UnsafePointer<GLint>) -> Void = glSamplerParameterIivEXT_L
public func glSamplerParameterIivOES(_ sampler:GLuint, _ pname:GLenum, _ param:UnsafePointer<GLint>) {glSamplerParameterIivOES_P(sampler, pname, param)}
public func glSamplerParameterIivOES(sampler:GLuint, pname:GLenum, param:UnsafePointer<GLint>) {glSamplerParameterIivOES_P(sampler, pname, param)}
var glSamplerParameterIivOES_P:@convention(c)(GLuint, GLenum, UnsafePointer<GLint>) -> Void = glSamplerParameterIivOES_L
public func glSamplerParameterIuiv(_ sampler:GLuint, _ pname:GLenum, _ param:UnsafePointer<GLuint>) {glSamplerParameterIuiv_P(sampler, pname, param)}
public func glSamplerParameterIuiv(sampler:GLuint, pname:GLenum, param:UnsafePointer<GLuint>) {glSamplerParameterIuiv_P(sampler, pname, param)}
var glSamplerParameterIuiv_P:@convention(c)(GLuint, GLenum, UnsafePointer<GLuint>) -> Void = glSamplerParameterIuiv_L
public func glSamplerParameterIuivEXT(_ sampler:GLuint, _ pname:GLenum, _ param:UnsafePointer<GLuint>) {glSamplerParameterIuivEXT_P(sampler, pname, param)}
public func glSamplerParameterIuivEXT(sampler:GLuint, pname:GLenum, param:UnsafePointer<GLuint>) {glSamplerParameterIuivEXT_P(sampler, pname, param)}
var glSamplerParameterIuivEXT_P:@convention(c)(GLuint, GLenum, UnsafePointer<GLuint>) -> Void = glSamplerParameterIuivEXT_L
public func glSamplerParameterIuivOES(_ sampler:GLuint, _ pname:GLenum, _ param:UnsafePointer<GLuint>) {glSamplerParameterIuivOES_P(sampler, pname, param)}
public func glSamplerParameterIuivOES(sampler:GLuint, pname:GLenum, param:UnsafePointer<GLuint>) {glSamplerParameterIuivOES_P(sampler, pname, param)}
var glSamplerParameterIuivOES_P:@convention(c)(GLuint, GLenum, UnsafePointer<GLuint>) -> Void = glSamplerParameterIuivOES_L
public func glSamplerParameterf(_ sampler:GLuint, _ pname:GLenum, _ param:GLfloat) {glSamplerParameterf_P(sampler, pname, param)}
public func glSamplerParameterf(sampler:GLuint, pname:GLenum, param:GLfloat) {glSamplerParameterf_P(sampler, pname, param)}
var glSamplerParameterf_P:@convention(c)(GLuint, GLenum, GLfloat) -> Void = glSamplerParameterf_L
public func glSamplerParameterfv(_ sampler:GLuint, _ pname:GLenum, _ param:UnsafePointer<GLfloat>) {glSamplerParameterfv_P(sampler, pname, param)}
public func glSamplerParameterfv(sampler:GLuint, pname:GLenum, param:UnsafePointer<GLfloat>) {glSamplerParameterfv_P(sampler, pname, param)}
var glSamplerParameterfv_P:@convention(c)(GLuint, GLenum, UnsafePointer<GLfloat>) -> Void = glSamplerParameterfv_L
public func glSamplerParameteri(_ sampler:GLuint, _ pname:GLenum, _ param:GLint) {glSamplerParameteri_P(sampler, pname, param)}
public func glSamplerParameteri(sampler:GLuint, pname:GLenum, param:GLint) {glSamplerParameteri_P(sampler, pname, param)}
var glSamplerParameteri_P:@convention(c)(GLuint, GLenum, GLint) -> Void = glSamplerParameteri_L
public func glSamplerParameteriv(_ sampler:GLuint, _ pname:GLenum, _ param:UnsafePointer<GLint>) {glSamplerParameteriv_P(sampler, pname, param)}
public func glSamplerParameteriv(sampler:GLuint, pname:GLenum, param:UnsafePointer<GLint>) {glSamplerParameteriv_P(sampler, pname, param)}
var glSamplerParameteriv_P:@convention(c)(GLuint, GLenum, UnsafePointer<GLint>) -> Void = glSamplerParameteriv_L
public func glScaled(_ x:GLdouble, _ y:GLdouble, _ z:GLdouble) {glScaled_P(x, y, z)}
public func glScaled(x:GLdouble, y:GLdouble, z:GLdouble) {glScaled_P(x, y, z)}
var glScaled_P:@convention(c)(GLdouble, GLdouble, GLdouble) -> Void = glScaled_L
public func glScalef(_ x:GLfloat, _ y:GLfloat, _ z:GLfloat) {glScalef_P(x, y, z)}
public func glScalef(x:GLfloat, y:GLfloat, z:GLfloat) {glScalef_P(x, y, z)}
var glScalef_P:@convention(c)(GLfloat, GLfloat, GLfloat) -> Void = glScalef_L
public func glScalex(_ x:GLfixed, _ y:GLfixed, _ z:GLfixed) {glScalex_P(x, y, z)}
public func glScalex(x:GLfixed, y:GLfixed, z:GLfixed) {glScalex_P(x, y, z)}
var glScalex_P:@convention(c)(GLfixed, GLfixed, GLfixed) -> Void = glScalex_L
public func glScalexOES(_ x:GLfixed, _ y:GLfixed, _ z:GLfixed) {glScalexOES_P(x, y, z)}
public func glScalexOES(x:GLfixed, y:GLfixed, z:GLfixed) {glScalexOES_P(x, y, z)}
var glScalexOES_P:@convention(c)(GLfixed, GLfixed, GLfixed) -> Void = glScalexOES_L
public func glScissor(_ x:GLint, _ y:GLint, _ width:GLsizei, _ height:GLsizei) {glScissor_P(x, y, width, height)}
public func glScissor(x:GLint, y:GLint, width:GLsizei, height:GLsizei) {glScissor_P(x, y, width, height)}
var glScissor_P:@convention(c)(GLint, GLint, GLsizei, GLsizei) -> Void = glScissor_L
public func glScissorArrayv(_ first:GLuint, _ count:GLsizei, _ v:UnsafePointer<GLint>) {glScissorArrayv_P(first, count, v)}
public func glScissorArrayv(first:GLuint, count:GLsizei, v:UnsafePointer<GLint>) {glScissorArrayv_P(first, count, v)}
var glScissorArrayv_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLint>) -> Void = glScissorArrayv_L
public func glScissorArrayvNV(_ first:GLuint, _ count:GLsizei, _ v:UnsafePointer<GLint>) {glScissorArrayvNV_P(first, count, v)}
public func glScissorArrayvNV(first:GLuint, count:GLsizei, v:UnsafePointer<GLint>) {glScissorArrayvNV_P(first, count, v)}
var glScissorArrayvNV_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLint>) -> Void = glScissorArrayvNV_L
public func glScissorIndexed(_ index:GLuint, _ left:GLint, _ bottom:GLint, _ width:GLsizei, _ height:GLsizei) {glScissorIndexed_P(index, left, bottom, width, height)}
public func glScissorIndexed(index:GLuint, left:GLint, bottom:GLint, width:GLsizei, height:GLsizei) {glScissorIndexed_P(index, left, bottom, width, height)}
var glScissorIndexed_P:@convention(c)(GLuint, GLint, GLint, GLsizei, GLsizei) -> Void = glScissorIndexed_L
public func glScissorIndexedNV(_ index:GLuint, _ left:GLint, _ bottom:GLint, _ width:GLsizei, _ height:GLsizei) {glScissorIndexedNV_P(index, left, bottom, width, height)}
public func glScissorIndexedNV(index:GLuint, left:GLint, bottom:GLint, width:GLsizei, height:GLsizei) {glScissorIndexedNV_P(index, left, bottom, width, height)}
var glScissorIndexedNV_P:@convention(c)(GLuint, GLint, GLint, GLsizei, GLsizei) -> Void = glScissorIndexedNV_L
public func glScissorIndexedv(_ index:GLuint, _ v:UnsafePointer<GLint>) {glScissorIndexedv_P(index, v)}
public func glScissorIndexedv(index:GLuint, v:UnsafePointer<GLint>) {glScissorIndexedv_P(index, v)}
var glScissorIndexedv_P:@convention(c)(GLuint, UnsafePointer<GLint>) -> Void = glScissorIndexedv_L
public func glScissorIndexedvNV(_ index:GLuint, _ v:UnsafePointer<GLint>) {glScissorIndexedvNV_P(index, v)}
public func glScissorIndexedvNV(index:GLuint, v:UnsafePointer<GLint>) {glScissorIndexedvNV_P(index, v)}
var glScissorIndexedvNV_P:@convention(c)(GLuint, UnsafePointer<GLint>) -> Void = glScissorIndexedvNV_L
public func glSecondaryColor3b(_ red:GLbyte, _ green:GLbyte, _ blue:GLbyte) {glSecondaryColor3b_P(red, green, blue)}
public func glSecondaryColor3b(red:GLbyte, green:GLbyte, blue:GLbyte) {glSecondaryColor3b_P(red, green, blue)}
var glSecondaryColor3b_P:@convention(c)(GLbyte, GLbyte, GLbyte) -> Void = glSecondaryColor3b_L
public func glSecondaryColor3bEXT(_ red:GLbyte, _ green:GLbyte, _ blue:GLbyte) {glSecondaryColor3bEXT_P(red, green, blue)}
public func glSecondaryColor3bEXT(red:GLbyte, green:GLbyte, blue:GLbyte) {glSecondaryColor3bEXT_P(red, green, blue)}
var glSecondaryColor3bEXT_P:@convention(c)(GLbyte, GLbyte, GLbyte) -> Void = glSecondaryColor3bEXT_L
public func glSecondaryColor3bv(_ v:UnsafePointer<GLbyte>) {glSecondaryColor3bv_P(v)}
public func glSecondaryColor3bv(v:UnsafePointer<GLbyte>) {glSecondaryColor3bv_P(v)}
var glSecondaryColor3bv_P:@convention(c)(UnsafePointer<GLbyte>) -> Void = glSecondaryColor3bv_L
public func glSecondaryColor3bvEXT(_ v:UnsafePointer<GLbyte>) {glSecondaryColor3bvEXT_P(v)}
public func glSecondaryColor3bvEXT(v:UnsafePointer<GLbyte>) {glSecondaryColor3bvEXT_P(v)}
var glSecondaryColor3bvEXT_P:@convention(c)(UnsafePointer<GLbyte>) -> Void = glSecondaryColor3bvEXT_L
public func glSecondaryColor3d(_ red:GLdouble, _ green:GLdouble, _ blue:GLdouble) {glSecondaryColor3d_P(red, green, blue)}
public func glSecondaryColor3d(red:GLdouble, green:GLdouble, blue:GLdouble) {glSecondaryColor3d_P(red, green, blue)}
var glSecondaryColor3d_P:@convention(c)(GLdouble, GLdouble, GLdouble) -> Void = glSecondaryColor3d_L
public func glSecondaryColor3dEXT(_ red:GLdouble, _ green:GLdouble, _ blue:GLdouble) {glSecondaryColor3dEXT_P(red, green, blue)}
public func glSecondaryColor3dEXT(red:GLdouble, green:GLdouble, blue:GLdouble) {glSecondaryColor3dEXT_P(red, green, blue)}
var glSecondaryColor3dEXT_P:@convention(c)(GLdouble, GLdouble, GLdouble) -> Void = glSecondaryColor3dEXT_L
public func glSecondaryColor3dv(_ v:UnsafePointer<GLdouble>) {glSecondaryColor3dv_P(v)}
public func glSecondaryColor3dv(v:UnsafePointer<GLdouble>) {glSecondaryColor3dv_P(v)}
var glSecondaryColor3dv_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glSecondaryColor3dv_L
public func glSecondaryColor3dvEXT(_ v:UnsafePointer<GLdouble>) {glSecondaryColor3dvEXT_P(v)}
public func glSecondaryColor3dvEXT(v:UnsafePointer<GLdouble>) {glSecondaryColor3dvEXT_P(v)}
var glSecondaryColor3dvEXT_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glSecondaryColor3dvEXT_L
public func glSecondaryColor3f(_ red:GLfloat, _ green:GLfloat, _ blue:GLfloat) {glSecondaryColor3f_P(red, green, blue)}
public func glSecondaryColor3f(red:GLfloat, green:GLfloat, blue:GLfloat) {glSecondaryColor3f_P(red, green, blue)}
var glSecondaryColor3f_P:@convention(c)(GLfloat, GLfloat, GLfloat) -> Void = glSecondaryColor3f_L
public func glSecondaryColor3fEXT(_ red:GLfloat, _ green:GLfloat, _ blue:GLfloat) {glSecondaryColor3fEXT_P(red, green, blue)}
public func glSecondaryColor3fEXT(red:GLfloat, green:GLfloat, blue:GLfloat) {glSecondaryColor3fEXT_P(red, green, blue)}
var glSecondaryColor3fEXT_P:@convention(c)(GLfloat, GLfloat, GLfloat) -> Void = glSecondaryColor3fEXT_L
public func glSecondaryColor3fv(_ v:UnsafePointer<GLfloat>) {glSecondaryColor3fv_P(v)}
public func glSecondaryColor3fv(v:UnsafePointer<GLfloat>) {glSecondaryColor3fv_P(v)}
var glSecondaryColor3fv_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glSecondaryColor3fv_L
public func glSecondaryColor3fvEXT(_ v:UnsafePointer<GLfloat>) {glSecondaryColor3fvEXT_P(v)}
public func glSecondaryColor3fvEXT(v:UnsafePointer<GLfloat>) {glSecondaryColor3fvEXT_P(v)}
var glSecondaryColor3fvEXT_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glSecondaryColor3fvEXT_L
public func glSecondaryColor3hNV(_ red:GLhalfNV, _ green:GLhalfNV, _ blue:GLhalfNV) {glSecondaryColor3hNV_P(red, green, blue)}
public func glSecondaryColor3hNV(red:GLhalfNV, green:GLhalfNV, blue:GLhalfNV) {glSecondaryColor3hNV_P(red, green, blue)}
var glSecondaryColor3hNV_P:@convention(c)(GLhalfNV, GLhalfNV, GLhalfNV) -> Void = glSecondaryColor3hNV_L
public func glSecondaryColor3hvNV(_ v:UnsafePointer<GLhalfNV>) {glSecondaryColor3hvNV_P(v)}
public func glSecondaryColor3hvNV(v:UnsafePointer<GLhalfNV>) {glSecondaryColor3hvNV_P(v)}
var glSecondaryColor3hvNV_P:@convention(c)(UnsafePointer<GLhalfNV>) -> Void = glSecondaryColor3hvNV_L
public func glSecondaryColor3i(_ red:GLint, _ green:GLint, _ blue:GLint) {glSecondaryColor3i_P(red, green, blue)}
public func glSecondaryColor3i(red:GLint, green:GLint, blue:GLint) {glSecondaryColor3i_P(red, green, blue)}
var glSecondaryColor3i_P:@convention(c)(GLint, GLint, GLint) -> Void = glSecondaryColor3i_L
public func glSecondaryColor3iEXT(_ red:GLint, _ green:GLint, _ blue:GLint) {glSecondaryColor3iEXT_P(red, green, blue)}
public func glSecondaryColor3iEXT(red:GLint, green:GLint, blue:GLint) {glSecondaryColor3iEXT_P(red, green, blue)}
var glSecondaryColor3iEXT_P:@convention(c)(GLint, GLint, GLint) -> Void = glSecondaryColor3iEXT_L
public func glSecondaryColor3iv(_ v:UnsafePointer<GLint>) {glSecondaryColor3iv_P(v)}
public func glSecondaryColor3iv(v:UnsafePointer<GLint>) {glSecondaryColor3iv_P(v)}
var glSecondaryColor3iv_P:@convention(c)(UnsafePointer<GLint>) -> Void = glSecondaryColor3iv_L
public func glSecondaryColor3ivEXT(_ v:UnsafePointer<GLint>) {glSecondaryColor3ivEXT_P(v)}
public func glSecondaryColor3ivEXT(v:UnsafePointer<GLint>) {glSecondaryColor3ivEXT_P(v)}
var glSecondaryColor3ivEXT_P:@convention(c)(UnsafePointer<GLint>) -> Void = glSecondaryColor3ivEXT_L
public func glSecondaryColor3s(_ red:GLshort, _ green:GLshort, _ blue:GLshort) {glSecondaryColor3s_P(red, green, blue)}
public func glSecondaryColor3s(red:GLshort, green:GLshort, blue:GLshort) {glSecondaryColor3s_P(red, green, blue)}
var glSecondaryColor3s_P:@convention(c)(GLshort, GLshort, GLshort) -> Void = glSecondaryColor3s_L
public func glSecondaryColor3sEXT(_ red:GLshort, _ green:GLshort, _ blue:GLshort) {glSecondaryColor3sEXT_P(red, green, blue)}
public func glSecondaryColor3sEXT(red:GLshort, green:GLshort, blue:GLshort) {glSecondaryColor3sEXT_P(red, green, blue)}
var glSecondaryColor3sEXT_P:@convention(c)(GLshort, GLshort, GLshort) -> Void = glSecondaryColor3sEXT_L
public func glSecondaryColor3sv(_ v:UnsafePointer<GLshort>) {glSecondaryColor3sv_P(v)}
public func glSecondaryColor3sv(v:UnsafePointer<GLshort>) {glSecondaryColor3sv_P(v)}
var glSecondaryColor3sv_P:@convention(c)(UnsafePointer<GLshort>) -> Void = glSecondaryColor3sv_L
public func glSecondaryColor3svEXT(_ v:UnsafePointer<GLshort>) {glSecondaryColor3svEXT_P(v)}
public func glSecondaryColor3svEXT(v:UnsafePointer<GLshort>) {glSecondaryColor3svEXT_P(v)}
var glSecondaryColor3svEXT_P:@convention(c)(UnsafePointer<GLshort>) -> Void = glSecondaryColor3svEXT_L
public func glSecondaryColor3ub(_ red:GLubyte, _ green:GLubyte, _ blue:GLubyte) {glSecondaryColor3ub_P(red, green, blue)}
public func glSecondaryColor3ub(red:GLubyte, green:GLubyte, blue:GLubyte) {glSecondaryColor3ub_P(red, green, blue)}
var glSecondaryColor3ub_P:@convention(c)(GLubyte, GLubyte, GLubyte) -> Void = glSecondaryColor3ub_L
public func glSecondaryColor3ubEXT(_ red:GLubyte, _ green:GLubyte, _ blue:GLubyte) {glSecondaryColor3ubEXT_P(red, green, blue)}
public func glSecondaryColor3ubEXT(red:GLubyte, green:GLubyte, blue:GLubyte) {glSecondaryColor3ubEXT_P(red, green, blue)}
var glSecondaryColor3ubEXT_P:@convention(c)(GLubyte, GLubyte, GLubyte) -> Void = glSecondaryColor3ubEXT_L
public func glSecondaryColor3ubv(_ v:UnsafePointer<GLubyte>) {glSecondaryColor3ubv_P(v)}
public func glSecondaryColor3ubv(v:UnsafePointer<GLubyte>) {glSecondaryColor3ubv_P(v)}
var glSecondaryColor3ubv_P:@convention(c)(UnsafePointer<GLubyte>) -> Void = glSecondaryColor3ubv_L
public func glSecondaryColor3ubvEXT(_ v:UnsafePointer<GLubyte>) {glSecondaryColor3ubvEXT_P(v)}
public func glSecondaryColor3ubvEXT(v:UnsafePointer<GLubyte>) {glSecondaryColor3ubvEXT_P(v)}
var glSecondaryColor3ubvEXT_P:@convention(c)(UnsafePointer<GLubyte>) -> Void = glSecondaryColor3ubvEXT_L
public func glSecondaryColor3ui(_ red:GLuint, _ green:GLuint, _ blue:GLuint) {glSecondaryColor3ui_P(red, green, blue)}
public func glSecondaryColor3ui(red:GLuint, green:GLuint, blue:GLuint) {glSecondaryColor3ui_P(red, green, blue)}
var glSecondaryColor3ui_P:@convention(c)(GLuint, GLuint, GLuint) -> Void = glSecondaryColor3ui_L
public func glSecondaryColor3uiEXT(_ red:GLuint, _ green:GLuint, _ blue:GLuint) {glSecondaryColor3uiEXT_P(red, green, blue)}
public func glSecondaryColor3uiEXT(red:GLuint, green:GLuint, blue:GLuint) {glSecondaryColor3uiEXT_P(red, green, blue)}
var glSecondaryColor3uiEXT_P:@convention(c)(GLuint, GLuint, GLuint) -> Void = glSecondaryColor3uiEXT_L
public func glSecondaryColor3uiv(_ v:UnsafePointer<GLuint>) {glSecondaryColor3uiv_P(v)}
public func glSecondaryColor3uiv(v:UnsafePointer<GLuint>) {glSecondaryColor3uiv_P(v)}
var glSecondaryColor3uiv_P:@convention(c)(UnsafePointer<GLuint>) -> Void = glSecondaryColor3uiv_L
public func glSecondaryColor3uivEXT(_ v:UnsafePointer<GLuint>) {glSecondaryColor3uivEXT_P(v)}
public func glSecondaryColor3uivEXT(v:UnsafePointer<GLuint>) {glSecondaryColor3uivEXT_P(v)}
var glSecondaryColor3uivEXT_P:@convention(c)(UnsafePointer<GLuint>) -> Void = glSecondaryColor3uivEXT_L
public func glSecondaryColor3us(_ red:GLushort, _ green:GLushort, _ blue:GLushort) {glSecondaryColor3us_P(red, green, blue)}
public func glSecondaryColor3us(red:GLushort, green:GLushort, blue:GLushort) {glSecondaryColor3us_P(red, green, blue)}
var glSecondaryColor3us_P:@convention(c)(GLushort, GLushort, GLushort) -> Void = glSecondaryColor3us_L
public func glSecondaryColor3usEXT(_ red:GLushort, _ green:GLushort, _ blue:GLushort) {glSecondaryColor3usEXT_P(red, green, blue)}
public func glSecondaryColor3usEXT(red:GLushort, green:GLushort, blue:GLushort) {glSecondaryColor3usEXT_P(red, green, blue)}
var glSecondaryColor3usEXT_P:@convention(c)(GLushort, GLushort, GLushort) -> Void = glSecondaryColor3usEXT_L
public func glSecondaryColor3usv(_ v:UnsafePointer<GLushort>) {glSecondaryColor3usv_P(v)}
public func glSecondaryColor3usv(v:UnsafePointer<GLushort>) {glSecondaryColor3usv_P(v)}
var glSecondaryColor3usv_P:@convention(c)(UnsafePointer<GLushort>) -> Void = glSecondaryColor3usv_L
public func glSecondaryColor3usvEXT(_ v:UnsafePointer<GLushort>) {glSecondaryColor3usvEXT_P(v)}
public func glSecondaryColor3usvEXT(v:UnsafePointer<GLushort>) {glSecondaryColor3usvEXT_P(v)}
var glSecondaryColor3usvEXT_P:@convention(c)(UnsafePointer<GLushort>) -> Void = glSecondaryColor3usvEXT_L
public func glSecondaryColorFormatNV(_ size:GLint, _ type:GLenum, _ stride:GLsizei) {glSecondaryColorFormatNV_P(size, type, stride)}
public func glSecondaryColorFormatNV(size:GLint, type:GLenum, stride:GLsizei) {glSecondaryColorFormatNV_P(size, type, stride)}
var glSecondaryColorFormatNV_P:@convention(c)(GLint, GLenum, GLsizei) -> Void = glSecondaryColorFormatNV_L
public func glSecondaryColorP3ui(_ type:GLenum, _ color:GLuint) {glSecondaryColorP3ui_P(type, color)}
public func glSecondaryColorP3ui(type:GLenum, color:GLuint) {glSecondaryColorP3ui_P(type, color)}
var glSecondaryColorP3ui_P:@convention(c)(GLenum, GLuint) -> Void = glSecondaryColorP3ui_L
public func glSecondaryColorP3uiv(_ type:GLenum, _ color:UnsafePointer<GLuint>) {glSecondaryColorP3uiv_P(type, color)}
public func glSecondaryColorP3uiv(type:GLenum, color:UnsafePointer<GLuint>) {glSecondaryColorP3uiv_P(type, color)}
var glSecondaryColorP3uiv_P:@convention(c)(GLenum, UnsafePointer<GLuint>) -> Void = glSecondaryColorP3uiv_L
public func glSecondaryColorPointer(_ size:GLint, _ type:GLenum, _ stride:GLsizei, _ pointer:UnsafeRawPointer) {glSecondaryColorPointer_P(size, type, stride, pointer)}
public func glSecondaryColorPointer(size:GLint, type:GLenum, stride:GLsizei, pointer:UnsafeRawPointer) {glSecondaryColorPointer_P(size, type, stride, pointer)}
var glSecondaryColorPointer_P:@convention(c)(GLint, GLenum, GLsizei, UnsafeRawPointer) -> Void = glSecondaryColorPointer_L
public func glSecondaryColorPointerEXT(_ size:GLint, _ type:GLenum, _ stride:GLsizei, _ pointer:UnsafeRawPointer) {glSecondaryColorPointerEXT_P(size, type, stride, pointer)}
public func glSecondaryColorPointerEXT(size:GLint, type:GLenum, stride:GLsizei, pointer:UnsafeRawPointer) {glSecondaryColorPointerEXT_P(size, type, stride, pointer)}
var glSecondaryColorPointerEXT_P:@convention(c)(GLint, GLenum, GLsizei, UnsafeRawPointer) -> Void = glSecondaryColorPointerEXT_L
public func glSecondaryColorPointerListIBM(_ size:GLint, _ type:GLenum, _ stride:GLint, _ pointer:UnsafeMutablePointer<UnsafeRawPointer>, _ ptrstride:GLint) {glSecondaryColorPointerListIBM_P(size, type, stride, pointer, ptrstride)}
public func glSecondaryColorPointerListIBM(size:GLint, type:GLenum, stride:GLint, pointer:UnsafeMutablePointer<UnsafeRawPointer>, ptrstride:GLint) {glSecondaryColorPointerListIBM_P(size, type, stride, pointer, ptrstride)}
var glSecondaryColorPointerListIBM_P:@convention(c)(GLint, GLenum, GLint, UnsafeMutablePointer<UnsafeRawPointer>, GLint) -> Void = glSecondaryColorPointerListIBM_L
public func glSelectBuffer(_ size:GLsizei, _ buffer:UnsafeMutablePointer<GLuint>) {glSelectBuffer_P(size, buffer)}
public func glSelectBuffer(size:GLsizei, buffer:UnsafeMutablePointer<GLuint>) {glSelectBuffer_P(size, buffer)}
var glSelectBuffer_P:@convention(c)(GLsizei, UnsafeMutablePointer<GLuint>) -> Void = glSelectBuffer_L
public func glSelectPerfMonitorCountersAMD(_ monitor:GLuint, _ enable:GLboolean, _ group:GLuint, _ numCounters:GLint, _ counterList:UnsafeMutablePointer<GLuint>) {glSelectPerfMonitorCountersAMD_P(monitor, enable, group, numCounters, counterList)}
public func glSelectPerfMonitorCountersAMD(monitor:GLuint, enable:GLboolean, group:GLuint, numCounters:GLint, counterList:UnsafeMutablePointer<GLuint>) {glSelectPerfMonitorCountersAMD_P(monitor, enable, group, numCounters, counterList)}
var glSelectPerfMonitorCountersAMD_P:@convention(c)(GLuint, GLboolean, GLuint, GLint, UnsafeMutablePointer<GLuint>) -> Void = glSelectPerfMonitorCountersAMD_L
public func glSeparableFilter2D(_ target:GLenum, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei, _ format:GLenum, _ type:GLenum, _ row:UnsafeRawPointer, _ column:UnsafeRawPointer) {glSeparableFilter2D_P(target, internalformat, width, height, format, type, row, column)}
public func glSeparableFilter2D(target:GLenum, internalformat:GLenum, width:GLsizei, height:GLsizei, format:GLenum, type:GLenum, row:UnsafeRawPointer, column:UnsafeRawPointer) {glSeparableFilter2D_P(target, internalformat, width, height, format, type, row, column)}
var glSeparableFilter2D_P:@convention(c)(GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, UnsafeRawPointer, UnsafeRawPointer) -> Void = glSeparableFilter2D_L
public func glSeparableFilter2DEXT(_ target:GLenum, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei, _ format:GLenum, _ type:GLenum, _ row:UnsafeRawPointer, _ column:UnsafeRawPointer) {glSeparableFilter2DEXT_P(target, internalformat, width, height, format, type, row, column)}
public func glSeparableFilter2DEXT(target:GLenum, internalformat:GLenum, width:GLsizei, height:GLsizei, format:GLenum, type:GLenum, row:UnsafeRawPointer, column:UnsafeRawPointer) {glSeparableFilter2DEXT_P(target, internalformat, width, height, format, type, row, column)}
var glSeparableFilter2DEXT_P:@convention(c)(GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, UnsafeRawPointer, UnsafeRawPointer) -> Void = glSeparableFilter2DEXT_L
public func glSetFenceAPPLE(_ fence:GLuint) {glSetFenceAPPLE_P(fence)}
public func glSetFenceAPPLE(fence:GLuint) {glSetFenceAPPLE_P(fence)}
var glSetFenceAPPLE_P:@convention(c)(GLuint) -> Void = glSetFenceAPPLE_L
public func glSetFenceNV(_ fence:GLuint, _ condition:GLenum) {glSetFenceNV_P(fence, condition)}
public func glSetFenceNV(fence:GLuint, condition:GLenum) {glSetFenceNV_P(fence, condition)}
var glSetFenceNV_P:@convention(c)(GLuint, GLenum) -> Void = glSetFenceNV_L
public func glSetFragmentShaderConstantATI(_ dst:GLuint, _ value:UnsafePointer<GLfloat>) {glSetFragmentShaderConstantATI_P(dst, value)}
public func glSetFragmentShaderConstantATI(dst:GLuint, value:UnsafePointer<GLfloat>) {glSetFragmentShaderConstantATI_P(dst, value)}
var glSetFragmentShaderConstantATI_P:@convention(c)(GLuint, UnsafePointer<GLfloat>) -> Void = glSetFragmentShaderConstantATI_L
public func glSetInvariantEXT(_ id:GLuint, _ type:GLenum, _ addr:UnsafeRawPointer) {glSetInvariantEXT_P(id, type, addr)}
public func glSetInvariantEXT(id:GLuint, type:GLenum, addr:UnsafeRawPointer) {glSetInvariantEXT_P(id, type, addr)}
var glSetInvariantEXT_P:@convention(c)(GLuint, GLenum, UnsafeRawPointer) -> Void = glSetInvariantEXT_L
public func glSetLocalConstantEXT(_ id:GLuint, _ type:GLenum, _ addr:UnsafeRawPointer) {glSetLocalConstantEXT_P(id, type, addr)}
public func glSetLocalConstantEXT(id:GLuint, type:GLenum, addr:UnsafeRawPointer) {glSetLocalConstantEXT_P(id, type, addr)}
var glSetLocalConstantEXT_P:@convention(c)(GLuint, GLenum, UnsafeRawPointer) -> Void = glSetLocalConstantEXT_L
public func glSetMultisamplefvAMD(_ pname:GLenum, _ index:GLuint, _ val:UnsafePointer<GLfloat>) {glSetMultisamplefvAMD_P(pname, index, val)}
public func glSetMultisamplefvAMD(pname:GLenum, index:GLuint, val:UnsafePointer<GLfloat>) {glSetMultisamplefvAMD_P(pname, index, val)}
var glSetMultisamplefvAMD_P:@convention(c)(GLenum, GLuint, UnsafePointer<GLfloat>) -> Void = glSetMultisamplefvAMD_L
public func glShadeModel(_ mode:GLenum) {glShadeModel_P(mode)}
public func glShadeModel(mode:GLenum) {glShadeModel_P(mode)}
var glShadeModel_P:@convention(c)(GLenum) -> Void = glShadeModel_L
public func glShaderBinary(_ count:GLsizei, _ shaders:UnsafePointer<GLuint>, _ binaryformat:GLenum, _ binary:UnsafeRawPointer, _ length:GLsizei) {glShaderBinary_P(count, shaders, binaryformat, binary, length)}
public func glShaderBinary(count:GLsizei, shaders:UnsafePointer<GLuint>, binaryformat:GLenum, binary:UnsafeRawPointer, length:GLsizei) {glShaderBinary_P(count, shaders, binaryformat, binary, length)}
var glShaderBinary_P:@convention(c)(GLsizei, UnsafePointer<GLuint>, GLenum, UnsafeRawPointer, GLsizei) -> Void = glShaderBinary_L
public func glShaderOp1EXT(_ op:GLenum, _ res:GLuint, _ arg1:GLuint) {glShaderOp1EXT_P(op, res, arg1)}
public func glShaderOp1EXT(op:GLenum, res:GLuint, arg1:GLuint) {glShaderOp1EXT_P(op, res, arg1)}
var glShaderOp1EXT_P:@convention(c)(GLenum, GLuint, GLuint) -> Void = glShaderOp1EXT_L
public func glShaderOp2EXT(_ op:GLenum, _ res:GLuint, _ arg1:GLuint, _ arg2:GLuint) {glShaderOp2EXT_P(op, res, arg1, arg2)}
public func glShaderOp2EXT(op:GLenum, res:GLuint, arg1:GLuint, arg2:GLuint) {glShaderOp2EXT_P(op, res, arg1, arg2)}
var glShaderOp2EXT_P:@convention(c)(GLenum, GLuint, GLuint, GLuint) -> Void = glShaderOp2EXT_L
public func glShaderOp3EXT(_ op:GLenum, _ res:GLuint, _ arg1:GLuint, _ arg2:GLuint, _ arg3:GLuint) {glShaderOp3EXT_P(op, res, arg1, arg2, arg3)}
public func glShaderOp3EXT(op:GLenum, res:GLuint, arg1:GLuint, arg2:GLuint, arg3:GLuint) {glShaderOp3EXT_P(op, res, arg1, arg2, arg3)}
var glShaderOp3EXT_P:@convention(c)(GLenum, GLuint, GLuint, GLuint, GLuint) -> Void = glShaderOp3EXT_L
public func glShaderSource(_ shader:GLuint, _ count:GLsizei, _ string:UnsafePointer<UnsafePointer<GLchar>>, _ length:UnsafePointer<GLint>) {glShaderSource_P(shader, count, string, length)}
public func glShaderSource(shader:GLuint, count:GLsizei, string:UnsafePointer<UnsafePointer<GLchar>>, length:UnsafePointer<GLint>) {glShaderSource_P(shader, count, string, length)}
var glShaderSource_P:@convention(c)(GLuint, GLsizei, UnsafePointer<UnsafePointer<GLchar>>, UnsafePointer<GLint>) -> Void = glShaderSource_L
public func glShaderSourceARB(_ shaderObj:GLhandleARB, _ count:GLsizei, _ string:UnsafeMutablePointer<UnsafePointer<GLcharARB>>, _ length:UnsafePointer<GLint>) {glShaderSourceARB_P(shaderObj, count, string, length)}
public func glShaderSourceARB(shaderObj:GLhandleARB, count:GLsizei, string:UnsafeMutablePointer<UnsafePointer<GLcharARB>>, length:UnsafePointer<GLint>) {glShaderSourceARB_P(shaderObj, count, string, length)}
var glShaderSourceARB_P:@convention(c)(GLhandleARB, GLsizei, UnsafeMutablePointer<UnsafePointer<GLcharARB>>, UnsafePointer<GLint>) -> Void = glShaderSourceARB_L
public func glShaderStorageBlockBinding(_ program:GLuint, _ storageBlockIndex:GLuint, _ storageBlockBinding:GLuint) {glShaderStorageBlockBinding_P(program, storageBlockIndex, storageBlockBinding)}
public func glShaderStorageBlockBinding(program:GLuint, storageBlockIndex:GLuint, storageBlockBinding:GLuint) {glShaderStorageBlockBinding_P(program, storageBlockIndex, storageBlockBinding)}
var glShaderStorageBlockBinding_P:@convention(c)(GLuint, GLuint, GLuint) -> Void = glShaderStorageBlockBinding_L
public func glSharpenTexFuncSGIS(_ target:GLenum, _ n:GLsizei, _ points:UnsafePointer<GLfloat>) {glSharpenTexFuncSGIS_P(target, n, points)}
public func glSharpenTexFuncSGIS(target:GLenum, n:GLsizei, points:UnsafePointer<GLfloat>) {glSharpenTexFuncSGIS_P(target, n, points)}
var glSharpenTexFuncSGIS_P:@convention(c)(GLenum, GLsizei, UnsafePointer<GLfloat>) -> Void = glSharpenTexFuncSGIS_L
public func glSpriteParameterfSGIX(_ pname:GLenum, _ param:GLfloat) {glSpriteParameterfSGIX_P(pname, param)}
public func glSpriteParameterfSGIX(pname:GLenum, param:GLfloat) {glSpriteParameterfSGIX_P(pname, param)}
var glSpriteParameterfSGIX_P:@convention(c)(GLenum, GLfloat) -> Void = glSpriteParameterfSGIX_L
public func glSpriteParameterfvSGIX(_ pname:GLenum, _ params:UnsafePointer<GLfloat>) {glSpriteParameterfvSGIX_P(pname, params)}
public func glSpriteParameterfvSGIX(pname:GLenum, params:UnsafePointer<GLfloat>) {glSpriteParameterfvSGIX_P(pname, params)}
var glSpriteParameterfvSGIX_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glSpriteParameterfvSGIX_L
public func glSpriteParameteriSGIX(_ pname:GLenum, _ param:GLint) {glSpriteParameteriSGIX_P(pname, param)}
public func glSpriteParameteriSGIX(pname:GLenum, param:GLint) {glSpriteParameteriSGIX_P(pname, param)}
var glSpriteParameteriSGIX_P:@convention(c)(GLenum, GLint) -> Void = glSpriteParameteriSGIX_L
public func glSpriteParameterivSGIX(_ pname:GLenum, _ params:UnsafePointer<GLint>) {glSpriteParameterivSGIX_P(pname, params)}
public func glSpriteParameterivSGIX(pname:GLenum, params:UnsafePointer<GLint>) {glSpriteParameterivSGIX_P(pname, params)}
var glSpriteParameterivSGIX_P:@convention(c)(GLenum, UnsafePointer<GLint>) -> Void = glSpriteParameterivSGIX_L
public func glStartInstrumentsSGIX() {glStartInstrumentsSGIX_P()}
var glStartInstrumentsSGIX_P:@convention(c)() -> Void = glStartInstrumentsSGIX_L
public func glStartTilingQCOM(_ x:GLuint, _ y:GLuint, _ width:GLuint, _ height:GLuint, _ preserveMask:GLbitfield) {glStartTilingQCOM_P(x, y, width, height, preserveMask)}
public func glStartTilingQCOM(x:GLuint, y:GLuint, width:GLuint, height:GLuint, preserveMask:GLbitfield) {glStartTilingQCOM_P(x, y, width, height, preserveMask)}
var glStartTilingQCOM_P:@convention(c)(GLuint, GLuint, GLuint, GLuint, GLbitfield) -> Void = glStartTilingQCOM_L
public func glStateCaptureNV(_ state:GLuint, _ mode:GLenum) {glStateCaptureNV_P(state, mode)}
public func glStateCaptureNV(state:GLuint, mode:GLenum) {glStateCaptureNV_P(state, mode)}
var glStateCaptureNV_P:@convention(c)(GLuint, GLenum) -> Void = glStateCaptureNV_L
public func glStencilClearTagEXT(_ stencilTagBits:GLsizei, _ stencilClearTag:GLuint) {glStencilClearTagEXT_P(stencilTagBits, stencilClearTag)}
public func glStencilClearTagEXT(stencilTagBits:GLsizei, stencilClearTag:GLuint) {glStencilClearTagEXT_P(stencilTagBits, stencilClearTag)}
var glStencilClearTagEXT_P:@convention(c)(GLsizei, GLuint) -> Void = glStencilClearTagEXT_L
public func glStencilFillPathInstancedNV(_ numPaths:GLsizei, _ pathNameType:GLenum, _ paths:UnsafeRawPointer, _ pathBase:GLuint, _ fillMode:GLenum, _ mask:GLuint, _ transformType:GLenum, _ transformValues:UnsafePointer<GLfloat>) {glStencilFillPathInstancedNV_P(numPaths, pathNameType, paths, pathBase, fillMode, mask, transformType, transformValues)}
public func glStencilFillPathInstancedNV(numPaths:GLsizei, pathNameType:GLenum, paths:UnsafeRawPointer, pathBase:GLuint, fillMode:GLenum, mask:GLuint, transformType:GLenum, transformValues:UnsafePointer<GLfloat>) {glStencilFillPathInstancedNV_P(numPaths, pathNameType, paths, pathBase, fillMode, mask, transformType, transformValues)}
var glStencilFillPathInstancedNV_P:@convention(c)(GLsizei, GLenum, UnsafeRawPointer, GLuint, GLenum, GLuint, GLenum, UnsafePointer<GLfloat>) -> Void = glStencilFillPathInstancedNV_L
public func glStencilFillPathNV(_ path:GLuint, _ fillMode:GLenum, _ mask:GLuint) {glStencilFillPathNV_P(path, fillMode, mask)}
public func glStencilFillPathNV(path:GLuint, fillMode:GLenum, mask:GLuint) {glStencilFillPathNV_P(path, fillMode, mask)}
var glStencilFillPathNV_P:@convention(c)(GLuint, GLenum, GLuint) -> Void = glStencilFillPathNV_L
public func glStencilFunc(_ fn:GLenum, _ ref:GLint, _ mask:GLuint) {glStencilFunc_P(fn, ref, mask)}
public func glStencilFunc(fn:GLenum, ref:GLint, mask:GLuint) {glStencilFunc_P(fn, ref, mask)}
var glStencilFunc_P:@convention(c)(GLenum, GLint, GLuint) -> Void = glStencilFunc_L
public func glStencilFuncSeparate(_ face:GLenum, _ fn:GLenum, _ ref:GLint, _ mask:GLuint) {glStencilFuncSeparate_P(face, fn, ref, mask)}
public func glStencilFuncSeparate(face:GLenum, fn:GLenum, ref:GLint, mask:GLuint) {glStencilFuncSeparate_P(face, fn, ref, mask)}
var glStencilFuncSeparate_P:@convention(c)(GLenum, GLenum, GLint, GLuint) -> Void = glStencilFuncSeparate_L
public func glStencilFuncSeparateATI(_ frontfunc:GLenum, _ backfunc:GLenum, _ ref:GLint, _ mask:GLuint) {glStencilFuncSeparateATI_P(frontfunc, backfunc, ref, mask)}
public func glStencilFuncSeparateATI(frontfunc:GLenum, backfunc:GLenum, ref:GLint, mask:GLuint) {glStencilFuncSeparateATI_P(frontfunc, backfunc, ref, mask)}
var glStencilFuncSeparateATI_P:@convention(c)(GLenum, GLenum, GLint, GLuint) -> Void = glStencilFuncSeparateATI_L
public func glStencilMask(_ mask:GLuint) {glStencilMask_P(mask)}
public func glStencilMask(mask:GLuint) {glStencilMask_P(mask)}
var glStencilMask_P:@convention(c)(GLuint) -> Void = glStencilMask_L
public func glStencilMaskSeparate(_ face:GLenum, _ mask:GLuint) {glStencilMaskSeparate_P(face, mask)}
public func glStencilMaskSeparate(face:GLenum, mask:GLuint) {glStencilMaskSeparate_P(face, mask)}
var glStencilMaskSeparate_P:@convention(c)(GLenum, GLuint) -> Void = glStencilMaskSeparate_L
public func glStencilOp(_ fail:GLenum, _ zfail:GLenum, _ zpass:GLenum) {glStencilOp_P(fail, zfail, zpass)}
public func glStencilOp(fail:GLenum, zfail:GLenum, zpass:GLenum) {glStencilOp_P(fail, zfail, zpass)}
var glStencilOp_P:@convention(c)(GLenum, GLenum, GLenum) -> Void = glStencilOp_L
public func glStencilOpSeparate(_ face:GLenum, _ sfail:GLenum, _ dpfail:GLenum, _ dppass:GLenum) {glStencilOpSeparate_P(face, sfail, dpfail, dppass)}
public func glStencilOpSeparate(face:GLenum, sfail:GLenum, dpfail:GLenum, dppass:GLenum) {glStencilOpSeparate_P(face, sfail, dpfail, dppass)}
var glStencilOpSeparate_P:@convention(c)(GLenum, GLenum, GLenum, GLenum) -> Void = glStencilOpSeparate_L
public func glStencilOpSeparateATI(_ face:GLenum, _ sfail:GLenum, _ dpfail:GLenum, _ dppass:GLenum) {glStencilOpSeparateATI_P(face, sfail, dpfail, dppass)}
public func glStencilOpSeparateATI(face:GLenum, sfail:GLenum, dpfail:GLenum, dppass:GLenum) {glStencilOpSeparateATI_P(face, sfail, dpfail, dppass)}
var glStencilOpSeparateATI_P:@convention(c)(GLenum, GLenum, GLenum, GLenum) -> Void = glStencilOpSeparateATI_L
public func glStencilOpValueAMD(_ face:GLenum, _ value:GLuint) {glStencilOpValueAMD_P(face, value)}
public func glStencilOpValueAMD(face:GLenum, value:GLuint) {glStencilOpValueAMD_P(face, value)}
var glStencilOpValueAMD_P:@convention(c)(GLenum, GLuint) -> Void = glStencilOpValueAMD_L
public func glStencilStrokePathInstancedNV(_ numPaths:GLsizei, _ pathNameType:GLenum, _ paths:UnsafeRawPointer, _ pathBase:GLuint, _ reference:GLint, _ mask:GLuint, _ transformType:GLenum, _ transformValues:UnsafePointer<GLfloat>) {glStencilStrokePathInstancedNV_P(numPaths, pathNameType, paths, pathBase, reference, mask, transformType, transformValues)}
public func glStencilStrokePathInstancedNV(numPaths:GLsizei, pathNameType:GLenum, paths:UnsafeRawPointer, pathBase:GLuint, reference:GLint, mask:GLuint, transformType:GLenum, transformValues:UnsafePointer<GLfloat>) {glStencilStrokePathInstancedNV_P(numPaths, pathNameType, paths, pathBase, reference, mask, transformType, transformValues)}
var glStencilStrokePathInstancedNV_P:@convention(c)(GLsizei, GLenum, UnsafeRawPointer, GLuint, GLint, GLuint, GLenum, UnsafePointer<GLfloat>) -> Void = glStencilStrokePathInstancedNV_L
public func glStencilStrokePathNV(_ path:GLuint, _ reference:GLint, _ mask:GLuint) {glStencilStrokePathNV_P(path, reference, mask)}
public func glStencilStrokePathNV(path:GLuint, reference:GLint, mask:GLuint) {glStencilStrokePathNV_P(path, reference, mask)}
var glStencilStrokePathNV_P:@convention(c)(GLuint, GLint, GLuint) -> Void = glStencilStrokePathNV_L
public func glStencilThenCoverFillPathInstancedNV(_ numPaths:GLsizei, _ pathNameType:GLenum, _ paths:UnsafeRawPointer, _ pathBase:GLuint, _ fillMode:GLenum, _ mask:GLuint, _ coverMode:GLenum, _ transformType:GLenum, _ transformValues:UnsafePointer<GLfloat>) {glStencilThenCoverFillPathInstancedNV_P(numPaths, pathNameType, paths, pathBase, fillMode, mask, coverMode, transformType, transformValues)}
public func glStencilThenCoverFillPathInstancedNV(numPaths:GLsizei, pathNameType:GLenum, paths:UnsafeRawPointer, pathBase:GLuint, fillMode:GLenum, mask:GLuint, coverMode:GLenum, transformType:GLenum, transformValues:UnsafePointer<GLfloat>) {glStencilThenCoverFillPathInstancedNV_P(numPaths, pathNameType, paths, pathBase, fillMode, mask, coverMode, transformType, transformValues)}
var glStencilThenCoverFillPathInstancedNV_P:@convention(c)(GLsizei, GLenum, UnsafeRawPointer, GLuint, GLenum, GLuint, GLenum, GLenum, UnsafePointer<GLfloat>) -> Void = glStencilThenCoverFillPathInstancedNV_L
public func glStencilThenCoverFillPathNV(_ path:GLuint, _ fillMode:GLenum, _ mask:GLuint, _ coverMode:GLenum) {glStencilThenCoverFillPathNV_P(path, fillMode, mask, coverMode)}
public func glStencilThenCoverFillPathNV(path:GLuint, fillMode:GLenum, mask:GLuint, coverMode:GLenum) {glStencilThenCoverFillPathNV_P(path, fillMode, mask, coverMode)}
var glStencilThenCoverFillPathNV_P:@convention(c)(GLuint, GLenum, GLuint, GLenum) -> Void = glStencilThenCoverFillPathNV_L
public func glStencilThenCoverStrokePathInstancedNV(_ numPaths:GLsizei, _ pathNameType:GLenum, _ paths:UnsafeRawPointer, _ pathBase:GLuint, _ reference:GLint, _ mask:GLuint, _ coverMode:GLenum, _ transformType:GLenum, _ transformValues:UnsafePointer<GLfloat>) {glStencilThenCoverStrokePathInstancedNV_P(numPaths, pathNameType, paths, pathBase, reference, mask, coverMode, transformType, transformValues)}
public func glStencilThenCoverStrokePathInstancedNV(numPaths:GLsizei, pathNameType:GLenum, paths:UnsafeRawPointer, pathBase:GLuint, reference:GLint, mask:GLuint, coverMode:GLenum, transformType:GLenum, transformValues:UnsafePointer<GLfloat>) {glStencilThenCoverStrokePathInstancedNV_P(numPaths, pathNameType, paths, pathBase, reference, mask, coverMode, transformType, transformValues)}
var glStencilThenCoverStrokePathInstancedNV_P:@convention(c)(GLsizei, GLenum, UnsafeRawPointer, GLuint, GLint, GLuint, GLenum, GLenum, UnsafePointer<GLfloat>) -> Void = glStencilThenCoverStrokePathInstancedNV_L
public func glStencilThenCoverStrokePathNV(_ path:GLuint, _ reference:GLint, _ mask:GLuint, _ coverMode:GLenum) {glStencilThenCoverStrokePathNV_P(path, reference, mask, coverMode)}
public func glStencilThenCoverStrokePathNV(path:GLuint, reference:GLint, mask:GLuint, coverMode:GLenum) {glStencilThenCoverStrokePathNV_P(path, reference, mask, coverMode)}
var glStencilThenCoverStrokePathNV_P:@convention(c)(GLuint, GLint, GLuint, GLenum) -> Void = glStencilThenCoverStrokePathNV_L
public func glStopInstrumentsSGIX(_ marker:GLint) {glStopInstrumentsSGIX_P(marker)}
public func glStopInstrumentsSGIX(marker:GLint) {glStopInstrumentsSGIX_P(marker)}
var glStopInstrumentsSGIX_P:@convention(c)(GLint) -> Void = glStopInstrumentsSGIX_L
public func glStringMarkerGREMEDY(_ len:GLsizei, _ string:UnsafeRawPointer) {glStringMarkerGREMEDY_P(len, string)}
public func glStringMarkerGREMEDY(len:GLsizei, string:UnsafeRawPointer) {glStringMarkerGREMEDY_P(len, string)}
var glStringMarkerGREMEDY_P:@convention(c)(GLsizei, UnsafeRawPointer) -> Void = glStringMarkerGREMEDY_L
public func glSubpixelPrecisionBiasNV(_ xbits:GLuint, _ ybits:GLuint) {glSubpixelPrecisionBiasNV_P(xbits, ybits)}
public func glSubpixelPrecisionBiasNV(xbits:GLuint, ybits:GLuint) {glSubpixelPrecisionBiasNV_P(xbits, ybits)}
var glSubpixelPrecisionBiasNV_P:@convention(c)(GLuint, GLuint) -> Void = glSubpixelPrecisionBiasNV_L
public func glSwizzleEXT(_ res:GLuint, _ input:GLuint, _ outX:GLenum, _ outY:GLenum, _ outZ:GLenum, _ outW:GLenum) {glSwizzleEXT_P(res, input, outX, outY, outZ, outW)}
public func glSwizzleEXT(res:GLuint, input:GLuint, outX:GLenum, outY:GLenum, outZ:GLenum, outW:GLenum) {glSwizzleEXT_P(res, input, outX, outY, outZ, outW)}
var glSwizzleEXT_P:@convention(c)(GLuint, GLuint, GLenum, GLenum, GLenum, GLenum) -> Void = glSwizzleEXT_L
public func glSyncTextureINTEL(_ texture:GLuint) {glSyncTextureINTEL_P(texture)}
public func glSyncTextureINTEL(texture:GLuint) {glSyncTextureINTEL_P(texture)}
var glSyncTextureINTEL_P:@convention(c)(GLuint) -> Void = glSyncTextureINTEL_L
public func glTagSampleBufferSGIX() {glTagSampleBufferSGIX_P()}
var glTagSampleBufferSGIX_P:@convention(c)() -> Void = glTagSampleBufferSGIX_L
public func glTangent3bEXT(_ tx:GLbyte, _ ty:GLbyte, _ tz:GLbyte) {glTangent3bEXT_P(tx, ty, tz)}
public func glTangent3bEXT(tx:GLbyte, ty:GLbyte, tz:GLbyte) {glTangent3bEXT_P(tx, ty, tz)}
var glTangent3bEXT_P:@convention(c)(GLbyte, GLbyte, GLbyte) -> Void = glTangent3bEXT_L
public func glTangent3bvEXT(_ v:UnsafePointer<GLbyte>) {glTangent3bvEXT_P(v)}
public func glTangent3bvEXT(v:UnsafePointer<GLbyte>) {glTangent3bvEXT_P(v)}
var glTangent3bvEXT_P:@convention(c)(UnsafePointer<GLbyte>) -> Void = glTangent3bvEXT_L
public func glTangent3dEXT(_ tx:GLdouble, _ ty:GLdouble, _ tz:GLdouble) {glTangent3dEXT_P(tx, ty, tz)}
public func glTangent3dEXT(tx:GLdouble, ty:GLdouble, tz:GLdouble) {glTangent3dEXT_P(tx, ty, tz)}
var glTangent3dEXT_P:@convention(c)(GLdouble, GLdouble, GLdouble) -> Void = glTangent3dEXT_L
public func glTangent3dvEXT(_ v:UnsafePointer<GLdouble>) {glTangent3dvEXT_P(v)}
public func glTangent3dvEXT(v:UnsafePointer<GLdouble>) {glTangent3dvEXT_P(v)}
var glTangent3dvEXT_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glTangent3dvEXT_L
public func glTangent3fEXT(_ tx:GLfloat, _ ty:GLfloat, _ tz:GLfloat) {glTangent3fEXT_P(tx, ty, tz)}
public func glTangent3fEXT(tx:GLfloat, ty:GLfloat, tz:GLfloat) {glTangent3fEXT_P(tx, ty, tz)}
var glTangent3fEXT_P:@convention(c)(GLfloat, GLfloat, GLfloat) -> Void = glTangent3fEXT_L
public func glTangent3fvEXT(_ v:UnsafePointer<GLfloat>) {glTangent3fvEXT_P(v)}
public func glTangent3fvEXT(v:UnsafePointer<GLfloat>) {glTangent3fvEXT_P(v)}
var glTangent3fvEXT_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glTangent3fvEXT_L
public func glTangent3iEXT(_ tx:GLint, _ ty:GLint, _ tz:GLint) {glTangent3iEXT_P(tx, ty, tz)}
public func glTangent3iEXT(tx:GLint, ty:GLint, tz:GLint) {glTangent3iEXT_P(tx, ty, tz)}
var glTangent3iEXT_P:@convention(c)(GLint, GLint, GLint) -> Void = glTangent3iEXT_L
public func glTangent3ivEXT(_ v:UnsafePointer<GLint>) {glTangent3ivEXT_P(v)}
public func glTangent3ivEXT(v:UnsafePointer<GLint>) {glTangent3ivEXT_P(v)}
var glTangent3ivEXT_P:@convention(c)(UnsafePointer<GLint>) -> Void = glTangent3ivEXT_L
public func glTangent3sEXT(_ tx:GLshort, _ ty:GLshort, _ tz:GLshort) {glTangent3sEXT_P(tx, ty, tz)}
public func glTangent3sEXT(tx:GLshort, ty:GLshort, tz:GLshort) {glTangent3sEXT_P(tx, ty, tz)}
var glTangent3sEXT_P:@convention(c)(GLshort, GLshort, GLshort) -> Void = glTangent3sEXT_L
public func glTangent3svEXT(_ v:UnsafePointer<GLshort>) {glTangent3svEXT_P(v)}
public func glTangent3svEXT(v:UnsafePointer<GLshort>) {glTangent3svEXT_P(v)}
var glTangent3svEXT_P:@convention(c)(UnsafePointer<GLshort>) -> Void = glTangent3svEXT_L
public func glTangentPointerEXT(_ type:GLenum, _ stride:GLsizei, _ pointer:UnsafeRawPointer) {glTangentPointerEXT_P(type, stride, pointer)}
public func glTangentPointerEXT(type:GLenum, stride:GLsizei, pointer:UnsafeRawPointer) {glTangentPointerEXT_P(type, stride, pointer)}
var glTangentPointerEXT_P:@convention(c)(GLenum, GLsizei, UnsafeRawPointer) -> Void = glTangentPointerEXT_L
public func glTbufferMask3DFX(_ mask:GLuint) {glTbufferMask3DFX_P(mask)}
public func glTbufferMask3DFX(mask:GLuint) {glTbufferMask3DFX_P(mask)}
var glTbufferMask3DFX_P:@convention(c)(GLuint) -> Void = glTbufferMask3DFX_L
public func glTessellationFactorAMD(_ factor:GLfloat) {glTessellationFactorAMD_P(factor)}
public func glTessellationFactorAMD(factor:GLfloat) {glTessellationFactorAMD_P(factor)}
var glTessellationFactorAMD_P:@convention(c)(GLfloat) -> Void = glTessellationFactorAMD_L
public func glTessellationModeAMD(_ mode:GLenum) {glTessellationModeAMD_P(mode)}
public func glTessellationModeAMD(mode:GLenum) {glTessellationModeAMD_P(mode)}
var glTessellationModeAMD_P:@convention(c)(GLenum) -> Void = glTessellationModeAMD_L
public func glTestFenceAPPLE(_ fence:GLuint) -> GLboolean {return glTestFenceAPPLE_P(fence)}
public func glTestFenceAPPLE(fence:GLuint) -> GLboolean {return glTestFenceAPPLE_P(fence)}
var glTestFenceAPPLE_P:@convention(c)(GLuint) -> GLboolean = glTestFenceAPPLE_L
public func glTestFenceNV(_ fence:GLuint) -> GLboolean {return glTestFenceNV_P(fence)}
public func glTestFenceNV(fence:GLuint) -> GLboolean {return glTestFenceNV_P(fence)}
var glTestFenceNV_P:@convention(c)(GLuint) -> GLboolean = glTestFenceNV_L
public func glTestObjectAPPLE(_ object:GLenum, _ name:GLuint) -> GLboolean {return glTestObjectAPPLE_P(object, name)}
public func glTestObjectAPPLE(object:GLenum, name:GLuint) -> GLboolean {return glTestObjectAPPLE_P(object, name)}
var glTestObjectAPPLE_P:@convention(c)(GLenum, GLuint) -> GLboolean = glTestObjectAPPLE_L
public func glTexBuffer(_ target:GLenum, _ internalformat:GLenum, _ buffer:GLuint) {glTexBuffer_P(target, internalformat, buffer)}
public func glTexBuffer(target:GLenum, internalformat:GLenum, buffer:GLuint) {glTexBuffer_P(target, internalformat, buffer)}
var glTexBuffer_P:@convention(c)(GLenum, GLenum, GLuint) -> Void = glTexBuffer_L
public func glTexBufferARB(_ target:GLenum, _ internalformat:GLenum, _ buffer:GLuint) {glTexBufferARB_P(target, internalformat, buffer)}
public func glTexBufferARB(target:GLenum, internalformat:GLenum, buffer:GLuint) {glTexBufferARB_P(target, internalformat, buffer)}
var glTexBufferARB_P:@convention(c)(GLenum, GLenum, GLuint) -> Void = glTexBufferARB_L
public func glTexBufferEXT(_ target:GLenum, _ internalformat:GLenum, _ buffer:GLuint) {glTexBufferEXT_P(target, internalformat, buffer)}
public func glTexBufferEXT(target:GLenum, internalformat:GLenum, buffer:GLuint) {glTexBufferEXT_P(target, internalformat, buffer)}
var glTexBufferEXT_P:@convention(c)(GLenum, GLenum, GLuint) -> Void = glTexBufferEXT_L
public func glTexBufferOES(_ target:GLenum, _ internalformat:GLenum, _ buffer:GLuint) {glTexBufferOES_P(target, internalformat, buffer)}
public func glTexBufferOES(target:GLenum, internalformat:GLenum, buffer:GLuint) {glTexBufferOES_P(target, internalformat, buffer)}
var glTexBufferOES_P:@convention(c)(GLenum, GLenum, GLuint) -> Void = glTexBufferOES_L
public func glTexBufferRange(_ target:GLenum, _ internalformat:GLenum, _ buffer:GLuint, _ offset:GLintptr, _ size:GLsizeiptr) {glTexBufferRange_P(target, internalformat, buffer, offset, size)}
public func glTexBufferRange(target:GLenum, internalformat:GLenum, buffer:GLuint, offset:GLintptr, size:GLsizeiptr) {glTexBufferRange_P(target, internalformat, buffer, offset, size)}
var glTexBufferRange_P:@convention(c)(GLenum, GLenum, GLuint, GLintptr, GLsizeiptr) -> Void = glTexBufferRange_L
public func glTexBufferRangeEXT(_ target:GLenum, _ internalformat:GLenum, _ buffer:GLuint, _ offset:GLintptr, _ size:GLsizeiptr) {glTexBufferRangeEXT_P(target, internalformat, buffer, offset, size)}
public func glTexBufferRangeEXT(target:GLenum, internalformat:GLenum, buffer:GLuint, offset:GLintptr, size:GLsizeiptr) {glTexBufferRangeEXT_P(target, internalformat, buffer, offset, size)}
var glTexBufferRangeEXT_P:@convention(c)(GLenum, GLenum, GLuint, GLintptr, GLsizeiptr) -> Void = glTexBufferRangeEXT_L
public func glTexBufferRangeOES(_ target:GLenum, _ internalformat:GLenum, _ buffer:GLuint, _ offset:GLintptr, _ size:GLsizeiptr) {glTexBufferRangeOES_P(target, internalformat, buffer, offset, size)}
public func glTexBufferRangeOES(target:GLenum, internalformat:GLenum, buffer:GLuint, offset:GLintptr, size:GLsizeiptr) {glTexBufferRangeOES_P(target, internalformat, buffer, offset, size)}
var glTexBufferRangeOES_P:@convention(c)(GLenum, GLenum, GLuint, GLintptr, GLsizeiptr) -> Void = glTexBufferRangeOES_L
public func glTexBumpParameterfvATI(_ pname:GLenum, _ param:UnsafePointer<GLfloat>) {glTexBumpParameterfvATI_P(pname, param)}
public func glTexBumpParameterfvATI(pname:GLenum, param:UnsafePointer<GLfloat>) {glTexBumpParameterfvATI_P(pname, param)}
var glTexBumpParameterfvATI_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glTexBumpParameterfvATI_L
public func glTexBumpParameterivATI(_ pname:GLenum, _ param:UnsafePointer<GLint>) {glTexBumpParameterivATI_P(pname, param)}
public func glTexBumpParameterivATI(pname:GLenum, param:UnsafePointer<GLint>) {glTexBumpParameterivATI_P(pname, param)}
var glTexBumpParameterivATI_P:@convention(c)(GLenum, UnsafePointer<GLint>) -> Void = glTexBumpParameterivATI_L
public func glTexCoord1bOES(_ s:GLbyte) {glTexCoord1bOES_P(s)}
public func glTexCoord1bOES(s:GLbyte) {glTexCoord1bOES_P(s)}
var glTexCoord1bOES_P:@convention(c)(GLbyte) -> Void = glTexCoord1bOES_L
public func glTexCoord1bvOES(_ coords:UnsafePointer<GLbyte>) {glTexCoord1bvOES_P(coords)}
public func glTexCoord1bvOES(coords:UnsafePointer<GLbyte>) {glTexCoord1bvOES_P(coords)}
var glTexCoord1bvOES_P:@convention(c)(UnsafePointer<GLbyte>) -> Void = glTexCoord1bvOES_L
public func glTexCoord1d(_ s:GLdouble) {glTexCoord1d_P(s)}
public func glTexCoord1d(s:GLdouble) {glTexCoord1d_P(s)}
var glTexCoord1d_P:@convention(c)(GLdouble) -> Void = glTexCoord1d_L
public func glTexCoord1dv(_ v:UnsafePointer<GLdouble>) {glTexCoord1dv_P(v)}
public func glTexCoord1dv(v:UnsafePointer<GLdouble>) {glTexCoord1dv_P(v)}
var glTexCoord1dv_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glTexCoord1dv_L
public func glTexCoord1f(_ s:GLfloat) {glTexCoord1f_P(s)}
public func glTexCoord1f(s:GLfloat) {glTexCoord1f_P(s)}
var glTexCoord1f_P:@convention(c)(GLfloat) -> Void = glTexCoord1f_L
public func glTexCoord1fv(_ v:UnsafePointer<GLfloat>) {glTexCoord1fv_P(v)}
public func glTexCoord1fv(v:UnsafePointer<GLfloat>) {glTexCoord1fv_P(v)}
var glTexCoord1fv_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glTexCoord1fv_L
public func glTexCoord1hNV(_ s:GLhalfNV) {glTexCoord1hNV_P(s)}
public func glTexCoord1hNV(s:GLhalfNV) {glTexCoord1hNV_P(s)}
var glTexCoord1hNV_P:@convention(c)(GLhalfNV) -> Void = glTexCoord1hNV_L
public func glTexCoord1hvNV(_ v:UnsafePointer<GLhalfNV>) {glTexCoord1hvNV_P(v)}
public func glTexCoord1hvNV(v:UnsafePointer<GLhalfNV>) {glTexCoord1hvNV_P(v)}
var glTexCoord1hvNV_P:@convention(c)(UnsafePointer<GLhalfNV>) -> Void = glTexCoord1hvNV_L
public func glTexCoord1i(_ s:GLint) {glTexCoord1i_P(s)}
public func glTexCoord1i(s:GLint) {glTexCoord1i_P(s)}
var glTexCoord1i_P:@convention(c)(GLint) -> Void = glTexCoord1i_L
public func glTexCoord1iv(_ v:UnsafePointer<GLint>) {glTexCoord1iv_P(v)}
public func glTexCoord1iv(v:UnsafePointer<GLint>) {glTexCoord1iv_P(v)}
var glTexCoord1iv_P:@convention(c)(UnsafePointer<GLint>) -> Void = glTexCoord1iv_L
public func glTexCoord1s(_ s:GLshort) {glTexCoord1s_P(s)}
public func glTexCoord1s(s:GLshort) {glTexCoord1s_P(s)}
var glTexCoord1s_P:@convention(c)(GLshort) -> Void = glTexCoord1s_L
public func glTexCoord1sv(_ v:UnsafePointer<GLshort>) {glTexCoord1sv_P(v)}
public func glTexCoord1sv(v:UnsafePointer<GLshort>) {glTexCoord1sv_P(v)}
var glTexCoord1sv_P:@convention(c)(UnsafePointer<GLshort>) -> Void = glTexCoord1sv_L
public func glTexCoord1xOES(_ s:GLfixed) {glTexCoord1xOES_P(s)}
public func glTexCoord1xOES(s:GLfixed) {glTexCoord1xOES_P(s)}
var glTexCoord1xOES_P:@convention(c)(GLfixed) -> Void = glTexCoord1xOES_L
public func glTexCoord1xvOES(_ coords:UnsafePointer<GLfixed>) {glTexCoord1xvOES_P(coords)}
public func glTexCoord1xvOES(coords:UnsafePointer<GLfixed>) {glTexCoord1xvOES_P(coords)}
var glTexCoord1xvOES_P:@convention(c)(UnsafePointer<GLfixed>) -> Void = glTexCoord1xvOES_L
public func glTexCoord2bOES(_ s:GLbyte, _ t:GLbyte) {glTexCoord2bOES_P(s, t)}
public func glTexCoord2bOES(s:GLbyte, t:GLbyte) {glTexCoord2bOES_P(s, t)}
var glTexCoord2bOES_P:@convention(c)(GLbyte, GLbyte) -> Void = glTexCoord2bOES_L
public func glTexCoord2bvOES(_ coords:UnsafePointer<GLbyte>) {glTexCoord2bvOES_P(coords)}
public func glTexCoord2bvOES(coords:UnsafePointer<GLbyte>) {glTexCoord2bvOES_P(coords)}
var glTexCoord2bvOES_P:@convention(c)(UnsafePointer<GLbyte>) -> Void = glTexCoord2bvOES_L
public func glTexCoord2d(_ s:GLdouble, _ t:GLdouble) {glTexCoord2d_P(s, t)}
public func glTexCoord2d(s:GLdouble, t:GLdouble) {glTexCoord2d_P(s, t)}
var glTexCoord2d_P:@convention(c)(GLdouble, GLdouble) -> Void = glTexCoord2d_L
public func glTexCoord2dv(_ v:UnsafePointer<GLdouble>) {glTexCoord2dv_P(v)}
public func glTexCoord2dv(v:UnsafePointer<GLdouble>) {glTexCoord2dv_P(v)}
var glTexCoord2dv_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glTexCoord2dv_L
public func glTexCoord2f(_ s:GLfloat, _ t:GLfloat) {glTexCoord2f_P(s, t)}
public func glTexCoord2f(s:GLfloat, t:GLfloat) {glTexCoord2f_P(s, t)}
var glTexCoord2f_P:@convention(c)(GLfloat, GLfloat) -> Void = glTexCoord2f_L
public func glTexCoord2fColor3fVertex3fSUN(_ s:GLfloat, _ t:GLfloat, _ r:GLfloat, _ g:GLfloat, _ b:GLfloat, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat) {glTexCoord2fColor3fVertex3fSUN_P(s, t, r, g, b, x, y, z)}
public func glTexCoord2fColor3fVertex3fSUN(s:GLfloat, t:GLfloat, r:GLfloat, g:GLfloat, b:GLfloat, x:GLfloat, y:GLfloat, z:GLfloat) {glTexCoord2fColor3fVertex3fSUN_P(s, t, r, g, b, x, y, z)}
var glTexCoord2fColor3fVertex3fSUN_P:@convention(c)(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glTexCoord2fColor3fVertex3fSUN_L
public func glTexCoord2fColor3fVertex3fvSUN(_ tc:UnsafePointer<GLfloat>, _ c:UnsafePointer<GLfloat>, _ v:UnsafePointer<GLfloat>) {glTexCoord2fColor3fVertex3fvSUN_P(tc, c, v)}
public func glTexCoord2fColor3fVertex3fvSUN(tc:UnsafePointer<GLfloat>, c:UnsafePointer<GLfloat>, v:UnsafePointer<GLfloat>) {glTexCoord2fColor3fVertex3fvSUN_P(tc, c, v)}
var glTexCoord2fColor3fVertex3fvSUN_P:@convention(c)(UnsafePointer<GLfloat>, UnsafePointer<GLfloat>, UnsafePointer<GLfloat>) -> Void = glTexCoord2fColor3fVertex3fvSUN_L
public func glTexCoord2fColor4fNormal3fVertex3fSUN(_ s:GLfloat, _ t:GLfloat, _ r:GLfloat, _ g:GLfloat, _ b:GLfloat, _ a:GLfloat, _ nx:GLfloat, _ ny:GLfloat, _ nz:GLfloat, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat) {glTexCoord2fColor4fNormal3fVertex3fSUN_P(s, t, r, g, b, a, nx, ny, nz, x, y, z)}
public func glTexCoord2fColor4fNormal3fVertex3fSUN(s:GLfloat, t:GLfloat, r:GLfloat, g:GLfloat, b:GLfloat, a:GLfloat, nx:GLfloat, ny:GLfloat, nz:GLfloat, x:GLfloat, y:GLfloat, z:GLfloat) {glTexCoord2fColor4fNormal3fVertex3fSUN_P(s, t, r, g, b, a, nx, ny, nz, x, y, z)}
var glTexCoord2fColor4fNormal3fVertex3fSUN_P:@convention(c)(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glTexCoord2fColor4fNormal3fVertex3fSUN_L
public func glTexCoord2fColor4fNormal3fVertex3fvSUN(_ tc:UnsafePointer<GLfloat>, _ c:UnsafePointer<GLfloat>, _ n:UnsafePointer<GLfloat>, _ v:UnsafePointer<GLfloat>) {glTexCoord2fColor4fNormal3fVertex3fvSUN_P(tc, c, n, v)}
public func glTexCoord2fColor4fNormal3fVertex3fvSUN(tc:UnsafePointer<GLfloat>, c:UnsafePointer<GLfloat>, n:UnsafePointer<GLfloat>, v:UnsafePointer<GLfloat>) {glTexCoord2fColor4fNormal3fVertex3fvSUN_P(tc, c, n, v)}
var glTexCoord2fColor4fNormal3fVertex3fvSUN_P:@convention(c)(UnsafePointer<GLfloat>, UnsafePointer<GLfloat>, UnsafePointer<GLfloat>, UnsafePointer<GLfloat>) -> Void = glTexCoord2fColor4fNormal3fVertex3fvSUN_L
public func glTexCoord2fColor4ubVertex3fSUN(_ s:GLfloat, _ t:GLfloat, _ r:GLubyte, _ g:GLubyte, _ b:GLubyte, _ a:GLubyte, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat) {glTexCoord2fColor4ubVertex3fSUN_P(s, t, r, g, b, a, x, y, z)}
public func glTexCoord2fColor4ubVertex3fSUN(s:GLfloat, t:GLfloat, r:GLubyte, g:GLubyte, b:GLubyte, a:GLubyte, x:GLfloat, y:GLfloat, z:GLfloat) {glTexCoord2fColor4ubVertex3fSUN_P(s, t, r, g, b, a, x, y, z)}
var glTexCoord2fColor4ubVertex3fSUN_P:@convention(c)(GLfloat, GLfloat, GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat) -> Void = glTexCoord2fColor4ubVertex3fSUN_L
public func glTexCoord2fColor4ubVertex3fvSUN(_ tc:UnsafePointer<GLfloat>, _ c:UnsafePointer<GLubyte>, _ v:UnsafePointer<GLfloat>) {glTexCoord2fColor4ubVertex3fvSUN_P(tc, c, v)}
public func glTexCoord2fColor4ubVertex3fvSUN(tc:UnsafePointer<GLfloat>, c:UnsafePointer<GLubyte>, v:UnsafePointer<GLfloat>) {glTexCoord2fColor4ubVertex3fvSUN_P(tc, c, v)}
var glTexCoord2fColor4ubVertex3fvSUN_P:@convention(c)(UnsafePointer<GLfloat>, UnsafePointer<GLubyte>, UnsafePointer<GLfloat>) -> Void = glTexCoord2fColor4ubVertex3fvSUN_L
public func glTexCoord2fNormal3fVertex3fSUN(_ s:GLfloat, _ t:GLfloat, _ nx:GLfloat, _ ny:GLfloat, _ nz:GLfloat, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat) {glTexCoord2fNormal3fVertex3fSUN_P(s, t, nx, ny, nz, x, y, z)}
public func glTexCoord2fNormal3fVertex3fSUN(s:GLfloat, t:GLfloat, nx:GLfloat, ny:GLfloat, nz:GLfloat, x:GLfloat, y:GLfloat, z:GLfloat) {glTexCoord2fNormal3fVertex3fSUN_P(s, t, nx, ny, nz, x, y, z)}
var glTexCoord2fNormal3fVertex3fSUN_P:@convention(c)(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glTexCoord2fNormal3fVertex3fSUN_L
public func glTexCoord2fNormal3fVertex3fvSUN(_ tc:UnsafePointer<GLfloat>, _ n:UnsafePointer<GLfloat>, _ v:UnsafePointer<GLfloat>) {glTexCoord2fNormal3fVertex3fvSUN_P(tc, n, v)}
public func glTexCoord2fNormal3fVertex3fvSUN(tc:UnsafePointer<GLfloat>, n:UnsafePointer<GLfloat>, v:UnsafePointer<GLfloat>) {glTexCoord2fNormal3fVertex3fvSUN_P(tc, n, v)}
var glTexCoord2fNormal3fVertex3fvSUN_P:@convention(c)(UnsafePointer<GLfloat>, UnsafePointer<GLfloat>, UnsafePointer<GLfloat>) -> Void = glTexCoord2fNormal3fVertex3fvSUN_L
public func glTexCoord2fVertex3fSUN(_ s:GLfloat, _ t:GLfloat, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat) {glTexCoord2fVertex3fSUN_P(s, t, x, y, z)}
public func glTexCoord2fVertex3fSUN(s:GLfloat, t:GLfloat, x:GLfloat, y:GLfloat, z:GLfloat) {glTexCoord2fVertex3fSUN_P(s, t, x, y, z)}
var glTexCoord2fVertex3fSUN_P:@convention(c)(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glTexCoord2fVertex3fSUN_L
public func glTexCoord2fVertex3fvSUN(_ tc:UnsafePointer<GLfloat>, _ v:UnsafePointer<GLfloat>) {glTexCoord2fVertex3fvSUN_P(tc, v)}
public func glTexCoord2fVertex3fvSUN(tc:UnsafePointer<GLfloat>, v:UnsafePointer<GLfloat>) {glTexCoord2fVertex3fvSUN_P(tc, v)}
var glTexCoord2fVertex3fvSUN_P:@convention(c)(UnsafePointer<GLfloat>, UnsafePointer<GLfloat>) -> Void = glTexCoord2fVertex3fvSUN_L
public func glTexCoord2fv(_ v:UnsafePointer<GLfloat>) {glTexCoord2fv_P(v)}
public func glTexCoord2fv(v:UnsafePointer<GLfloat>) {glTexCoord2fv_P(v)}
var glTexCoord2fv_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glTexCoord2fv_L
public func glTexCoord2hNV(_ s:GLhalfNV, _ t:GLhalfNV) {glTexCoord2hNV_P(s, t)}
public func glTexCoord2hNV(s:GLhalfNV, t:GLhalfNV) {glTexCoord2hNV_P(s, t)}
var glTexCoord2hNV_P:@convention(c)(GLhalfNV, GLhalfNV) -> Void = glTexCoord2hNV_L
public func glTexCoord2hvNV(_ v:UnsafePointer<GLhalfNV>) {glTexCoord2hvNV_P(v)}
public func glTexCoord2hvNV(v:UnsafePointer<GLhalfNV>) {glTexCoord2hvNV_P(v)}
var glTexCoord2hvNV_P:@convention(c)(UnsafePointer<GLhalfNV>) -> Void = glTexCoord2hvNV_L
public func glTexCoord2i(_ s:GLint, _ t:GLint) {glTexCoord2i_P(s, t)}
public func glTexCoord2i(s:GLint, t:GLint) {glTexCoord2i_P(s, t)}
var glTexCoord2i_P:@convention(c)(GLint, GLint) -> Void = glTexCoord2i_L
public func glTexCoord2iv(_ v:UnsafePointer<GLint>) {glTexCoord2iv_P(v)}
public func glTexCoord2iv(v:UnsafePointer<GLint>) {glTexCoord2iv_P(v)}
var glTexCoord2iv_P:@convention(c)(UnsafePointer<GLint>) -> Void = glTexCoord2iv_L
public func glTexCoord2s(_ s:GLshort, _ t:GLshort) {glTexCoord2s_P(s, t)}
public func glTexCoord2s(s:GLshort, t:GLshort) {glTexCoord2s_P(s, t)}
var glTexCoord2s_P:@convention(c)(GLshort, GLshort) -> Void = glTexCoord2s_L
public func glTexCoord2sv(_ v:UnsafePointer<GLshort>) {glTexCoord2sv_P(v)}
public func glTexCoord2sv(v:UnsafePointer<GLshort>) {glTexCoord2sv_P(v)}
var glTexCoord2sv_P:@convention(c)(UnsafePointer<GLshort>) -> Void = glTexCoord2sv_L
public func glTexCoord2xOES(_ s:GLfixed, _ t:GLfixed) {glTexCoord2xOES_P(s, t)}
public func glTexCoord2xOES(s:GLfixed, t:GLfixed) {glTexCoord2xOES_P(s, t)}
var glTexCoord2xOES_P:@convention(c)(GLfixed, GLfixed) -> Void = glTexCoord2xOES_L
public func glTexCoord2xvOES(_ coords:UnsafePointer<GLfixed>) {glTexCoord2xvOES_P(coords)}
public func glTexCoord2xvOES(coords:UnsafePointer<GLfixed>) {glTexCoord2xvOES_P(coords)}
var glTexCoord2xvOES_P:@convention(c)(UnsafePointer<GLfixed>) -> Void = glTexCoord2xvOES_L
public func glTexCoord3bOES(_ s:GLbyte, _ t:GLbyte, _ r:GLbyte) {glTexCoord3bOES_P(s, t, r)}
public func glTexCoord3bOES(s:GLbyte, t:GLbyte, r:GLbyte) {glTexCoord3bOES_P(s, t, r)}
var glTexCoord3bOES_P:@convention(c)(GLbyte, GLbyte, GLbyte) -> Void = glTexCoord3bOES_L
public func glTexCoord3bvOES(_ coords:UnsafePointer<GLbyte>) {glTexCoord3bvOES_P(coords)}
public func glTexCoord3bvOES(coords:UnsafePointer<GLbyte>) {glTexCoord3bvOES_P(coords)}
var glTexCoord3bvOES_P:@convention(c)(UnsafePointer<GLbyte>) -> Void = glTexCoord3bvOES_L
public func glTexCoord3d(_ s:GLdouble, _ t:GLdouble, _ r:GLdouble) {glTexCoord3d_P(s, t, r)}
public func glTexCoord3d(s:GLdouble, t:GLdouble, r:GLdouble) {glTexCoord3d_P(s, t, r)}
var glTexCoord3d_P:@convention(c)(GLdouble, GLdouble, GLdouble) -> Void = glTexCoord3d_L
public func glTexCoord3dv(_ v:UnsafePointer<GLdouble>) {glTexCoord3dv_P(v)}
public func glTexCoord3dv(v:UnsafePointer<GLdouble>) {glTexCoord3dv_P(v)}
var glTexCoord3dv_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glTexCoord3dv_L
public func glTexCoord3f(_ s:GLfloat, _ t:GLfloat, _ r:GLfloat) {glTexCoord3f_P(s, t, r)}
public func glTexCoord3f(s:GLfloat, t:GLfloat, r:GLfloat) {glTexCoord3f_P(s, t, r)}
var glTexCoord3f_P:@convention(c)(GLfloat, GLfloat, GLfloat) -> Void = glTexCoord3f_L
public func glTexCoord3fv(_ v:UnsafePointer<GLfloat>) {glTexCoord3fv_P(v)}
public func glTexCoord3fv(v:UnsafePointer<GLfloat>) {glTexCoord3fv_P(v)}
var glTexCoord3fv_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glTexCoord3fv_L
public func glTexCoord3hNV(_ s:GLhalfNV, _ t:GLhalfNV, _ r:GLhalfNV) {glTexCoord3hNV_P(s, t, r)}
public func glTexCoord3hNV(s:GLhalfNV, t:GLhalfNV, r:GLhalfNV) {glTexCoord3hNV_P(s, t, r)}
var glTexCoord3hNV_P:@convention(c)(GLhalfNV, GLhalfNV, GLhalfNV) -> Void = glTexCoord3hNV_L
public func glTexCoord3hvNV(_ v:UnsafePointer<GLhalfNV>) {glTexCoord3hvNV_P(v)}
public func glTexCoord3hvNV(v:UnsafePointer<GLhalfNV>) {glTexCoord3hvNV_P(v)}
var glTexCoord3hvNV_P:@convention(c)(UnsafePointer<GLhalfNV>) -> Void = glTexCoord3hvNV_L
public func glTexCoord3i(_ s:GLint, _ t:GLint, _ r:GLint) {glTexCoord3i_P(s, t, r)}
public func glTexCoord3i(s:GLint, t:GLint, r:GLint) {glTexCoord3i_P(s, t, r)}
var glTexCoord3i_P:@convention(c)(GLint, GLint, GLint) -> Void = glTexCoord3i_L
public func glTexCoord3iv(_ v:UnsafePointer<GLint>) {glTexCoord3iv_P(v)}
public func glTexCoord3iv(v:UnsafePointer<GLint>) {glTexCoord3iv_P(v)}
var glTexCoord3iv_P:@convention(c)(UnsafePointer<GLint>) -> Void = glTexCoord3iv_L
public func glTexCoord3s(_ s:GLshort, _ t:GLshort, _ r:GLshort) {glTexCoord3s_P(s, t, r)}
public func glTexCoord3s(s:GLshort, t:GLshort, r:GLshort) {glTexCoord3s_P(s, t, r)}
var glTexCoord3s_P:@convention(c)(GLshort, GLshort, GLshort) -> Void = glTexCoord3s_L
public func glTexCoord3sv(_ v:UnsafePointer<GLshort>) {glTexCoord3sv_P(v)}
public func glTexCoord3sv(v:UnsafePointer<GLshort>) {glTexCoord3sv_P(v)}
var glTexCoord3sv_P:@convention(c)(UnsafePointer<GLshort>) -> Void = glTexCoord3sv_L
public func glTexCoord3xOES(_ s:GLfixed, _ t:GLfixed, _ r:GLfixed) {glTexCoord3xOES_P(s, t, r)}
public func glTexCoord3xOES(s:GLfixed, t:GLfixed, r:GLfixed) {glTexCoord3xOES_P(s, t, r)}
var glTexCoord3xOES_P:@convention(c)(GLfixed, GLfixed, GLfixed) -> Void = glTexCoord3xOES_L
public func glTexCoord3xvOES(_ coords:UnsafePointer<GLfixed>) {glTexCoord3xvOES_P(coords)}
public func glTexCoord3xvOES(coords:UnsafePointer<GLfixed>) {glTexCoord3xvOES_P(coords)}
var glTexCoord3xvOES_P:@convention(c)(UnsafePointer<GLfixed>) -> Void = glTexCoord3xvOES_L
public func glTexCoord4bOES(_ s:GLbyte, _ t:GLbyte, _ r:GLbyte, _ q:GLbyte) {glTexCoord4bOES_P(s, t, r, q)}
public func glTexCoord4bOES(s:GLbyte, t:GLbyte, r:GLbyte, q:GLbyte) {glTexCoord4bOES_P(s, t, r, q)}
var glTexCoord4bOES_P:@convention(c)(GLbyte, GLbyte, GLbyte, GLbyte) -> Void = glTexCoord4bOES_L
public func glTexCoord4bvOES(_ coords:UnsafePointer<GLbyte>) {glTexCoord4bvOES_P(coords)}
public func glTexCoord4bvOES(coords:UnsafePointer<GLbyte>) {glTexCoord4bvOES_P(coords)}
var glTexCoord4bvOES_P:@convention(c)(UnsafePointer<GLbyte>) -> Void = glTexCoord4bvOES_L
public func glTexCoord4d(_ s:GLdouble, _ t:GLdouble, _ r:GLdouble, _ q:GLdouble) {glTexCoord4d_P(s, t, r, q)}
public func glTexCoord4d(s:GLdouble, t:GLdouble, r:GLdouble, q:GLdouble) {glTexCoord4d_P(s, t, r, q)}
var glTexCoord4d_P:@convention(c)(GLdouble, GLdouble, GLdouble, GLdouble) -> Void = glTexCoord4d_L
public func glTexCoord4dv(_ v:UnsafePointer<GLdouble>) {glTexCoord4dv_P(v)}
public func glTexCoord4dv(v:UnsafePointer<GLdouble>) {glTexCoord4dv_P(v)}
var glTexCoord4dv_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glTexCoord4dv_L
public func glTexCoord4f(_ s:GLfloat, _ t:GLfloat, _ r:GLfloat, _ q:GLfloat) {glTexCoord4f_P(s, t, r, q)}
public func glTexCoord4f(s:GLfloat, t:GLfloat, r:GLfloat, q:GLfloat) {glTexCoord4f_P(s, t, r, q)}
var glTexCoord4f_P:@convention(c)(GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glTexCoord4f_L
public func glTexCoord4fColor4fNormal3fVertex4fSUN(_ s:GLfloat, _ t:GLfloat, _ p:GLfloat, _ q:GLfloat, _ r:GLfloat, _ g:GLfloat, _ b:GLfloat, _ a:GLfloat, _ nx:GLfloat, _ ny:GLfloat, _ nz:GLfloat, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat, _ w:GLfloat) {glTexCoord4fColor4fNormal3fVertex4fSUN_P(s, t, p, q, r, g, b, a, nx, ny, nz, x, y, z, w)}
public func glTexCoord4fColor4fNormal3fVertex4fSUN(s:GLfloat, t:GLfloat, p:GLfloat, q:GLfloat, r:GLfloat, g:GLfloat, b:GLfloat, a:GLfloat, nx:GLfloat, ny:GLfloat, nz:GLfloat, x:GLfloat, y:GLfloat, z:GLfloat, w:GLfloat) {glTexCoord4fColor4fNormal3fVertex4fSUN_P(s, t, p, q, r, g, b, a, nx, ny, nz, x, y, z, w)}
var glTexCoord4fColor4fNormal3fVertex4fSUN_P:@convention(c)(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glTexCoord4fColor4fNormal3fVertex4fSUN_L
public func glTexCoord4fColor4fNormal3fVertex4fvSUN(_ tc:UnsafePointer<GLfloat>, _ c:UnsafePointer<GLfloat>, _ n:UnsafePointer<GLfloat>, _ v:UnsafePointer<GLfloat>) {glTexCoord4fColor4fNormal3fVertex4fvSUN_P(tc, c, n, v)}
public func glTexCoord4fColor4fNormal3fVertex4fvSUN(tc:UnsafePointer<GLfloat>, c:UnsafePointer<GLfloat>, n:UnsafePointer<GLfloat>, v:UnsafePointer<GLfloat>) {glTexCoord4fColor4fNormal3fVertex4fvSUN_P(tc, c, n, v)}
var glTexCoord4fColor4fNormal3fVertex4fvSUN_P:@convention(c)(UnsafePointer<GLfloat>, UnsafePointer<GLfloat>, UnsafePointer<GLfloat>, UnsafePointer<GLfloat>) -> Void = glTexCoord4fColor4fNormal3fVertex4fvSUN_L
public func glTexCoord4fVertex4fSUN(_ s:GLfloat, _ t:GLfloat, _ p:GLfloat, _ q:GLfloat, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat, _ w:GLfloat) {glTexCoord4fVertex4fSUN_P(s, t, p, q, x, y, z, w)}
public func glTexCoord4fVertex4fSUN(s:GLfloat, t:GLfloat, p:GLfloat, q:GLfloat, x:GLfloat, y:GLfloat, z:GLfloat, w:GLfloat) {glTexCoord4fVertex4fSUN_P(s, t, p, q, x, y, z, w)}
var glTexCoord4fVertex4fSUN_P:@convention(c)(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glTexCoord4fVertex4fSUN_L
public func glTexCoord4fVertex4fvSUN(_ tc:UnsafePointer<GLfloat>, _ v:UnsafePointer<GLfloat>) {glTexCoord4fVertex4fvSUN_P(tc, v)}
public func glTexCoord4fVertex4fvSUN(tc:UnsafePointer<GLfloat>, v:UnsafePointer<GLfloat>) {glTexCoord4fVertex4fvSUN_P(tc, v)}
var glTexCoord4fVertex4fvSUN_P:@convention(c)(UnsafePointer<GLfloat>, UnsafePointer<GLfloat>) -> Void = glTexCoord4fVertex4fvSUN_L
public func glTexCoord4fv(_ v:UnsafePointer<GLfloat>) {glTexCoord4fv_P(v)}
public func glTexCoord4fv(v:UnsafePointer<GLfloat>) {glTexCoord4fv_P(v)}
var glTexCoord4fv_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glTexCoord4fv_L
public func glTexCoord4hNV(_ s:GLhalfNV, _ t:GLhalfNV, _ r:GLhalfNV, _ q:GLhalfNV) {glTexCoord4hNV_P(s, t, r, q)}
public func glTexCoord4hNV(s:GLhalfNV, t:GLhalfNV, r:GLhalfNV, q:GLhalfNV) {glTexCoord4hNV_P(s, t, r, q)}
var glTexCoord4hNV_P:@convention(c)(GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) -> Void = glTexCoord4hNV_L
public func glTexCoord4hvNV(_ v:UnsafePointer<GLhalfNV>) {glTexCoord4hvNV_P(v)}
public func glTexCoord4hvNV(v:UnsafePointer<GLhalfNV>) {glTexCoord4hvNV_P(v)}
var glTexCoord4hvNV_P:@convention(c)(UnsafePointer<GLhalfNV>) -> Void = glTexCoord4hvNV_L
public func glTexCoord4i(_ s:GLint, _ t:GLint, _ r:GLint, _ q:GLint) {glTexCoord4i_P(s, t, r, q)}
public func glTexCoord4i(s:GLint, t:GLint, r:GLint, q:GLint) {glTexCoord4i_P(s, t, r, q)}
var glTexCoord4i_P:@convention(c)(GLint, GLint, GLint, GLint) -> Void = glTexCoord4i_L
public func glTexCoord4iv(_ v:UnsafePointer<GLint>) {glTexCoord4iv_P(v)}
public func glTexCoord4iv(v:UnsafePointer<GLint>) {glTexCoord4iv_P(v)}
var glTexCoord4iv_P:@convention(c)(UnsafePointer<GLint>) -> Void = glTexCoord4iv_L
public func glTexCoord4s(_ s:GLshort, _ t:GLshort, _ r:GLshort, _ q:GLshort) {glTexCoord4s_P(s, t, r, q)}
public func glTexCoord4s(s:GLshort, t:GLshort, r:GLshort, q:GLshort) {glTexCoord4s_P(s, t, r, q)}
var glTexCoord4s_P:@convention(c)(GLshort, GLshort, GLshort, GLshort) -> Void = glTexCoord4s_L
public func glTexCoord4sv(_ v:UnsafePointer<GLshort>) {glTexCoord4sv_P(v)}
public func glTexCoord4sv(v:UnsafePointer<GLshort>) {glTexCoord4sv_P(v)}
var glTexCoord4sv_P:@convention(c)(UnsafePointer<GLshort>) -> Void = glTexCoord4sv_L
public func glTexCoord4xOES(_ s:GLfixed, _ t:GLfixed, _ r:GLfixed, _ q:GLfixed) {glTexCoord4xOES_P(s, t, r, q)}
public func glTexCoord4xOES(s:GLfixed, t:GLfixed, r:GLfixed, q:GLfixed) {glTexCoord4xOES_P(s, t, r, q)}
var glTexCoord4xOES_P:@convention(c)(GLfixed, GLfixed, GLfixed, GLfixed) -> Void = glTexCoord4xOES_L
public func glTexCoord4xvOES(_ coords:UnsafePointer<GLfixed>) {glTexCoord4xvOES_P(coords)}
public func glTexCoord4xvOES(coords:UnsafePointer<GLfixed>) {glTexCoord4xvOES_P(coords)}
var glTexCoord4xvOES_P:@convention(c)(UnsafePointer<GLfixed>) -> Void = glTexCoord4xvOES_L
public func glTexCoordFormatNV(_ size:GLint, _ type:GLenum, _ stride:GLsizei) {glTexCoordFormatNV_P(size, type, stride)}
public func glTexCoordFormatNV(size:GLint, type:GLenum, stride:GLsizei) {glTexCoordFormatNV_P(size, type, stride)}
var glTexCoordFormatNV_P:@convention(c)(GLint, GLenum, GLsizei) -> Void = glTexCoordFormatNV_L
public func glTexCoordP1ui(_ type:GLenum, _ coords:GLuint) {glTexCoordP1ui_P(type, coords)}
public func glTexCoordP1ui(type:GLenum, coords:GLuint) {glTexCoordP1ui_P(type, coords)}
var glTexCoordP1ui_P:@convention(c)(GLenum, GLuint) -> Void = glTexCoordP1ui_L
public func glTexCoordP1uiv(_ type:GLenum, _ coords:UnsafePointer<GLuint>) {glTexCoordP1uiv_P(type, coords)}
public func glTexCoordP1uiv(type:GLenum, coords:UnsafePointer<GLuint>) {glTexCoordP1uiv_P(type, coords)}
var glTexCoordP1uiv_P:@convention(c)(GLenum, UnsafePointer<GLuint>) -> Void = glTexCoordP1uiv_L
public func glTexCoordP2ui(_ type:GLenum, _ coords:GLuint) {glTexCoordP2ui_P(type, coords)}
public func glTexCoordP2ui(type:GLenum, coords:GLuint) {glTexCoordP2ui_P(type, coords)}
var glTexCoordP2ui_P:@convention(c)(GLenum, GLuint) -> Void = glTexCoordP2ui_L
public func glTexCoordP2uiv(_ type:GLenum, _ coords:UnsafePointer<GLuint>) {glTexCoordP2uiv_P(type, coords)}
public func glTexCoordP2uiv(type:GLenum, coords:UnsafePointer<GLuint>) {glTexCoordP2uiv_P(type, coords)}
var glTexCoordP2uiv_P:@convention(c)(GLenum, UnsafePointer<GLuint>) -> Void = glTexCoordP2uiv_L
public func glTexCoordP3ui(_ type:GLenum, _ coords:GLuint) {glTexCoordP3ui_P(type, coords)}
public func glTexCoordP3ui(type:GLenum, coords:GLuint) {glTexCoordP3ui_P(type, coords)}
var glTexCoordP3ui_P:@convention(c)(GLenum, GLuint) -> Void = glTexCoordP3ui_L
public func glTexCoordP3uiv(_ type:GLenum, _ coords:UnsafePointer<GLuint>) {glTexCoordP3uiv_P(type, coords)}
public func glTexCoordP3uiv(type:GLenum, coords:UnsafePointer<GLuint>) {glTexCoordP3uiv_P(type, coords)}
var glTexCoordP3uiv_P:@convention(c)(GLenum, UnsafePointer<GLuint>) -> Void = glTexCoordP3uiv_L
public func glTexCoordP4ui(_ type:GLenum, _ coords:GLuint) {glTexCoordP4ui_P(type, coords)}
public func glTexCoordP4ui(type:GLenum, coords:GLuint) {glTexCoordP4ui_P(type, coords)}
var glTexCoordP4ui_P:@convention(c)(GLenum, GLuint) -> Void = glTexCoordP4ui_L
public func glTexCoordP4uiv(_ type:GLenum, _ coords:UnsafePointer<GLuint>) {glTexCoordP4uiv_P(type, coords)}
public func glTexCoordP4uiv(type:GLenum, coords:UnsafePointer<GLuint>) {glTexCoordP4uiv_P(type, coords)}
var glTexCoordP4uiv_P:@convention(c)(GLenum, UnsafePointer<GLuint>) -> Void = glTexCoordP4uiv_L
public func glTexCoordPointer(_ size:GLint, _ type:GLenum, _ stride:GLsizei, _ pointer:UnsafeRawPointer) {glTexCoordPointer_P(size, type, stride, pointer)}
public func glTexCoordPointer(size:GLint, type:GLenum, stride:GLsizei, pointer:UnsafeRawPointer) {glTexCoordPointer_P(size, type, stride, pointer)}
var glTexCoordPointer_P:@convention(c)(GLint, GLenum, GLsizei, UnsafeRawPointer) -> Void = glTexCoordPointer_L
public func glTexCoordPointerEXT(_ size:GLint, _ type:GLenum, _ stride:GLsizei, _ count:GLsizei, _ pointer:UnsafeRawPointer) {glTexCoordPointerEXT_P(size, type, stride, count, pointer)}
public func glTexCoordPointerEXT(size:GLint, type:GLenum, stride:GLsizei, count:GLsizei, pointer:UnsafeRawPointer) {glTexCoordPointerEXT_P(size, type, stride, count, pointer)}
var glTexCoordPointerEXT_P:@convention(c)(GLint, GLenum, GLsizei, GLsizei, UnsafeRawPointer) -> Void = glTexCoordPointerEXT_L
public func glTexCoordPointerListIBM(_ size:GLint, _ type:GLenum, _ stride:GLint, _ pointer:UnsafeMutablePointer<UnsafeRawPointer>, _ ptrstride:GLint) {glTexCoordPointerListIBM_P(size, type, stride, pointer, ptrstride)}
public func glTexCoordPointerListIBM(size:GLint, type:GLenum, stride:GLint, pointer:UnsafeMutablePointer<UnsafeRawPointer>, ptrstride:GLint) {glTexCoordPointerListIBM_P(size, type, stride, pointer, ptrstride)}
var glTexCoordPointerListIBM_P:@convention(c)(GLint, GLenum, GLint, UnsafeMutablePointer<UnsafeRawPointer>, GLint) -> Void = glTexCoordPointerListIBM_L
public func glTexCoordPointervINTEL(_ size:GLint, _ type:GLenum, _ pointer:UnsafeMutablePointer<UnsafeRawPointer>) {glTexCoordPointervINTEL_P(size, type, pointer)}
public func glTexCoordPointervINTEL(size:GLint, type:GLenum, pointer:UnsafeMutablePointer<UnsafeRawPointer>) {glTexCoordPointervINTEL_P(size, type, pointer)}
var glTexCoordPointervINTEL_P:@convention(c)(GLint, GLenum, UnsafeMutablePointer<UnsafeRawPointer>) -> Void = glTexCoordPointervINTEL_L
public func glTexEnvf(_ target:GLenum, _ pname:GLenum, _ param:GLfloat) {glTexEnvf_P(target, pname, param)}
public func glTexEnvf(target:GLenum, pname:GLenum, param:GLfloat) {glTexEnvf_P(target, pname, param)}
var glTexEnvf_P:@convention(c)(GLenum, GLenum, GLfloat) -> Void = glTexEnvf_L
public func glTexEnvfv(_ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLfloat>) {glTexEnvfv_P(target, pname, params)}
public func glTexEnvfv(target:GLenum, pname:GLenum, params:UnsafePointer<GLfloat>) {glTexEnvfv_P(target, pname, params)}
var glTexEnvfv_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLfloat>) -> Void = glTexEnvfv_L
public func glTexEnvi(_ target:GLenum, _ pname:GLenum, _ param:GLint) {glTexEnvi_P(target, pname, param)}
public func glTexEnvi(target:GLenum, pname:GLenum, param:GLint) {glTexEnvi_P(target, pname, param)}
var glTexEnvi_P:@convention(c)(GLenum, GLenum, GLint) -> Void = glTexEnvi_L
public func glTexEnviv(_ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLint>) {glTexEnviv_P(target, pname, params)}
public func glTexEnviv(target:GLenum, pname:GLenum, params:UnsafePointer<GLint>) {glTexEnviv_P(target, pname, params)}
var glTexEnviv_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLint>) -> Void = glTexEnviv_L
public func glTexEnvx(_ target:GLenum, _ pname:GLenum, _ param:GLfixed) {glTexEnvx_P(target, pname, param)}
public func glTexEnvx(target:GLenum, pname:GLenum, param:GLfixed) {glTexEnvx_P(target, pname, param)}
var glTexEnvx_P:@convention(c)(GLenum, GLenum, GLfixed) -> Void = glTexEnvx_L
public func glTexEnvxOES(_ target:GLenum, _ pname:GLenum, _ param:GLfixed) {glTexEnvxOES_P(target, pname, param)}
public func glTexEnvxOES(target:GLenum, pname:GLenum, param:GLfixed) {glTexEnvxOES_P(target, pname, param)}
var glTexEnvxOES_P:@convention(c)(GLenum, GLenum, GLfixed) -> Void = glTexEnvxOES_L
public func glTexEnvxv(_ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLfixed>) {glTexEnvxv_P(target, pname, params)}
public func glTexEnvxv(target:GLenum, pname:GLenum, params:UnsafePointer<GLfixed>) {glTexEnvxv_P(target, pname, params)}
var glTexEnvxv_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLfixed>) -> Void = glTexEnvxv_L
public func glTexEnvxvOES(_ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLfixed>) {glTexEnvxvOES_P(target, pname, params)}
public func glTexEnvxvOES(target:GLenum, pname:GLenum, params:UnsafePointer<GLfixed>) {glTexEnvxvOES_P(target, pname, params)}
var glTexEnvxvOES_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLfixed>) -> Void = glTexEnvxvOES_L
public func glTexFilterFuncSGIS(_ target:GLenum, _ filter:GLenum, _ n:GLsizei, _ weights:UnsafePointer<GLfloat>) {glTexFilterFuncSGIS_P(target, filter, n, weights)}
public func glTexFilterFuncSGIS(target:GLenum, filter:GLenum, n:GLsizei, weights:UnsafePointer<GLfloat>) {glTexFilterFuncSGIS_P(target, filter, n, weights)}
var glTexFilterFuncSGIS_P:@convention(c)(GLenum, GLenum, GLsizei, UnsafePointer<GLfloat>) -> Void = glTexFilterFuncSGIS_L
public func glTexGend(_ coord:GLenum, _ pname:GLenum, _ param:GLdouble) {glTexGend_P(coord, pname, param)}
public func glTexGend(coord:GLenum, pname:GLenum, param:GLdouble) {glTexGend_P(coord, pname, param)}
var glTexGend_P:@convention(c)(GLenum, GLenum, GLdouble) -> Void = glTexGend_L
public func glTexGendv(_ coord:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLdouble>) {glTexGendv_P(coord, pname, params)}
public func glTexGendv(coord:GLenum, pname:GLenum, params:UnsafePointer<GLdouble>) {glTexGendv_P(coord, pname, params)}
var glTexGendv_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLdouble>) -> Void = glTexGendv_L
public func glTexGenf(_ coord:GLenum, _ pname:GLenum, _ param:GLfloat) {glTexGenf_P(coord, pname, param)}
public func glTexGenf(coord:GLenum, pname:GLenum, param:GLfloat) {glTexGenf_P(coord, pname, param)}
var glTexGenf_P:@convention(c)(GLenum, GLenum, GLfloat) -> Void = glTexGenf_L
public func glTexGenfOES(_ coord:GLenum, _ pname:GLenum, _ param:GLfloat) {glTexGenfOES_P(coord, pname, param)}
public func glTexGenfOES(coord:GLenum, pname:GLenum, param:GLfloat) {glTexGenfOES_P(coord, pname, param)}
var glTexGenfOES_P:@convention(c)(GLenum, GLenum, GLfloat) -> Void = glTexGenfOES_L
public func glTexGenfv(_ coord:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLfloat>) {glTexGenfv_P(coord, pname, params)}
public func glTexGenfv(coord:GLenum, pname:GLenum, params:UnsafePointer<GLfloat>) {glTexGenfv_P(coord, pname, params)}
var glTexGenfv_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLfloat>) -> Void = glTexGenfv_L
public func glTexGenfvOES(_ coord:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLfloat>) {glTexGenfvOES_P(coord, pname, params)}
public func glTexGenfvOES(coord:GLenum, pname:GLenum, params:UnsafePointer<GLfloat>) {glTexGenfvOES_P(coord, pname, params)}
var glTexGenfvOES_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLfloat>) -> Void = glTexGenfvOES_L
public func glTexGeni(_ coord:GLenum, _ pname:GLenum, _ param:GLint) {glTexGeni_P(coord, pname, param)}
public func glTexGeni(coord:GLenum, pname:GLenum, param:GLint) {glTexGeni_P(coord, pname, param)}
var glTexGeni_P:@convention(c)(GLenum, GLenum, GLint) -> Void = glTexGeni_L
public func glTexGeniOES(_ coord:GLenum, _ pname:GLenum, _ param:GLint) {glTexGeniOES_P(coord, pname, param)}
public func glTexGeniOES(coord:GLenum, pname:GLenum, param:GLint) {glTexGeniOES_P(coord, pname, param)}
var glTexGeniOES_P:@convention(c)(GLenum, GLenum, GLint) -> Void = glTexGeniOES_L
public func glTexGeniv(_ coord:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLint>) {glTexGeniv_P(coord, pname, params)}
public func glTexGeniv(coord:GLenum, pname:GLenum, params:UnsafePointer<GLint>) {glTexGeniv_P(coord, pname, params)}
var glTexGeniv_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLint>) -> Void = glTexGeniv_L
public func glTexGenivOES(_ coord:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLint>) {glTexGenivOES_P(coord, pname, params)}
public func glTexGenivOES(coord:GLenum, pname:GLenum, params:UnsafePointer<GLint>) {glTexGenivOES_P(coord, pname, params)}
var glTexGenivOES_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLint>) -> Void = glTexGenivOES_L
public func glTexGenxOES(_ coord:GLenum, _ pname:GLenum, _ param:GLfixed) {glTexGenxOES_P(coord, pname, param)}
public func glTexGenxOES(coord:GLenum, pname:GLenum, param:GLfixed) {glTexGenxOES_P(coord, pname, param)}
var glTexGenxOES_P:@convention(c)(GLenum, GLenum, GLfixed) -> Void = glTexGenxOES_L
public func glTexGenxvOES(_ coord:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLfixed>) {glTexGenxvOES_P(coord, pname, params)}
public func glTexGenxvOES(coord:GLenum, pname:GLenum, params:UnsafePointer<GLfixed>) {glTexGenxvOES_P(coord, pname, params)}
var glTexGenxvOES_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLfixed>) -> Void = glTexGenxvOES_L
public func glTexImage1D(_ target:GLenum, _ level:GLint, _ internalformat:GLint, _ width:GLsizei, _ border:GLint, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeRawPointer) {glTexImage1D_P(target, level, internalformat, width, border, format, type, pixels)}
public func glTexImage1D(target:GLenum, level:GLint, internalformat:GLint, width:GLsizei, border:GLint, format:GLenum, type:GLenum, pixels:UnsafeRawPointer) {glTexImage1D_P(target, level, internalformat, width, border, format, type, pixels)}
var glTexImage1D_P:@convention(c)(GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, UnsafeRawPointer) -> Void = glTexImage1D_L
public func glTexImage2D(_ target:GLenum, _ level:GLint, _ internalformat:GLint, _ width:GLsizei, _ height:GLsizei, _ border:GLint, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeRawPointer) {glTexImage2D_P(target, level, internalformat, width, height, border, format, type, pixels)}
public func glTexImage2D(target:GLenum, level:GLint, internalformat:GLint, width:GLsizei, height:GLsizei, border:GLint, format:GLenum, type:GLenum, pixels:UnsafeRawPointer) {glTexImage2D_P(target, level, internalformat, width, height, border, format, type, pixels)}
var glTexImage2D_P:@convention(c)(GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, UnsafeRawPointer) -> Void = glTexImage2D_L
public func glTexImage2DMultisample(_ target:GLenum, _ samples:GLsizei, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei, _ fixedsamplelocations:GLboolean) {glTexImage2DMultisample_P(target, samples, internalformat, width, height, fixedsamplelocations)}
public func glTexImage2DMultisample(target:GLenum, samples:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei, fixedsamplelocations:GLboolean) {glTexImage2DMultisample_P(target, samples, internalformat, width, height, fixedsamplelocations)}
var glTexImage2DMultisample_P:@convention(c)(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean) -> Void = glTexImage2DMultisample_L
public func glTexImage2DMultisampleCoverageNV(_ target:GLenum, _ coverageSamples:GLsizei, _ colorSamples:GLsizei, _ internalFormat:GLint, _ width:GLsizei, _ height:GLsizei, _ fixedSampleLocations:GLboolean) {glTexImage2DMultisampleCoverageNV_P(target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations)}
public func glTexImage2DMultisampleCoverageNV(target:GLenum, coverageSamples:GLsizei, colorSamples:GLsizei, internalFormat:GLint, width:GLsizei, height:GLsizei, fixedSampleLocations:GLboolean) {glTexImage2DMultisampleCoverageNV_P(target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations)}
var glTexImage2DMultisampleCoverageNV_P:@convention(c)(GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLboolean) -> Void = glTexImage2DMultisampleCoverageNV_L
public func glTexImage3D(_ target:GLenum, _ level:GLint, _ internalformat:GLint, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ border:GLint, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeRawPointer) {glTexImage3D_P(target, level, internalformat, width, height, depth, border, format, type, pixels)}
public func glTexImage3D(target:GLenum, level:GLint, internalformat:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, border:GLint, format:GLenum, type:GLenum, pixels:UnsafeRawPointer) {glTexImage3D_P(target, level, internalformat, width, height, depth, border, format, type, pixels)}
var glTexImage3D_P:@convention(c)(GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, UnsafeRawPointer) -> Void = glTexImage3D_L
public func glTexImage3DEXT(_ target:GLenum, _ level:GLint, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ border:GLint, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeRawPointer) {glTexImage3DEXT_P(target, level, internalformat, width, height, depth, border, format, type, pixels)}
public func glTexImage3DEXT(target:GLenum, level:GLint, internalformat:GLenum, width:GLsizei, height:GLsizei, depth:GLsizei, border:GLint, format:GLenum, type:GLenum, pixels:UnsafeRawPointer) {glTexImage3DEXT_P(target, level, internalformat, width, height, depth, border, format, type, pixels)}
var glTexImage3DEXT_P:@convention(c)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, UnsafeRawPointer) -> Void = glTexImage3DEXT_L
public func glTexImage3DMultisample(_ target:GLenum, _ samples:GLsizei, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ fixedsamplelocations:GLboolean) {glTexImage3DMultisample_P(target, samples, internalformat, width, height, depth, fixedsamplelocations)}
public func glTexImage3DMultisample(target:GLenum, samples:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei, depth:GLsizei, fixedsamplelocations:GLboolean) {glTexImage3DMultisample_P(target, samples, internalformat, width, height, depth, fixedsamplelocations)}
var glTexImage3DMultisample_P:@convention(c)(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean) -> Void = glTexImage3DMultisample_L
public func glTexImage3DMultisampleCoverageNV(_ target:GLenum, _ coverageSamples:GLsizei, _ colorSamples:GLsizei, _ internalFormat:GLint, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ fixedSampleLocations:GLboolean) {glTexImage3DMultisampleCoverageNV_P(target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations)}
public func glTexImage3DMultisampleCoverageNV(target:GLenum, coverageSamples:GLsizei, colorSamples:GLsizei, internalFormat:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, fixedSampleLocations:GLboolean) {glTexImage3DMultisampleCoverageNV_P(target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations)}
var glTexImage3DMultisampleCoverageNV_P:@convention(c)(GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean) -> Void = glTexImage3DMultisampleCoverageNV_L
public func glTexImage3DOES(_ target:GLenum, _ level:GLint, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ border:GLint, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeRawPointer) {glTexImage3DOES_P(target, level, internalformat, width, height, depth, border, format, type, pixels)}
public func glTexImage3DOES(target:GLenum, level:GLint, internalformat:GLenum, width:GLsizei, height:GLsizei, depth:GLsizei, border:GLint, format:GLenum, type:GLenum, pixels:UnsafeRawPointer) {glTexImage3DOES_P(target, level, internalformat, width, height, depth, border, format, type, pixels)}
var glTexImage3DOES_P:@convention(c)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, UnsafeRawPointer) -> Void = glTexImage3DOES_L
public func glTexImage4DSGIS(_ target:GLenum, _ level:GLint, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ size4d:GLsizei, _ border:GLint, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeRawPointer) {glTexImage4DSGIS_P(target, level, internalformat, width, height, depth, size4d, border, format, type, pixels)}
public func glTexImage4DSGIS(target:GLenum, level:GLint, internalformat:GLenum, width:GLsizei, height:GLsizei, depth:GLsizei, size4d:GLsizei, border:GLint, format:GLenum, type:GLenum, pixels:UnsafeRawPointer) {glTexImage4DSGIS_P(target, level, internalformat, width, height, depth, size4d, border, format, type, pixels)}
var glTexImage4DSGIS_P:@convention(c)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, UnsafeRawPointer) -> Void = glTexImage4DSGIS_L
public func glTexPageCommitmentARB(_ target:GLenum, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ zoffset:GLint, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ commit:GLboolean) {glTexPageCommitmentARB_P(target, level, xoffset, yoffset, zoffset, width, height, depth, commit)}
public func glTexPageCommitmentARB(target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, commit:GLboolean) {glTexPageCommitmentARB_P(target, level, xoffset, yoffset, zoffset, width, height, depth, commit)}
var glTexPageCommitmentARB_P:@convention(c)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLboolean) -> Void = glTexPageCommitmentARB_L
public func glTexPageCommitmentEXT(_ target:GLenum, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ zoffset:GLint, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ commit:GLboolean) {glTexPageCommitmentEXT_P(target, level, xoffset, yoffset, zoffset, width, height, depth, commit)}
public func glTexPageCommitmentEXT(target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, commit:GLboolean) {glTexPageCommitmentEXT_P(target, level, xoffset, yoffset, zoffset, width, height, depth, commit)}
var glTexPageCommitmentEXT_P:@convention(c)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLboolean) -> Void = glTexPageCommitmentEXT_L
public func glTexParameterIiv(_ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLint>) {glTexParameterIiv_P(target, pname, params)}
public func glTexParameterIiv(target:GLenum, pname:GLenum, params:UnsafePointer<GLint>) {glTexParameterIiv_P(target, pname, params)}
var glTexParameterIiv_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLint>) -> Void = glTexParameterIiv_L
public func glTexParameterIivEXT(_ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLint>) {glTexParameterIivEXT_P(target, pname, params)}
public func glTexParameterIivEXT(target:GLenum, pname:GLenum, params:UnsafePointer<GLint>) {glTexParameterIivEXT_P(target, pname, params)}
var glTexParameterIivEXT_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLint>) -> Void = glTexParameterIivEXT_L
public func glTexParameterIivOES(_ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLint>) {glTexParameterIivOES_P(target, pname, params)}
public func glTexParameterIivOES(target:GLenum, pname:GLenum, params:UnsafePointer<GLint>) {glTexParameterIivOES_P(target, pname, params)}
var glTexParameterIivOES_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLint>) -> Void = glTexParameterIivOES_L
public func glTexParameterIuiv(_ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLuint>) {glTexParameterIuiv_P(target, pname, params)}
public func glTexParameterIuiv(target:GLenum, pname:GLenum, params:UnsafePointer<GLuint>) {glTexParameterIuiv_P(target, pname, params)}
var glTexParameterIuiv_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLuint>) -> Void = glTexParameterIuiv_L
public func glTexParameterIuivEXT(_ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLuint>) {glTexParameterIuivEXT_P(target, pname, params)}
public func glTexParameterIuivEXT(target:GLenum, pname:GLenum, params:UnsafePointer<GLuint>) {glTexParameterIuivEXT_P(target, pname, params)}
var glTexParameterIuivEXT_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLuint>) -> Void = glTexParameterIuivEXT_L
public func glTexParameterIuivOES(_ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLuint>) {glTexParameterIuivOES_P(target, pname, params)}
public func glTexParameterIuivOES(target:GLenum, pname:GLenum, params:UnsafePointer<GLuint>) {glTexParameterIuivOES_P(target, pname, params)}
var glTexParameterIuivOES_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLuint>) -> Void = glTexParameterIuivOES_L
public func glTexParameterf(_ target:GLenum, _ pname:GLenum, _ param:GLfloat) {glTexParameterf_P(target, pname, param)}
public func glTexParameterf(target:GLenum, pname:GLenum, param:GLfloat) {glTexParameterf_P(target, pname, param)}
var glTexParameterf_P:@convention(c)(GLenum, GLenum, GLfloat) -> Void = glTexParameterf_L
public func glTexParameterfv(_ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLfloat>) {glTexParameterfv_P(target, pname, params)}
public func glTexParameterfv(target:GLenum, pname:GLenum, params:UnsafePointer<GLfloat>) {glTexParameterfv_P(target, pname, params)}
var glTexParameterfv_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLfloat>) -> Void = glTexParameterfv_L
public func glTexParameteri(_ target:GLenum, _ pname:GLenum, _ param:GLint) {glTexParameteri_P(target, pname, param)}
public func glTexParameteri(target:GLenum, pname:GLenum, param:GLint) {glTexParameteri_P(target, pname, param)}
var glTexParameteri_P:@convention(c)(GLenum, GLenum, GLint) -> Void = glTexParameteri_L
public func glTexParameteriv(_ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLint>) {glTexParameteriv_P(target, pname, params)}
public func glTexParameteriv(target:GLenum, pname:GLenum, params:UnsafePointer<GLint>) {glTexParameteriv_P(target, pname, params)}
var glTexParameteriv_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLint>) -> Void = glTexParameteriv_L
public func glTexParameterx(_ target:GLenum, _ pname:GLenum, _ param:GLfixed) {glTexParameterx_P(target, pname, param)}
public func glTexParameterx(target:GLenum, pname:GLenum, param:GLfixed) {glTexParameterx_P(target, pname, param)}
var glTexParameterx_P:@convention(c)(GLenum, GLenum, GLfixed) -> Void = glTexParameterx_L
public func glTexParameterxOES(_ target:GLenum, _ pname:GLenum, _ param:GLfixed) {glTexParameterxOES_P(target, pname, param)}
public func glTexParameterxOES(target:GLenum, pname:GLenum, param:GLfixed) {glTexParameterxOES_P(target, pname, param)}
var glTexParameterxOES_P:@convention(c)(GLenum, GLenum, GLfixed) -> Void = glTexParameterxOES_L
public func glTexParameterxv(_ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLfixed>) {glTexParameterxv_P(target, pname, params)}
public func glTexParameterxv(target:GLenum, pname:GLenum, params:UnsafePointer<GLfixed>) {glTexParameterxv_P(target, pname, params)}
var glTexParameterxv_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLfixed>) -> Void = glTexParameterxv_L
public func glTexParameterxvOES(_ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLfixed>) {glTexParameterxvOES_P(target, pname, params)}
public func glTexParameterxvOES(target:GLenum, pname:GLenum, params:UnsafePointer<GLfixed>) {glTexParameterxvOES_P(target, pname, params)}
var glTexParameterxvOES_P:@convention(c)(GLenum, GLenum, UnsafePointer<GLfixed>) -> Void = glTexParameterxvOES_L
public func glTexRenderbufferNV(_ target:GLenum, _ renderbuffer:GLuint) {glTexRenderbufferNV_P(target, renderbuffer)}
public func glTexRenderbufferNV(target:GLenum, renderbuffer:GLuint) {glTexRenderbufferNV_P(target, renderbuffer)}
var glTexRenderbufferNV_P:@convention(c)(GLenum, GLuint) -> Void = glTexRenderbufferNV_L
public func glTexStorage1D(_ target:GLenum, _ levels:GLsizei, _ internalformat:GLenum, _ width:GLsizei) {glTexStorage1D_P(target, levels, internalformat, width)}
public func glTexStorage1D(target:GLenum, levels:GLsizei, internalformat:GLenum, width:GLsizei) {glTexStorage1D_P(target, levels, internalformat, width)}
var glTexStorage1D_P:@convention(c)(GLenum, GLsizei, GLenum, GLsizei) -> Void = glTexStorage1D_L
public func glTexStorage1DEXT(_ target:GLenum, _ levels:GLsizei, _ internalformat:GLenum, _ width:GLsizei) {glTexStorage1DEXT_P(target, levels, internalformat, width)}
public func glTexStorage1DEXT(target:GLenum, levels:GLsizei, internalformat:GLenum, width:GLsizei) {glTexStorage1DEXT_P(target, levels, internalformat, width)}
var glTexStorage1DEXT_P:@convention(c)(GLenum, GLsizei, GLenum, GLsizei) -> Void = glTexStorage1DEXT_L
public func glTexStorage2D(_ target:GLenum, _ levels:GLsizei, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei) {glTexStorage2D_P(target, levels, internalformat, width, height)}
public func glTexStorage2D(target:GLenum, levels:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei) {glTexStorage2D_P(target, levels, internalformat, width, height)}
var glTexStorage2D_P:@convention(c)(GLenum, GLsizei, GLenum, GLsizei, GLsizei) -> Void = glTexStorage2D_L
public func glTexStorage2DEXT(_ target:GLenum, _ levels:GLsizei, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei) {glTexStorage2DEXT_P(target, levels, internalformat, width, height)}
public func glTexStorage2DEXT(target:GLenum, levels:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei) {glTexStorage2DEXT_P(target, levels, internalformat, width, height)}
var glTexStorage2DEXT_P:@convention(c)(GLenum, GLsizei, GLenum, GLsizei, GLsizei) -> Void = glTexStorage2DEXT_L
public func glTexStorage2DMultisample(_ target:GLenum, _ samples:GLsizei, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei, _ fixedsamplelocations:GLboolean) {glTexStorage2DMultisample_P(target, samples, internalformat, width, height, fixedsamplelocations)}
public func glTexStorage2DMultisample(target:GLenum, samples:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei, fixedsamplelocations:GLboolean) {glTexStorage2DMultisample_P(target, samples, internalformat, width, height, fixedsamplelocations)}
var glTexStorage2DMultisample_P:@convention(c)(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean) -> Void = glTexStorage2DMultisample_L
public func glTexStorage3D(_ target:GLenum, _ levels:GLsizei, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei) {glTexStorage3D_P(target, levels, internalformat, width, height, depth)}
public func glTexStorage3D(target:GLenum, levels:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei, depth:GLsizei) {glTexStorage3D_P(target, levels, internalformat, width, height, depth)}
var glTexStorage3D_P:@convention(c)(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei) -> Void = glTexStorage3D_L
public func glTexStorage3DEXT(_ target:GLenum, _ levels:GLsizei, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei) {glTexStorage3DEXT_P(target, levels, internalformat, width, height, depth)}
public func glTexStorage3DEXT(target:GLenum, levels:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei, depth:GLsizei) {glTexStorage3DEXT_P(target, levels, internalformat, width, height, depth)}
var glTexStorage3DEXT_P:@convention(c)(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei) -> Void = glTexStorage3DEXT_L
public func glTexStorage3DMultisample(_ target:GLenum, _ samples:GLsizei, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ fixedsamplelocations:GLboolean) {glTexStorage3DMultisample_P(target, samples, internalformat, width, height, depth, fixedsamplelocations)}
public func glTexStorage3DMultisample(target:GLenum, samples:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei, depth:GLsizei, fixedsamplelocations:GLboolean) {glTexStorage3DMultisample_P(target, samples, internalformat, width, height, depth, fixedsamplelocations)}
var glTexStorage3DMultisample_P:@convention(c)(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean) -> Void = glTexStorage3DMultisample_L
public func glTexStorage3DMultisampleOES(_ target:GLenum, _ samples:GLsizei, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ fixedsamplelocations:GLboolean) {glTexStorage3DMultisampleOES_P(target, samples, internalformat, width, height, depth, fixedsamplelocations)}
public func glTexStorage3DMultisampleOES(target:GLenum, samples:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei, depth:GLsizei, fixedsamplelocations:GLboolean) {glTexStorage3DMultisampleOES_P(target, samples, internalformat, width, height, depth, fixedsamplelocations)}
var glTexStorage3DMultisampleOES_P:@convention(c)(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean) -> Void = glTexStorage3DMultisampleOES_L
public func glTexStorageSparseAMD(_ target:GLenum, _ internalFormat:GLenum, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ layers:GLsizei, _ flags:GLbitfield) {glTexStorageSparseAMD_P(target, internalFormat, width, height, depth, layers, flags)}
public func glTexStorageSparseAMD(target:GLenum, internalFormat:GLenum, width:GLsizei, height:GLsizei, depth:GLsizei, layers:GLsizei, flags:GLbitfield) {glTexStorageSparseAMD_P(target, internalFormat, width, height, depth, layers, flags)}
var glTexStorageSparseAMD_P:@convention(c)(GLenum, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLbitfield) -> Void = glTexStorageSparseAMD_L
public func glTexSubImage1D(_ target:GLenum, _ level:GLint, _ xoffset:GLint, _ width:GLsizei, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeRawPointer) {glTexSubImage1D_P(target, level, xoffset, width, format, type, pixels)}
public func glTexSubImage1D(target:GLenum, level:GLint, xoffset:GLint, width:GLsizei, format:GLenum, type:GLenum, pixels:UnsafeRawPointer) {glTexSubImage1D_P(target, level, xoffset, width, format, type, pixels)}
var glTexSubImage1D_P:@convention(c)(GLenum, GLint, GLint, GLsizei, GLenum, GLenum, UnsafeRawPointer) -> Void = glTexSubImage1D_L
public func glTexSubImage1DEXT(_ target:GLenum, _ level:GLint, _ xoffset:GLint, _ width:GLsizei, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeRawPointer) {glTexSubImage1DEXT_P(target, level, xoffset, width, format, type, pixels)}
public func glTexSubImage1DEXT(target:GLenum, level:GLint, xoffset:GLint, width:GLsizei, format:GLenum, type:GLenum, pixels:UnsafeRawPointer) {glTexSubImage1DEXT_P(target, level, xoffset, width, format, type, pixels)}
var glTexSubImage1DEXT_P:@convention(c)(GLenum, GLint, GLint, GLsizei, GLenum, GLenum, UnsafeRawPointer) -> Void = glTexSubImage1DEXT_L
public func glTexSubImage2D(_ target:GLenum, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ width:GLsizei, _ height:GLsizei, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeRawPointer) {glTexSubImage2D_P(target, level, xoffset, yoffset, width, height, format, type, pixels)}
public func glTexSubImage2D(target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, width:GLsizei, height:GLsizei, format:GLenum, type:GLenum, pixels:UnsafeRawPointer) {glTexSubImage2D_P(target, level, xoffset, yoffset, width, height, format, type, pixels)}
var glTexSubImage2D_P:@convention(c)(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, UnsafeRawPointer) -> Void = glTexSubImage2D_L
public func glTexSubImage2DEXT(_ target:GLenum, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ width:GLsizei, _ height:GLsizei, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeRawPointer) {glTexSubImage2DEXT_P(target, level, xoffset, yoffset, width, height, format, type, pixels)}
public func glTexSubImage2DEXT(target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, width:GLsizei, height:GLsizei, format:GLenum, type:GLenum, pixels:UnsafeRawPointer) {glTexSubImage2DEXT_P(target, level, xoffset, yoffset, width, height, format, type, pixels)}
var glTexSubImage2DEXT_P:@convention(c)(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, UnsafeRawPointer) -> Void = glTexSubImage2DEXT_L
public func glTexSubImage3D(_ target:GLenum, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ zoffset:GLint, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeRawPointer) {glTexSubImage3D_P(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)}
public func glTexSubImage3D(target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, format:GLenum, type:GLenum, pixels:UnsafeRawPointer) {glTexSubImage3D_P(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)}
var glTexSubImage3D_P:@convention(c)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, UnsafeRawPointer) -> Void = glTexSubImage3D_L
public func glTexSubImage3DEXT(_ target:GLenum, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ zoffset:GLint, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeRawPointer) {glTexSubImage3DEXT_P(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)}
public func glTexSubImage3DEXT(target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, format:GLenum, type:GLenum, pixels:UnsafeRawPointer) {glTexSubImage3DEXT_P(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)}
var glTexSubImage3DEXT_P:@convention(c)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, UnsafeRawPointer) -> Void = glTexSubImage3DEXT_L
public func glTexSubImage3DOES(_ target:GLenum, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ zoffset:GLint, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeRawPointer) {glTexSubImage3DOES_P(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)}
public func glTexSubImage3DOES(target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, format:GLenum, type:GLenum, pixels:UnsafeRawPointer) {glTexSubImage3DOES_P(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)}
var glTexSubImage3DOES_P:@convention(c)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, UnsafeRawPointer) -> Void = glTexSubImage3DOES_L
public func glTexSubImage4DSGIS(_ target:GLenum, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ zoffset:GLint, _ woffset:GLint, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ size4d:GLsizei, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeRawPointer) {glTexSubImage4DSGIS_P(target, level, xoffset, yoffset, zoffset, woffset, width, height, depth, size4d, format, type, pixels)}
public func glTexSubImage4DSGIS(target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, woffset:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, size4d:GLsizei, format:GLenum, type:GLenum, pixels:UnsafeRawPointer) {glTexSubImage4DSGIS_P(target, level, xoffset, yoffset, zoffset, woffset, width, height, depth, size4d, format, type, pixels)}
var glTexSubImage4DSGIS_P:@convention(c)(GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLsizei, GLenum, GLenum, UnsafeRawPointer) -> Void = glTexSubImage4DSGIS_L
public func glTextureBarrier() {glTextureBarrier_P()}
var glTextureBarrier_P:@convention(c)() -> Void = glTextureBarrier_L
public func glTextureBarrierNV() {glTextureBarrierNV_P()}
var glTextureBarrierNV_P:@convention(c)() -> Void = glTextureBarrierNV_L
public func glTextureBuffer(_ texture:GLuint, _ internalformat:GLenum, _ buffer:GLuint) {glTextureBuffer_P(texture, internalformat, buffer)}
public func glTextureBuffer(texture:GLuint, internalformat:GLenum, buffer:GLuint) {glTextureBuffer_P(texture, internalformat, buffer)}
var glTextureBuffer_P:@convention(c)(GLuint, GLenum, GLuint) -> Void = glTextureBuffer_L
public func glTextureBufferEXT(_ texture:GLuint, _ target:GLenum, _ internalformat:GLenum, _ buffer:GLuint) {glTextureBufferEXT_P(texture, target, internalformat, buffer)}
public func glTextureBufferEXT(texture:GLuint, target:GLenum, internalformat:GLenum, buffer:GLuint) {glTextureBufferEXT_P(texture, target, internalformat, buffer)}
var glTextureBufferEXT_P:@convention(c)(GLuint, GLenum, GLenum, GLuint) -> Void = glTextureBufferEXT_L
public func glTextureBufferRange(_ texture:GLuint, _ internalformat:GLenum, _ buffer:GLuint, _ offset:GLintptr, _ size:GLsizeiptr) {glTextureBufferRange_P(texture, internalformat, buffer, offset, size)}
public func glTextureBufferRange(texture:GLuint, internalformat:GLenum, buffer:GLuint, offset:GLintptr, size:GLsizeiptr) {glTextureBufferRange_P(texture, internalformat, buffer, offset, size)}
var glTextureBufferRange_P:@convention(c)(GLuint, GLenum, GLuint, GLintptr, GLsizeiptr) -> Void = glTextureBufferRange_L
public func glTextureBufferRangeEXT(_ texture:GLuint, _ target:GLenum, _ internalformat:GLenum, _ buffer:GLuint, _ offset:GLintptr, _ size:GLsizeiptr) {glTextureBufferRangeEXT_P(texture, target, internalformat, buffer, offset, size)}
public func glTextureBufferRangeEXT(texture:GLuint, target:GLenum, internalformat:GLenum, buffer:GLuint, offset:GLintptr, size:GLsizeiptr) {glTextureBufferRangeEXT_P(texture, target, internalformat, buffer, offset, size)}
var glTextureBufferRangeEXT_P:@convention(c)(GLuint, GLenum, GLenum, GLuint, GLintptr, GLsizeiptr) -> Void = glTextureBufferRangeEXT_L
public func glTextureColorMaskSGIS(_ red:GLboolean, _ green:GLboolean, _ blue:GLboolean, _ alpha:GLboolean) {glTextureColorMaskSGIS_P(red, green, blue, alpha)}
public func glTextureColorMaskSGIS(red:GLboolean, green:GLboolean, blue:GLboolean, alpha:GLboolean) {glTextureColorMaskSGIS_P(red, green, blue, alpha)}
var glTextureColorMaskSGIS_P:@convention(c)(GLboolean, GLboolean, GLboolean, GLboolean) -> Void = glTextureColorMaskSGIS_L
public func glTextureImage1DEXT(_ texture:GLuint, _ target:GLenum, _ level:GLint, _ internalformat:GLint, _ width:GLsizei, _ border:GLint, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeRawPointer) {glTextureImage1DEXT_P(texture, target, level, internalformat, width, border, format, type, pixels)}
public func glTextureImage1DEXT(texture:GLuint, target:GLenum, level:GLint, internalformat:GLint, width:GLsizei, border:GLint, format:GLenum, type:GLenum, pixels:UnsafeRawPointer) {glTextureImage1DEXT_P(texture, target, level, internalformat, width, border, format, type, pixels)}
var glTextureImage1DEXT_P:@convention(c)(GLuint, GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, UnsafeRawPointer) -> Void = glTextureImage1DEXT_L
public func glTextureImage2DEXT(_ texture:GLuint, _ target:GLenum, _ level:GLint, _ internalformat:GLint, _ width:GLsizei, _ height:GLsizei, _ border:GLint, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeRawPointer) {glTextureImage2DEXT_P(texture, target, level, internalformat, width, height, border, format, type, pixels)}
public func glTextureImage2DEXT(texture:GLuint, target:GLenum, level:GLint, internalformat:GLint, width:GLsizei, height:GLsizei, border:GLint, format:GLenum, type:GLenum, pixels:UnsafeRawPointer) {glTextureImage2DEXT_P(texture, target, level, internalformat, width, height, border, format, type, pixels)}
var glTextureImage2DEXT_P:@convention(c)(GLuint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, UnsafeRawPointer) -> Void = glTextureImage2DEXT_L
public func glTextureImage2DMultisampleCoverageNV(_ texture:GLuint, _ target:GLenum, _ coverageSamples:GLsizei, _ colorSamples:GLsizei, _ internalFormat:GLint, _ width:GLsizei, _ height:GLsizei, _ fixedSampleLocations:GLboolean) {glTextureImage2DMultisampleCoverageNV_P(texture, target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations)}
public func glTextureImage2DMultisampleCoverageNV(texture:GLuint, target:GLenum, coverageSamples:GLsizei, colorSamples:GLsizei, internalFormat:GLint, width:GLsizei, height:GLsizei, fixedSampleLocations:GLboolean) {glTextureImage2DMultisampleCoverageNV_P(texture, target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations)}
var glTextureImage2DMultisampleCoverageNV_P:@convention(c)(GLuint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLboolean) -> Void = glTextureImage2DMultisampleCoverageNV_L
public func glTextureImage2DMultisampleNV(_ texture:GLuint, _ target:GLenum, _ samples:GLsizei, _ internalFormat:GLint, _ width:GLsizei, _ height:GLsizei, _ fixedSampleLocations:GLboolean) {glTextureImage2DMultisampleNV_P(texture, target, samples, internalFormat, width, height, fixedSampleLocations)}
public func glTextureImage2DMultisampleNV(texture:GLuint, target:GLenum, samples:GLsizei, internalFormat:GLint, width:GLsizei, height:GLsizei, fixedSampleLocations:GLboolean) {glTextureImage2DMultisampleNV_P(texture, target, samples, internalFormat, width, height, fixedSampleLocations)}
var glTextureImage2DMultisampleNV_P:@convention(c)(GLuint, GLenum, GLsizei, GLint, GLsizei, GLsizei, GLboolean) -> Void = glTextureImage2DMultisampleNV_L
public func glTextureImage3DEXT(_ texture:GLuint, _ target:GLenum, _ level:GLint, _ internalformat:GLint, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ border:GLint, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeRawPointer) {glTextureImage3DEXT_P(texture, target, level, internalformat, width, height, depth, border, format, type, pixels)}
public func glTextureImage3DEXT(texture:GLuint, target:GLenum, level:GLint, internalformat:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, border:GLint, format:GLenum, type:GLenum, pixels:UnsafeRawPointer) {glTextureImage3DEXT_P(texture, target, level, internalformat, width, height, depth, border, format, type, pixels)}
var glTextureImage3DEXT_P:@convention(c)(GLuint, GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, UnsafeRawPointer) -> Void = glTextureImage3DEXT_L
public func glTextureImage3DMultisampleCoverageNV(_ texture:GLuint, _ target:GLenum, _ coverageSamples:GLsizei, _ colorSamples:GLsizei, _ internalFormat:GLint, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ fixedSampleLocations:GLboolean) {glTextureImage3DMultisampleCoverageNV_P(texture, target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations)}
public func glTextureImage3DMultisampleCoverageNV(texture:GLuint, target:GLenum, coverageSamples:GLsizei, colorSamples:GLsizei, internalFormat:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, fixedSampleLocations:GLboolean) {glTextureImage3DMultisampleCoverageNV_P(texture, target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations)}
var glTextureImage3DMultisampleCoverageNV_P:@convention(c)(GLuint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean) -> Void = glTextureImage3DMultisampleCoverageNV_L
public func glTextureImage3DMultisampleNV(_ texture:GLuint, _ target:GLenum, _ samples:GLsizei, _ internalFormat:GLint, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ fixedSampleLocations:GLboolean) {glTextureImage3DMultisampleNV_P(texture, target, samples, internalFormat, width, height, depth, fixedSampleLocations)}
public func glTextureImage3DMultisampleNV(texture:GLuint, target:GLenum, samples:GLsizei, internalFormat:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, fixedSampleLocations:GLboolean) {glTextureImage3DMultisampleNV_P(texture, target, samples, internalFormat, width, height, depth, fixedSampleLocations)}
var glTextureImage3DMultisampleNV_P:@convention(c)(GLuint, GLenum, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean) -> Void = glTextureImage3DMultisampleNV_L
public func glTextureLightEXT(_ pname:GLenum) {glTextureLightEXT_P(pname)}
public func glTextureLightEXT(pname:GLenum) {glTextureLightEXT_P(pname)}
var glTextureLightEXT_P:@convention(c)(GLenum) -> Void = glTextureLightEXT_L
public func glTextureMaterialEXT(_ face:GLenum, _ mode:GLenum) {glTextureMaterialEXT_P(face, mode)}
public func glTextureMaterialEXT(face:GLenum, mode:GLenum) {glTextureMaterialEXT_P(face, mode)}
var glTextureMaterialEXT_P:@convention(c)(GLenum, GLenum) -> Void = glTextureMaterialEXT_L
public func glTextureNormalEXT(_ mode:GLenum) {glTextureNormalEXT_P(mode)}
public func glTextureNormalEXT(mode:GLenum) {glTextureNormalEXT_P(mode)}
var glTextureNormalEXT_P:@convention(c)(GLenum) -> Void = glTextureNormalEXT_L
public func glTexturePageCommitmentEXT(_ texture:GLuint, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ zoffset:GLint, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ commit:GLboolean) {glTexturePageCommitmentEXT_P(texture, level, xoffset, yoffset, zoffset, width, height, depth, commit)}
public func glTexturePageCommitmentEXT(texture:GLuint, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, commit:GLboolean) {glTexturePageCommitmentEXT_P(texture, level, xoffset, yoffset, zoffset, width, height, depth, commit)}
var glTexturePageCommitmentEXT_P:@convention(c)(GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLboolean) -> Void = glTexturePageCommitmentEXT_L
public func glTextureParameterIiv(_ texture:GLuint, _ pname:GLenum, _ params:UnsafePointer<GLint>) {glTextureParameterIiv_P(texture, pname, params)}
public func glTextureParameterIiv(texture:GLuint, pname:GLenum, params:UnsafePointer<GLint>) {glTextureParameterIiv_P(texture, pname, params)}
var glTextureParameterIiv_P:@convention(c)(GLuint, GLenum, UnsafePointer<GLint>) -> Void = glTextureParameterIiv_L
public func glTextureParameterIivEXT(_ texture:GLuint, _ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLint>) {glTextureParameterIivEXT_P(texture, target, pname, params)}
public func glTextureParameterIivEXT(texture:GLuint, target:GLenum, pname:GLenum, params:UnsafePointer<GLint>) {glTextureParameterIivEXT_P(texture, target, pname, params)}
var glTextureParameterIivEXT_P:@convention(c)(GLuint, GLenum, GLenum, UnsafePointer<GLint>) -> Void = glTextureParameterIivEXT_L
public func glTextureParameterIuiv(_ texture:GLuint, _ pname:GLenum, _ params:UnsafePointer<GLuint>) {glTextureParameterIuiv_P(texture, pname, params)}
public func glTextureParameterIuiv(texture:GLuint, pname:GLenum, params:UnsafePointer<GLuint>) {glTextureParameterIuiv_P(texture, pname, params)}
var glTextureParameterIuiv_P:@convention(c)(GLuint, GLenum, UnsafePointer<GLuint>) -> Void = glTextureParameterIuiv_L
public func glTextureParameterIuivEXT(_ texture:GLuint, _ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLuint>) {glTextureParameterIuivEXT_P(texture, target, pname, params)}
public func glTextureParameterIuivEXT(texture:GLuint, target:GLenum, pname:GLenum, params:UnsafePointer<GLuint>) {glTextureParameterIuivEXT_P(texture, target, pname, params)}
var glTextureParameterIuivEXT_P:@convention(c)(GLuint, GLenum, GLenum, UnsafePointer<GLuint>) -> Void = glTextureParameterIuivEXT_L
public func glTextureParameterf(_ texture:GLuint, _ pname:GLenum, _ param:GLfloat) {glTextureParameterf_P(texture, pname, param)}
public func glTextureParameterf(texture:GLuint, pname:GLenum, param:GLfloat) {glTextureParameterf_P(texture, pname, param)}
var glTextureParameterf_P:@convention(c)(GLuint, GLenum, GLfloat) -> Void = glTextureParameterf_L
public func glTextureParameterfEXT(_ texture:GLuint, _ target:GLenum, _ pname:GLenum, _ param:GLfloat) {glTextureParameterfEXT_P(texture, target, pname, param)}
public func glTextureParameterfEXT(texture:GLuint, target:GLenum, pname:GLenum, param:GLfloat) {glTextureParameterfEXT_P(texture, target, pname, param)}
var glTextureParameterfEXT_P:@convention(c)(GLuint, GLenum, GLenum, GLfloat) -> Void = glTextureParameterfEXT_L
public func glTextureParameterfv(_ texture:GLuint, _ pname:GLenum, _ param:UnsafePointer<GLfloat>) {glTextureParameterfv_P(texture, pname, param)}
public func glTextureParameterfv(texture:GLuint, pname:GLenum, param:UnsafePointer<GLfloat>) {glTextureParameterfv_P(texture, pname, param)}
var glTextureParameterfv_P:@convention(c)(GLuint, GLenum, UnsafePointer<GLfloat>) -> Void = glTextureParameterfv_L
public func glTextureParameterfvEXT(_ texture:GLuint, _ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLfloat>) {glTextureParameterfvEXT_P(texture, target, pname, params)}
public func glTextureParameterfvEXT(texture:GLuint, target:GLenum, pname:GLenum, params:UnsafePointer<GLfloat>) {glTextureParameterfvEXT_P(texture, target, pname, params)}
var glTextureParameterfvEXT_P:@convention(c)(GLuint, GLenum, GLenum, UnsafePointer<GLfloat>) -> Void = glTextureParameterfvEXT_L
public func glTextureParameteri(_ texture:GLuint, _ pname:GLenum, _ param:GLint) {glTextureParameteri_P(texture, pname, param)}
public func glTextureParameteri(texture:GLuint, pname:GLenum, param:GLint) {glTextureParameteri_P(texture, pname, param)}
var glTextureParameteri_P:@convention(c)(GLuint, GLenum, GLint) -> Void = glTextureParameteri_L
public func glTextureParameteriEXT(_ texture:GLuint, _ target:GLenum, _ pname:GLenum, _ param:GLint) {glTextureParameteriEXT_P(texture, target, pname, param)}
public func glTextureParameteriEXT(texture:GLuint, target:GLenum, pname:GLenum, param:GLint) {glTextureParameteriEXT_P(texture, target, pname, param)}
var glTextureParameteriEXT_P:@convention(c)(GLuint, GLenum, GLenum, GLint) -> Void = glTextureParameteriEXT_L
public func glTextureParameteriv(_ texture:GLuint, _ pname:GLenum, _ param:UnsafePointer<GLint>) {glTextureParameteriv_P(texture, pname, param)}
public func glTextureParameteriv(texture:GLuint, pname:GLenum, param:UnsafePointer<GLint>) {glTextureParameteriv_P(texture, pname, param)}
var glTextureParameteriv_P:@convention(c)(GLuint, GLenum, UnsafePointer<GLint>) -> Void = glTextureParameteriv_L
public func glTextureParameterivEXT(_ texture:GLuint, _ target:GLenum, _ pname:GLenum, _ params:UnsafePointer<GLint>) {glTextureParameterivEXT_P(texture, target, pname, params)}
public func glTextureParameterivEXT(texture:GLuint, target:GLenum, pname:GLenum, params:UnsafePointer<GLint>) {glTextureParameterivEXT_P(texture, target, pname, params)}
var glTextureParameterivEXT_P:@convention(c)(GLuint, GLenum, GLenum, UnsafePointer<GLint>) -> Void = glTextureParameterivEXT_L
public func glTextureRangeAPPLE(_ target:GLenum, _ length:GLsizei, _ pointer:UnsafeRawPointer) {glTextureRangeAPPLE_P(target, length, pointer)}
public func glTextureRangeAPPLE(target:GLenum, length:GLsizei, pointer:UnsafeRawPointer) {glTextureRangeAPPLE_P(target, length, pointer)}
var glTextureRangeAPPLE_P:@convention(c)(GLenum, GLsizei, UnsafeRawPointer) -> Void = glTextureRangeAPPLE_L
public func glTextureRenderbufferEXT(_ texture:GLuint, _ target:GLenum, _ renderbuffer:GLuint) {glTextureRenderbufferEXT_P(texture, target, renderbuffer)}
public func glTextureRenderbufferEXT(texture:GLuint, target:GLenum, renderbuffer:GLuint) {glTextureRenderbufferEXT_P(texture, target, renderbuffer)}
var glTextureRenderbufferEXT_P:@convention(c)(GLuint, GLenum, GLuint) -> Void = glTextureRenderbufferEXT_L
public func glTextureStorage1D(_ texture:GLuint, _ levels:GLsizei, _ internalformat:GLenum, _ width:GLsizei) {glTextureStorage1D_P(texture, levels, internalformat, width)}
public func glTextureStorage1D(texture:GLuint, levels:GLsizei, internalformat:GLenum, width:GLsizei) {glTextureStorage1D_P(texture, levels, internalformat, width)}
var glTextureStorage1D_P:@convention(c)(GLuint, GLsizei, GLenum, GLsizei) -> Void = glTextureStorage1D_L
public func glTextureStorage1DEXT(_ texture:GLuint, _ target:GLenum, _ levels:GLsizei, _ internalformat:GLenum, _ width:GLsizei) {glTextureStorage1DEXT_P(texture, target, levels, internalformat, width)}
public func glTextureStorage1DEXT(texture:GLuint, target:GLenum, levels:GLsizei, internalformat:GLenum, width:GLsizei) {glTextureStorage1DEXT_P(texture, target, levels, internalformat, width)}
var glTextureStorage1DEXT_P:@convention(c)(GLuint, GLenum, GLsizei, GLenum, GLsizei) -> Void = glTextureStorage1DEXT_L
public func glTextureStorage2D(_ texture:GLuint, _ levels:GLsizei, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei) {glTextureStorage2D_P(texture, levels, internalformat, width, height)}
public func glTextureStorage2D(texture:GLuint, levels:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei) {glTextureStorage2D_P(texture, levels, internalformat, width, height)}
var glTextureStorage2D_P:@convention(c)(GLuint, GLsizei, GLenum, GLsizei, GLsizei) -> Void = glTextureStorage2D_L
public func glTextureStorage2DEXT(_ texture:GLuint, _ target:GLenum, _ levels:GLsizei, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei) {glTextureStorage2DEXT_P(texture, target, levels, internalformat, width, height)}
public func glTextureStorage2DEXT(texture:GLuint, target:GLenum, levels:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei) {glTextureStorage2DEXT_P(texture, target, levels, internalformat, width, height)}
var glTextureStorage2DEXT_P:@convention(c)(GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei) -> Void = glTextureStorage2DEXT_L
public func glTextureStorage2DMultisample(_ texture:GLuint, _ samples:GLsizei, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei, _ fixedsamplelocations:GLboolean) {glTextureStorage2DMultisample_P(texture, samples, internalformat, width, height, fixedsamplelocations)}
public func glTextureStorage2DMultisample(texture:GLuint, samples:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei, fixedsamplelocations:GLboolean) {glTextureStorage2DMultisample_P(texture, samples, internalformat, width, height, fixedsamplelocations)}
var glTextureStorage2DMultisample_P:@convention(c)(GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLboolean) -> Void = glTextureStorage2DMultisample_L
public func glTextureStorage2DMultisampleEXT(_ texture:GLuint, _ target:GLenum, _ samples:GLsizei, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei, _ fixedsamplelocations:GLboolean) {glTextureStorage2DMultisampleEXT_P(texture, target, samples, internalformat, width, height, fixedsamplelocations)}
public func glTextureStorage2DMultisampleEXT(texture:GLuint, target:GLenum, samples:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei, fixedsamplelocations:GLboolean) {glTextureStorage2DMultisampleEXT_P(texture, target, samples, internalformat, width, height, fixedsamplelocations)}
var glTextureStorage2DMultisampleEXT_P:@convention(c)(GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean) -> Void = glTextureStorage2DMultisampleEXT_L
public func glTextureStorage3D(_ texture:GLuint, _ levels:GLsizei, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei) {glTextureStorage3D_P(texture, levels, internalformat, width, height, depth)}
public func glTextureStorage3D(texture:GLuint, levels:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei, depth:GLsizei) {glTextureStorage3D_P(texture, levels, internalformat, width, height, depth)}
var glTextureStorage3D_P:@convention(c)(GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLsizei) -> Void = glTextureStorage3D_L
public func glTextureStorage3DEXT(_ texture:GLuint, _ target:GLenum, _ levels:GLsizei, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei) {glTextureStorage3DEXT_P(texture, target, levels, internalformat, width, height, depth)}
public func glTextureStorage3DEXT(texture:GLuint, target:GLenum, levels:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei, depth:GLsizei) {glTextureStorage3DEXT_P(texture, target, levels, internalformat, width, height, depth)}
var glTextureStorage3DEXT_P:@convention(c)(GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei) -> Void = glTextureStorage3DEXT_L
public func glTextureStorage3DMultisample(_ texture:GLuint, _ samples:GLsizei, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ fixedsamplelocations:GLboolean) {glTextureStorage3DMultisample_P(texture, samples, internalformat, width, height, depth, fixedsamplelocations)}
public func glTextureStorage3DMultisample(texture:GLuint, samples:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei, depth:GLsizei, fixedsamplelocations:GLboolean) {glTextureStorage3DMultisample_P(texture, samples, internalformat, width, height, depth, fixedsamplelocations)}
var glTextureStorage3DMultisample_P:@convention(c)(GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean) -> Void = glTextureStorage3DMultisample_L
public func glTextureStorage3DMultisampleEXT(_ texture:GLuint, _ target:GLenum, _ samples:GLsizei, _ internalformat:GLenum, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ fixedsamplelocations:GLboolean) {glTextureStorage3DMultisampleEXT_P(texture, target, samples, internalformat, width, height, depth, fixedsamplelocations)}
public func glTextureStorage3DMultisampleEXT(texture:GLuint, target:GLenum, samples:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei, depth:GLsizei, fixedsamplelocations:GLboolean) {glTextureStorage3DMultisampleEXT_P(texture, target, samples, internalformat, width, height, depth, fixedsamplelocations)}
var glTextureStorage3DMultisampleEXT_P:@convention(c)(GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean) -> Void = glTextureStorage3DMultisampleEXT_L
public func glTextureStorageSparseAMD(_ texture:GLuint, _ target:GLenum, _ internalFormat:GLenum, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ layers:GLsizei, _ flags:GLbitfield) {glTextureStorageSparseAMD_P(texture, target, internalFormat, width, height, depth, layers, flags)}
public func glTextureStorageSparseAMD(texture:GLuint, target:GLenum, internalFormat:GLenum, width:GLsizei, height:GLsizei, depth:GLsizei, layers:GLsizei, flags:GLbitfield) {glTextureStorageSparseAMD_P(texture, target, internalFormat, width, height, depth, layers, flags)}
var glTextureStorageSparseAMD_P:@convention(c)(GLuint, GLenum, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLbitfield) -> Void = glTextureStorageSparseAMD_L
public func glTextureSubImage1D(_ texture:GLuint, _ level:GLint, _ xoffset:GLint, _ width:GLsizei, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeRawPointer) {glTextureSubImage1D_P(texture, level, xoffset, width, format, type, pixels)}
public func glTextureSubImage1D(texture:GLuint, level:GLint, xoffset:GLint, width:GLsizei, format:GLenum, type:GLenum, pixels:UnsafeRawPointer) {glTextureSubImage1D_P(texture, level, xoffset, width, format, type, pixels)}
var glTextureSubImage1D_P:@convention(c)(GLuint, GLint, GLint, GLsizei, GLenum, GLenum, UnsafeRawPointer) -> Void = glTextureSubImage1D_L
public func glTextureSubImage1DEXT(_ texture:GLuint, _ target:GLenum, _ level:GLint, _ xoffset:GLint, _ width:GLsizei, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeRawPointer) {glTextureSubImage1DEXT_P(texture, target, level, xoffset, width, format, type, pixels)}
public func glTextureSubImage1DEXT(texture:GLuint, target:GLenum, level:GLint, xoffset:GLint, width:GLsizei, format:GLenum, type:GLenum, pixels:UnsafeRawPointer) {glTextureSubImage1DEXT_P(texture, target, level, xoffset, width, format, type, pixels)}
var glTextureSubImage1DEXT_P:@convention(c)(GLuint, GLenum, GLint, GLint, GLsizei, GLenum, GLenum, UnsafeRawPointer) -> Void = glTextureSubImage1DEXT_L
public func glTextureSubImage2D(_ texture:GLuint, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ width:GLsizei, _ height:GLsizei, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeRawPointer) {glTextureSubImage2D_P(texture, level, xoffset, yoffset, width, height, format, type, pixels)}
public func glTextureSubImage2D(texture:GLuint, level:GLint, xoffset:GLint, yoffset:GLint, width:GLsizei, height:GLsizei, format:GLenum, type:GLenum, pixels:UnsafeRawPointer) {glTextureSubImage2D_P(texture, level, xoffset, yoffset, width, height, format, type, pixels)}
var glTextureSubImage2D_P:@convention(c)(GLuint, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, UnsafeRawPointer) -> Void = glTextureSubImage2D_L
public func glTextureSubImage2DEXT(_ texture:GLuint, _ target:GLenum, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ width:GLsizei, _ height:GLsizei, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeRawPointer) {glTextureSubImage2DEXT_P(texture, target, level, xoffset, yoffset, width, height, format, type, pixels)}
public func glTextureSubImage2DEXT(texture:GLuint, target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, width:GLsizei, height:GLsizei, format:GLenum, type:GLenum, pixels:UnsafeRawPointer) {glTextureSubImage2DEXT_P(texture, target, level, xoffset, yoffset, width, height, format, type, pixels)}
var glTextureSubImage2DEXT_P:@convention(c)(GLuint, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, UnsafeRawPointer) -> Void = glTextureSubImage2DEXT_L
public func glTextureSubImage3D(_ texture:GLuint, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ zoffset:GLint, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeRawPointer) {glTextureSubImage3D_P(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)}
public func glTextureSubImage3D(texture:GLuint, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, format:GLenum, type:GLenum, pixels:UnsafeRawPointer) {glTextureSubImage3D_P(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)}
var glTextureSubImage3D_P:@convention(c)(GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, UnsafeRawPointer) -> Void = glTextureSubImage3D_L
public func glTextureSubImage3DEXT(_ texture:GLuint, _ target:GLenum, _ level:GLint, _ xoffset:GLint, _ yoffset:GLint, _ zoffset:GLint, _ width:GLsizei, _ height:GLsizei, _ depth:GLsizei, _ format:GLenum, _ type:GLenum, _ pixels:UnsafeRawPointer) {glTextureSubImage3DEXT_P(texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)}
public func glTextureSubImage3DEXT(texture:GLuint, target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, format:GLenum, type:GLenum, pixels:UnsafeRawPointer) {glTextureSubImage3DEXT_P(texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)}
var glTextureSubImage3DEXT_P:@convention(c)(GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, UnsafeRawPointer) -> Void = glTextureSubImage3DEXT_L
public func glTextureView(_ texture:GLuint, _ target:GLenum, _ origtexture:GLuint, _ internalformat:GLenum, _ minlevel:GLuint, _ numlevels:GLuint, _ minlayer:GLuint, _ numlayers:GLuint) {glTextureView_P(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers)}
public func glTextureView(texture:GLuint, target:GLenum, origtexture:GLuint, internalformat:GLenum, minlevel:GLuint, numlevels:GLuint, minlayer:GLuint, numlayers:GLuint) {glTextureView_P(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers)}
var glTextureView_P:@convention(c)(GLuint, GLenum, GLuint, GLenum, GLuint, GLuint, GLuint, GLuint) -> Void = glTextureView_L
public func glTextureViewEXT(_ texture:GLuint, _ target:GLenum, _ origtexture:GLuint, _ internalformat:GLenum, _ minlevel:GLuint, _ numlevels:GLuint, _ minlayer:GLuint, _ numlayers:GLuint) {glTextureViewEXT_P(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers)}
public func glTextureViewEXT(texture:GLuint, target:GLenum, origtexture:GLuint, internalformat:GLenum, minlevel:GLuint, numlevels:GLuint, minlayer:GLuint, numlayers:GLuint) {glTextureViewEXT_P(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers)}
var glTextureViewEXT_P:@convention(c)(GLuint, GLenum, GLuint, GLenum, GLuint, GLuint, GLuint, GLuint) -> Void = glTextureViewEXT_L
public func glTextureViewOES(_ texture:GLuint, _ target:GLenum, _ origtexture:GLuint, _ internalformat:GLenum, _ minlevel:GLuint, _ numlevels:GLuint, _ minlayer:GLuint, _ numlayers:GLuint) {glTextureViewOES_P(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers)}
public func glTextureViewOES(texture:GLuint, target:GLenum, origtexture:GLuint, internalformat:GLenum, minlevel:GLuint, numlevels:GLuint, minlayer:GLuint, numlayers:GLuint) {glTextureViewOES_P(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers)}
var glTextureViewOES_P:@convention(c)(GLuint, GLenum, GLuint, GLenum, GLuint, GLuint, GLuint, GLuint) -> Void = glTextureViewOES_L
public func glTrackMatrixNV(_ target:GLenum, _ address:GLuint, _ matrix:GLenum, _ transform:GLenum) {glTrackMatrixNV_P(target, address, matrix, transform)}
public func glTrackMatrixNV(target:GLenum, address:GLuint, matrix:GLenum, transform:GLenum) {glTrackMatrixNV_P(target, address, matrix, transform)}
var glTrackMatrixNV_P:@convention(c)(GLenum, GLuint, GLenum, GLenum) -> Void = glTrackMatrixNV_L
public func glTransformFeedbackAttribsNV(_ count:GLsizei, _ attribs:UnsafePointer<GLint>, _ bufferMode:GLenum) {glTransformFeedbackAttribsNV_P(count, attribs, bufferMode)}
public func glTransformFeedbackAttribsNV(count:GLsizei, attribs:UnsafePointer<GLint>, bufferMode:GLenum) {glTransformFeedbackAttribsNV_P(count, attribs, bufferMode)}
var glTransformFeedbackAttribsNV_P:@convention(c)(GLsizei, UnsafePointer<GLint>, GLenum) -> Void = glTransformFeedbackAttribsNV_L
public func glTransformFeedbackBufferBase(_ xfb:GLuint, _ index:GLuint, _ buffer:GLuint) {glTransformFeedbackBufferBase_P(xfb, index, buffer)}
public func glTransformFeedbackBufferBase(xfb:GLuint, index:GLuint, buffer:GLuint) {glTransformFeedbackBufferBase_P(xfb, index, buffer)}
var glTransformFeedbackBufferBase_P:@convention(c)(GLuint, GLuint, GLuint) -> Void = glTransformFeedbackBufferBase_L
public func glTransformFeedbackBufferRange(_ xfb:GLuint, _ index:GLuint, _ buffer:GLuint, _ offset:GLintptr, _ size:GLsizeiptr) {glTransformFeedbackBufferRange_P(xfb, index, buffer, offset, size)}
public func glTransformFeedbackBufferRange(xfb:GLuint, index:GLuint, buffer:GLuint, offset:GLintptr, size:GLsizeiptr) {glTransformFeedbackBufferRange_P(xfb, index, buffer, offset, size)}
var glTransformFeedbackBufferRange_P:@convention(c)(GLuint, GLuint, GLuint, GLintptr, GLsizeiptr) -> Void = glTransformFeedbackBufferRange_L
public func glTransformFeedbackStreamAttribsNV(_ count:GLsizei, _ attribs:UnsafePointer<GLint>, _ nbuffers:GLsizei, _ bufstreams:UnsafePointer<GLint>, _ bufferMode:GLenum) {glTransformFeedbackStreamAttribsNV_P(count, attribs, nbuffers, bufstreams, bufferMode)}
public func glTransformFeedbackStreamAttribsNV(count:GLsizei, attribs:UnsafePointer<GLint>, nbuffers:GLsizei, bufstreams:UnsafePointer<GLint>, bufferMode:GLenum) {glTransformFeedbackStreamAttribsNV_P(count, attribs, nbuffers, bufstreams, bufferMode)}
var glTransformFeedbackStreamAttribsNV_P:@convention(c)(GLsizei, UnsafePointer<GLint>, GLsizei, UnsafePointer<GLint>, GLenum) -> Void = glTransformFeedbackStreamAttribsNV_L
public func glTransformFeedbackVaryings(_ program:GLuint, _ count:GLsizei, _ varyings:UnsafePointer<UnsafePointer<GLchar>>, _ bufferMode:GLenum) {glTransformFeedbackVaryings_P(program, count, varyings, bufferMode)}
public func glTransformFeedbackVaryings(program:GLuint, count:GLsizei, varyings:UnsafePointer<UnsafePointer<GLchar>>, bufferMode:GLenum) {glTransformFeedbackVaryings_P(program, count, varyings, bufferMode)}
var glTransformFeedbackVaryings_P:@convention(c)(GLuint, GLsizei, UnsafePointer<UnsafePointer<GLchar>>, GLenum) -> Void = glTransformFeedbackVaryings_L
public func glTransformFeedbackVaryingsEXT(_ program:GLuint, _ count:GLsizei, _ varyings:UnsafePointer<UnsafePointer<GLchar>>, _ bufferMode:GLenum) {glTransformFeedbackVaryingsEXT_P(program, count, varyings, bufferMode)}
public func glTransformFeedbackVaryingsEXT(program:GLuint, count:GLsizei, varyings:UnsafePointer<UnsafePointer<GLchar>>, bufferMode:GLenum) {glTransformFeedbackVaryingsEXT_P(program, count, varyings, bufferMode)}
var glTransformFeedbackVaryingsEXT_P:@convention(c)(GLuint, GLsizei, UnsafePointer<UnsafePointer<GLchar>>, GLenum) -> Void = glTransformFeedbackVaryingsEXT_L
public func glTransformFeedbackVaryingsNV(_ program:GLuint, _ count:GLsizei, _ locations:UnsafePointer<GLint>, _ bufferMode:GLenum) {glTransformFeedbackVaryingsNV_P(program, count, locations, bufferMode)}
public func glTransformFeedbackVaryingsNV(program:GLuint, count:GLsizei, locations:UnsafePointer<GLint>, bufferMode:GLenum) {glTransformFeedbackVaryingsNV_P(program, count, locations, bufferMode)}
var glTransformFeedbackVaryingsNV_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLint>, GLenum) -> Void = glTransformFeedbackVaryingsNV_L
public func glTransformPathNV(_ resultPath:GLuint, _ srcPath:GLuint, _ transformType:GLenum, _ transformValues:UnsafePointer<GLfloat>) {glTransformPathNV_P(resultPath, srcPath, transformType, transformValues)}
public func glTransformPathNV(resultPath:GLuint, srcPath:GLuint, transformType:GLenum, transformValues:UnsafePointer<GLfloat>) {glTransformPathNV_P(resultPath, srcPath, transformType, transformValues)}
var glTransformPathNV_P:@convention(c)(GLuint, GLuint, GLenum, UnsafePointer<GLfloat>) -> Void = glTransformPathNV_L
public func glTranslated(_ x:GLdouble, _ y:GLdouble, _ z:GLdouble) {glTranslated_P(x, y, z)}
public func glTranslated(x:GLdouble, y:GLdouble, z:GLdouble) {glTranslated_P(x, y, z)}
var glTranslated_P:@convention(c)(GLdouble, GLdouble, GLdouble) -> Void = glTranslated_L
public func glTranslatef(_ x:GLfloat, _ y:GLfloat, _ z:GLfloat) {glTranslatef_P(x, y, z)}
public func glTranslatef(x:GLfloat, y:GLfloat, z:GLfloat) {glTranslatef_P(x, y, z)}
var glTranslatef_P:@convention(c)(GLfloat, GLfloat, GLfloat) -> Void = glTranslatef_L
public func glTranslatex(_ x:GLfixed, _ y:GLfixed, _ z:GLfixed) {glTranslatex_P(x, y, z)}
public func glTranslatex(x:GLfixed, y:GLfixed, z:GLfixed) {glTranslatex_P(x, y, z)}
var glTranslatex_P:@convention(c)(GLfixed, GLfixed, GLfixed) -> Void = glTranslatex_L
public func glTranslatexOES(_ x:GLfixed, _ y:GLfixed, _ z:GLfixed) {glTranslatexOES_P(x, y, z)}
public func glTranslatexOES(x:GLfixed, y:GLfixed, z:GLfixed) {glTranslatexOES_P(x, y, z)}
var glTranslatexOES_P:@convention(c)(GLfixed, GLfixed, GLfixed) -> Void = glTranslatexOES_L
public func glUniform1d(_ location:GLint, _ x:GLdouble) {glUniform1d_P(location, x)}
public func glUniform1d(location:GLint, x:GLdouble) {glUniform1d_P(location, x)}
var glUniform1d_P:@convention(c)(GLint, GLdouble) -> Void = glUniform1d_L
public func glUniform1dv(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLdouble>) {glUniform1dv_P(location, count, value)}
public func glUniform1dv(location:GLint, count:GLsizei, value:UnsafePointer<GLdouble>) {glUniform1dv_P(location, count, value)}
var glUniform1dv_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLdouble>) -> Void = glUniform1dv_L
public func glUniform1f(_ location:GLint, _ v0:GLfloat) {glUniform1f_P(location, v0)}
public func glUniform1f(location:GLint, v0:GLfloat) {glUniform1f_P(location, v0)}
var glUniform1f_P:@convention(c)(GLint, GLfloat) -> Void = glUniform1f_L
public func glUniform1fARB(_ location:GLint, _ v0:GLfloat) {glUniform1fARB_P(location, v0)}
public func glUniform1fARB(location:GLint, v0:GLfloat) {glUniform1fARB_P(location, v0)}
var glUniform1fARB_P:@convention(c)(GLint, GLfloat) -> Void = glUniform1fARB_L
public func glUniform1fv(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLfloat>) {glUniform1fv_P(location, count, value)}
public func glUniform1fv(location:GLint, count:GLsizei, value:UnsafePointer<GLfloat>) {glUniform1fv_P(location, count, value)}
var glUniform1fv_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLfloat>) -> Void = glUniform1fv_L
public func glUniform1fvARB(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLfloat>) {glUniform1fvARB_P(location, count, value)}
public func glUniform1fvARB(location:GLint, count:GLsizei, value:UnsafePointer<GLfloat>) {glUniform1fvARB_P(location, count, value)}
var glUniform1fvARB_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLfloat>) -> Void = glUniform1fvARB_L
public func glUniform1i(_ location:GLint, _ v0:GLint) {glUniform1i_P(location, v0)}
public func glUniform1i(location:GLint, v0:GLint) {glUniform1i_P(location, v0)}
var glUniform1i_P:@convention(c)(GLint, GLint) -> Void = glUniform1i_L
public func glUniform1i64ARB(_ location:GLint, _ x:GLint64) {glUniform1i64ARB_P(location, x)}
public func glUniform1i64ARB(location:GLint, x:GLint64) {glUniform1i64ARB_P(location, x)}
var glUniform1i64ARB_P:@convention(c)(GLint, GLint64) -> Void = glUniform1i64ARB_L
public func glUniform1i64NV(_ location:GLint, _ x:GLint64EXT) {glUniform1i64NV_P(location, x)}
public func glUniform1i64NV(location:GLint, x:GLint64EXT) {glUniform1i64NV_P(location, x)}
var glUniform1i64NV_P:@convention(c)(GLint, GLint64EXT) -> Void = glUniform1i64NV_L
public func glUniform1i64vARB(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLint64>) {glUniform1i64vARB_P(location, count, value)}
public func glUniform1i64vARB(location:GLint, count:GLsizei, value:UnsafePointer<GLint64>) {glUniform1i64vARB_P(location, count, value)}
var glUniform1i64vARB_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLint64>) -> Void = glUniform1i64vARB_L
public func glUniform1i64vNV(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLint64EXT>) {glUniform1i64vNV_P(location, count, value)}
public func glUniform1i64vNV(location:GLint, count:GLsizei, value:UnsafePointer<GLint64EXT>) {glUniform1i64vNV_P(location, count, value)}
var glUniform1i64vNV_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLint64EXT>) -> Void = glUniform1i64vNV_L
public func glUniform1iARB(_ location:GLint, _ v0:GLint) {glUniform1iARB_P(location, v0)}
public func glUniform1iARB(location:GLint, v0:GLint) {glUniform1iARB_P(location, v0)}
var glUniform1iARB_P:@convention(c)(GLint, GLint) -> Void = glUniform1iARB_L
public func glUniform1iv(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLint>) {glUniform1iv_P(location, count, value)}
public func glUniform1iv(location:GLint, count:GLsizei, value:UnsafePointer<GLint>) {glUniform1iv_P(location, count, value)}
var glUniform1iv_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLint>) -> Void = glUniform1iv_L
public func glUniform1ivARB(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLint>) {glUniform1ivARB_P(location, count, value)}
public func glUniform1ivARB(location:GLint, count:GLsizei, value:UnsafePointer<GLint>) {glUniform1ivARB_P(location, count, value)}
var glUniform1ivARB_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLint>) -> Void = glUniform1ivARB_L
public func glUniform1ui(_ location:GLint, _ v0:GLuint) {glUniform1ui_P(location, v0)}
public func glUniform1ui(location:GLint, v0:GLuint) {glUniform1ui_P(location, v0)}
var glUniform1ui_P:@convention(c)(GLint, GLuint) -> Void = glUniform1ui_L
public func glUniform1ui64ARB(_ location:GLint, _ x:GLuint64) {glUniform1ui64ARB_P(location, x)}
public func glUniform1ui64ARB(location:GLint, x:GLuint64) {glUniform1ui64ARB_P(location, x)}
var glUniform1ui64ARB_P:@convention(c)(GLint, GLuint64) -> Void = glUniform1ui64ARB_L
public func glUniform1ui64NV(_ location:GLint, _ x:GLuint64EXT) {glUniform1ui64NV_P(location, x)}
public func glUniform1ui64NV(location:GLint, x:GLuint64EXT) {glUniform1ui64NV_P(location, x)}
var glUniform1ui64NV_P:@convention(c)(GLint, GLuint64EXT) -> Void = glUniform1ui64NV_L
public func glUniform1ui64vARB(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint64>) {glUniform1ui64vARB_P(location, count, value)}
public func glUniform1ui64vARB(location:GLint, count:GLsizei, value:UnsafePointer<GLuint64>) {glUniform1ui64vARB_P(location, count, value)}
var glUniform1ui64vARB_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLuint64>) -> Void = glUniform1ui64vARB_L
public func glUniform1ui64vNV(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint64EXT>) {glUniform1ui64vNV_P(location, count, value)}
public func glUniform1ui64vNV(location:GLint, count:GLsizei, value:UnsafePointer<GLuint64EXT>) {glUniform1ui64vNV_P(location, count, value)}
var glUniform1ui64vNV_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLuint64EXT>) -> Void = glUniform1ui64vNV_L
public func glUniform1uiEXT(_ location:GLint, _ v0:GLuint) {glUniform1uiEXT_P(location, v0)}
public func glUniform1uiEXT(location:GLint, v0:GLuint) {glUniform1uiEXT_P(location, v0)}
var glUniform1uiEXT_P:@convention(c)(GLint, GLuint) -> Void = glUniform1uiEXT_L
public func glUniform1uiv(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint>) {glUniform1uiv_P(location, count, value)}
public func glUniform1uiv(location:GLint, count:GLsizei, value:UnsafePointer<GLuint>) {glUniform1uiv_P(location, count, value)}
var glUniform1uiv_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLuint>) -> Void = glUniform1uiv_L
public func glUniform1uivEXT(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint>) {glUniform1uivEXT_P(location, count, value)}
public func glUniform1uivEXT(location:GLint, count:GLsizei, value:UnsafePointer<GLuint>) {glUniform1uivEXT_P(location, count, value)}
var glUniform1uivEXT_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLuint>) -> Void = glUniform1uivEXT_L
public func glUniform2d(_ location:GLint, _ x:GLdouble, _ y:GLdouble) {glUniform2d_P(location, x, y)}
public func glUniform2d(location:GLint, x:GLdouble, y:GLdouble) {glUniform2d_P(location, x, y)}
var glUniform2d_P:@convention(c)(GLint, GLdouble, GLdouble) -> Void = glUniform2d_L
public func glUniform2dv(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLdouble>) {glUniform2dv_P(location, count, value)}
public func glUniform2dv(location:GLint, count:GLsizei, value:UnsafePointer<GLdouble>) {glUniform2dv_P(location, count, value)}
var glUniform2dv_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLdouble>) -> Void = glUniform2dv_L
public func glUniform2f(_ location:GLint, _ v0:GLfloat, _ v1:GLfloat) {glUniform2f_P(location, v0, v1)}
public func glUniform2f(location:GLint, v0:GLfloat, v1:GLfloat) {glUniform2f_P(location, v0, v1)}
var glUniform2f_P:@convention(c)(GLint, GLfloat, GLfloat) -> Void = glUniform2f_L
public func glUniform2fARB(_ location:GLint, _ v0:GLfloat, _ v1:GLfloat) {glUniform2fARB_P(location, v0, v1)}
public func glUniform2fARB(location:GLint, v0:GLfloat, v1:GLfloat) {glUniform2fARB_P(location, v0, v1)}
var glUniform2fARB_P:@convention(c)(GLint, GLfloat, GLfloat) -> Void = glUniform2fARB_L
public func glUniform2fv(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLfloat>) {glUniform2fv_P(location, count, value)}
public func glUniform2fv(location:GLint, count:GLsizei, value:UnsafePointer<GLfloat>) {glUniform2fv_P(location, count, value)}
var glUniform2fv_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLfloat>) -> Void = glUniform2fv_L
public func glUniform2fvARB(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLfloat>) {glUniform2fvARB_P(location, count, value)}
public func glUniform2fvARB(location:GLint, count:GLsizei, value:UnsafePointer<GLfloat>) {glUniform2fvARB_P(location, count, value)}
var glUniform2fvARB_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLfloat>) -> Void = glUniform2fvARB_L
public func glUniform2i(_ location:GLint, _ v0:GLint, _ v1:GLint) {glUniform2i_P(location, v0, v1)}
public func glUniform2i(location:GLint, v0:GLint, v1:GLint) {glUniform2i_P(location, v0, v1)}
var glUniform2i_P:@convention(c)(GLint, GLint, GLint) -> Void = glUniform2i_L
public func glUniform2i64ARB(_ location:GLint, _ x:GLint64, _ y:GLint64) {glUniform2i64ARB_P(location, x, y)}
public func glUniform2i64ARB(location:GLint, x:GLint64, y:GLint64) {glUniform2i64ARB_P(location, x, y)}
var glUniform2i64ARB_P:@convention(c)(GLint, GLint64, GLint64) -> Void = glUniform2i64ARB_L
public func glUniform2i64NV(_ location:GLint, _ x:GLint64EXT, _ y:GLint64EXT) {glUniform2i64NV_P(location, x, y)}
public func glUniform2i64NV(location:GLint, x:GLint64EXT, y:GLint64EXT) {glUniform2i64NV_P(location, x, y)}
var glUniform2i64NV_P:@convention(c)(GLint, GLint64EXT, GLint64EXT) -> Void = glUniform2i64NV_L
public func glUniform2i64vARB(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLint64>) {glUniform2i64vARB_P(location, count, value)}
public func glUniform2i64vARB(location:GLint, count:GLsizei, value:UnsafePointer<GLint64>) {glUniform2i64vARB_P(location, count, value)}
var glUniform2i64vARB_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLint64>) -> Void = glUniform2i64vARB_L
public func glUniform2i64vNV(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLint64EXT>) {glUniform2i64vNV_P(location, count, value)}
public func glUniform2i64vNV(location:GLint, count:GLsizei, value:UnsafePointer<GLint64EXT>) {glUniform2i64vNV_P(location, count, value)}
var glUniform2i64vNV_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLint64EXT>) -> Void = glUniform2i64vNV_L
public func glUniform2iARB(_ location:GLint, _ v0:GLint, _ v1:GLint) {glUniform2iARB_P(location, v0, v1)}
public func glUniform2iARB(location:GLint, v0:GLint, v1:GLint) {glUniform2iARB_P(location, v0, v1)}
var glUniform2iARB_P:@convention(c)(GLint, GLint, GLint) -> Void = glUniform2iARB_L
public func glUniform2iv(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLint>) {glUniform2iv_P(location, count, value)}
public func glUniform2iv(location:GLint, count:GLsizei, value:UnsafePointer<GLint>) {glUniform2iv_P(location, count, value)}
var glUniform2iv_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLint>) -> Void = glUniform2iv_L
public func glUniform2ivARB(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLint>) {glUniform2ivARB_P(location, count, value)}
public func glUniform2ivARB(location:GLint, count:GLsizei, value:UnsafePointer<GLint>) {glUniform2ivARB_P(location, count, value)}
var glUniform2ivARB_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLint>) -> Void = glUniform2ivARB_L
public func glUniform2ui(_ location:GLint, _ v0:GLuint, _ v1:GLuint) {glUniform2ui_P(location, v0, v1)}
public func glUniform2ui(location:GLint, v0:GLuint, v1:GLuint) {glUniform2ui_P(location, v0, v1)}
var glUniform2ui_P:@convention(c)(GLint, GLuint, GLuint) -> Void = glUniform2ui_L
public func glUniform2ui64ARB(_ location:GLint, _ x:GLuint64, _ y:GLuint64) {glUniform2ui64ARB_P(location, x, y)}
public func glUniform2ui64ARB(location:GLint, x:GLuint64, y:GLuint64) {glUniform2ui64ARB_P(location, x, y)}
var glUniform2ui64ARB_P:@convention(c)(GLint, GLuint64, GLuint64) -> Void = glUniform2ui64ARB_L
public func glUniform2ui64NV(_ location:GLint, _ x:GLuint64EXT, _ y:GLuint64EXT) {glUniform2ui64NV_P(location, x, y)}
public func glUniform2ui64NV(location:GLint, x:GLuint64EXT, y:GLuint64EXT) {glUniform2ui64NV_P(location, x, y)}
var glUniform2ui64NV_P:@convention(c)(GLint, GLuint64EXT, GLuint64EXT) -> Void = glUniform2ui64NV_L
public func glUniform2ui64vARB(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint64>) {glUniform2ui64vARB_P(location, count, value)}
public func glUniform2ui64vARB(location:GLint, count:GLsizei, value:UnsafePointer<GLuint64>) {glUniform2ui64vARB_P(location, count, value)}
var glUniform2ui64vARB_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLuint64>) -> Void = glUniform2ui64vARB_L
public func glUniform2ui64vNV(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint64EXT>) {glUniform2ui64vNV_P(location, count, value)}
public func glUniform2ui64vNV(location:GLint, count:GLsizei, value:UnsafePointer<GLuint64EXT>) {glUniform2ui64vNV_P(location, count, value)}
var glUniform2ui64vNV_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLuint64EXT>) -> Void = glUniform2ui64vNV_L
public func glUniform2uiEXT(_ location:GLint, _ v0:GLuint, _ v1:GLuint) {glUniform2uiEXT_P(location, v0, v1)}
public func glUniform2uiEXT(location:GLint, v0:GLuint, v1:GLuint) {glUniform2uiEXT_P(location, v0, v1)}
var glUniform2uiEXT_P:@convention(c)(GLint, GLuint, GLuint) -> Void = glUniform2uiEXT_L
public func glUniform2uiv(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint>) {glUniform2uiv_P(location, count, value)}
public func glUniform2uiv(location:GLint, count:GLsizei, value:UnsafePointer<GLuint>) {glUniform2uiv_P(location, count, value)}
var glUniform2uiv_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLuint>) -> Void = glUniform2uiv_L
public func glUniform2uivEXT(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint>) {glUniform2uivEXT_P(location, count, value)}
public func glUniform2uivEXT(location:GLint, count:GLsizei, value:UnsafePointer<GLuint>) {glUniform2uivEXT_P(location, count, value)}
var glUniform2uivEXT_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLuint>) -> Void = glUniform2uivEXT_L
public func glUniform3d(_ location:GLint, _ x:GLdouble, _ y:GLdouble, _ z:GLdouble) {glUniform3d_P(location, x, y, z)}
public func glUniform3d(location:GLint, x:GLdouble, y:GLdouble, z:GLdouble) {glUniform3d_P(location, x, y, z)}
var glUniform3d_P:@convention(c)(GLint, GLdouble, GLdouble, GLdouble) -> Void = glUniform3d_L
public func glUniform3dv(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLdouble>) {glUniform3dv_P(location, count, value)}
public func glUniform3dv(location:GLint, count:GLsizei, value:UnsafePointer<GLdouble>) {glUniform3dv_P(location, count, value)}
var glUniform3dv_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLdouble>) -> Void = glUniform3dv_L
public func glUniform3f(_ location:GLint, _ v0:GLfloat, _ v1:GLfloat, _ v2:GLfloat) {glUniform3f_P(location, v0, v1, v2)}
public func glUniform3f(location:GLint, v0:GLfloat, v1:GLfloat, v2:GLfloat) {glUniform3f_P(location, v0, v1, v2)}
var glUniform3f_P:@convention(c)(GLint, GLfloat, GLfloat, GLfloat) -> Void = glUniform3f_L
public func glUniform3fARB(_ location:GLint, _ v0:GLfloat, _ v1:GLfloat, _ v2:GLfloat) {glUniform3fARB_P(location, v0, v1, v2)}
public func glUniform3fARB(location:GLint, v0:GLfloat, v1:GLfloat, v2:GLfloat) {glUniform3fARB_P(location, v0, v1, v2)}
var glUniform3fARB_P:@convention(c)(GLint, GLfloat, GLfloat, GLfloat) -> Void = glUniform3fARB_L
public func glUniform3fv(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLfloat>) {glUniform3fv_P(location, count, value)}
public func glUniform3fv(location:GLint, count:GLsizei, value:UnsafePointer<GLfloat>) {glUniform3fv_P(location, count, value)}
var glUniform3fv_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLfloat>) -> Void = glUniform3fv_L
public func glUniform3fvARB(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLfloat>) {glUniform3fvARB_P(location, count, value)}
public func glUniform3fvARB(location:GLint, count:GLsizei, value:UnsafePointer<GLfloat>) {glUniform3fvARB_P(location, count, value)}
var glUniform3fvARB_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLfloat>) -> Void = glUniform3fvARB_L
public func glUniform3i(_ location:GLint, _ v0:GLint, _ v1:GLint, _ v2:GLint) {glUniform3i_P(location, v0, v1, v2)}
public func glUniform3i(location:GLint, v0:GLint, v1:GLint, v2:GLint) {glUniform3i_P(location, v0, v1, v2)}
var glUniform3i_P:@convention(c)(GLint, GLint, GLint, GLint) -> Void = glUniform3i_L
public func glUniform3i64ARB(_ location:GLint, _ x:GLint64, _ y:GLint64, _ z:GLint64) {glUniform3i64ARB_P(location, x, y, z)}
public func glUniform3i64ARB(location:GLint, x:GLint64, y:GLint64, z:GLint64) {glUniform3i64ARB_P(location, x, y, z)}
var glUniform3i64ARB_P:@convention(c)(GLint, GLint64, GLint64, GLint64) -> Void = glUniform3i64ARB_L
public func glUniform3i64NV(_ location:GLint, _ x:GLint64EXT, _ y:GLint64EXT, _ z:GLint64EXT) {glUniform3i64NV_P(location, x, y, z)}
public func glUniform3i64NV(location:GLint, x:GLint64EXT, y:GLint64EXT, z:GLint64EXT) {glUniform3i64NV_P(location, x, y, z)}
var glUniform3i64NV_P:@convention(c)(GLint, GLint64EXT, GLint64EXT, GLint64EXT) -> Void = glUniform3i64NV_L
public func glUniform3i64vARB(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLint64>) {glUniform3i64vARB_P(location, count, value)}
public func glUniform3i64vARB(location:GLint, count:GLsizei, value:UnsafePointer<GLint64>) {glUniform3i64vARB_P(location, count, value)}
var glUniform3i64vARB_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLint64>) -> Void = glUniform3i64vARB_L
public func glUniform3i64vNV(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLint64EXT>) {glUniform3i64vNV_P(location, count, value)}
public func glUniform3i64vNV(location:GLint, count:GLsizei, value:UnsafePointer<GLint64EXT>) {glUniform3i64vNV_P(location, count, value)}
var glUniform3i64vNV_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLint64EXT>) -> Void = glUniform3i64vNV_L
public func glUniform3iARB(_ location:GLint, _ v0:GLint, _ v1:GLint, _ v2:GLint) {glUniform3iARB_P(location, v0, v1, v2)}
public func glUniform3iARB(location:GLint, v0:GLint, v1:GLint, v2:GLint) {glUniform3iARB_P(location, v0, v1, v2)}
var glUniform3iARB_P:@convention(c)(GLint, GLint, GLint, GLint) -> Void = glUniform3iARB_L
public func glUniform3iv(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLint>) {glUniform3iv_P(location, count, value)}
public func glUniform3iv(location:GLint, count:GLsizei, value:UnsafePointer<GLint>) {glUniform3iv_P(location, count, value)}
var glUniform3iv_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLint>) -> Void = glUniform3iv_L
public func glUniform3ivARB(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLint>) {glUniform3ivARB_P(location, count, value)}
public func glUniform3ivARB(location:GLint, count:GLsizei, value:UnsafePointer<GLint>) {glUniform3ivARB_P(location, count, value)}
var glUniform3ivARB_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLint>) -> Void = glUniform3ivARB_L
public func glUniform3ui(_ location:GLint, _ v0:GLuint, _ v1:GLuint, _ v2:GLuint) {glUniform3ui_P(location, v0, v1, v2)}
public func glUniform3ui(location:GLint, v0:GLuint, v1:GLuint, v2:GLuint) {glUniform3ui_P(location, v0, v1, v2)}
var glUniform3ui_P:@convention(c)(GLint, GLuint, GLuint, GLuint) -> Void = glUniform3ui_L
public func glUniform3ui64ARB(_ location:GLint, _ x:GLuint64, _ y:GLuint64, _ z:GLuint64) {glUniform3ui64ARB_P(location, x, y, z)}
public func glUniform3ui64ARB(location:GLint, x:GLuint64, y:GLuint64, z:GLuint64) {glUniform3ui64ARB_P(location, x, y, z)}
var glUniform3ui64ARB_P:@convention(c)(GLint, GLuint64, GLuint64, GLuint64) -> Void = glUniform3ui64ARB_L
public func glUniform3ui64NV(_ location:GLint, _ x:GLuint64EXT, _ y:GLuint64EXT, _ z:GLuint64EXT) {glUniform3ui64NV_P(location, x, y, z)}
public func glUniform3ui64NV(location:GLint, x:GLuint64EXT, y:GLuint64EXT, z:GLuint64EXT) {glUniform3ui64NV_P(location, x, y, z)}
var glUniform3ui64NV_P:@convention(c)(GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT) -> Void = glUniform3ui64NV_L
public func glUniform3ui64vARB(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint64>) {glUniform3ui64vARB_P(location, count, value)}
public func glUniform3ui64vARB(location:GLint, count:GLsizei, value:UnsafePointer<GLuint64>) {glUniform3ui64vARB_P(location, count, value)}
var glUniform3ui64vARB_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLuint64>) -> Void = glUniform3ui64vARB_L
public func glUniform3ui64vNV(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint64EXT>) {glUniform3ui64vNV_P(location, count, value)}
public func glUniform3ui64vNV(location:GLint, count:GLsizei, value:UnsafePointer<GLuint64EXT>) {glUniform3ui64vNV_P(location, count, value)}
var glUniform3ui64vNV_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLuint64EXT>) -> Void = glUniform3ui64vNV_L
public func glUniform3uiEXT(_ location:GLint, _ v0:GLuint, _ v1:GLuint, _ v2:GLuint) {glUniform3uiEXT_P(location, v0, v1, v2)}
public func glUniform3uiEXT(location:GLint, v0:GLuint, v1:GLuint, v2:GLuint) {glUniform3uiEXT_P(location, v0, v1, v2)}
var glUniform3uiEXT_P:@convention(c)(GLint, GLuint, GLuint, GLuint) -> Void = glUniform3uiEXT_L
public func glUniform3uiv(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint>) {glUniform3uiv_P(location, count, value)}
public func glUniform3uiv(location:GLint, count:GLsizei, value:UnsafePointer<GLuint>) {glUniform3uiv_P(location, count, value)}
var glUniform3uiv_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLuint>) -> Void = glUniform3uiv_L
public func glUniform3uivEXT(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint>) {glUniform3uivEXT_P(location, count, value)}
public func glUniform3uivEXT(location:GLint, count:GLsizei, value:UnsafePointer<GLuint>) {glUniform3uivEXT_P(location, count, value)}
var glUniform3uivEXT_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLuint>) -> Void = glUniform3uivEXT_L
public func glUniform4d(_ location:GLint, _ x:GLdouble, _ y:GLdouble, _ z:GLdouble, _ w:GLdouble) {glUniform4d_P(location, x, y, z, w)}
public func glUniform4d(location:GLint, x:GLdouble, y:GLdouble, z:GLdouble, w:GLdouble) {glUniform4d_P(location, x, y, z, w)}
var glUniform4d_P:@convention(c)(GLint, GLdouble, GLdouble, GLdouble, GLdouble) -> Void = glUniform4d_L
public func glUniform4dv(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLdouble>) {glUniform4dv_P(location, count, value)}
public func glUniform4dv(location:GLint, count:GLsizei, value:UnsafePointer<GLdouble>) {glUniform4dv_P(location, count, value)}
var glUniform4dv_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLdouble>) -> Void = glUniform4dv_L
public func glUniform4f(_ location:GLint, _ v0:GLfloat, _ v1:GLfloat, _ v2:GLfloat, _ v3:GLfloat) {glUniform4f_P(location, v0, v1, v2, v3)}
public func glUniform4f(location:GLint, v0:GLfloat, v1:GLfloat, v2:GLfloat, v3:GLfloat) {glUniform4f_P(location, v0, v1, v2, v3)}
var glUniform4f_P:@convention(c)(GLint, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glUniform4f_L
public func glUniform4fARB(_ location:GLint, _ v0:GLfloat, _ v1:GLfloat, _ v2:GLfloat, _ v3:GLfloat) {glUniform4fARB_P(location, v0, v1, v2, v3)}
public func glUniform4fARB(location:GLint, v0:GLfloat, v1:GLfloat, v2:GLfloat, v3:GLfloat) {glUniform4fARB_P(location, v0, v1, v2, v3)}
var glUniform4fARB_P:@convention(c)(GLint, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glUniform4fARB_L
public func glUniform4fv(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLfloat>) {glUniform4fv_P(location, count, value)}
public func glUniform4fv(location:GLint, count:GLsizei, value:UnsafePointer<GLfloat>) {glUniform4fv_P(location, count, value)}
var glUniform4fv_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLfloat>) -> Void = glUniform4fv_L
public func glUniform4fvARB(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLfloat>) {glUniform4fvARB_P(location, count, value)}
public func glUniform4fvARB(location:GLint, count:GLsizei, value:UnsafePointer<GLfloat>) {glUniform4fvARB_P(location, count, value)}
var glUniform4fvARB_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLfloat>) -> Void = glUniform4fvARB_L
public func glUniform4i(_ location:GLint, _ v0:GLint, _ v1:GLint, _ v2:GLint, _ v3:GLint) {glUniform4i_P(location, v0, v1, v2, v3)}
public func glUniform4i(location:GLint, v0:GLint, v1:GLint, v2:GLint, v3:GLint) {glUniform4i_P(location, v0, v1, v2, v3)}
var glUniform4i_P:@convention(c)(GLint, GLint, GLint, GLint, GLint) -> Void = glUniform4i_L
public func glUniform4i64ARB(_ location:GLint, _ x:GLint64, _ y:GLint64, _ z:GLint64, _ w:GLint64) {glUniform4i64ARB_P(location, x, y, z, w)}
public func glUniform4i64ARB(location:GLint, x:GLint64, y:GLint64, z:GLint64, w:GLint64) {glUniform4i64ARB_P(location, x, y, z, w)}
var glUniform4i64ARB_P:@convention(c)(GLint, GLint64, GLint64, GLint64, GLint64) -> Void = glUniform4i64ARB_L
public func glUniform4i64NV(_ location:GLint, _ x:GLint64EXT, _ y:GLint64EXT, _ z:GLint64EXT, _ w:GLint64EXT) {glUniform4i64NV_P(location, x, y, z, w)}
public func glUniform4i64NV(location:GLint, x:GLint64EXT, y:GLint64EXT, z:GLint64EXT, w:GLint64EXT) {glUniform4i64NV_P(location, x, y, z, w)}
var glUniform4i64NV_P:@convention(c)(GLint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT) -> Void = glUniform4i64NV_L
public func glUniform4i64vARB(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLint64>) {glUniform4i64vARB_P(location, count, value)}
public func glUniform4i64vARB(location:GLint, count:GLsizei, value:UnsafePointer<GLint64>) {glUniform4i64vARB_P(location, count, value)}
var glUniform4i64vARB_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLint64>) -> Void = glUniform4i64vARB_L
public func glUniform4i64vNV(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLint64EXT>) {glUniform4i64vNV_P(location, count, value)}
public func glUniform4i64vNV(location:GLint, count:GLsizei, value:UnsafePointer<GLint64EXT>) {glUniform4i64vNV_P(location, count, value)}
var glUniform4i64vNV_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLint64EXT>) -> Void = glUniform4i64vNV_L
public func glUniform4iARB(_ location:GLint, _ v0:GLint, _ v1:GLint, _ v2:GLint, _ v3:GLint) {glUniform4iARB_P(location, v0, v1, v2, v3)}
public func glUniform4iARB(location:GLint, v0:GLint, v1:GLint, v2:GLint, v3:GLint) {glUniform4iARB_P(location, v0, v1, v2, v3)}
var glUniform4iARB_P:@convention(c)(GLint, GLint, GLint, GLint, GLint) -> Void = glUniform4iARB_L
public func glUniform4iv(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLint>) {glUniform4iv_P(location, count, value)}
public func glUniform4iv(location:GLint, count:GLsizei, value:UnsafePointer<GLint>) {glUniform4iv_P(location, count, value)}
var glUniform4iv_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLint>) -> Void = glUniform4iv_L
public func glUniform4ivARB(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLint>) {glUniform4ivARB_P(location, count, value)}
public func glUniform4ivARB(location:GLint, count:GLsizei, value:UnsafePointer<GLint>) {glUniform4ivARB_P(location, count, value)}
var glUniform4ivARB_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLint>) -> Void = glUniform4ivARB_L
public func glUniform4ui(_ location:GLint, _ v0:GLuint, _ v1:GLuint, _ v2:GLuint, _ v3:GLuint) {glUniform4ui_P(location, v0, v1, v2, v3)}
public func glUniform4ui(location:GLint, v0:GLuint, v1:GLuint, v2:GLuint, v3:GLuint) {glUniform4ui_P(location, v0, v1, v2, v3)}
var glUniform4ui_P:@convention(c)(GLint, GLuint, GLuint, GLuint, GLuint) -> Void = glUniform4ui_L
public func glUniform4ui64ARB(_ location:GLint, _ x:GLuint64, _ y:GLuint64, _ z:GLuint64, _ w:GLuint64) {glUniform4ui64ARB_P(location, x, y, z, w)}
public func glUniform4ui64ARB(location:GLint, x:GLuint64, y:GLuint64, z:GLuint64, w:GLuint64) {glUniform4ui64ARB_P(location, x, y, z, w)}
var glUniform4ui64ARB_P:@convention(c)(GLint, GLuint64, GLuint64, GLuint64, GLuint64) -> Void = glUniform4ui64ARB_L
public func glUniform4ui64NV(_ location:GLint, _ x:GLuint64EXT, _ y:GLuint64EXT, _ z:GLuint64EXT, _ w:GLuint64EXT) {glUniform4ui64NV_P(location, x, y, z, w)}
public func glUniform4ui64NV(location:GLint, x:GLuint64EXT, y:GLuint64EXT, z:GLuint64EXT, w:GLuint64EXT) {glUniform4ui64NV_P(location, x, y, z, w)}
var glUniform4ui64NV_P:@convention(c)(GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT) -> Void = glUniform4ui64NV_L
public func glUniform4ui64vARB(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint64>) {glUniform4ui64vARB_P(location, count, value)}
public func glUniform4ui64vARB(location:GLint, count:GLsizei, value:UnsafePointer<GLuint64>) {glUniform4ui64vARB_P(location, count, value)}
var glUniform4ui64vARB_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLuint64>) -> Void = glUniform4ui64vARB_L
public func glUniform4ui64vNV(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint64EXT>) {glUniform4ui64vNV_P(location, count, value)}
public func glUniform4ui64vNV(location:GLint, count:GLsizei, value:UnsafePointer<GLuint64EXT>) {glUniform4ui64vNV_P(location, count, value)}
var glUniform4ui64vNV_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLuint64EXT>) -> Void = glUniform4ui64vNV_L
public func glUniform4uiEXT(_ location:GLint, _ v0:GLuint, _ v1:GLuint, _ v2:GLuint, _ v3:GLuint) {glUniform4uiEXT_P(location, v0, v1, v2, v3)}
public func glUniform4uiEXT(location:GLint, v0:GLuint, v1:GLuint, v2:GLuint, v3:GLuint) {glUniform4uiEXT_P(location, v0, v1, v2, v3)}
var glUniform4uiEXT_P:@convention(c)(GLint, GLuint, GLuint, GLuint, GLuint) -> Void = glUniform4uiEXT_L
public func glUniform4uiv(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint>) {glUniform4uiv_P(location, count, value)}
public func glUniform4uiv(location:GLint, count:GLsizei, value:UnsafePointer<GLuint>) {glUniform4uiv_P(location, count, value)}
var glUniform4uiv_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLuint>) -> Void = glUniform4uiv_L
public func glUniform4uivEXT(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint>) {glUniform4uivEXT_P(location, count, value)}
public func glUniform4uivEXT(location:GLint, count:GLsizei, value:UnsafePointer<GLuint>) {glUniform4uivEXT_P(location, count, value)}
var glUniform4uivEXT_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLuint>) -> Void = glUniform4uivEXT_L
public func glUniformBlockBinding(_ program:GLuint, _ uniformBlockIndex:GLuint, _ uniformBlockBinding:GLuint) {glUniformBlockBinding_P(program, uniformBlockIndex, uniformBlockBinding)}
public func glUniformBlockBinding(program:GLuint, uniformBlockIndex:GLuint, uniformBlockBinding:GLuint) {glUniformBlockBinding_P(program, uniformBlockIndex, uniformBlockBinding)}
var glUniformBlockBinding_P:@convention(c)(GLuint, GLuint, GLuint) -> Void = glUniformBlockBinding_L
public func glUniformBufferEXT(_ program:GLuint, _ location:GLint, _ buffer:GLuint) {glUniformBufferEXT_P(program, location, buffer)}
public func glUniformBufferEXT(program:GLuint, location:GLint, buffer:GLuint) {glUniformBufferEXT_P(program, location, buffer)}
var glUniformBufferEXT_P:@convention(c)(GLuint, GLint, GLuint) -> Void = glUniformBufferEXT_L
public func glUniformHandleui64ARB(_ location:GLint, _ value:GLuint64) {glUniformHandleui64ARB_P(location, value)}
public func glUniformHandleui64ARB(location:GLint, value:GLuint64) {glUniformHandleui64ARB_P(location, value)}
var glUniformHandleui64ARB_P:@convention(c)(GLint, GLuint64) -> Void = glUniformHandleui64ARB_L
public func glUniformHandleui64NV(_ location:GLint, _ value:GLuint64) {glUniformHandleui64NV_P(location, value)}
public func glUniformHandleui64NV(location:GLint, value:GLuint64) {glUniformHandleui64NV_P(location, value)}
var glUniformHandleui64NV_P:@convention(c)(GLint, GLuint64) -> Void = glUniformHandleui64NV_L
public func glUniformHandleui64vARB(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint64>) {glUniformHandleui64vARB_P(location, count, value)}
public func glUniformHandleui64vARB(location:GLint, count:GLsizei, value:UnsafePointer<GLuint64>) {glUniformHandleui64vARB_P(location, count, value)}
var glUniformHandleui64vARB_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLuint64>) -> Void = glUniformHandleui64vARB_L
public func glUniformHandleui64vNV(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint64>) {glUniformHandleui64vNV_P(location, count, value)}
public func glUniformHandleui64vNV(location:GLint, count:GLsizei, value:UnsafePointer<GLuint64>) {glUniformHandleui64vNV_P(location, count, value)}
var glUniformHandleui64vNV_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLuint64>) -> Void = glUniformHandleui64vNV_L
public func glUniformMatrix2dv(_ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLdouble>) {glUniformMatrix2dv_P(location, count, transpose, value)}
public func glUniformMatrix2dv(location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLdouble>) {glUniformMatrix2dv_P(location, count, transpose, value)}
var glUniformMatrix2dv_P:@convention(c)(GLint, GLsizei, GLboolean, UnsafePointer<GLdouble>) -> Void = glUniformMatrix2dv_L
public func glUniformMatrix2fv(_ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glUniformMatrix2fv_P(location, count, transpose, value)}
public func glUniformMatrix2fv(location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glUniformMatrix2fv_P(location, count, transpose, value)}
var glUniformMatrix2fv_P:@convention(c)(GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glUniformMatrix2fv_L
public func glUniformMatrix2fvARB(_ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glUniformMatrix2fvARB_P(location, count, transpose, value)}
public func glUniformMatrix2fvARB(location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glUniformMatrix2fvARB_P(location, count, transpose, value)}
var glUniformMatrix2fvARB_P:@convention(c)(GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glUniformMatrix2fvARB_L
public func glUniformMatrix2x3dv(_ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLdouble>) {glUniformMatrix2x3dv_P(location, count, transpose, value)}
public func glUniformMatrix2x3dv(location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLdouble>) {glUniformMatrix2x3dv_P(location, count, transpose, value)}
var glUniformMatrix2x3dv_P:@convention(c)(GLint, GLsizei, GLboolean, UnsafePointer<GLdouble>) -> Void = glUniformMatrix2x3dv_L
public func glUniformMatrix2x3fv(_ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glUniformMatrix2x3fv_P(location, count, transpose, value)}
public func glUniformMatrix2x3fv(location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glUniformMatrix2x3fv_P(location, count, transpose, value)}
var glUniformMatrix2x3fv_P:@convention(c)(GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glUniformMatrix2x3fv_L
public func glUniformMatrix2x3fvNV(_ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glUniformMatrix2x3fvNV_P(location, count, transpose, value)}
public func glUniformMatrix2x3fvNV(location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glUniformMatrix2x3fvNV_P(location, count, transpose, value)}
var glUniformMatrix2x3fvNV_P:@convention(c)(GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glUniformMatrix2x3fvNV_L
public func glUniformMatrix2x4dv(_ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLdouble>) {glUniformMatrix2x4dv_P(location, count, transpose, value)}
public func glUniformMatrix2x4dv(location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLdouble>) {glUniformMatrix2x4dv_P(location, count, transpose, value)}
var glUniformMatrix2x4dv_P:@convention(c)(GLint, GLsizei, GLboolean, UnsafePointer<GLdouble>) -> Void = glUniformMatrix2x4dv_L
public func glUniformMatrix2x4fv(_ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glUniformMatrix2x4fv_P(location, count, transpose, value)}
public func glUniformMatrix2x4fv(location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glUniformMatrix2x4fv_P(location, count, transpose, value)}
var glUniformMatrix2x4fv_P:@convention(c)(GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glUniformMatrix2x4fv_L
public func glUniformMatrix2x4fvNV(_ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glUniformMatrix2x4fvNV_P(location, count, transpose, value)}
public func glUniformMatrix2x4fvNV(location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glUniformMatrix2x4fvNV_P(location, count, transpose, value)}
var glUniformMatrix2x4fvNV_P:@convention(c)(GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glUniformMatrix2x4fvNV_L
public func glUniformMatrix3dv(_ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLdouble>) {glUniformMatrix3dv_P(location, count, transpose, value)}
public func glUniformMatrix3dv(location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLdouble>) {glUniformMatrix3dv_P(location, count, transpose, value)}
var glUniformMatrix3dv_P:@convention(c)(GLint, GLsizei, GLboolean, UnsafePointer<GLdouble>) -> Void = glUniformMatrix3dv_L
public func glUniformMatrix3fv(_ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glUniformMatrix3fv_P(location, count, transpose, value)}
public func glUniformMatrix3fv(location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glUniformMatrix3fv_P(location, count, transpose, value)}
var glUniformMatrix3fv_P:@convention(c)(GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glUniformMatrix3fv_L
public func glUniformMatrix3fvARB(_ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glUniformMatrix3fvARB_P(location, count, transpose, value)}
public func glUniformMatrix3fvARB(location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glUniformMatrix3fvARB_P(location, count, transpose, value)}
var glUniformMatrix3fvARB_P:@convention(c)(GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glUniformMatrix3fvARB_L
public func glUniformMatrix3x2dv(_ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLdouble>) {glUniformMatrix3x2dv_P(location, count, transpose, value)}
public func glUniformMatrix3x2dv(location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLdouble>) {glUniformMatrix3x2dv_P(location, count, transpose, value)}
var glUniformMatrix3x2dv_P:@convention(c)(GLint, GLsizei, GLboolean, UnsafePointer<GLdouble>) -> Void = glUniformMatrix3x2dv_L
public func glUniformMatrix3x2fv(_ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glUniformMatrix3x2fv_P(location, count, transpose, value)}
public func glUniformMatrix3x2fv(location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glUniformMatrix3x2fv_P(location, count, transpose, value)}
var glUniformMatrix3x2fv_P:@convention(c)(GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glUniformMatrix3x2fv_L
public func glUniformMatrix3x2fvNV(_ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glUniformMatrix3x2fvNV_P(location, count, transpose, value)}
public func glUniformMatrix3x2fvNV(location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glUniformMatrix3x2fvNV_P(location, count, transpose, value)}
var glUniformMatrix3x2fvNV_P:@convention(c)(GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glUniformMatrix3x2fvNV_L
public func glUniformMatrix3x4dv(_ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLdouble>) {glUniformMatrix3x4dv_P(location, count, transpose, value)}
public func glUniformMatrix3x4dv(location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLdouble>) {glUniformMatrix3x4dv_P(location, count, transpose, value)}
var glUniformMatrix3x4dv_P:@convention(c)(GLint, GLsizei, GLboolean, UnsafePointer<GLdouble>) -> Void = glUniformMatrix3x4dv_L
public func glUniformMatrix3x4fv(_ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glUniformMatrix3x4fv_P(location, count, transpose, value)}
public func glUniformMatrix3x4fv(location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glUniformMatrix3x4fv_P(location, count, transpose, value)}
var glUniformMatrix3x4fv_P:@convention(c)(GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glUniformMatrix3x4fv_L
public func glUniformMatrix3x4fvNV(_ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glUniformMatrix3x4fvNV_P(location, count, transpose, value)}
public func glUniformMatrix3x4fvNV(location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glUniformMatrix3x4fvNV_P(location, count, transpose, value)}
var glUniformMatrix3x4fvNV_P:@convention(c)(GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glUniformMatrix3x4fvNV_L
public func glUniformMatrix4dv(_ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLdouble>) {glUniformMatrix4dv_P(location, count, transpose, value)}
public func glUniformMatrix4dv(location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLdouble>) {glUniformMatrix4dv_P(location, count, transpose, value)}
var glUniformMatrix4dv_P:@convention(c)(GLint, GLsizei, GLboolean, UnsafePointer<GLdouble>) -> Void = glUniformMatrix4dv_L
public func glUniformMatrix4fv(_ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glUniformMatrix4fv_P(location, count, transpose, value)}
public func glUniformMatrix4fv(location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glUniformMatrix4fv_P(location, count, transpose, value)}
var glUniformMatrix4fv_P:@convention(c)(GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glUniformMatrix4fv_L
public func glUniformMatrix4fvARB(_ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glUniformMatrix4fvARB_P(location, count, transpose, value)}
public func glUniformMatrix4fvARB(location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glUniformMatrix4fvARB_P(location, count, transpose, value)}
var glUniformMatrix4fvARB_P:@convention(c)(GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glUniformMatrix4fvARB_L
public func glUniformMatrix4x2dv(_ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLdouble>) {glUniformMatrix4x2dv_P(location, count, transpose, value)}
public func glUniformMatrix4x2dv(location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLdouble>) {glUniformMatrix4x2dv_P(location, count, transpose, value)}
var glUniformMatrix4x2dv_P:@convention(c)(GLint, GLsizei, GLboolean, UnsafePointer<GLdouble>) -> Void = glUniformMatrix4x2dv_L
public func glUniformMatrix4x2fv(_ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glUniformMatrix4x2fv_P(location, count, transpose, value)}
public func glUniformMatrix4x2fv(location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glUniformMatrix4x2fv_P(location, count, transpose, value)}
var glUniformMatrix4x2fv_P:@convention(c)(GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glUniformMatrix4x2fv_L
public func glUniformMatrix4x2fvNV(_ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glUniformMatrix4x2fvNV_P(location, count, transpose, value)}
public func glUniformMatrix4x2fvNV(location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glUniformMatrix4x2fvNV_P(location, count, transpose, value)}
var glUniformMatrix4x2fvNV_P:@convention(c)(GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glUniformMatrix4x2fvNV_L
public func glUniformMatrix4x3dv(_ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLdouble>) {glUniformMatrix4x3dv_P(location, count, transpose, value)}
public func glUniformMatrix4x3dv(location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLdouble>) {glUniformMatrix4x3dv_P(location, count, transpose, value)}
var glUniformMatrix4x3dv_P:@convention(c)(GLint, GLsizei, GLboolean, UnsafePointer<GLdouble>) -> Void = glUniformMatrix4x3dv_L
public func glUniformMatrix4x3fv(_ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glUniformMatrix4x3fv_P(location, count, transpose, value)}
public func glUniformMatrix4x3fv(location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glUniformMatrix4x3fv_P(location, count, transpose, value)}
var glUniformMatrix4x3fv_P:@convention(c)(GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glUniformMatrix4x3fv_L
public func glUniformMatrix4x3fvNV(_ location:GLint, _ count:GLsizei, _ transpose:GLboolean, _ value:UnsafePointer<GLfloat>) {glUniformMatrix4x3fvNV_P(location, count, transpose, value)}
public func glUniformMatrix4x3fvNV(location:GLint, count:GLsizei, transpose:GLboolean, value:UnsafePointer<GLfloat>) {glUniformMatrix4x3fvNV_P(location, count, transpose, value)}
var glUniformMatrix4x3fvNV_P:@convention(c)(GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>) -> Void = glUniformMatrix4x3fvNV_L
public func glUniformSubroutinesuiv(_ shadertype:GLenum, _ count:GLsizei, _ indices:UnsafePointer<GLuint>) {glUniformSubroutinesuiv_P(shadertype, count, indices)}
public func glUniformSubroutinesuiv(shadertype:GLenum, count:GLsizei, indices:UnsafePointer<GLuint>) {glUniformSubroutinesuiv_P(shadertype, count, indices)}
var glUniformSubroutinesuiv_P:@convention(c)(GLenum, GLsizei, UnsafePointer<GLuint>) -> Void = glUniformSubroutinesuiv_L
public func glUniformui64NV(_ location:GLint, _ value:GLuint64EXT) {glUniformui64NV_P(location, value)}
public func glUniformui64NV(location:GLint, value:GLuint64EXT) {glUniformui64NV_P(location, value)}
var glUniformui64NV_P:@convention(c)(GLint, GLuint64EXT) -> Void = glUniformui64NV_L
public func glUniformui64vNV(_ location:GLint, _ count:GLsizei, _ value:UnsafePointer<GLuint64EXT>) {glUniformui64vNV_P(location, count, value)}
public func glUniformui64vNV(location:GLint, count:GLsizei, value:UnsafePointer<GLuint64EXT>) {glUniformui64vNV_P(location, count, value)}
var glUniformui64vNV_P:@convention(c)(GLint, GLsizei, UnsafePointer<GLuint64EXT>) -> Void = glUniformui64vNV_L
public func glUnlockArraysEXT() {glUnlockArraysEXT_P()}
var glUnlockArraysEXT_P:@convention(c)() -> Void = glUnlockArraysEXT_L
public func glUnmapBuffer(_ target:GLenum) -> GLboolean {return glUnmapBuffer_P(target)}
public func glUnmapBuffer(target:GLenum) -> GLboolean {return glUnmapBuffer_P(target)}
var glUnmapBuffer_P:@convention(c)(GLenum) -> GLboolean = glUnmapBuffer_L
public func glUnmapBufferARB(_ target:GLenum) -> GLboolean {return glUnmapBufferARB_P(target)}
public func glUnmapBufferARB(target:GLenum) -> GLboolean {return glUnmapBufferARB_P(target)}
var glUnmapBufferARB_P:@convention(c)(GLenum) -> GLboolean = glUnmapBufferARB_L
public func glUnmapBufferOES(_ target:GLenum) -> GLboolean {return glUnmapBufferOES_P(target)}
public func glUnmapBufferOES(target:GLenum) -> GLboolean {return glUnmapBufferOES_P(target)}
var glUnmapBufferOES_P:@convention(c)(GLenum) -> GLboolean = glUnmapBufferOES_L
public func glUnmapNamedBuffer(_ buffer:GLuint) -> GLboolean {return glUnmapNamedBuffer_P(buffer)}
public func glUnmapNamedBuffer(buffer:GLuint) -> GLboolean {return glUnmapNamedBuffer_P(buffer)}
var glUnmapNamedBuffer_P:@convention(c)(GLuint) -> GLboolean = glUnmapNamedBuffer_L
public func glUnmapNamedBufferEXT(_ buffer:GLuint) -> GLboolean {return glUnmapNamedBufferEXT_P(buffer)}
public func glUnmapNamedBufferEXT(buffer:GLuint) -> GLboolean {return glUnmapNamedBufferEXT_P(buffer)}
var glUnmapNamedBufferEXT_P:@convention(c)(GLuint) -> GLboolean = glUnmapNamedBufferEXT_L
public func glUnmapObjectBufferATI(_ buffer:GLuint) {glUnmapObjectBufferATI_P(buffer)}
public func glUnmapObjectBufferATI(buffer:GLuint) {glUnmapObjectBufferATI_P(buffer)}
var glUnmapObjectBufferATI_P:@convention(c)(GLuint) -> Void = glUnmapObjectBufferATI_L
public func glUnmapTexture2DINTEL(_ texture:GLuint, _ level:GLint) {glUnmapTexture2DINTEL_P(texture, level)}
public func glUnmapTexture2DINTEL(texture:GLuint, level:GLint) {glUnmapTexture2DINTEL_P(texture, level)}
var glUnmapTexture2DINTEL_P:@convention(c)(GLuint, GLint) -> Void = glUnmapTexture2DINTEL_L
public func glUpdateObjectBufferATI(_ buffer:GLuint, _ offset:GLuint, _ size:GLsizei, _ pointer:UnsafeRawPointer, _ preserve:GLenum) {glUpdateObjectBufferATI_P(buffer, offset, size, pointer, preserve)}
public func glUpdateObjectBufferATI(buffer:GLuint, offset:GLuint, size:GLsizei, pointer:UnsafeRawPointer, preserve:GLenum) {glUpdateObjectBufferATI_P(buffer, offset, size, pointer, preserve)}
var glUpdateObjectBufferATI_P:@convention(c)(GLuint, GLuint, GLsizei, UnsafeRawPointer, GLenum) -> Void = glUpdateObjectBufferATI_L
public func glUseProgram(_ program:GLuint) {glUseProgram_P(program)}
public func glUseProgram(program:GLuint) {glUseProgram_P(program)}
var glUseProgram_P:@convention(c)(GLuint) -> Void = glUseProgram_L
public func glUseProgramObjectARB(_ programObj:GLhandleARB) {glUseProgramObjectARB_P(programObj)}
public func glUseProgramObjectARB(programObj:GLhandleARB) {glUseProgramObjectARB_P(programObj)}
var glUseProgramObjectARB_P:@convention(c)(GLhandleARB) -> Void = glUseProgramObjectARB_L
public func glUseProgramStages(_ pipeline:GLuint, _ stages:GLbitfield, _ program:GLuint) {glUseProgramStages_P(pipeline, stages, program)}
public func glUseProgramStages(pipeline:GLuint, stages:GLbitfield, program:GLuint) {glUseProgramStages_P(pipeline, stages, program)}
var glUseProgramStages_P:@convention(c)(GLuint, GLbitfield, GLuint) -> Void = glUseProgramStages_L
public func glUseProgramStagesEXT(_ pipeline:GLuint, _ stages:GLbitfield, _ program:GLuint) {glUseProgramStagesEXT_P(pipeline, stages, program)}
public func glUseProgramStagesEXT(pipeline:GLuint, stages:GLbitfield, program:GLuint) {glUseProgramStagesEXT_P(pipeline, stages, program)}
var glUseProgramStagesEXT_P:@convention(c)(GLuint, GLbitfield, GLuint) -> Void = glUseProgramStagesEXT_L
public func glUseShaderProgramEXT(_ type:GLenum, _ program:GLuint) {glUseShaderProgramEXT_P(type, program)}
public func glUseShaderProgramEXT(type:GLenum, program:GLuint) {glUseShaderProgramEXT_P(type, program)}
var glUseShaderProgramEXT_P:@convention(c)(GLenum, GLuint) -> Void = glUseShaderProgramEXT_L
public func glVDPAUFiniNV() {glVDPAUFiniNV_P()}
var glVDPAUFiniNV_P:@convention(c)() -> Void = glVDPAUFiniNV_L
public func glVDPAUGetSurfaceivNV(_ surface:GLvdpauSurfaceNV, _ pname:GLenum, _ bufSize:GLsizei, _ length:UnsafeMutablePointer<GLsizei>, _ values:UnsafeMutablePointer<GLint>) {glVDPAUGetSurfaceivNV_P(surface, pname, bufSize, length, values)}
public func glVDPAUGetSurfaceivNV(surface:GLvdpauSurfaceNV, pname:GLenum, bufSize:GLsizei, length:UnsafeMutablePointer<GLsizei>, values:UnsafeMutablePointer<GLint>) {glVDPAUGetSurfaceivNV_P(surface, pname, bufSize, length, values)}
var glVDPAUGetSurfaceivNV_P:@convention(c)(GLvdpauSurfaceNV, GLenum, GLsizei, UnsafeMutablePointer<GLsizei>, UnsafeMutablePointer<GLint>) -> Void = glVDPAUGetSurfaceivNV_L
public func glVDPAUInitNV(_ vdpDevice:UnsafeRawPointer, _ getProcAddress:UnsafeRawPointer) {glVDPAUInitNV_P(vdpDevice, getProcAddress)}
public func glVDPAUInitNV(vdpDevice:UnsafeRawPointer, getProcAddress:UnsafeRawPointer) {glVDPAUInitNV_P(vdpDevice, getProcAddress)}
var glVDPAUInitNV_P:@convention(c)(UnsafeRawPointer, UnsafeRawPointer) -> Void = glVDPAUInitNV_L
public func glVDPAUIsSurfaceNV(_ surface:GLvdpauSurfaceNV) -> GLboolean {return glVDPAUIsSurfaceNV_P(surface)}
public func glVDPAUIsSurfaceNV(surface:GLvdpauSurfaceNV) -> GLboolean {return glVDPAUIsSurfaceNV_P(surface)}
var glVDPAUIsSurfaceNV_P:@convention(c)(GLvdpauSurfaceNV) -> GLboolean = glVDPAUIsSurfaceNV_L
public func glVDPAUMapSurfacesNV(_ numSurfaces:GLsizei, _ surfaces:UnsafePointer<GLvdpauSurfaceNV>) {glVDPAUMapSurfacesNV_P(numSurfaces, surfaces)}
public func glVDPAUMapSurfacesNV(numSurfaces:GLsizei, surfaces:UnsafePointer<GLvdpauSurfaceNV>) {glVDPAUMapSurfacesNV_P(numSurfaces, surfaces)}
var glVDPAUMapSurfacesNV_P:@convention(c)(GLsizei, UnsafePointer<GLvdpauSurfaceNV>) -> Void = glVDPAUMapSurfacesNV_L
public func glVDPAURegisterOutputSurfaceNV(_ vdpSurface:UnsafeRawPointer, _ target:GLenum, _ numTextureNames:GLsizei, _ textureNames:UnsafePointer<GLuint>) -> GLvdpauSurfaceNV {return glVDPAURegisterOutputSurfaceNV_P(vdpSurface, target, numTextureNames, textureNames)}
public func glVDPAURegisterOutputSurfaceNV(vdpSurface:UnsafeRawPointer, target:GLenum, numTextureNames:GLsizei, textureNames:UnsafePointer<GLuint>) -> GLvdpauSurfaceNV {return glVDPAURegisterOutputSurfaceNV_P(vdpSurface, target, numTextureNames, textureNames)}
var glVDPAURegisterOutputSurfaceNV_P:@convention(c)(UnsafeRawPointer, GLenum, GLsizei, UnsafePointer<GLuint>) -> GLvdpauSurfaceNV = glVDPAURegisterOutputSurfaceNV_L
public func glVDPAURegisterVideoSurfaceNV(_ vdpSurface:UnsafeRawPointer, _ target:GLenum, _ numTextureNames:GLsizei, _ textureNames:UnsafePointer<GLuint>) -> GLvdpauSurfaceNV {return glVDPAURegisterVideoSurfaceNV_P(vdpSurface, target, numTextureNames, textureNames)}
public func glVDPAURegisterVideoSurfaceNV(vdpSurface:UnsafeRawPointer, target:GLenum, numTextureNames:GLsizei, textureNames:UnsafePointer<GLuint>) -> GLvdpauSurfaceNV {return glVDPAURegisterVideoSurfaceNV_P(vdpSurface, target, numTextureNames, textureNames)}
var glVDPAURegisterVideoSurfaceNV_P:@convention(c)(UnsafeRawPointer, GLenum, GLsizei, UnsafePointer<GLuint>) -> GLvdpauSurfaceNV = glVDPAURegisterVideoSurfaceNV_L
public func glVDPAUSurfaceAccessNV(_ surface:GLvdpauSurfaceNV, _ access:GLenum) {glVDPAUSurfaceAccessNV_P(surface, access)}
public func glVDPAUSurfaceAccessNV(surface:GLvdpauSurfaceNV, access:GLenum) {glVDPAUSurfaceAccessNV_P(surface, access)}
var glVDPAUSurfaceAccessNV_P:@convention(c)(GLvdpauSurfaceNV, GLenum) -> Void = glVDPAUSurfaceAccessNV_L
public func glVDPAUUnmapSurfacesNV(_ numSurface:GLsizei, _ surfaces:UnsafePointer<GLvdpauSurfaceNV>) {glVDPAUUnmapSurfacesNV_P(numSurface, surfaces)}
public func glVDPAUUnmapSurfacesNV(numSurface:GLsizei, surfaces:UnsafePointer<GLvdpauSurfaceNV>) {glVDPAUUnmapSurfacesNV_P(numSurface, surfaces)}
var glVDPAUUnmapSurfacesNV_P:@convention(c)(GLsizei, UnsafePointer<GLvdpauSurfaceNV>) -> Void = glVDPAUUnmapSurfacesNV_L
public func glVDPAUUnregisterSurfaceNV(_ surface:GLvdpauSurfaceNV) {glVDPAUUnregisterSurfaceNV_P(surface)}
public func glVDPAUUnregisterSurfaceNV(surface:GLvdpauSurfaceNV) {glVDPAUUnregisterSurfaceNV_P(surface)}
var glVDPAUUnregisterSurfaceNV_P:@convention(c)(GLvdpauSurfaceNV) -> Void = glVDPAUUnregisterSurfaceNV_L
public func glValidateProgram(_ program:GLuint) {glValidateProgram_P(program)}
public func glValidateProgram(program:GLuint) {glValidateProgram_P(program)}
var glValidateProgram_P:@convention(c)(GLuint) -> Void = glValidateProgram_L
public func glValidateProgramARB(_ programObj:GLhandleARB) {glValidateProgramARB_P(programObj)}
public func glValidateProgramARB(programObj:GLhandleARB) {glValidateProgramARB_P(programObj)}
var glValidateProgramARB_P:@convention(c)(GLhandleARB) -> Void = glValidateProgramARB_L
public func glValidateProgramPipeline(_ pipeline:GLuint) {glValidateProgramPipeline_P(pipeline)}
public func glValidateProgramPipeline(pipeline:GLuint) {glValidateProgramPipeline_P(pipeline)}
var glValidateProgramPipeline_P:@convention(c)(GLuint) -> Void = glValidateProgramPipeline_L
public func glValidateProgramPipelineEXT(_ pipeline:GLuint) {glValidateProgramPipelineEXT_P(pipeline)}
public func glValidateProgramPipelineEXT(pipeline:GLuint) {glValidateProgramPipelineEXT_P(pipeline)}
var glValidateProgramPipelineEXT_P:@convention(c)(GLuint) -> Void = glValidateProgramPipelineEXT_L
public func glVariantArrayObjectATI(_ id:GLuint, _ type:GLenum, _ stride:GLsizei, _ buffer:GLuint, _ offset:GLuint) {glVariantArrayObjectATI_P(id, type, stride, buffer, offset)}
public func glVariantArrayObjectATI(id:GLuint, type:GLenum, stride:GLsizei, buffer:GLuint, offset:GLuint) {glVariantArrayObjectATI_P(id, type, stride, buffer, offset)}
var glVariantArrayObjectATI_P:@convention(c)(GLuint, GLenum, GLsizei, GLuint, GLuint) -> Void = glVariantArrayObjectATI_L
public func glVariantPointerEXT(_ id:GLuint, _ type:GLenum, _ stride:GLuint, _ addr:UnsafeRawPointer) {glVariantPointerEXT_P(id, type, stride, addr)}
public func glVariantPointerEXT(id:GLuint, type:GLenum, stride:GLuint, addr:UnsafeRawPointer) {glVariantPointerEXT_P(id, type, stride, addr)}
var glVariantPointerEXT_P:@convention(c)(GLuint, GLenum, GLuint, UnsafeRawPointer) -> Void = glVariantPointerEXT_L
public func glVariantbvEXT(_ id:GLuint, _ addr:UnsafePointer<GLbyte>) {glVariantbvEXT_P(id, addr)}
public func glVariantbvEXT(id:GLuint, addr:UnsafePointer<GLbyte>) {glVariantbvEXT_P(id, addr)}
var glVariantbvEXT_P:@convention(c)(GLuint, UnsafePointer<GLbyte>) -> Void = glVariantbvEXT_L
public func glVariantdvEXT(_ id:GLuint, _ addr:UnsafePointer<GLdouble>) {glVariantdvEXT_P(id, addr)}
public func glVariantdvEXT(id:GLuint, addr:UnsafePointer<GLdouble>) {glVariantdvEXT_P(id, addr)}
var glVariantdvEXT_P:@convention(c)(GLuint, UnsafePointer<GLdouble>) -> Void = glVariantdvEXT_L
public func glVariantfvEXT(_ id:GLuint, _ addr:UnsafePointer<GLfloat>) {glVariantfvEXT_P(id, addr)}
public func glVariantfvEXT(id:GLuint, addr:UnsafePointer<GLfloat>) {glVariantfvEXT_P(id, addr)}
var glVariantfvEXT_P:@convention(c)(GLuint, UnsafePointer<GLfloat>) -> Void = glVariantfvEXT_L
public func glVariantivEXT(_ id:GLuint, _ addr:UnsafePointer<GLint>) {glVariantivEXT_P(id, addr)}
public func glVariantivEXT(id:GLuint, addr:UnsafePointer<GLint>) {glVariantivEXT_P(id, addr)}
var glVariantivEXT_P:@convention(c)(GLuint, UnsafePointer<GLint>) -> Void = glVariantivEXT_L
public func glVariantsvEXT(_ id:GLuint, _ addr:UnsafePointer<GLshort>) {glVariantsvEXT_P(id, addr)}
public func glVariantsvEXT(id:GLuint, addr:UnsafePointer<GLshort>) {glVariantsvEXT_P(id, addr)}
var glVariantsvEXT_P:@convention(c)(GLuint, UnsafePointer<GLshort>) -> Void = glVariantsvEXT_L
public func glVariantubvEXT(_ id:GLuint, _ addr:UnsafePointer<GLubyte>) {glVariantubvEXT_P(id, addr)}
public func glVariantubvEXT(id:GLuint, addr:UnsafePointer<GLubyte>) {glVariantubvEXT_P(id, addr)}
var glVariantubvEXT_P:@convention(c)(GLuint, UnsafePointer<GLubyte>) -> Void = glVariantubvEXT_L
public func glVariantuivEXT(_ id:GLuint, _ addr:UnsafePointer<GLuint>) {glVariantuivEXT_P(id, addr)}
public func glVariantuivEXT(id:GLuint, addr:UnsafePointer<GLuint>) {glVariantuivEXT_P(id, addr)}
var glVariantuivEXT_P:@convention(c)(GLuint, UnsafePointer<GLuint>) -> Void = glVariantuivEXT_L
public func glVariantusvEXT(_ id:GLuint, _ addr:UnsafePointer<GLushort>) {glVariantusvEXT_P(id, addr)}
public func glVariantusvEXT(id:GLuint, addr:UnsafePointer<GLushort>) {glVariantusvEXT_P(id, addr)}
var glVariantusvEXT_P:@convention(c)(GLuint, UnsafePointer<GLushort>) -> Void = glVariantusvEXT_L
public func glVertex2bOES(_ x:GLbyte, _ y:GLbyte) {glVertex2bOES_P(x, y)}
public func glVertex2bOES(x:GLbyte, y:GLbyte) {glVertex2bOES_P(x, y)}
var glVertex2bOES_P:@convention(c)(GLbyte, GLbyte) -> Void = glVertex2bOES_L
public func glVertex2bvOES(_ coords:UnsafePointer<GLbyte>) {glVertex2bvOES_P(coords)}
public func glVertex2bvOES(coords:UnsafePointer<GLbyte>) {glVertex2bvOES_P(coords)}
var glVertex2bvOES_P:@convention(c)(UnsafePointer<GLbyte>) -> Void = glVertex2bvOES_L
public func glVertex2d(_ x:GLdouble, _ y:GLdouble) {glVertex2d_P(x, y)}
public func glVertex2d(x:GLdouble, y:GLdouble) {glVertex2d_P(x, y)}
var glVertex2d_P:@convention(c)(GLdouble, GLdouble) -> Void = glVertex2d_L
public func glVertex2dv(_ v:UnsafePointer<GLdouble>) {glVertex2dv_P(v)}
public func glVertex2dv(v:UnsafePointer<GLdouble>) {glVertex2dv_P(v)}
var glVertex2dv_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glVertex2dv_L
public func glVertex2f(_ x:GLfloat, _ y:GLfloat) {glVertex2f_P(x, y)}
public func glVertex2f(x:GLfloat, y:GLfloat) {glVertex2f_P(x, y)}
var glVertex2f_P:@convention(c)(GLfloat, GLfloat) -> Void = glVertex2f_L
public func glVertex2fv(_ v:UnsafePointer<GLfloat>) {glVertex2fv_P(v)}
public func glVertex2fv(v:UnsafePointer<GLfloat>) {glVertex2fv_P(v)}
var glVertex2fv_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glVertex2fv_L
public func glVertex2hNV(_ x:GLhalfNV, _ y:GLhalfNV) {glVertex2hNV_P(x, y)}
public func glVertex2hNV(x:GLhalfNV, y:GLhalfNV) {glVertex2hNV_P(x, y)}
var glVertex2hNV_P:@convention(c)(GLhalfNV, GLhalfNV) -> Void = glVertex2hNV_L
public func glVertex2hvNV(_ v:UnsafePointer<GLhalfNV>) {glVertex2hvNV_P(v)}
public func glVertex2hvNV(v:UnsafePointer<GLhalfNV>) {glVertex2hvNV_P(v)}
var glVertex2hvNV_P:@convention(c)(UnsafePointer<GLhalfNV>) -> Void = glVertex2hvNV_L
public func glVertex2i(_ x:GLint, _ y:GLint) {glVertex2i_P(x, y)}
public func glVertex2i(x:GLint, y:GLint) {glVertex2i_P(x, y)}
var glVertex2i_P:@convention(c)(GLint, GLint) -> Void = glVertex2i_L
public func glVertex2iv(_ v:UnsafePointer<GLint>) {glVertex2iv_P(v)}
public func glVertex2iv(v:UnsafePointer<GLint>) {glVertex2iv_P(v)}
var glVertex2iv_P:@convention(c)(UnsafePointer<GLint>) -> Void = glVertex2iv_L
public func glVertex2s(_ x:GLshort, _ y:GLshort) {glVertex2s_P(x, y)}
public func glVertex2s(x:GLshort, y:GLshort) {glVertex2s_P(x, y)}
var glVertex2s_P:@convention(c)(GLshort, GLshort) -> Void = glVertex2s_L
public func glVertex2sv(_ v:UnsafePointer<GLshort>) {glVertex2sv_P(v)}
public func glVertex2sv(v:UnsafePointer<GLshort>) {glVertex2sv_P(v)}
var glVertex2sv_P:@convention(c)(UnsafePointer<GLshort>) -> Void = glVertex2sv_L
public func glVertex2xOES(_ x:GLfixed) {glVertex2xOES_P(x)}
public func glVertex2xOES(x:GLfixed) {glVertex2xOES_P(x)}
var glVertex2xOES_P:@convention(c)(GLfixed) -> Void = glVertex2xOES_L
public func glVertex2xvOES(_ coords:UnsafePointer<GLfixed>) {glVertex2xvOES_P(coords)}
public func glVertex2xvOES(coords:UnsafePointer<GLfixed>) {glVertex2xvOES_P(coords)}
var glVertex2xvOES_P:@convention(c)(UnsafePointer<GLfixed>) -> Void = glVertex2xvOES_L
public func glVertex3bOES(_ x:GLbyte, _ y:GLbyte, _ z:GLbyte) {glVertex3bOES_P(x, y, z)}
public func glVertex3bOES(x:GLbyte, y:GLbyte, z:GLbyte) {glVertex3bOES_P(x, y, z)}
var glVertex3bOES_P:@convention(c)(GLbyte, GLbyte, GLbyte) -> Void = glVertex3bOES_L
public func glVertex3bvOES(_ coords:UnsafePointer<GLbyte>) {glVertex3bvOES_P(coords)}
public func glVertex3bvOES(coords:UnsafePointer<GLbyte>) {glVertex3bvOES_P(coords)}
var glVertex3bvOES_P:@convention(c)(UnsafePointer<GLbyte>) -> Void = glVertex3bvOES_L
public func glVertex3d(_ x:GLdouble, _ y:GLdouble, _ z:GLdouble) {glVertex3d_P(x, y, z)}
public func glVertex3d(x:GLdouble, y:GLdouble, z:GLdouble) {glVertex3d_P(x, y, z)}
var glVertex3d_P:@convention(c)(GLdouble, GLdouble, GLdouble) -> Void = glVertex3d_L
public func glVertex3dv(_ v:UnsafePointer<GLdouble>) {glVertex3dv_P(v)}
public func glVertex3dv(v:UnsafePointer<GLdouble>) {glVertex3dv_P(v)}
var glVertex3dv_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glVertex3dv_L
public func glVertex3f(_ x:GLfloat, _ y:GLfloat, _ z:GLfloat) {glVertex3f_P(x, y, z)}
public func glVertex3f(x:GLfloat, y:GLfloat, z:GLfloat) {glVertex3f_P(x, y, z)}
var glVertex3f_P:@convention(c)(GLfloat, GLfloat, GLfloat) -> Void = glVertex3f_L
public func glVertex3fv(_ v:UnsafePointer<GLfloat>) {glVertex3fv_P(v)}
public func glVertex3fv(v:UnsafePointer<GLfloat>) {glVertex3fv_P(v)}
var glVertex3fv_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glVertex3fv_L
public func glVertex3hNV(_ x:GLhalfNV, _ y:GLhalfNV, _ z:GLhalfNV) {glVertex3hNV_P(x, y, z)}
public func glVertex3hNV(x:GLhalfNV, y:GLhalfNV, z:GLhalfNV) {glVertex3hNV_P(x, y, z)}
var glVertex3hNV_P:@convention(c)(GLhalfNV, GLhalfNV, GLhalfNV) -> Void = glVertex3hNV_L
public func glVertex3hvNV(_ v:UnsafePointer<GLhalfNV>) {glVertex3hvNV_P(v)}
public func glVertex3hvNV(v:UnsafePointer<GLhalfNV>) {glVertex3hvNV_P(v)}
var glVertex3hvNV_P:@convention(c)(UnsafePointer<GLhalfNV>) -> Void = glVertex3hvNV_L
public func glVertex3i(_ x:GLint, _ y:GLint, _ z:GLint) {glVertex3i_P(x, y, z)}
public func glVertex3i(x:GLint, y:GLint, z:GLint) {glVertex3i_P(x, y, z)}
var glVertex3i_P:@convention(c)(GLint, GLint, GLint) -> Void = glVertex3i_L
public func glVertex3iv(_ v:UnsafePointer<GLint>) {glVertex3iv_P(v)}
public func glVertex3iv(v:UnsafePointer<GLint>) {glVertex3iv_P(v)}
var glVertex3iv_P:@convention(c)(UnsafePointer<GLint>) -> Void = glVertex3iv_L
public func glVertex3s(_ x:GLshort, _ y:GLshort, _ z:GLshort) {glVertex3s_P(x, y, z)}
public func glVertex3s(x:GLshort, y:GLshort, z:GLshort) {glVertex3s_P(x, y, z)}
var glVertex3s_P:@convention(c)(GLshort, GLshort, GLshort) -> Void = glVertex3s_L
public func glVertex3sv(_ v:UnsafePointer<GLshort>) {glVertex3sv_P(v)}
public func glVertex3sv(v:UnsafePointer<GLshort>) {glVertex3sv_P(v)}
var glVertex3sv_P:@convention(c)(UnsafePointer<GLshort>) -> Void = glVertex3sv_L
public func glVertex3xOES(_ x:GLfixed, _ y:GLfixed) {glVertex3xOES_P(x, y)}
public func glVertex3xOES(x:GLfixed, y:GLfixed) {glVertex3xOES_P(x, y)}
var glVertex3xOES_P:@convention(c)(GLfixed, GLfixed) -> Void = glVertex3xOES_L
public func glVertex3xvOES(_ coords:UnsafePointer<GLfixed>) {glVertex3xvOES_P(coords)}
public func glVertex3xvOES(coords:UnsafePointer<GLfixed>) {glVertex3xvOES_P(coords)}
var glVertex3xvOES_P:@convention(c)(UnsafePointer<GLfixed>) -> Void = glVertex3xvOES_L
public func glVertex4bOES(_ x:GLbyte, _ y:GLbyte, _ z:GLbyte, _ w:GLbyte) {glVertex4bOES_P(x, y, z, w)}
public func glVertex4bOES(x:GLbyte, y:GLbyte, z:GLbyte, w:GLbyte) {glVertex4bOES_P(x, y, z, w)}
var glVertex4bOES_P:@convention(c)(GLbyte, GLbyte, GLbyte, GLbyte) -> Void = glVertex4bOES_L
public func glVertex4bvOES(_ coords:UnsafePointer<GLbyte>) {glVertex4bvOES_P(coords)}
public func glVertex4bvOES(coords:UnsafePointer<GLbyte>) {glVertex4bvOES_P(coords)}
var glVertex4bvOES_P:@convention(c)(UnsafePointer<GLbyte>) -> Void = glVertex4bvOES_L
public func glVertex4d(_ x:GLdouble, _ y:GLdouble, _ z:GLdouble, _ w:GLdouble) {glVertex4d_P(x, y, z, w)}
public func glVertex4d(x:GLdouble, y:GLdouble, z:GLdouble, w:GLdouble) {glVertex4d_P(x, y, z, w)}
var glVertex4d_P:@convention(c)(GLdouble, GLdouble, GLdouble, GLdouble) -> Void = glVertex4d_L
public func glVertex4dv(_ v:UnsafePointer<GLdouble>) {glVertex4dv_P(v)}
public func glVertex4dv(v:UnsafePointer<GLdouble>) {glVertex4dv_P(v)}
var glVertex4dv_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glVertex4dv_L
public func glVertex4f(_ x:GLfloat, _ y:GLfloat, _ z:GLfloat, _ w:GLfloat) {glVertex4f_P(x, y, z, w)}
public func glVertex4f(x:GLfloat, y:GLfloat, z:GLfloat, w:GLfloat) {glVertex4f_P(x, y, z, w)}
var glVertex4f_P:@convention(c)(GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glVertex4f_L
public func glVertex4fv(_ v:UnsafePointer<GLfloat>) {glVertex4fv_P(v)}
public func glVertex4fv(v:UnsafePointer<GLfloat>) {glVertex4fv_P(v)}
var glVertex4fv_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glVertex4fv_L
public func glVertex4hNV(_ x:GLhalfNV, _ y:GLhalfNV, _ z:GLhalfNV, _ w:GLhalfNV) {glVertex4hNV_P(x, y, z, w)}
public func glVertex4hNV(x:GLhalfNV, y:GLhalfNV, z:GLhalfNV, w:GLhalfNV) {glVertex4hNV_P(x, y, z, w)}
var glVertex4hNV_P:@convention(c)(GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) -> Void = glVertex4hNV_L
public func glVertex4hvNV(_ v:UnsafePointer<GLhalfNV>) {glVertex4hvNV_P(v)}
public func glVertex4hvNV(v:UnsafePointer<GLhalfNV>) {glVertex4hvNV_P(v)}
var glVertex4hvNV_P:@convention(c)(UnsafePointer<GLhalfNV>) -> Void = glVertex4hvNV_L
public func glVertex4i(_ x:GLint, _ y:GLint, _ z:GLint, _ w:GLint) {glVertex4i_P(x, y, z, w)}
public func glVertex4i(x:GLint, y:GLint, z:GLint, w:GLint) {glVertex4i_P(x, y, z, w)}
var glVertex4i_P:@convention(c)(GLint, GLint, GLint, GLint) -> Void = glVertex4i_L
public func glVertex4iv(_ v:UnsafePointer<GLint>) {glVertex4iv_P(v)}
public func glVertex4iv(v:UnsafePointer<GLint>) {glVertex4iv_P(v)}
var glVertex4iv_P:@convention(c)(UnsafePointer<GLint>) -> Void = glVertex4iv_L
public func glVertex4s(_ x:GLshort, _ y:GLshort, _ z:GLshort, _ w:GLshort) {glVertex4s_P(x, y, z, w)}
public func glVertex4s(x:GLshort, y:GLshort, z:GLshort, w:GLshort) {glVertex4s_P(x, y, z, w)}
var glVertex4s_P:@convention(c)(GLshort, GLshort, GLshort, GLshort) -> Void = glVertex4s_L
public func glVertex4sv(_ v:UnsafePointer<GLshort>) {glVertex4sv_P(v)}
public func glVertex4sv(v:UnsafePointer<GLshort>) {glVertex4sv_P(v)}
var glVertex4sv_P:@convention(c)(UnsafePointer<GLshort>) -> Void = glVertex4sv_L
public func glVertex4xOES(_ x:GLfixed, _ y:GLfixed, _ z:GLfixed) {glVertex4xOES_P(x, y, z)}
public func glVertex4xOES(x:GLfixed, y:GLfixed, z:GLfixed) {glVertex4xOES_P(x, y, z)}
var glVertex4xOES_P:@convention(c)(GLfixed, GLfixed, GLfixed) -> Void = glVertex4xOES_L
public func glVertex4xvOES(_ coords:UnsafePointer<GLfixed>) {glVertex4xvOES_P(coords)}
public func glVertex4xvOES(coords:UnsafePointer<GLfixed>) {glVertex4xvOES_P(coords)}
var glVertex4xvOES_P:@convention(c)(UnsafePointer<GLfixed>) -> Void = glVertex4xvOES_L
public func glVertexArrayAttribBinding(_ vaobj:GLuint, _ attribindex:GLuint, _ bindingindex:GLuint) {glVertexArrayAttribBinding_P(vaobj, attribindex, bindingindex)}
public func glVertexArrayAttribBinding(vaobj:GLuint, attribindex:GLuint, bindingindex:GLuint) {glVertexArrayAttribBinding_P(vaobj, attribindex, bindingindex)}
var glVertexArrayAttribBinding_P:@convention(c)(GLuint, GLuint, GLuint) -> Void = glVertexArrayAttribBinding_L
public func glVertexArrayAttribFormat(_ vaobj:GLuint, _ attribindex:GLuint, _ size:GLint, _ type:GLenum, _ normalized:GLboolean, _ relativeoffset:GLuint) {glVertexArrayAttribFormat_P(vaobj, attribindex, size, type, normalized, relativeoffset)}
public func glVertexArrayAttribFormat(vaobj:GLuint, attribindex:GLuint, size:GLint, type:GLenum, normalized:GLboolean, relativeoffset:GLuint) {glVertexArrayAttribFormat_P(vaobj, attribindex, size, type, normalized, relativeoffset)}
var glVertexArrayAttribFormat_P:@convention(c)(GLuint, GLuint, GLint, GLenum, GLboolean, GLuint) -> Void = glVertexArrayAttribFormat_L
public func glVertexArrayAttribIFormat(_ vaobj:GLuint, _ attribindex:GLuint, _ size:GLint, _ type:GLenum, _ relativeoffset:GLuint) {glVertexArrayAttribIFormat_P(vaobj, attribindex, size, type, relativeoffset)}
public func glVertexArrayAttribIFormat(vaobj:GLuint, attribindex:GLuint, size:GLint, type:GLenum, relativeoffset:GLuint) {glVertexArrayAttribIFormat_P(vaobj, attribindex, size, type, relativeoffset)}
var glVertexArrayAttribIFormat_P:@convention(c)(GLuint, GLuint, GLint, GLenum, GLuint) -> Void = glVertexArrayAttribIFormat_L
public func glVertexArrayAttribLFormat(_ vaobj:GLuint, _ attribindex:GLuint, _ size:GLint, _ type:GLenum, _ relativeoffset:GLuint) {glVertexArrayAttribLFormat_P(vaobj, attribindex, size, type, relativeoffset)}
public func glVertexArrayAttribLFormat(vaobj:GLuint, attribindex:GLuint, size:GLint, type:GLenum, relativeoffset:GLuint) {glVertexArrayAttribLFormat_P(vaobj, attribindex, size, type, relativeoffset)}
var glVertexArrayAttribLFormat_P:@convention(c)(GLuint, GLuint, GLint, GLenum, GLuint) -> Void = glVertexArrayAttribLFormat_L
public func glVertexArrayBindVertexBufferEXT(_ vaobj:GLuint, _ bindingindex:GLuint, _ buffer:GLuint, _ offset:GLintptr, _ stride:GLsizei) {glVertexArrayBindVertexBufferEXT_P(vaobj, bindingindex, buffer, offset, stride)}
public func glVertexArrayBindVertexBufferEXT(vaobj:GLuint, bindingindex:GLuint, buffer:GLuint, offset:GLintptr, stride:GLsizei) {glVertexArrayBindVertexBufferEXT_P(vaobj, bindingindex, buffer, offset, stride)}
var glVertexArrayBindVertexBufferEXT_P:@convention(c)(GLuint, GLuint, GLuint, GLintptr, GLsizei) -> Void = glVertexArrayBindVertexBufferEXT_L
public func glVertexArrayBindingDivisor(_ vaobj:GLuint, _ bindingindex:GLuint, _ divisor:GLuint) {glVertexArrayBindingDivisor_P(vaobj, bindingindex, divisor)}
public func glVertexArrayBindingDivisor(vaobj:GLuint, bindingindex:GLuint, divisor:GLuint) {glVertexArrayBindingDivisor_P(vaobj, bindingindex, divisor)}
var glVertexArrayBindingDivisor_P:@convention(c)(GLuint, GLuint, GLuint) -> Void = glVertexArrayBindingDivisor_L
public func glVertexArrayColorOffsetEXT(_ vaobj:GLuint, _ buffer:GLuint, _ size:GLint, _ type:GLenum, _ stride:GLsizei, _ offset:GLintptr) {glVertexArrayColorOffsetEXT_P(vaobj, buffer, size, type, stride, offset)}
public func glVertexArrayColorOffsetEXT(vaobj:GLuint, buffer:GLuint, size:GLint, type:GLenum, stride:GLsizei, offset:GLintptr) {glVertexArrayColorOffsetEXT_P(vaobj, buffer, size, type, stride, offset)}
var glVertexArrayColorOffsetEXT_P:@convention(c)(GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) -> Void = glVertexArrayColorOffsetEXT_L
public func glVertexArrayEdgeFlagOffsetEXT(_ vaobj:GLuint, _ buffer:GLuint, _ stride:GLsizei, _ offset:GLintptr) {glVertexArrayEdgeFlagOffsetEXT_P(vaobj, buffer, stride, offset)}
public func glVertexArrayEdgeFlagOffsetEXT(vaobj:GLuint, buffer:GLuint, stride:GLsizei, offset:GLintptr) {glVertexArrayEdgeFlagOffsetEXT_P(vaobj, buffer, stride, offset)}
var glVertexArrayEdgeFlagOffsetEXT_P:@convention(c)(GLuint, GLuint, GLsizei, GLintptr) -> Void = glVertexArrayEdgeFlagOffsetEXT_L
public func glVertexArrayElementBuffer(_ vaobj:GLuint, _ buffer:GLuint) {glVertexArrayElementBuffer_P(vaobj, buffer)}
public func glVertexArrayElementBuffer(vaobj:GLuint, buffer:GLuint) {glVertexArrayElementBuffer_P(vaobj, buffer)}
var glVertexArrayElementBuffer_P:@convention(c)(GLuint, GLuint) -> Void = glVertexArrayElementBuffer_L
public func glVertexArrayFogCoordOffsetEXT(_ vaobj:GLuint, _ buffer:GLuint, _ type:GLenum, _ stride:GLsizei, _ offset:GLintptr) {glVertexArrayFogCoordOffsetEXT_P(vaobj, buffer, type, stride, offset)}
public func glVertexArrayFogCoordOffsetEXT(vaobj:GLuint, buffer:GLuint, type:GLenum, stride:GLsizei, offset:GLintptr) {glVertexArrayFogCoordOffsetEXT_P(vaobj, buffer, type, stride, offset)}
var glVertexArrayFogCoordOffsetEXT_P:@convention(c)(GLuint, GLuint, GLenum, GLsizei, GLintptr) -> Void = glVertexArrayFogCoordOffsetEXT_L
public func glVertexArrayIndexOffsetEXT(_ vaobj:GLuint, _ buffer:GLuint, _ type:GLenum, _ stride:GLsizei, _ offset:GLintptr) {glVertexArrayIndexOffsetEXT_P(vaobj, buffer, type, stride, offset)}
public func glVertexArrayIndexOffsetEXT(vaobj:GLuint, buffer:GLuint, type:GLenum, stride:GLsizei, offset:GLintptr) {glVertexArrayIndexOffsetEXT_P(vaobj, buffer, type, stride, offset)}
var glVertexArrayIndexOffsetEXT_P:@convention(c)(GLuint, GLuint, GLenum, GLsizei, GLintptr) -> Void = glVertexArrayIndexOffsetEXT_L
public func glVertexArrayMultiTexCoordOffsetEXT(_ vaobj:GLuint, _ buffer:GLuint, _ texunit:GLenum, _ size:GLint, _ type:GLenum, _ stride:GLsizei, _ offset:GLintptr) {glVertexArrayMultiTexCoordOffsetEXT_P(vaobj, buffer, texunit, size, type, stride, offset)}
public func glVertexArrayMultiTexCoordOffsetEXT(vaobj:GLuint, buffer:GLuint, texunit:GLenum, size:GLint, type:GLenum, stride:GLsizei, offset:GLintptr) {glVertexArrayMultiTexCoordOffsetEXT_P(vaobj, buffer, texunit, size, type, stride, offset)}
var glVertexArrayMultiTexCoordOffsetEXT_P:@convention(c)(GLuint, GLuint, GLenum, GLint, GLenum, GLsizei, GLintptr) -> Void = glVertexArrayMultiTexCoordOffsetEXT_L
public func glVertexArrayNormalOffsetEXT(_ vaobj:GLuint, _ buffer:GLuint, _ type:GLenum, _ stride:GLsizei, _ offset:GLintptr) {glVertexArrayNormalOffsetEXT_P(vaobj, buffer, type, stride, offset)}
public func glVertexArrayNormalOffsetEXT(vaobj:GLuint, buffer:GLuint, type:GLenum, stride:GLsizei, offset:GLintptr) {glVertexArrayNormalOffsetEXT_P(vaobj, buffer, type, stride, offset)}
var glVertexArrayNormalOffsetEXT_P:@convention(c)(GLuint, GLuint, GLenum, GLsizei, GLintptr) -> Void = glVertexArrayNormalOffsetEXT_L
public func glVertexArrayParameteriAPPLE(_ pname:GLenum, _ param:GLint) {glVertexArrayParameteriAPPLE_P(pname, param)}
public func glVertexArrayParameteriAPPLE(pname:GLenum, param:GLint) {glVertexArrayParameteriAPPLE_P(pname, param)}
var glVertexArrayParameteriAPPLE_P:@convention(c)(GLenum, GLint) -> Void = glVertexArrayParameteriAPPLE_L
public func glVertexArrayRangeAPPLE(_ length:GLsizei, _ pointer:UnsafeMutableRawPointer) {glVertexArrayRangeAPPLE_P(length, pointer)}
public func glVertexArrayRangeAPPLE(length:GLsizei, pointer:UnsafeMutableRawPointer) {glVertexArrayRangeAPPLE_P(length, pointer)}
var glVertexArrayRangeAPPLE_P:@convention(c)(GLsizei, UnsafeMutableRawPointer) -> Void = glVertexArrayRangeAPPLE_L
public func glVertexArrayRangeNV(_ length:GLsizei, _ pointer:UnsafeRawPointer) {glVertexArrayRangeNV_P(length, pointer)}
public func glVertexArrayRangeNV(length:GLsizei, pointer:UnsafeRawPointer) {glVertexArrayRangeNV_P(length, pointer)}
var glVertexArrayRangeNV_P:@convention(c)(GLsizei, UnsafeRawPointer) -> Void = glVertexArrayRangeNV_L
public func glVertexArraySecondaryColorOffsetEXT(_ vaobj:GLuint, _ buffer:GLuint, _ size:GLint, _ type:GLenum, _ stride:GLsizei, _ offset:GLintptr) {glVertexArraySecondaryColorOffsetEXT_P(vaobj, buffer, size, type, stride, offset)}
public func glVertexArraySecondaryColorOffsetEXT(vaobj:GLuint, buffer:GLuint, size:GLint, type:GLenum, stride:GLsizei, offset:GLintptr) {glVertexArraySecondaryColorOffsetEXT_P(vaobj, buffer, size, type, stride, offset)}
var glVertexArraySecondaryColorOffsetEXT_P:@convention(c)(GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) -> Void = glVertexArraySecondaryColorOffsetEXT_L
public func glVertexArrayTexCoordOffsetEXT(_ vaobj:GLuint, _ buffer:GLuint, _ size:GLint, _ type:GLenum, _ stride:GLsizei, _ offset:GLintptr) {glVertexArrayTexCoordOffsetEXT_P(vaobj, buffer, size, type, stride, offset)}
public func glVertexArrayTexCoordOffsetEXT(vaobj:GLuint, buffer:GLuint, size:GLint, type:GLenum, stride:GLsizei, offset:GLintptr) {glVertexArrayTexCoordOffsetEXT_P(vaobj, buffer, size, type, stride, offset)}
var glVertexArrayTexCoordOffsetEXT_P:@convention(c)(GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) -> Void = glVertexArrayTexCoordOffsetEXT_L
public func glVertexArrayVertexAttribBindingEXT(_ vaobj:GLuint, _ attribindex:GLuint, _ bindingindex:GLuint) {glVertexArrayVertexAttribBindingEXT_P(vaobj, attribindex, bindingindex)}
public func glVertexArrayVertexAttribBindingEXT(vaobj:GLuint, attribindex:GLuint, bindingindex:GLuint) {glVertexArrayVertexAttribBindingEXT_P(vaobj, attribindex, bindingindex)}
var glVertexArrayVertexAttribBindingEXT_P:@convention(c)(GLuint, GLuint, GLuint) -> Void = glVertexArrayVertexAttribBindingEXT_L
public func glVertexArrayVertexAttribDivisorEXT(_ vaobj:GLuint, _ index:GLuint, _ divisor:GLuint) {glVertexArrayVertexAttribDivisorEXT_P(vaobj, index, divisor)}
public func glVertexArrayVertexAttribDivisorEXT(vaobj:GLuint, index:GLuint, divisor:GLuint) {glVertexArrayVertexAttribDivisorEXT_P(vaobj, index, divisor)}
var glVertexArrayVertexAttribDivisorEXT_P:@convention(c)(GLuint, GLuint, GLuint) -> Void = glVertexArrayVertexAttribDivisorEXT_L
public func glVertexArrayVertexAttribFormatEXT(_ vaobj:GLuint, _ attribindex:GLuint, _ size:GLint, _ type:GLenum, _ normalized:GLboolean, _ relativeoffset:GLuint) {glVertexArrayVertexAttribFormatEXT_P(vaobj, attribindex, size, type, normalized, relativeoffset)}
public func glVertexArrayVertexAttribFormatEXT(vaobj:GLuint, attribindex:GLuint, size:GLint, type:GLenum, normalized:GLboolean, relativeoffset:GLuint) {glVertexArrayVertexAttribFormatEXT_P(vaobj, attribindex, size, type, normalized, relativeoffset)}
var glVertexArrayVertexAttribFormatEXT_P:@convention(c)(GLuint, GLuint, GLint, GLenum, GLboolean, GLuint) -> Void = glVertexArrayVertexAttribFormatEXT_L
public func glVertexArrayVertexAttribIFormatEXT(_ vaobj:GLuint, _ attribindex:GLuint, _ size:GLint, _ type:GLenum, _ relativeoffset:GLuint) {glVertexArrayVertexAttribIFormatEXT_P(vaobj, attribindex, size, type, relativeoffset)}
public func glVertexArrayVertexAttribIFormatEXT(vaobj:GLuint, attribindex:GLuint, size:GLint, type:GLenum, relativeoffset:GLuint) {glVertexArrayVertexAttribIFormatEXT_P(vaobj, attribindex, size, type, relativeoffset)}
var glVertexArrayVertexAttribIFormatEXT_P:@convention(c)(GLuint, GLuint, GLint, GLenum, GLuint) -> Void = glVertexArrayVertexAttribIFormatEXT_L
public func glVertexArrayVertexAttribIOffsetEXT(_ vaobj:GLuint, _ buffer:GLuint, _ index:GLuint, _ size:GLint, _ type:GLenum, _ stride:GLsizei, _ offset:GLintptr) {glVertexArrayVertexAttribIOffsetEXT_P(vaobj, buffer, index, size, type, stride, offset)}
public func glVertexArrayVertexAttribIOffsetEXT(vaobj:GLuint, buffer:GLuint, index:GLuint, size:GLint, type:GLenum, stride:GLsizei, offset:GLintptr) {glVertexArrayVertexAttribIOffsetEXT_P(vaobj, buffer, index, size, type, stride, offset)}
var glVertexArrayVertexAttribIOffsetEXT_P:@convention(c)(GLuint, GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) -> Void = glVertexArrayVertexAttribIOffsetEXT_L
public func glVertexArrayVertexAttribLFormatEXT(_ vaobj:GLuint, _ attribindex:GLuint, _ size:GLint, _ type:GLenum, _ relativeoffset:GLuint) {glVertexArrayVertexAttribLFormatEXT_P(vaobj, attribindex, size, type, relativeoffset)}
public func glVertexArrayVertexAttribLFormatEXT(vaobj:GLuint, attribindex:GLuint, size:GLint, type:GLenum, relativeoffset:GLuint) {glVertexArrayVertexAttribLFormatEXT_P(vaobj, attribindex, size, type, relativeoffset)}
var glVertexArrayVertexAttribLFormatEXT_P:@convention(c)(GLuint, GLuint, GLint, GLenum, GLuint) -> Void = glVertexArrayVertexAttribLFormatEXT_L
public func glVertexArrayVertexAttribLOffsetEXT(_ vaobj:GLuint, _ buffer:GLuint, _ index:GLuint, _ size:GLint, _ type:GLenum, _ stride:GLsizei, _ offset:GLintptr) {glVertexArrayVertexAttribLOffsetEXT_P(vaobj, buffer, index, size, type, stride, offset)}
public func glVertexArrayVertexAttribLOffsetEXT(vaobj:GLuint, buffer:GLuint, index:GLuint, size:GLint, type:GLenum, stride:GLsizei, offset:GLintptr) {glVertexArrayVertexAttribLOffsetEXT_P(vaobj, buffer, index, size, type, stride, offset)}
var glVertexArrayVertexAttribLOffsetEXT_P:@convention(c)(GLuint, GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) -> Void = glVertexArrayVertexAttribLOffsetEXT_L
public func glVertexArrayVertexAttribOffsetEXT(_ vaobj:GLuint, _ buffer:GLuint, _ index:GLuint, _ size:GLint, _ type:GLenum, _ normalized:GLboolean, _ stride:GLsizei, _ offset:GLintptr) {glVertexArrayVertexAttribOffsetEXT_P(vaobj, buffer, index, size, type, normalized, stride, offset)}
public func glVertexArrayVertexAttribOffsetEXT(vaobj:GLuint, buffer:GLuint, index:GLuint, size:GLint, type:GLenum, normalized:GLboolean, stride:GLsizei, offset:GLintptr) {glVertexArrayVertexAttribOffsetEXT_P(vaobj, buffer, index, size, type, normalized, stride, offset)}
var glVertexArrayVertexAttribOffsetEXT_P:@convention(c)(GLuint, GLuint, GLuint, GLint, GLenum, GLboolean, GLsizei, GLintptr) -> Void = glVertexArrayVertexAttribOffsetEXT_L
public func glVertexArrayVertexBindingDivisorEXT(_ vaobj:GLuint, _ bindingindex:GLuint, _ divisor:GLuint) {glVertexArrayVertexBindingDivisorEXT_P(vaobj, bindingindex, divisor)}
public func glVertexArrayVertexBindingDivisorEXT(vaobj:GLuint, bindingindex:GLuint, divisor:GLuint) {glVertexArrayVertexBindingDivisorEXT_P(vaobj, bindingindex, divisor)}
var glVertexArrayVertexBindingDivisorEXT_P:@convention(c)(GLuint, GLuint, GLuint) -> Void = glVertexArrayVertexBindingDivisorEXT_L
public func glVertexArrayVertexBuffer(_ vaobj:GLuint, _ bindingindex:GLuint, _ buffer:GLuint, _ offset:GLintptr, _ stride:GLsizei) {glVertexArrayVertexBuffer_P(vaobj, bindingindex, buffer, offset, stride)}
public func glVertexArrayVertexBuffer(vaobj:GLuint, bindingindex:GLuint, buffer:GLuint, offset:GLintptr, stride:GLsizei) {glVertexArrayVertexBuffer_P(vaobj, bindingindex, buffer, offset, stride)}
var glVertexArrayVertexBuffer_P:@convention(c)(GLuint, GLuint, GLuint, GLintptr, GLsizei) -> Void = glVertexArrayVertexBuffer_L
public func glVertexArrayVertexBuffers(_ vaobj:GLuint, _ first:GLuint, _ count:GLsizei, _ buffers:UnsafePointer<GLuint>, _ offsets:UnsafePointer<GLintptr>, _ strides:UnsafePointer<GLsizei>) {glVertexArrayVertexBuffers_P(vaobj, first, count, buffers, offsets, strides)}
public func glVertexArrayVertexBuffers(vaobj:GLuint, first:GLuint, count:GLsizei, buffers:UnsafePointer<GLuint>, offsets:UnsafePointer<GLintptr>, strides:UnsafePointer<GLsizei>) {glVertexArrayVertexBuffers_P(vaobj, first, count, buffers, offsets, strides)}
var glVertexArrayVertexBuffers_P:@convention(c)(GLuint, GLuint, GLsizei, UnsafePointer<GLuint>, UnsafePointer<GLintptr>, UnsafePointer<GLsizei>) -> Void = glVertexArrayVertexBuffers_L
public func glVertexArrayVertexOffsetEXT(_ vaobj:GLuint, _ buffer:GLuint, _ size:GLint, _ type:GLenum, _ stride:GLsizei, _ offset:GLintptr) {glVertexArrayVertexOffsetEXT_P(vaobj, buffer, size, type, stride, offset)}
public func glVertexArrayVertexOffsetEXT(vaobj:GLuint, buffer:GLuint, size:GLint, type:GLenum, stride:GLsizei, offset:GLintptr) {glVertexArrayVertexOffsetEXT_P(vaobj, buffer, size, type, stride, offset)}
var glVertexArrayVertexOffsetEXT_P:@convention(c)(GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) -> Void = glVertexArrayVertexOffsetEXT_L
public func glVertexAttrib1d(_ index:GLuint, _ x:GLdouble) {glVertexAttrib1d_P(index, x)}
public func glVertexAttrib1d(index:GLuint, x:GLdouble) {glVertexAttrib1d_P(index, x)}
var glVertexAttrib1d_P:@convention(c)(GLuint, GLdouble) -> Void = glVertexAttrib1d_L
public func glVertexAttrib1dARB(_ index:GLuint, _ x:GLdouble) {glVertexAttrib1dARB_P(index, x)}
public func glVertexAttrib1dARB(index:GLuint, x:GLdouble) {glVertexAttrib1dARB_P(index, x)}
var glVertexAttrib1dARB_P:@convention(c)(GLuint, GLdouble) -> Void = glVertexAttrib1dARB_L
public func glVertexAttrib1dNV(_ index:GLuint, _ x:GLdouble) {glVertexAttrib1dNV_P(index, x)}
public func glVertexAttrib1dNV(index:GLuint, x:GLdouble) {glVertexAttrib1dNV_P(index, x)}
var glVertexAttrib1dNV_P:@convention(c)(GLuint, GLdouble) -> Void = glVertexAttrib1dNV_L
public func glVertexAttrib1dv(_ index:GLuint, _ v:UnsafePointer<GLdouble>) {glVertexAttrib1dv_P(index, v)}
public func glVertexAttrib1dv(index:GLuint, v:UnsafePointer<GLdouble>) {glVertexAttrib1dv_P(index, v)}
var glVertexAttrib1dv_P:@convention(c)(GLuint, UnsafePointer<GLdouble>) -> Void = glVertexAttrib1dv_L
public func glVertexAttrib1dvARB(_ index:GLuint, _ v:UnsafePointer<GLdouble>) {glVertexAttrib1dvARB_P(index, v)}
public func glVertexAttrib1dvARB(index:GLuint, v:UnsafePointer<GLdouble>) {glVertexAttrib1dvARB_P(index, v)}
var glVertexAttrib1dvARB_P:@convention(c)(GLuint, UnsafePointer<GLdouble>) -> Void = glVertexAttrib1dvARB_L
public func glVertexAttrib1dvNV(_ index:GLuint, _ v:UnsafePointer<GLdouble>) {glVertexAttrib1dvNV_P(index, v)}
public func glVertexAttrib1dvNV(index:GLuint, v:UnsafePointer<GLdouble>) {glVertexAttrib1dvNV_P(index, v)}
var glVertexAttrib1dvNV_P:@convention(c)(GLuint, UnsafePointer<GLdouble>) -> Void = glVertexAttrib1dvNV_L
public func glVertexAttrib1f(_ index:GLuint, _ x:GLfloat) {glVertexAttrib1f_P(index, x)}
public func glVertexAttrib1f(index:GLuint, x:GLfloat) {glVertexAttrib1f_P(index, x)}
var glVertexAttrib1f_P:@convention(c)(GLuint, GLfloat) -> Void = glVertexAttrib1f_L
public func glVertexAttrib1fARB(_ index:GLuint, _ x:GLfloat) {glVertexAttrib1fARB_P(index, x)}
public func glVertexAttrib1fARB(index:GLuint, x:GLfloat) {glVertexAttrib1fARB_P(index, x)}
var glVertexAttrib1fARB_P:@convention(c)(GLuint, GLfloat) -> Void = glVertexAttrib1fARB_L
public func glVertexAttrib1fNV(_ index:GLuint, _ x:GLfloat) {glVertexAttrib1fNV_P(index, x)}
public func glVertexAttrib1fNV(index:GLuint, x:GLfloat) {glVertexAttrib1fNV_P(index, x)}
var glVertexAttrib1fNV_P:@convention(c)(GLuint, GLfloat) -> Void = glVertexAttrib1fNV_L
public func glVertexAttrib1fv(_ index:GLuint, _ v:UnsafePointer<GLfloat>) {glVertexAttrib1fv_P(index, v)}
public func glVertexAttrib1fv(index:GLuint, v:UnsafePointer<GLfloat>) {glVertexAttrib1fv_P(index, v)}
var glVertexAttrib1fv_P:@convention(c)(GLuint, UnsafePointer<GLfloat>) -> Void = glVertexAttrib1fv_L
public func glVertexAttrib1fvARB(_ index:GLuint, _ v:UnsafePointer<GLfloat>) {glVertexAttrib1fvARB_P(index, v)}
public func glVertexAttrib1fvARB(index:GLuint, v:UnsafePointer<GLfloat>) {glVertexAttrib1fvARB_P(index, v)}
var glVertexAttrib1fvARB_P:@convention(c)(GLuint, UnsafePointer<GLfloat>) -> Void = glVertexAttrib1fvARB_L
public func glVertexAttrib1fvNV(_ index:GLuint, _ v:UnsafePointer<GLfloat>) {glVertexAttrib1fvNV_P(index, v)}
public func glVertexAttrib1fvNV(index:GLuint, v:UnsafePointer<GLfloat>) {glVertexAttrib1fvNV_P(index, v)}
var glVertexAttrib1fvNV_P:@convention(c)(GLuint, UnsafePointer<GLfloat>) -> Void = glVertexAttrib1fvNV_L
public func glVertexAttrib1hNV(_ index:GLuint, _ x:GLhalfNV) {glVertexAttrib1hNV_P(index, x)}
public func glVertexAttrib1hNV(index:GLuint, x:GLhalfNV) {glVertexAttrib1hNV_P(index, x)}
var glVertexAttrib1hNV_P:@convention(c)(GLuint, GLhalfNV) -> Void = glVertexAttrib1hNV_L
public func glVertexAttrib1hvNV(_ index:GLuint, _ v:UnsafePointer<GLhalfNV>) {glVertexAttrib1hvNV_P(index, v)}
public func glVertexAttrib1hvNV(index:GLuint, v:UnsafePointer<GLhalfNV>) {glVertexAttrib1hvNV_P(index, v)}
var glVertexAttrib1hvNV_P:@convention(c)(GLuint, UnsafePointer<GLhalfNV>) -> Void = glVertexAttrib1hvNV_L
public func glVertexAttrib1s(_ index:GLuint, _ x:GLshort) {glVertexAttrib1s_P(index, x)}
public func glVertexAttrib1s(index:GLuint, x:GLshort) {glVertexAttrib1s_P(index, x)}
var glVertexAttrib1s_P:@convention(c)(GLuint, GLshort) -> Void = glVertexAttrib1s_L
public func glVertexAttrib1sARB(_ index:GLuint, _ x:GLshort) {glVertexAttrib1sARB_P(index, x)}
public func glVertexAttrib1sARB(index:GLuint, x:GLshort) {glVertexAttrib1sARB_P(index, x)}
var glVertexAttrib1sARB_P:@convention(c)(GLuint, GLshort) -> Void = glVertexAttrib1sARB_L
public func glVertexAttrib1sNV(_ index:GLuint, _ x:GLshort) {glVertexAttrib1sNV_P(index, x)}
public func glVertexAttrib1sNV(index:GLuint, x:GLshort) {glVertexAttrib1sNV_P(index, x)}
var glVertexAttrib1sNV_P:@convention(c)(GLuint, GLshort) -> Void = glVertexAttrib1sNV_L
public func glVertexAttrib1sv(_ index:GLuint, _ v:UnsafePointer<GLshort>) {glVertexAttrib1sv_P(index, v)}
public func glVertexAttrib1sv(index:GLuint, v:UnsafePointer<GLshort>) {glVertexAttrib1sv_P(index, v)}
var glVertexAttrib1sv_P:@convention(c)(GLuint, UnsafePointer<GLshort>) -> Void = glVertexAttrib1sv_L
public func glVertexAttrib1svARB(_ index:GLuint, _ v:UnsafePointer<GLshort>) {glVertexAttrib1svARB_P(index, v)}
public func glVertexAttrib1svARB(index:GLuint, v:UnsafePointer<GLshort>) {glVertexAttrib1svARB_P(index, v)}
var glVertexAttrib1svARB_P:@convention(c)(GLuint, UnsafePointer<GLshort>) -> Void = glVertexAttrib1svARB_L
public func glVertexAttrib1svNV(_ index:GLuint, _ v:UnsafePointer<GLshort>) {glVertexAttrib1svNV_P(index, v)}
public func glVertexAttrib1svNV(index:GLuint, v:UnsafePointer<GLshort>) {glVertexAttrib1svNV_P(index, v)}
var glVertexAttrib1svNV_P:@convention(c)(GLuint, UnsafePointer<GLshort>) -> Void = glVertexAttrib1svNV_L
public func glVertexAttrib2d(_ index:GLuint, _ x:GLdouble, _ y:GLdouble) {glVertexAttrib2d_P(index, x, y)}
public func glVertexAttrib2d(index:GLuint, x:GLdouble, y:GLdouble) {glVertexAttrib2d_P(index, x, y)}
var glVertexAttrib2d_P:@convention(c)(GLuint, GLdouble, GLdouble) -> Void = glVertexAttrib2d_L
public func glVertexAttrib2dARB(_ index:GLuint, _ x:GLdouble, _ y:GLdouble) {glVertexAttrib2dARB_P(index, x, y)}
public func glVertexAttrib2dARB(index:GLuint, x:GLdouble, y:GLdouble) {glVertexAttrib2dARB_P(index, x, y)}
var glVertexAttrib2dARB_P:@convention(c)(GLuint, GLdouble, GLdouble) -> Void = glVertexAttrib2dARB_L
public func glVertexAttrib2dNV(_ index:GLuint, _ x:GLdouble, _ y:GLdouble) {glVertexAttrib2dNV_P(index, x, y)}
public func glVertexAttrib2dNV(index:GLuint, x:GLdouble, y:GLdouble) {glVertexAttrib2dNV_P(index, x, y)}
var glVertexAttrib2dNV_P:@convention(c)(GLuint, GLdouble, GLdouble) -> Void = glVertexAttrib2dNV_L
public func glVertexAttrib2dv(_ index:GLuint, _ v:UnsafePointer<GLdouble>) {glVertexAttrib2dv_P(index, v)}
public func glVertexAttrib2dv(index:GLuint, v:UnsafePointer<GLdouble>) {glVertexAttrib2dv_P(index, v)}
var glVertexAttrib2dv_P:@convention(c)(GLuint, UnsafePointer<GLdouble>) -> Void = glVertexAttrib2dv_L
public func glVertexAttrib2dvARB(_ index:GLuint, _ v:UnsafePointer<GLdouble>) {glVertexAttrib2dvARB_P(index, v)}
public func glVertexAttrib2dvARB(index:GLuint, v:UnsafePointer<GLdouble>) {glVertexAttrib2dvARB_P(index, v)}
var glVertexAttrib2dvARB_P:@convention(c)(GLuint, UnsafePointer<GLdouble>) -> Void = glVertexAttrib2dvARB_L
public func glVertexAttrib2dvNV(_ index:GLuint, _ v:UnsafePointer<GLdouble>) {glVertexAttrib2dvNV_P(index, v)}
public func glVertexAttrib2dvNV(index:GLuint, v:UnsafePointer<GLdouble>) {glVertexAttrib2dvNV_P(index, v)}
var glVertexAttrib2dvNV_P:@convention(c)(GLuint, UnsafePointer<GLdouble>) -> Void = glVertexAttrib2dvNV_L
public func glVertexAttrib2f(_ index:GLuint, _ x:GLfloat, _ y:GLfloat) {glVertexAttrib2f_P(index, x, y)}
public func glVertexAttrib2f(index:GLuint, x:GLfloat, y:GLfloat) {glVertexAttrib2f_P(index, x, y)}
var glVertexAttrib2f_P:@convention(c)(GLuint, GLfloat, GLfloat) -> Void = glVertexAttrib2f_L
public func glVertexAttrib2fARB(_ index:GLuint, _ x:GLfloat, _ y:GLfloat) {glVertexAttrib2fARB_P(index, x, y)}
public func glVertexAttrib2fARB(index:GLuint, x:GLfloat, y:GLfloat) {glVertexAttrib2fARB_P(index, x, y)}
var glVertexAttrib2fARB_P:@convention(c)(GLuint, GLfloat, GLfloat) -> Void = glVertexAttrib2fARB_L
public func glVertexAttrib2fNV(_ index:GLuint, _ x:GLfloat, _ y:GLfloat) {glVertexAttrib2fNV_P(index, x, y)}
public func glVertexAttrib2fNV(index:GLuint, x:GLfloat, y:GLfloat) {glVertexAttrib2fNV_P(index, x, y)}
var glVertexAttrib2fNV_P:@convention(c)(GLuint, GLfloat, GLfloat) -> Void = glVertexAttrib2fNV_L
public func glVertexAttrib2fv(_ index:GLuint, _ v:UnsafePointer<GLfloat>) {glVertexAttrib2fv_P(index, v)}
public func glVertexAttrib2fv(index:GLuint, v:UnsafePointer<GLfloat>) {glVertexAttrib2fv_P(index, v)}
var glVertexAttrib2fv_P:@convention(c)(GLuint, UnsafePointer<GLfloat>) -> Void = glVertexAttrib2fv_L
public func glVertexAttrib2fvARB(_ index:GLuint, _ v:UnsafePointer<GLfloat>) {glVertexAttrib2fvARB_P(index, v)}
public func glVertexAttrib2fvARB(index:GLuint, v:UnsafePointer<GLfloat>) {glVertexAttrib2fvARB_P(index, v)}
var glVertexAttrib2fvARB_P:@convention(c)(GLuint, UnsafePointer<GLfloat>) -> Void = glVertexAttrib2fvARB_L
public func glVertexAttrib2fvNV(_ index:GLuint, _ v:UnsafePointer<GLfloat>) {glVertexAttrib2fvNV_P(index, v)}
public func glVertexAttrib2fvNV(index:GLuint, v:UnsafePointer<GLfloat>) {glVertexAttrib2fvNV_P(index, v)}
var glVertexAttrib2fvNV_P:@convention(c)(GLuint, UnsafePointer<GLfloat>) -> Void = glVertexAttrib2fvNV_L
public func glVertexAttrib2hNV(_ index:GLuint, _ x:GLhalfNV, _ y:GLhalfNV) {glVertexAttrib2hNV_P(index, x, y)}
public func glVertexAttrib2hNV(index:GLuint, x:GLhalfNV, y:GLhalfNV) {glVertexAttrib2hNV_P(index, x, y)}
var glVertexAttrib2hNV_P:@convention(c)(GLuint, GLhalfNV, GLhalfNV) -> Void = glVertexAttrib2hNV_L
public func glVertexAttrib2hvNV(_ index:GLuint, _ v:UnsafePointer<GLhalfNV>) {glVertexAttrib2hvNV_P(index, v)}
public func glVertexAttrib2hvNV(index:GLuint, v:UnsafePointer<GLhalfNV>) {glVertexAttrib2hvNV_P(index, v)}
var glVertexAttrib2hvNV_P:@convention(c)(GLuint, UnsafePointer<GLhalfNV>) -> Void = glVertexAttrib2hvNV_L
public func glVertexAttrib2s(_ index:GLuint, _ x:GLshort, _ y:GLshort) {glVertexAttrib2s_P(index, x, y)}
public func glVertexAttrib2s(index:GLuint, x:GLshort, y:GLshort) {glVertexAttrib2s_P(index, x, y)}
var glVertexAttrib2s_P:@convention(c)(GLuint, GLshort, GLshort) -> Void = glVertexAttrib2s_L
public func glVertexAttrib2sARB(_ index:GLuint, _ x:GLshort, _ y:GLshort) {glVertexAttrib2sARB_P(index, x, y)}
public func glVertexAttrib2sARB(index:GLuint, x:GLshort, y:GLshort) {glVertexAttrib2sARB_P(index, x, y)}
var glVertexAttrib2sARB_P:@convention(c)(GLuint, GLshort, GLshort) -> Void = glVertexAttrib2sARB_L
public func glVertexAttrib2sNV(_ index:GLuint, _ x:GLshort, _ y:GLshort) {glVertexAttrib2sNV_P(index, x, y)}
public func glVertexAttrib2sNV(index:GLuint, x:GLshort, y:GLshort) {glVertexAttrib2sNV_P(index, x, y)}
var glVertexAttrib2sNV_P:@convention(c)(GLuint, GLshort, GLshort) -> Void = glVertexAttrib2sNV_L
public func glVertexAttrib2sv(_ index:GLuint, _ v:UnsafePointer<GLshort>) {glVertexAttrib2sv_P(index, v)}
public func glVertexAttrib2sv(index:GLuint, v:UnsafePointer<GLshort>) {glVertexAttrib2sv_P(index, v)}
var glVertexAttrib2sv_P:@convention(c)(GLuint, UnsafePointer<GLshort>) -> Void = glVertexAttrib2sv_L
public func glVertexAttrib2svARB(_ index:GLuint, _ v:UnsafePointer<GLshort>) {glVertexAttrib2svARB_P(index, v)}
public func glVertexAttrib2svARB(index:GLuint, v:UnsafePointer<GLshort>) {glVertexAttrib2svARB_P(index, v)}
var glVertexAttrib2svARB_P:@convention(c)(GLuint, UnsafePointer<GLshort>) -> Void = glVertexAttrib2svARB_L
public func glVertexAttrib2svNV(_ index:GLuint, _ v:UnsafePointer<GLshort>) {glVertexAttrib2svNV_P(index, v)}
public func glVertexAttrib2svNV(index:GLuint, v:UnsafePointer<GLshort>) {glVertexAttrib2svNV_P(index, v)}
var glVertexAttrib2svNV_P:@convention(c)(GLuint, UnsafePointer<GLshort>) -> Void = glVertexAttrib2svNV_L
public func glVertexAttrib3d(_ index:GLuint, _ x:GLdouble, _ y:GLdouble, _ z:GLdouble) {glVertexAttrib3d_P(index, x, y, z)}
public func glVertexAttrib3d(index:GLuint, x:GLdouble, y:GLdouble, z:GLdouble) {glVertexAttrib3d_P(index, x, y, z)}
var glVertexAttrib3d_P:@convention(c)(GLuint, GLdouble, GLdouble, GLdouble) -> Void = glVertexAttrib3d_L
public func glVertexAttrib3dARB(_ index:GLuint, _ x:GLdouble, _ y:GLdouble, _ z:GLdouble) {glVertexAttrib3dARB_P(index, x, y, z)}
public func glVertexAttrib3dARB(index:GLuint, x:GLdouble, y:GLdouble, z:GLdouble) {glVertexAttrib3dARB_P(index, x, y, z)}
var glVertexAttrib3dARB_P:@convention(c)(GLuint, GLdouble, GLdouble, GLdouble) -> Void = glVertexAttrib3dARB_L
public func glVertexAttrib3dNV(_ index:GLuint, _ x:GLdouble, _ y:GLdouble, _ z:GLdouble) {glVertexAttrib3dNV_P(index, x, y, z)}
public func glVertexAttrib3dNV(index:GLuint, x:GLdouble, y:GLdouble, z:GLdouble) {glVertexAttrib3dNV_P(index, x, y, z)}
var glVertexAttrib3dNV_P:@convention(c)(GLuint, GLdouble, GLdouble, GLdouble) -> Void = glVertexAttrib3dNV_L
public func glVertexAttrib3dv(_ index:GLuint, _ v:UnsafePointer<GLdouble>) {glVertexAttrib3dv_P(index, v)}
public func glVertexAttrib3dv(index:GLuint, v:UnsafePointer<GLdouble>) {glVertexAttrib3dv_P(index, v)}
var glVertexAttrib3dv_P:@convention(c)(GLuint, UnsafePointer<GLdouble>) -> Void = glVertexAttrib3dv_L
public func glVertexAttrib3dvARB(_ index:GLuint, _ v:UnsafePointer<GLdouble>) {glVertexAttrib3dvARB_P(index, v)}
public func glVertexAttrib3dvARB(index:GLuint, v:UnsafePointer<GLdouble>) {glVertexAttrib3dvARB_P(index, v)}
var glVertexAttrib3dvARB_P:@convention(c)(GLuint, UnsafePointer<GLdouble>) -> Void = glVertexAttrib3dvARB_L
public func glVertexAttrib3dvNV(_ index:GLuint, _ v:UnsafePointer<GLdouble>) {glVertexAttrib3dvNV_P(index, v)}
public func glVertexAttrib3dvNV(index:GLuint, v:UnsafePointer<GLdouble>) {glVertexAttrib3dvNV_P(index, v)}
var glVertexAttrib3dvNV_P:@convention(c)(GLuint, UnsafePointer<GLdouble>) -> Void = glVertexAttrib3dvNV_L
public func glVertexAttrib3f(_ index:GLuint, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat) {glVertexAttrib3f_P(index, x, y, z)}
public func glVertexAttrib3f(index:GLuint, x:GLfloat, y:GLfloat, z:GLfloat) {glVertexAttrib3f_P(index, x, y, z)}
var glVertexAttrib3f_P:@convention(c)(GLuint, GLfloat, GLfloat, GLfloat) -> Void = glVertexAttrib3f_L
public func glVertexAttrib3fARB(_ index:GLuint, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat) {glVertexAttrib3fARB_P(index, x, y, z)}
public func glVertexAttrib3fARB(index:GLuint, x:GLfloat, y:GLfloat, z:GLfloat) {glVertexAttrib3fARB_P(index, x, y, z)}
var glVertexAttrib3fARB_P:@convention(c)(GLuint, GLfloat, GLfloat, GLfloat) -> Void = glVertexAttrib3fARB_L
public func glVertexAttrib3fNV(_ index:GLuint, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat) {glVertexAttrib3fNV_P(index, x, y, z)}
public func glVertexAttrib3fNV(index:GLuint, x:GLfloat, y:GLfloat, z:GLfloat) {glVertexAttrib3fNV_P(index, x, y, z)}
var glVertexAttrib3fNV_P:@convention(c)(GLuint, GLfloat, GLfloat, GLfloat) -> Void = glVertexAttrib3fNV_L
public func glVertexAttrib3fv(_ index:GLuint, _ v:UnsafePointer<GLfloat>) {glVertexAttrib3fv_P(index, v)}
public func glVertexAttrib3fv(index:GLuint, v:UnsafePointer<GLfloat>) {glVertexAttrib3fv_P(index, v)}
var glVertexAttrib3fv_P:@convention(c)(GLuint, UnsafePointer<GLfloat>) -> Void = glVertexAttrib3fv_L
public func glVertexAttrib3fvARB(_ index:GLuint, _ v:UnsafePointer<GLfloat>) {glVertexAttrib3fvARB_P(index, v)}
public func glVertexAttrib3fvARB(index:GLuint, v:UnsafePointer<GLfloat>) {glVertexAttrib3fvARB_P(index, v)}
var glVertexAttrib3fvARB_P:@convention(c)(GLuint, UnsafePointer<GLfloat>) -> Void = glVertexAttrib3fvARB_L
public func glVertexAttrib3fvNV(_ index:GLuint, _ v:UnsafePointer<GLfloat>) {glVertexAttrib3fvNV_P(index, v)}
public func glVertexAttrib3fvNV(index:GLuint, v:UnsafePointer<GLfloat>) {glVertexAttrib3fvNV_P(index, v)}
var glVertexAttrib3fvNV_P:@convention(c)(GLuint, UnsafePointer<GLfloat>) -> Void = glVertexAttrib3fvNV_L
public func glVertexAttrib3hNV(_ index:GLuint, _ x:GLhalfNV, _ y:GLhalfNV, _ z:GLhalfNV) {glVertexAttrib3hNV_P(index, x, y, z)}
public func glVertexAttrib3hNV(index:GLuint, x:GLhalfNV, y:GLhalfNV, z:GLhalfNV) {glVertexAttrib3hNV_P(index, x, y, z)}
var glVertexAttrib3hNV_P:@convention(c)(GLuint, GLhalfNV, GLhalfNV, GLhalfNV) -> Void = glVertexAttrib3hNV_L
public func glVertexAttrib3hvNV(_ index:GLuint, _ v:UnsafePointer<GLhalfNV>) {glVertexAttrib3hvNV_P(index, v)}
public func glVertexAttrib3hvNV(index:GLuint, v:UnsafePointer<GLhalfNV>) {glVertexAttrib3hvNV_P(index, v)}
var glVertexAttrib3hvNV_P:@convention(c)(GLuint, UnsafePointer<GLhalfNV>) -> Void = glVertexAttrib3hvNV_L
public func glVertexAttrib3s(_ index:GLuint, _ x:GLshort, _ y:GLshort, _ z:GLshort) {glVertexAttrib3s_P(index, x, y, z)}
public func glVertexAttrib3s(index:GLuint, x:GLshort, y:GLshort, z:GLshort) {glVertexAttrib3s_P(index, x, y, z)}
var glVertexAttrib3s_P:@convention(c)(GLuint, GLshort, GLshort, GLshort) -> Void = glVertexAttrib3s_L
public func glVertexAttrib3sARB(_ index:GLuint, _ x:GLshort, _ y:GLshort, _ z:GLshort) {glVertexAttrib3sARB_P(index, x, y, z)}
public func glVertexAttrib3sARB(index:GLuint, x:GLshort, y:GLshort, z:GLshort) {glVertexAttrib3sARB_P(index, x, y, z)}
var glVertexAttrib3sARB_P:@convention(c)(GLuint, GLshort, GLshort, GLshort) -> Void = glVertexAttrib3sARB_L
public func glVertexAttrib3sNV(_ index:GLuint, _ x:GLshort, _ y:GLshort, _ z:GLshort) {glVertexAttrib3sNV_P(index, x, y, z)}
public func glVertexAttrib3sNV(index:GLuint, x:GLshort, y:GLshort, z:GLshort) {glVertexAttrib3sNV_P(index, x, y, z)}
var glVertexAttrib3sNV_P:@convention(c)(GLuint, GLshort, GLshort, GLshort) -> Void = glVertexAttrib3sNV_L
public func glVertexAttrib3sv(_ index:GLuint, _ v:UnsafePointer<GLshort>) {glVertexAttrib3sv_P(index, v)}
public func glVertexAttrib3sv(index:GLuint, v:UnsafePointer<GLshort>) {glVertexAttrib3sv_P(index, v)}
var glVertexAttrib3sv_P:@convention(c)(GLuint, UnsafePointer<GLshort>) -> Void = glVertexAttrib3sv_L
public func glVertexAttrib3svARB(_ index:GLuint, _ v:UnsafePointer<GLshort>) {glVertexAttrib3svARB_P(index, v)}
public func glVertexAttrib3svARB(index:GLuint, v:UnsafePointer<GLshort>) {glVertexAttrib3svARB_P(index, v)}
var glVertexAttrib3svARB_P:@convention(c)(GLuint, UnsafePointer<GLshort>) -> Void = glVertexAttrib3svARB_L
public func glVertexAttrib3svNV(_ index:GLuint, _ v:UnsafePointer<GLshort>) {glVertexAttrib3svNV_P(index, v)}
public func glVertexAttrib3svNV(index:GLuint, v:UnsafePointer<GLshort>) {glVertexAttrib3svNV_P(index, v)}
var glVertexAttrib3svNV_P:@convention(c)(GLuint, UnsafePointer<GLshort>) -> Void = glVertexAttrib3svNV_L
public func glVertexAttrib4Nbv(_ index:GLuint, _ v:UnsafePointer<GLbyte>) {glVertexAttrib4Nbv_P(index, v)}
public func glVertexAttrib4Nbv(index:GLuint, v:UnsafePointer<GLbyte>) {glVertexAttrib4Nbv_P(index, v)}
var glVertexAttrib4Nbv_P:@convention(c)(GLuint, UnsafePointer<GLbyte>) -> Void = glVertexAttrib4Nbv_L
public func glVertexAttrib4NbvARB(_ index:GLuint, _ v:UnsafePointer<GLbyte>) {glVertexAttrib4NbvARB_P(index, v)}
public func glVertexAttrib4NbvARB(index:GLuint, v:UnsafePointer<GLbyte>) {glVertexAttrib4NbvARB_P(index, v)}
var glVertexAttrib4NbvARB_P:@convention(c)(GLuint, UnsafePointer<GLbyte>) -> Void = glVertexAttrib4NbvARB_L
public func glVertexAttrib4Niv(_ index:GLuint, _ v:UnsafePointer<GLint>) {glVertexAttrib4Niv_P(index, v)}
public func glVertexAttrib4Niv(index:GLuint, v:UnsafePointer<GLint>) {glVertexAttrib4Niv_P(index, v)}
var glVertexAttrib4Niv_P:@convention(c)(GLuint, UnsafePointer<GLint>) -> Void = glVertexAttrib4Niv_L
public func glVertexAttrib4NivARB(_ index:GLuint, _ v:UnsafePointer<GLint>) {glVertexAttrib4NivARB_P(index, v)}
public func glVertexAttrib4NivARB(index:GLuint, v:UnsafePointer<GLint>) {glVertexAttrib4NivARB_P(index, v)}
var glVertexAttrib4NivARB_P:@convention(c)(GLuint, UnsafePointer<GLint>) -> Void = glVertexAttrib4NivARB_L
public func glVertexAttrib4Nsv(_ index:GLuint, _ v:UnsafePointer<GLshort>) {glVertexAttrib4Nsv_P(index, v)}
public func glVertexAttrib4Nsv(index:GLuint, v:UnsafePointer<GLshort>) {glVertexAttrib4Nsv_P(index, v)}
var glVertexAttrib4Nsv_P:@convention(c)(GLuint, UnsafePointer<GLshort>) -> Void = glVertexAttrib4Nsv_L
public func glVertexAttrib4NsvARB(_ index:GLuint, _ v:UnsafePointer<GLshort>) {glVertexAttrib4NsvARB_P(index, v)}
public func glVertexAttrib4NsvARB(index:GLuint, v:UnsafePointer<GLshort>) {glVertexAttrib4NsvARB_P(index, v)}
var glVertexAttrib4NsvARB_P:@convention(c)(GLuint, UnsafePointer<GLshort>) -> Void = glVertexAttrib4NsvARB_L
public func glVertexAttrib4Nub(_ index:GLuint, _ x:GLubyte, _ y:GLubyte, _ z:GLubyte, _ w:GLubyte) {glVertexAttrib4Nub_P(index, x, y, z, w)}
public func glVertexAttrib4Nub(index:GLuint, x:GLubyte, y:GLubyte, z:GLubyte, w:GLubyte) {glVertexAttrib4Nub_P(index, x, y, z, w)}
var glVertexAttrib4Nub_P:@convention(c)(GLuint, GLubyte, GLubyte, GLubyte, GLubyte) -> Void = glVertexAttrib4Nub_L
public func glVertexAttrib4NubARB(_ index:GLuint, _ x:GLubyte, _ y:GLubyte, _ z:GLubyte, _ w:GLubyte) {glVertexAttrib4NubARB_P(index, x, y, z, w)}
public func glVertexAttrib4NubARB(index:GLuint, x:GLubyte, y:GLubyte, z:GLubyte, w:GLubyte) {glVertexAttrib4NubARB_P(index, x, y, z, w)}
var glVertexAttrib4NubARB_P:@convention(c)(GLuint, GLubyte, GLubyte, GLubyte, GLubyte) -> Void = glVertexAttrib4NubARB_L
public func glVertexAttrib4Nubv(_ index:GLuint, _ v:UnsafePointer<GLubyte>) {glVertexAttrib4Nubv_P(index, v)}
public func glVertexAttrib4Nubv(index:GLuint, v:UnsafePointer<GLubyte>) {glVertexAttrib4Nubv_P(index, v)}
var glVertexAttrib4Nubv_P:@convention(c)(GLuint, UnsafePointer<GLubyte>) -> Void = glVertexAttrib4Nubv_L
public func glVertexAttrib4NubvARB(_ index:GLuint, _ v:UnsafePointer<GLubyte>) {glVertexAttrib4NubvARB_P(index, v)}
public func glVertexAttrib4NubvARB(index:GLuint, v:UnsafePointer<GLubyte>) {glVertexAttrib4NubvARB_P(index, v)}
var glVertexAttrib4NubvARB_P:@convention(c)(GLuint, UnsafePointer<GLubyte>) -> Void = glVertexAttrib4NubvARB_L
public func glVertexAttrib4Nuiv(_ index:GLuint, _ v:UnsafePointer<GLuint>) {glVertexAttrib4Nuiv_P(index, v)}
public func glVertexAttrib4Nuiv(index:GLuint, v:UnsafePointer<GLuint>) {glVertexAttrib4Nuiv_P(index, v)}
var glVertexAttrib4Nuiv_P:@convention(c)(GLuint, UnsafePointer<GLuint>) -> Void = glVertexAttrib4Nuiv_L
public func glVertexAttrib4NuivARB(_ index:GLuint, _ v:UnsafePointer<GLuint>) {glVertexAttrib4NuivARB_P(index, v)}
public func glVertexAttrib4NuivARB(index:GLuint, v:UnsafePointer<GLuint>) {glVertexAttrib4NuivARB_P(index, v)}
var glVertexAttrib4NuivARB_P:@convention(c)(GLuint, UnsafePointer<GLuint>) -> Void = glVertexAttrib4NuivARB_L
public func glVertexAttrib4Nusv(_ index:GLuint, _ v:UnsafePointer<GLushort>) {glVertexAttrib4Nusv_P(index, v)}
public func glVertexAttrib4Nusv(index:GLuint, v:UnsafePointer<GLushort>) {glVertexAttrib4Nusv_P(index, v)}
var glVertexAttrib4Nusv_P:@convention(c)(GLuint, UnsafePointer<GLushort>) -> Void = glVertexAttrib4Nusv_L
public func glVertexAttrib4NusvARB(_ index:GLuint, _ v:UnsafePointer<GLushort>) {glVertexAttrib4NusvARB_P(index, v)}
public func glVertexAttrib4NusvARB(index:GLuint, v:UnsafePointer<GLushort>) {glVertexAttrib4NusvARB_P(index, v)}
var glVertexAttrib4NusvARB_P:@convention(c)(GLuint, UnsafePointer<GLushort>) -> Void = glVertexAttrib4NusvARB_L
public func glVertexAttrib4bv(_ index:GLuint, _ v:UnsafePointer<GLbyte>) {glVertexAttrib4bv_P(index, v)}
public func glVertexAttrib4bv(index:GLuint, v:UnsafePointer<GLbyte>) {glVertexAttrib4bv_P(index, v)}
var glVertexAttrib4bv_P:@convention(c)(GLuint, UnsafePointer<GLbyte>) -> Void = glVertexAttrib4bv_L
public func glVertexAttrib4bvARB(_ index:GLuint, _ v:UnsafePointer<GLbyte>) {glVertexAttrib4bvARB_P(index, v)}
public func glVertexAttrib4bvARB(index:GLuint, v:UnsafePointer<GLbyte>) {glVertexAttrib4bvARB_P(index, v)}
var glVertexAttrib4bvARB_P:@convention(c)(GLuint, UnsafePointer<GLbyte>) -> Void = glVertexAttrib4bvARB_L
public func glVertexAttrib4d(_ index:GLuint, _ x:GLdouble, _ y:GLdouble, _ z:GLdouble, _ w:GLdouble) {glVertexAttrib4d_P(index, x, y, z, w)}
public func glVertexAttrib4d(index:GLuint, x:GLdouble, y:GLdouble, z:GLdouble, w:GLdouble) {glVertexAttrib4d_P(index, x, y, z, w)}
var glVertexAttrib4d_P:@convention(c)(GLuint, GLdouble, GLdouble, GLdouble, GLdouble) -> Void = glVertexAttrib4d_L
public func glVertexAttrib4dARB(_ index:GLuint, _ x:GLdouble, _ y:GLdouble, _ z:GLdouble, _ w:GLdouble) {glVertexAttrib4dARB_P(index, x, y, z, w)}
public func glVertexAttrib4dARB(index:GLuint, x:GLdouble, y:GLdouble, z:GLdouble, w:GLdouble) {glVertexAttrib4dARB_P(index, x, y, z, w)}
var glVertexAttrib4dARB_P:@convention(c)(GLuint, GLdouble, GLdouble, GLdouble, GLdouble) -> Void = glVertexAttrib4dARB_L
public func glVertexAttrib4dNV(_ index:GLuint, _ x:GLdouble, _ y:GLdouble, _ z:GLdouble, _ w:GLdouble) {glVertexAttrib4dNV_P(index, x, y, z, w)}
public func glVertexAttrib4dNV(index:GLuint, x:GLdouble, y:GLdouble, z:GLdouble, w:GLdouble) {glVertexAttrib4dNV_P(index, x, y, z, w)}
var glVertexAttrib4dNV_P:@convention(c)(GLuint, GLdouble, GLdouble, GLdouble, GLdouble) -> Void = glVertexAttrib4dNV_L
public func glVertexAttrib4dv(_ index:GLuint, _ v:UnsafePointer<GLdouble>) {glVertexAttrib4dv_P(index, v)}
public func glVertexAttrib4dv(index:GLuint, v:UnsafePointer<GLdouble>) {glVertexAttrib4dv_P(index, v)}
var glVertexAttrib4dv_P:@convention(c)(GLuint, UnsafePointer<GLdouble>) -> Void = glVertexAttrib4dv_L
public func glVertexAttrib4dvARB(_ index:GLuint, _ v:UnsafePointer<GLdouble>) {glVertexAttrib4dvARB_P(index, v)}
public func glVertexAttrib4dvARB(index:GLuint, v:UnsafePointer<GLdouble>) {glVertexAttrib4dvARB_P(index, v)}
var glVertexAttrib4dvARB_P:@convention(c)(GLuint, UnsafePointer<GLdouble>) -> Void = glVertexAttrib4dvARB_L
public func glVertexAttrib4dvNV(_ index:GLuint, _ v:UnsafePointer<GLdouble>) {glVertexAttrib4dvNV_P(index, v)}
public func glVertexAttrib4dvNV(index:GLuint, v:UnsafePointer<GLdouble>) {glVertexAttrib4dvNV_P(index, v)}
var glVertexAttrib4dvNV_P:@convention(c)(GLuint, UnsafePointer<GLdouble>) -> Void = glVertexAttrib4dvNV_L
public func glVertexAttrib4f(_ index:GLuint, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat, _ w:GLfloat) {glVertexAttrib4f_P(index, x, y, z, w)}
public func glVertexAttrib4f(index:GLuint, x:GLfloat, y:GLfloat, z:GLfloat, w:GLfloat) {glVertexAttrib4f_P(index, x, y, z, w)}
var glVertexAttrib4f_P:@convention(c)(GLuint, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glVertexAttrib4f_L
public func glVertexAttrib4fARB(_ index:GLuint, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat, _ w:GLfloat) {glVertexAttrib4fARB_P(index, x, y, z, w)}
public func glVertexAttrib4fARB(index:GLuint, x:GLfloat, y:GLfloat, z:GLfloat, w:GLfloat) {glVertexAttrib4fARB_P(index, x, y, z, w)}
var glVertexAttrib4fARB_P:@convention(c)(GLuint, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glVertexAttrib4fARB_L
public func glVertexAttrib4fNV(_ index:GLuint, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat, _ w:GLfloat) {glVertexAttrib4fNV_P(index, x, y, z, w)}
public func glVertexAttrib4fNV(index:GLuint, x:GLfloat, y:GLfloat, z:GLfloat, w:GLfloat) {glVertexAttrib4fNV_P(index, x, y, z, w)}
var glVertexAttrib4fNV_P:@convention(c)(GLuint, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glVertexAttrib4fNV_L
public func glVertexAttrib4fv(_ index:GLuint, _ v:UnsafePointer<GLfloat>) {glVertexAttrib4fv_P(index, v)}
public func glVertexAttrib4fv(index:GLuint, v:UnsafePointer<GLfloat>) {glVertexAttrib4fv_P(index, v)}
var glVertexAttrib4fv_P:@convention(c)(GLuint, UnsafePointer<GLfloat>) -> Void = glVertexAttrib4fv_L
public func glVertexAttrib4fvARB(_ index:GLuint, _ v:UnsafePointer<GLfloat>) {glVertexAttrib4fvARB_P(index, v)}
public func glVertexAttrib4fvARB(index:GLuint, v:UnsafePointer<GLfloat>) {glVertexAttrib4fvARB_P(index, v)}
var glVertexAttrib4fvARB_P:@convention(c)(GLuint, UnsafePointer<GLfloat>) -> Void = glVertexAttrib4fvARB_L
public func glVertexAttrib4fvNV(_ index:GLuint, _ v:UnsafePointer<GLfloat>) {glVertexAttrib4fvNV_P(index, v)}
public func glVertexAttrib4fvNV(index:GLuint, v:UnsafePointer<GLfloat>) {glVertexAttrib4fvNV_P(index, v)}
var glVertexAttrib4fvNV_P:@convention(c)(GLuint, UnsafePointer<GLfloat>) -> Void = glVertexAttrib4fvNV_L
public func glVertexAttrib4hNV(_ index:GLuint, _ x:GLhalfNV, _ y:GLhalfNV, _ z:GLhalfNV, _ w:GLhalfNV) {glVertexAttrib4hNV_P(index, x, y, z, w)}
public func glVertexAttrib4hNV(index:GLuint, x:GLhalfNV, y:GLhalfNV, z:GLhalfNV, w:GLhalfNV) {glVertexAttrib4hNV_P(index, x, y, z, w)}
var glVertexAttrib4hNV_P:@convention(c)(GLuint, GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) -> Void = glVertexAttrib4hNV_L
public func glVertexAttrib4hvNV(_ index:GLuint, _ v:UnsafePointer<GLhalfNV>) {glVertexAttrib4hvNV_P(index, v)}
public func glVertexAttrib4hvNV(index:GLuint, v:UnsafePointer<GLhalfNV>) {glVertexAttrib4hvNV_P(index, v)}
var glVertexAttrib4hvNV_P:@convention(c)(GLuint, UnsafePointer<GLhalfNV>) -> Void = glVertexAttrib4hvNV_L
public func glVertexAttrib4iv(_ index:GLuint, _ v:UnsafePointer<GLint>) {glVertexAttrib4iv_P(index, v)}
public func glVertexAttrib4iv(index:GLuint, v:UnsafePointer<GLint>) {glVertexAttrib4iv_P(index, v)}
var glVertexAttrib4iv_P:@convention(c)(GLuint, UnsafePointer<GLint>) -> Void = glVertexAttrib4iv_L
public func glVertexAttrib4ivARB(_ index:GLuint, _ v:UnsafePointer<GLint>) {glVertexAttrib4ivARB_P(index, v)}
public func glVertexAttrib4ivARB(index:GLuint, v:UnsafePointer<GLint>) {glVertexAttrib4ivARB_P(index, v)}
var glVertexAttrib4ivARB_P:@convention(c)(GLuint, UnsafePointer<GLint>) -> Void = glVertexAttrib4ivARB_L
public func glVertexAttrib4s(_ index:GLuint, _ x:GLshort, _ y:GLshort, _ z:GLshort, _ w:GLshort) {glVertexAttrib4s_P(index, x, y, z, w)}
public func glVertexAttrib4s(index:GLuint, x:GLshort, y:GLshort, z:GLshort, w:GLshort) {glVertexAttrib4s_P(index, x, y, z, w)}
var glVertexAttrib4s_P:@convention(c)(GLuint, GLshort, GLshort, GLshort, GLshort) -> Void = glVertexAttrib4s_L
public func glVertexAttrib4sARB(_ index:GLuint, _ x:GLshort, _ y:GLshort, _ z:GLshort, _ w:GLshort) {glVertexAttrib4sARB_P(index, x, y, z, w)}
public func glVertexAttrib4sARB(index:GLuint, x:GLshort, y:GLshort, z:GLshort, w:GLshort) {glVertexAttrib4sARB_P(index, x, y, z, w)}
var glVertexAttrib4sARB_P:@convention(c)(GLuint, GLshort, GLshort, GLshort, GLshort) -> Void = glVertexAttrib4sARB_L
public func glVertexAttrib4sNV(_ index:GLuint, _ x:GLshort, _ y:GLshort, _ z:GLshort, _ w:GLshort) {glVertexAttrib4sNV_P(index, x, y, z, w)}
public func glVertexAttrib4sNV(index:GLuint, x:GLshort, y:GLshort, z:GLshort, w:GLshort) {glVertexAttrib4sNV_P(index, x, y, z, w)}
var glVertexAttrib4sNV_P:@convention(c)(GLuint, GLshort, GLshort, GLshort, GLshort) -> Void = glVertexAttrib4sNV_L
public func glVertexAttrib4sv(_ index:GLuint, _ v:UnsafePointer<GLshort>) {glVertexAttrib4sv_P(index, v)}
public func glVertexAttrib4sv(index:GLuint, v:UnsafePointer<GLshort>) {glVertexAttrib4sv_P(index, v)}
var glVertexAttrib4sv_P:@convention(c)(GLuint, UnsafePointer<GLshort>) -> Void = glVertexAttrib4sv_L
public func glVertexAttrib4svARB(_ index:GLuint, _ v:UnsafePointer<GLshort>) {glVertexAttrib4svARB_P(index, v)}
public func glVertexAttrib4svARB(index:GLuint, v:UnsafePointer<GLshort>) {glVertexAttrib4svARB_P(index, v)}
var glVertexAttrib4svARB_P:@convention(c)(GLuint, UnsafePointer<GLshort>) -> Void = glVertexAttrib4svARB_L
public func glVertexAttrib4svNV(_ index:GLuint, _ v:UnsafePointer<GLshort>) {glVertexAttrib4svNV_P(index, v)}
public func glVertexAttrib4svNV(index:GLuint, v:UnsafePointer<GLshort>) {glVertexAttrib4svNV_P(index, v)}
var glVertexAttrib4svNV_P:@convention(c)(GLuint, UnsafePointer<GLshort>) -> Void = glVertexAttrib4svNV_L
public func glVertexAttrib4ubNV(_ index:GLuint, _ x:GLubyte, _ y:GLubyte, _ z:GLubyte, _ w:GLubyte) {glVertexAttrib4ubNV_P(index, x, y, z, w)}
public func glVertexAttrib4ubNV(index:GLuint, x:GLubyte, y:GLubyte, z:GLubyte, w:GLubyte) {glVertexAttrib4ubNV_P(index, x, y, z, w)}
var glVertexAttrib4ubNV_P:@convention(c)(GLuint, GLubyte, GLubyte, GLubyte, GLubyte) -> Void = glVertexAttrib4ubNV_L
public func glVertexAttrib4ubv(_ index:GLuint, _ v:UnsafePointer<GLubyte>) {glVertexAttrib4ubv_P(index, v)}
public func glVertexAttrib4ubv(index:GLuint, v:UnsafePointer<GLubyte>) {glVertexAttrib4ubv_P(index, v)}
var glVertexAttrib4ubv_P:@convention(c)(GLuint, UnsafePointer<GLubyte>) -> Void = glVertexAttrib4ubv_L
public func glVertexAttrib4ubvARB(_ index:GLuint, _ v:UnsafePointer<GLubyte>) {glVertexAttrib4ubvARB_P(index, v)}
public func glVertexAttrib4ubvARB(index:GLuint, v:UnsafePointer<GLubyte>) {glVertexAttrib4ubvARB_P(index, v)}
var glVertexAttrib4ubvARB_P:@convention(c)(GLuint, UnsafePointer<GLubyte>) -> Void = glVertexAttrib4ubvARB_L
public func glVertexAttrib4ubvNV(_ index:GLuint, _ v:UnsafePointer<GLubyte>) {glVertexAttrib4ubvNV_P(index, v)}
public func glVertexAttrib4ubvNV(index:GLuint, v:UnsafePointer<GLubyte>) {glVertexAttrib4ubvNV_P(index, v)}
var glVertexAttrib4ubvNV_P:@convention(c)(GLuint, UnsafePointer<GLubyte>) -> Void = glVertexAttrib4ubvNV_L
public func glVertexAttrib4uiv(_ index:GLuint, _ v:UnsafePointer<GLuint>) {glVertexAttrib4uiv_P(index, v)}
public func glVertexAttrib4uiv(index:GLuint, v:UnsafePointer<GLuint>) {glVertexAttrib4uiv_P(index, v)}
var glVertexAttrib4uiv_P:@convention(c)(GLuint, UnsafePointer<GLuint>) -> Void = glVertexAttrib4uiv_L
public func glVertexAttrib4uivARB(_ index:GLuint, _ v:UnsafePointer<GLuint>) {glVertexAttrib4uivARB_P(index, v)}
public func glVertexAttrib4uivARB(index:GLuint, v:UnsafePointer<GLuint>) {glVertexAttrib4uivARB_P(index, v)}
var glVertexAttrib4uivARB_P:@convention(c)(GLuint, UnsafePointer<GLuint>) -> Void = glVertexAttrib4uivARB_L
public func glVertexAttrib4usv(_ index:GLuint, _ v:UnsafePointer<GLushort>) {glVertexAttrib4usv_P(index, v)}
public func glVertexAttrib4usv(index:GLuint, v:UnsafePointer<GLushort>) {glVertexAttrib4usv_P(index, v)}
var glVertexAttrib4usv_P:@convention(c)(GLuint, UnsafePointer<GLushort>) -> Void = glVertexAttrib4usv_L
public func glVertexAttrib4usvARB(_ index:GLuint, _ v:UnsafePointer<GLushort>) {glVertexAttrib4usvARB_P(index, v)}
public func glVertexAttrib4usvARB(index:GLuint, v:UnsafePointer<GLushort>) {glVertexAttrib4usvARB_P(index, v)}
var glVertexAttrib4usvARB_P:@convention(c)(GLuint, UnsafePointer<GLushort>) -> Void = glVertexAttrib4usvARB_L
public func glVertexAttribArrayObjectATI(_ index:GLuint, _ size:GLint, _ type:GLenum, _ normalized:GLboolean, _ stride:GLsizei, _ buffer:GLuint, _ offset:GLuint) {glVertexAttribArrayObjectATI_P(index, size, type, normalized, stride, buffer, offset)}
public func glVertexAttribArrayObjectATI(index:GLuint, size:GLint, type:GLenum, normalized:GLboolean, stride:GLsizei, buffer:GLuint, offset:GLuint) {glVertexAttribArrayObjectATI_P(index, size, type, normalized, stride, buffer, offset)}
var glVertexAttribArrayObjectATI_P:@convention(c)(GLuint, GLint, GLenum, GLboolean, GLsizei, GLuint, GLuint) -> Void = glVertexAttribArrayObjectATI_L
public func glVertexAttribBinding(_ attribindex:GLuint, _ bindingindex:GLuint) {glVertexAttribBinding_P(attribindex, bindingindex)}
public func glVertexAttribBinding(attribindex:GLuint, bindingindex:GLuint) {glVertexAttribBinding_P(attribindex, bindingindex)}
var glVertexAttribBinding_P:@convention(c)(GLuint, GLuint) -> Void = glVertexAttribBinding_L
public func glVertexAttribDivisor(_ index:GLuint, _ divisor:GLuint) {glVertexAttribDivisor_P(index, divisor)}
public func glVertexAttribDivisor(index:GLuint, divisor:GLuint) {glVertexAttribDivisor_P(index, divisor)}
var glVertexAttribDivisor_P:@convention(c)(GLuint, GLuint) -> Void = glVertexAttribDivisor_L
public func glVertexAttribDivisorANGLE(_ index:GLuint, _ divisor:GLuint) {glVertexAttribDivisorANGLE_P(index, divisor)}
public func glVertexAttribDivisorANGLE(index:GLuint, divisor:GLuint) {glVertexAttribDivisorANGLE_P(index, divisor)}
var glVertexAttribDivisorANGLE_P:@convention(c)(GLuint, GLuint) -> Void = glVertexAttribDivisorANGLE_L
public func glVertexAttribDivisorARB(_ index:GLuint, _ divisor:GLuint) {glVertexAttribDivisorARB_P(index, divisor)}
public func glVertexAttribDivisorARB(index:GLuint, divisor:GLuint) {glVertexAttribDivisorARB_P(index, divisor)}
var glVertexAttribDivisorARB_P:@convention(c)(GLuint, GLuint) -> Void = glVertexAttribDivisorARB_L
public func glVertexAttribDivisorEXT(_ index:GLuint, _ divisor:GLuint) {glVertexAttribDivisorEXT_P(index, divisor)}
public func glVertexAttribDivisorEXT(index:GLuint, divisor:GLuint) {glVertexAttribDivisorEXT_P(index, divisor)}
var glVertexAttribDivisorEXT_P:@convention(c)(GLuint, GLuint) -> Void = glVertexAttribDivisorEXT_L
public func glVertexAttribDivisorNV(_ index:GLuint, _ divisor:GLuint) {glVertexAttribDivisorNV_P(index, divisor)}
public func glVertexAttribDivisorNV(index:GLuint, divisor:GLuint) {glVertexAttribDivisorNV_P(index, divisor)}
var glVertexAttribDivisorNV_P:@convention(c)(GLuint, GLuint) -> Void = glVertexAttribDivisorNV_L
public func glVertexAttribFormat(_ attribindex:GLuint, _ size:GLint, _ type:GLenum, _ normalized:GLboolean, _ relativeoffset:GLuint) {glVertexAttribFormat_P(attribindex, size, type, normalized, relativeoffset)}
public func glVertexAttribFormat(attribindex:GLuint, size:GLint, type:GLenum, normalized:GLboolean, relativeoffset:GLuint) {glVertexAttribFormat_P(attribindex, size, type, normalized, relativeoffset)}
var glVertexAttribFormat_P:@convention(c)(GLuint, GLint, GLenum, GLboolean, GLuint) -> Void = glVertexAttribFormat_L
public func glVertexAttribFormatNV(_ index:GLuint, _ size:GLint, _ type:GLenum, _ normalized:GLboolean, _ stride:GLsizei) {glVertexAttribFormatNV_P(index, size, type, normalized, stride)}
public func glVertexAttribFormatNV(index:GLuint, size:GLint, type:GLenum, normalized:GLboolean, stride:GLsizei) {glVertexAttribFormatNV_P(index, size, type, normalized, stride)}
var glVertexAttribFormatNV_P:@convention(c)(GLuint, GLint, GLenum, GLboolean, GLsizei) -> Void = glVertexAttribFormatNV_L
public func glVertexAttribI1i(_ index:GLuint, _ x:GLint) {glVertexAttribI1i_P(index, x)}
public func glVertexAttribI1i(index:GLuint, x:GLint) {glVertexAttribI1i_P(index, x)}
var glVertexAttribI1i_P:@convention(c)(GLuint, GLint) -> Void = glVertexAttribI1i_L
public func glVertexAttribI1iEXT(_ index:GLuint, _ x:GLint) {glVertexAttribI1iEXT_P(index, x)}
public func glVertexAttribI1iEXT(index:GLuint, x:GLint) {glVertexAttribI1iEXT_P(index, x)}
var glVertexAttribI1iEXT_P:@convention(c)(GLuint, GLint) -> Void = glVertexAttribI1iEXT_L
public func glVertexAttribI1iv(_ index:GLuint, _ v:UnsafePointer<GLint>) {glVertexAttribI1iv_P(index, v)}
public func glVertexAttribI1iv(index:GLuint, v:UnsafePointer<GLint>) {glVertexAttribI1iv_P(index, v)}
var glVertexAttribI1iv_P:@convention(c)(GLuint, UnsafePointer<GLint>) -> Void = glVertexAttribI1iv_L
public func glVertexAttribI1ivEXT(_ index:GLuint, _ v:UnsafePointer<GLint>) {glVertexAttribI1ivEXT_P(index, v)}
public func glVertexAttribI1ivEXT(index:GLuint, v:UnsafePointer<GLint>) {glVertexAttribI1ivEXT_P(index, v)}
var glVertexAttribI1ivEXT_P:@convention(c)(GLuint, UnsafePointer<GLint>) -> Void = glVertexAttribI1ivEXT_L
public func glVertexAttribI1ui(_ index:GLuint, _ x:GLuint) {glVertexAttribI1ui_P(index, x)}
public func glVertexAttribI1ui(index:GLuint, x:GLuint) {glVertexAttribI1ui_P(index, x)}
var glVertexAttribI1ui_P:@convention(c)(GLuint, GLuint) -> Void = glVertexAttribI1ui_L
public func glVertexAttribI1uiEXT(_ index:GLuint, _ x:GLuint) {glVertexAttribI1uiEXT_P(index, x)}
public func glVertexAttribI1uiEXT(index:GLuint, x:GLuint) {glVertexAttribI1uiEXT_P(index, x)}
var glVertexAttribI1uiEXT_P:@convention(c)(GLuint, GLuint) -> Void = glVertexAttribI1uiEXT_L
public func glVertexAttribI1uiv(_ index:GLuint, _ v:UnsafePointer<GLuint>) {glVertexAttribI1uiv_P(index, v)}
public func glVertexAttribI1uiv(index:GLuint, v:UnsafePointer<GLuint>) {glVertexAttribI1uiv_P(index, v)}
var glVertexAttribI1uiv_P:@convention(c)(GLuint, UnsafePointer<GLuint>) -> Void = glVertexAttribI1uiv_L
public func glVertexAttribI1uivEXT(_ index:GLuint, _ v:UnsafePointer<GLuint>) {glVertexAttribI1uivEXT_P(index, v)}
public func glVertexAttribI1uivEXT(index:GLuint, v:UnsafePointer<GLuint>) {glVertexAttribI1uivEXT_P(index, v)}
var glVertexAttribI1uivEXT_P:@convention(c)(GLuint, UnsafePointer<GLuint>) -> Void = glVertexAttribI1uivEXT_L
public func glVertexAttribI2i(_ index:GLuint, _ x:GLint, _ y:GLint) {glVertexAttribI2i_P(index, x, y)}
public func glVertexAttribI2i(index:GLuint, x:GLint, y:GLint) {glVertexAttribI2i_P(index, x, y)}
var glVertexAttribI2i_P:@convention(c)(GLuint, GLint, GLint) -> Void = glVertexAttribI2i_L
public func glVertexAttribI2iEXT(_ index:GLuint, _ x:GLint, _ y:GLint) {glVertexAttribI2iEXT_P(index, x, y)}
public func glVertexAttribI2iEXT(index:GLuint, x:GLint, y:GLint) {glVertexAttribI2iEXT_P(index, x, y)}
var glVertexAttribI2iEXT_P:@convention(c)(GLuint, GLint, GLint) -> Void = glVertexAttribI2iEXT_L
public func glVertexAttribI2iv(_ index:GLuint, _ v:UnsafePointer<GLint>) {glVertexAttribI2iv_P(index, v)}
public func glVertexAttribI2iv(index:GLuint, v:UnsafePointer<GLint>) {glVertexAttribI2iv_P(index, v)}
var glVertexAttribI2iv_P:@convention(c)(GLuint, UnsafePointer<GLint>) -> Void = glVertexAttribI2iv_L
public func glVertexAttribI2ivEXT(_ index:GLuint, _ v:UnsafePointer<GLint>) {glVertexAttribI2ivEXT_P(index, v)}
public func glVertexAttribI2ivEXT(index:GLuint, v:UnsafePointer<GLint>) {glVertexAttribI2ivEXT_P(index, v)}
var glVertexAttribI2ivEXT_P:@convention(c)(GLuint, UnsafePointer<GLint>) -> Void = glVertexAttribI2ivEXT_L
public func glVertexAttribI2ui(_ index:GLuint, _ x:GLuint, _ y:GLuint) {glVertexAttribI2ui_P(index, x, y)}
public func glVertexAttribI2ui(index:GLuint, x:GLuint, y:GLuint) {glVertexAttribI2ui_P(index, x, y)}
var glVertexAttribI2ui_P:@convention(c)(GLuint, GLuint, GLuint) -> Void = glVertexAttribI2ui_L
public func glVertexAttribI2uiEXT(_ index:GLuint, _ x:GLuint, _ y:GLuint) {glVertexAttribI2uiEXT_P(index, x, y)}
public func glVertexAttribI2uiEXT(index:GLuint, x:GLuint, y:GLuint) {glVertexAttribI2uiEXT_P(index, x, y)}
var glVertexAttribI2uiEXT_P:@convention(c)(GLuint, GLuint, GLuint) -> Void = glVertexAttribI2uiEXT_L
public func glVertexAttribI2uiv(_ index:GLuint, _ v:UnsafePointer<GLuint>) {glVertexAttribI2uiv_P(index, v)}
public func glVertexAttribI2uiv(index:GLuint, v:UnsafePointer<GLuint>) {glVertexAttribI2uiv_P(index, v)}
var glVertexAttribI2uiv_P:@convention(c)(GLuint, UnsafePointer<GLuint>) -> Void = glVertexAttribI2uiv_L
public func glVertexAttribI2uivEXT(_ index:GLuint, _ v:UnsafePointer<GLuint>) {glVertexAttribI2uivEXT_P(index, v)}
public func glVertexAttribI2uivEXT(index:GLuint, v:UnsafePointer<GLuint>) {glVertexAttribI2uivEXT_P(index, v)}
var glVertexAttribI2uivEXT_P:@convention(c)(GLuint, UnsafePointer<GLuint>) -> Void = glVertexAttribI2uivEXT_L
public func glVertexAttribI3i(_ index:GLuint, _ x:GLint, _ y:GLint, _ z:GLint) {glVertexAttribI3i_P(index, x, y, z)}
public func glVertexAttribI3i(index:GLuint, x:GLint, y:GLint, z:GLint) {glVertexAttribI3i_P(index, x, y, z)}
var glVertexAttribI3i_P:@convention(c)(GLuint, GLint, GLint, GLint) -> Void = glVertexAttribI3i_L
public func glVertexAttribI3iEXT(_ index:GLuint, _ x:GLint, _ y:GLint, _ z:GLint) {glVertexAttribI3iEXT_P(index, x, y, z)}
public func glVertexAttribI3iEXT(index:GLuint, x:GLint, y:GLint, z:GLint) {glVertexAttribI3iEXT_P(index, x, y, z)}
var glVertexAttribI3iEXT_P:@convention(c)(GLuint, GLint, GLint, GLint) -> Void = glVertexAttribI3iEXT_L
public func glVertexAttribI3iv(_ index:GLuint, _ v:UnsafePointer<GLint>) {glVertexAttribI3iv_P(index, v)}
public func glVertexAttribI3iv(index:GLuint, v:UnsafePointer<GLint>) {glVertexAttribI3iv_P(index, v)}
var glVertexAttribI3iv_P:@convention(c)(GLuint, UnsafePointer<GLint>) -> Void = glVertexAttribI3iv_L
public func glVertexAttribI3ivEXT(_ index:GLuint, _ v:UnsafePointer<GLint>) {glVertexAttribI3ivEXT_P(index, v)}
public func glVertexAttribI3ivEXT(index:GLuint, v:UnsafePointer<GLint>) {glVertexAttribI3ivEXT_P(index, v)}
var glVertexAttribI3ivEXT_P:@convention(c)(GLuint, UnsafePointer<GLint>) -> Void = glVertexAttribI3ivEXT_L
public func glVertexAttribI3ui(_ index:GLuint, _ x:GLuint, _ y:GLuint, _ z:GLuint) {glVertexAttribI3ui_P(index, x, y, z)}
public func glVertexAttribI3ui(index:GLuint, x:GLuint, y:GLuint, z:GLuint) {glVertexAttribI3ui_P(index, x, y, z)}
var glVertexAttribI3ui_P:@convention(c)(GLuint, GLuint, GLuint, GLuint) -> Void = glVertexAttribI3ui_L
public func glVertexAttribI3uiEXT(_ index:GLuint, _ x:GLuint, _ y:GLuint, _ z:GLuint) {glVertexAttribI3uiEXT_P(index, x, y, z)}
public func glVertexAttribI3uiEXT(index:GLuint, x:GLuint, y:GLuint, z:GLuint) {glVertexAttribI3uiEXT_P(index, x, y, z)}
var glVertexAttribI3uiEXT_P:@convention(c)(GLuint, GLuint, GLuint, GLuint) -> Void = glVertexAttribI3uiEXT_L
public func glVertexAttribI3uiv(_ index:GLuint, _ v:UnsafePointer<GLuint>) {glVertexAttribI3uiv_P(index, v)}
public func glVertexAttribI3uiv(index:GLuint, v:UnsafePointer<GLuint>) {glVertexAttribI3uiv_P(index, v)}
var glVertexAttribI3uiv_P:@convention(c)(GLuint, UnsafePointer<GLuint>) -> Void = glVertexAttribI3uiv_L
public func glVertexAttribI3uivEXT(_ index:GLuint, _ v:UnsafePointer<GLuint>) {glVertexAttribI3uivEXT_P(index, v)}
public func glVertexAttribI3uivEXT(index:GLuint, v:UnsafePointer<GLuint>) {glVertexAttribI3uivEXT_P(index, v)}
var glVertexAttribI3uivEXT_P:@convention(c)(GLuint, UnsafePointer<GLuint>) -> Void = glVertexAttribI3uivEXT_L
public func glVertexAttribI4bv(_ index:GLuint, _ v:UnsafePointer<GLbyte>) {glVertexAttribI4bv_P(index, v)}
public func glVertexAttribI4bv(index:GLuint, v:UnsafePointer<GLbyte>) {glVertexAttribI4bv_P(index, v)}
var glVertexAttribI4bv_P:@convention(c)(GLuint, UnsafePointer<GLbyte>) -> Void = glVertexAttribI4bv_L
public func glVertexAttribI4bvEXT(_ index:GLuint, _ v:UnsafePointer<GLbyte>) {glVertexAttribI4bvEXT_P(index, v)}
public func glVertexAttribI4bvEXT(index:GLuint, v:UnsafePointer<GLbyte>) {glVertexAttribI4bvEXT_P(index, v)}
var glVertexAttribI4bvEXT_P:@convention(c)(GLuint, UnsafePointer<GLbyte>) -> Void = glVertexAttribI4bvEXT_L
public func glVertexAttribI4i(_ index:GLuint, _ x:GLint, _ y:GLint, _ z:GLint, _ w:GLint) {glVertexAttribI4i_P(index, x, y, z, w)}
public func glVertexAttribI4i(index:GLuint, x:GLint, y:GLint, z:GLint, w:GLint) {glVertexAttribI4i_P(index, x, y, z, w)}
var glVertexAttribI4i_P:@convention(c)(GLuint, GLint, GLint, GLint, GLint) -> Void = glVertexAttribI4i_L
public func glVertexAttribI4iEXT(_ index:GLuint, _ x:GLint, _ y:GLint, _ z:GLint, _ w:GLint) {glVertexAttribI4iEXT_P(index, x, y, z, w)}
public func glVertexAttribI4iEXT(index:GLuint, x:GLint, y:GLint, z:GLint, w:GLint) {glVertexAttribI4iEXT_P(index, x, y, z, w)}
var glVertexAttribI4iEXT_P:@convention(c)(GLuint, GLint, GLint, GLint, GLint) -> Void = glVertexAttribI4iEXT_L
public func glVertexAttribI4iv(_ index:GLuint, _ v:UnsafePointer<GLint>) {glVertexAttribI4iv_P(index, v)}
public func glVertexAttribI4iv(index:GLuint, v:UnsafePointer<GLint>) {glVertexAttribI4iv_P(index, v)}
var glVertexAttribI4iv_P:@convention(c)(GLuint, UnsafePointer<GLint>) -> Void = glVertexAttribI4iv_L
public func glVertexAttribI4ivEXT(_ index:GLuint, _ v:UnsafePointer<GLint>) {glVertexAttribI4ivEXT_P(index, v)}
public func glVertexAttribI4ivEXT(index:GLuint, v:UnsafePointer<GLint>) {glVertexAttribI4ivEXT_P(index, v)}
var glVertexAttribI4ivEXT_P:@convention(c)(GLuint, UnsafePointer<GLint>) -> Void = glVertexAttribI4ivEXT_L
public func glVertexAttribI4sv(_ index:GLuint, _ v:UnsafePointer<GLshort>) {glVertexAttribI4sv_P(index, v)}
public func glVertexAttribI4sv(index:GLuint, v:UnsafePointer<GLshort>) {glVertexAttribI4sv_P(index, v)}
var glVertexAttribI4sv_P:@convention(c)(GLuint, UnsafePointer<GLshort>) -> Void = glVertexAttribI4sv_L
public func glVertexAttribI4svEXT(_ index:GLuint, _ v:UnsafePointer<GLshort>) {glVertexAttribI4svEXT_P(index, v)}
public func glVertexAttribI4svEXT(index:GLuint, v:UnsafePointer<GLshort>) {glVertexAttribI4svEXT_P(index, v)}
var glVertexAttribI4svEXT_P:@convention(c)(GLuint, UnsafePointer<GLshort>) -> Void = glVertexAttribI4svEXT_L
public func glVertexAttribI4ubv(_ index:GLuint, _ v:UnsafePointer<GLubyte>) {glVertexAttribI4ubv_P(index, v)}
public func glVertexAttribI4ubv(index:GLuint, v:UnsafePointer<GLubyte>) {glVertexAttribI4ubv_P(index, v)}
var glVertexAttribI4ubv_P:@convention(c)(GLuint, UnsafePointer<GLubyte>) -> Void = glVertexAttribI4ubv_L
public func glVertexAttribI4ubvEXT(_ index:GLuint, _ v:UnsafePointer<GLubyte>) {glVertexAttribI4ubvEXT_P(index, v)}
public func glVertexAttribI4ubvEXT(index:GLuint, v:UnsafePointer<GLubyte>) {glVertexAttribI4ubvEXT_P(index, v)}
var glVertexAttribI4ubvEXT_P:@convention(c)(GLuint, UnsafePointer<GLubyte>) -> Void = glVertexAttribI4ubvEXT_L
public func glVertexAttribI4ui(_ index:GLuint, _ x:GLuint, _ y:GLuint, _ z:GLuint, _ w:GLuint) {glVertexAttribI4ui_P(index, x, y, z, w)}
public func glVertexAttribI4ui(index:GLuint, x:GLuint, y:GLuint, z:GLuint, w:GLuint) {glVertexAttribI4ui_P(index, x, y, z, w)}
var glVertexAttribI4ui_P:@convention(c)(GLuint, GLuint, GLuint, GLuint, GLuint) -> Void = glVertexAttribI4ui_L
public func glVertexAttribI4uiEXT(_ index:GLuint, _ x:GLuint, _ y:GLuint, _ z:GLuint, _ w:GLuint) {glVertexAttribI4uiEXT_P(index, x, y, z, w)}
public func glVertexAttribI4uiEXT(index:GLuint, x:GLuint, y:GLuint, z:GLuint, w:GLuint) {glVertexAttribI4uiEXT_P(index, x, y, z, w)}
var glVertexAttribI4uiEXT_P:@convention(c)(GLuint, GLuint, GLuint, GLuint, GLuint) -> Void = glVertexAttribI4uiEXT_L
public func glVertexAttribI4uiv(_ index:GLuint, _ v:UnsafePointer<GLuint>) {glVertexAttribI4uiv_P(index, v)}
public func glVertexAttribI4uiv(index:GLuint, v:UnsafePointer<GLuint>) {glVertexAttribI4uiv_P(index, v)}
var glVertexAttribI4uiv_P:@convention(c)(GLuint, UnsafePointer<GLuint>) -> Void = glVertexAttribI4uiv_L
public func glVertexAttribI4uivEXT(_ index:GLuint, _ v:UnsafePointer<GLuint>) {glVertexAttribI4uivEXT_P(index, v)}
public func glVertexAttribI4uivEXT(index:GLuint, v:UnsafePointer<GLuint>) {glVertexAttribI4uivEXT_P(index, v)}
var glVertexAttribI4uivEXT_P:@convention(c)(GLuint, UnsafePointer<GLuint>) -> Void = glVertexAttribI4uivEXT_L
public func glVertexAttribI4usv(_ index:GLuint, _ v:UnsafePointer<GLushort>) {glVertexAttribI4usv_P(index, v)}
public func glVertexAttribI4usv(index:GLuint, v:UnsafePointer<GLushort>) {glVertexAttribI4usv_P(index, v)}
var glVertexAttribI4usv_P:@convention(c)(GLuint, UnsafePointer<GLushort>) -> Void = glVertexAttribI4usv_L
public func glVertexAttribI4usvEXT(_ index:GLuint, _ v:UnsafePointer<GLushort>) {glVertexAttribI4usvEXT_P(index, v)}
public func glVertexAttribI4usvEXT(index:GLuint, v:UnsafePointer<GLushort>) {glVertexAttribI4usvEXT_P(index, v)}
var glVertexAttribI4usvEXT_P:@convention(c)(GLuint, UnsafePointer<GLushort>) -> Void = glVertexAttribI4usvEXT_L
public func glVertexAttribIFormat(_ attribindex:GLuint, _ size:GLint, _ type:GLenum, _ relativeoffset:GLuint) {glVertexAttribIFormat_P(attribindex, size, type, relativeoffset)}
public func glVertexAttribIFormat(attribindex:GLuint, size:GLint, type:GLenum, relativeoffset:GLuint) {glVertexAttribIFormat_P(attribindex, size, type, relativeoffset)}
var glVertexAttribIFormat_P:@convention(c)(GLuint, GLint, GLenum, GLuint) -> Void = glVertexAttribIFormat_L
public func glVertexAttribIFormatNV(_ index:GLuint, _ size:GLint, _ type:GLenum, _ stride:GLsizei) {glVertexAttribIFormatNV_P(index, size, type, stride)}
public func glVertexAttribIFormatNV(index:GLuint, size:GLint, type:GLenum, stride:GLsizei) {glVertexAttribIFormatNV_P(index, size, type, stride)}
var glVertexAttribIFormatNV_P:@convention(c)(GLuint, GLint, GLenum, GLsizei) -> Void = glVertexAttribIFormatNV_L
public func glVertexAttribIPointer(_ index:GLuint, _ size:GLint, _ type:GLenum, _ stride:GLsizei, _ pointer:UnsafeRawPointer) {glVertexAttribIPointer_P(index, size, type, stride, pointer)}
public func glVertexAttribIPointer(index:GLuint, size:GLint, type:GLenum, stride:GLsizei, pointer:UnsafeRawPointer) {glVertexAttribIPointer_P(index, size, type, stride, pointer)}
var glVertexAttribIPointer_P:@convention(c)(GLuint, GLint, GLenum, GLsizei, UnsafeRawPointer) -> Void = glVertexAttribIPointer_L
public func glVertexAttribIPointerEXT(_ index:GLuint, _ size:GLint, _ type:GLenum, _ stride:GLsizei, _ pointer:UnsafeRawPointer) {glVertexAttribIPointerEXT_P(index, size, type, stride, pointer)}
public func glVertexAttribIPointerEXT(index:GLuint, size:GLint, type:GLenum, stride:GLsizei, pointer:UnsafeRawPointer) {glVertexAttribIPointerEXT_P(index, size, type, stride, pointer)}
var glVertexAttribIPointerEXT_P:@convention(c)(GLuint, GLint, GLenum, GLsizei, UnsafeRawPointer) -> Void = glVertexAttribIPointerEXT_L
public func glVertexAttribL1d(_ index:GLuint, _ x:GLdouble) {glVertexAttribL1d_P(index, x)}
public func glVertexAttribL1d(index:GLuint, x:GLdouble) {glVertexAttribL1d_P(index, x)}
var glVertexAttribL1d_P:@convention(c)(GLuint, GLdouble) -> Void = glVertexAttribL1d_L
public func glVertexAttribL1dEXT(_ index:GLuint, _ x:GLdouble) {glVertexAttribL1dEXT_P(index, x)}
public func glVertexAttribL1dEXT(index:GLuint, x:GLdouble) {glVertexAttribL1dEXT_P(index, x)}
var glVertexAttribL1dEXT_P:@convention(c)(GLuint, GLdouble) -> Void = glVertexAttribL1dEXT_L
public func glVertexAttribL1dv(_ index:GLuint, _ v:UnsafePointer<GLdouble>) {glVertexAttribL1dv_P(index, v)}
public func glVertexAttribL1dv(index:GLuint, v:UnsafePointer<GLdouble>) {glVertexAttribL1dv_P(index, v)}
var glVertexAttribL1dv_P:@convention(c)(GLuint, UnsafePointer<GLdouble>) -> Void = glVertexAttribL1dv_L
public func glVertexAttribL1dvEXT(_ index:GLuint, _ v:UnsafePointer<GLdouble>) {glVertexAttribL1dvEXT_P(index, v)}
public func glVertexAttribL1dvEXT(index:GLuint, v:UnsafePointer<GLdouble>) {glVertexAttribL1dvEXT_P(index, v)}
var glVertexAttribL1dvEXT_P:@convention(c)(GLuint, UnsafePointer<GLdouble>) -> Void = glVertexAttribL1dvEXT_L
public func glVertexAttribL1i64NV(_ index:GLuint, _ x:GLint64EXT) {glVertexAttribL1i64NV_P(index, x)}
public func glVertexAttribL1i64NV(index:GLuint, x:GLint64EXT) {glVertexAttribL1i64NV_P(index, x)}
var glVertexAttribL1i64NV_P:@convention(c)(GLuint, GLint64EXT) -> Void = glVertexAttribL1i64NV_L
public func glVertexAttribL1i64vNV(_ index:GLuint, _ v:UnsafePointer<GLint64EXT>) {glVertexAttribL1i64vNV_P(index, v)}
public func glVertexAttribL1i64vNV(index:GLuint, v:UnsafePointer<GLint64EXT>) {glVertexAttribL1i64vNV_P(index, v)}
var glVertexAttribL1i64vNV_P:@convention(c)(GLuint, UnsafePointer<GLint64EXT>) -> Void = glVertexAttribL1i64vNV_L
public func glVertexAttribL1ui64ARB(_ index:GLuint, _ x:GLuint64EXT) {glVertexAttribL1ui64ARB_P(index, x)}
public func glVertexAttribL1ui64ARB(index:GLuint, x:GLuint64EXT) {glVertexAttribL1ui64ARB_P(index, x)}
var glVertexAttribL1ui64ARB_P:@convention(c)(GLuint, GLuint64EXT) -> Void = glVertexAttribL1ui64ARB_L
public func glVertexAttribL1ui64NV(_ index:GLuint, _ x:GLuint64EXT) {glVertexAttribL1ui64NV_P(index, x)}
public func glVertexAttribL1ui64NV(index:GLuint, x:GLuint64EXT) {glVertexAttribL1ui64NV_P(index, x)}
var glVertexAttribL1ui64NV_P:@convention(c)(GLuint, GLuint64EXT) -> Void = glVertexAttribL1ui64NV_L
public func glVertexAttribL1ui64vARB(_ index:GLuint, _ v:UnsafePointer<GLuint64EXT>) {glVertexAttribL1ui64vARB_P(index, v)}
public func glVertexAttribL1ui64vARB(index:GLuint, v:UnsafePointer<GLuint64EXT>) {glVertexAttribL1ui64vARB_P(index, v)}
var glVertexAttribL1ui64vARB_P:@convention(c)(GLuint, UnsafePointer<GLuint64EXT>) -> Void = glVertexAttribL1ui64vARB_L
public func glVertexAttribL1ui64vNV(_ index:GLuint, _ v:UnsafePointer<GLuint64EXT>) {glVertexAttribL1ui64vNV_P(index, v)}
public func glVertexAttribL1ui64vNV(index:GLuint, v:UnsafePointer<GLuint64EXT>) {glVertexAttribL1ui64vNV_P(index, v)}
var glVertexAttribL1ui64vNV_P:@convention(c)(GLuint, UnsafePointer<GLuint64EXT>) -> Void = glVertexAttribL1ui64vNV_L
public func glVertexAttribL2d(_ index:GLuint, _ x:GLdouble, _ y:GLdouble) {glVertexAttribL2d_P(index, x, y)}
public func glVertexAttribL2d(index:GLuint, x:GLdouble, y:GLdouble) {glVertexAttribL2d_P(index, x, y)}
var glVertexAttribL2d_P:@convention(c)(GLuint, GLdouble, GLdouble) -> Void = glVertexAttribL2d_L
public func glVertexAttribL2dEXT(_ index:GLuint, _ x:GLdouble, _ y:GLdouble) {glVertexAttribL2dEXT_P(index, x, y)}
public func glVertexAttribL2dEXT(index:GLuint, x:GLdouble, y:GLdouble) {glVertexAttribL2dEXT_P(index, x, y)}
var glVertexAttribL2dEXT_P:@convention(c)(GLuint, GLdouble, GLdouble) -> Void = glVertexAttribL2dEXT_L
public func glVertexAttribL2dv(_ index:GLuint, _ v:UnsafePointer<GLdouble>) {glVertexAttribL2dv_P(index, v)}
public func glVertexAttribL2dv(index:GLuint, v:UnsafePointer<GLdouble>) {glVertexAttribL2dv_P(index, v)}
var glVertexAttribL2dv_P:@convention(c)(GLuint, UnsafePointer<GLdouble>) -> Void = glVertexAttribL2dv_L
public func glVertexAttribL2dvEXT(_ index:GLuint, _ v:UnsafePointer<GLdouble>) {glVertexAttribL2dvEXT_P(index, v)}
public func glVertexAttribL2dvEXT(index:GLuint, v:UnsafePointer<GLdouble>) {glVertexAttribL2dvEXT_P(index, v)}
var glVertexAttribL2dvEXT_P:@convention(c)(GLuint, UnsafePointer<GLdouble>) -> Void = glVertexAttribL2dvEXT_L
public func glVertexAttribL2i64NV(_ index:GLuint, _ x:GLint64EXT, _ y:GLint64EXT) {glVertexAttribL2i64NV_P(index, x, y)}
public func glVertexAttribL2i64NV(index:GLuint, x:GLint64EXT, y:GLint64EXT) {glVertexAttribL2i64NV_P(index, x, y)}
var glVertexAttribL2i64NV_P:@convention(c)(GLuint, GLint64EXT, GLint64EXT) -> Void = glVertexAttribL2i64NV_L
public func glVertexAttribL2i64vNV(_ index:GLuint, _ v:UnsafePointer<GLint64EXT>) {glVertexAttribL2i64vNV_P(index, v)}
public func glVertexAttribL2i64vNV(index:GLuint, v:UnsafePointer<GLint64EXT>) {glVertexAttribL2i64vNV_P(index, v)}
var glVertexAttribL2i64vNV_P:@convention(c)(GLuint, UnsafePointer<GLint64EXT>) -> Void = glVertexAttribL2i64vNV_L
public func glVertexAttribL2ui64NV(_ index:GLuint, _ x:GLuint64EXT, _ y:GLuint64EXT) {glVertexAttribL2ui64NV_P(index, x, y)}
public func glVertexAttribL2ui64NV(index:GLuint, x:GLuint64EXT, y:GLuint64EXT) {glVertexAttribL2ui64NV_P(index, x, y)}
var glVertexAttribL2ui64NV_P:@convention(c)(GLuint, GLuint64EXT, GLuint64EXT) -> Void = glVertexAttribL2ui64NV_L
public func glVertexAttribL2ui64vNV(_ index:GLuint, _ v:UnsafePointer<GLuint64EXT>) {glVertexAttribL2ui64vNV_P(index, v)}
public func glVertexAttribL2ui64vNV(index:GLuint, v:UnsafePointer<GLuint64EXT>) {glVertexAttribL2ui64vNV_P(index, v)}
var glVertexAttribL2ui64vNV_P:@convention(c)(GLuint, UnsafePointer<GLuint64EXT>) -> Void = glVertexAttribL2ui64vNV_L
public func glVertexAttribL3d(_ index:GLuint, _ x:GLdouble, _ y:GLdouble, _ z:GLdouble) {glVertexAttribL3d_P(index, x, y, z)}
public func glVertexAttribL3d(index:GLuint, x:GLdouble, y:GLdouble, z:GLdouble) {glVertexAttribL3d_P(index, x, y, z)}
var glVertexAttribL3d_P:@convention(c)(GLuint, GLdouble, GLdouble, GLdouble) -> Void = glVertexAttribL3d_L
public func glVertexAttribL3dEXT(_ index:GLuint, _ x:GLdouble, _ y:GLdouble, _ z:GLdouble) {glVertexAttribL3dEXT_P(index, x, y, z)}
public func glVertexAttribL3dEXT(index:GLuint, x:GLdouble, y:GLdouble, z:GLdouble) {glVertexAttribL3dEXT_P(index, x, y, z)}
var glVertexAttribL3dEXT_P:@convention(c)(GLuint, GLdouble, GLdouble, GLdouble) -> Void = glVertexAttribL3dEXT_L
public func glVertexAttribL3dv(_ index:GLuint, _ v:UnsafePointer<GLdouble>) {glVertexAttribL3dv_P(index, v)}
public func glVertexAttribL3dv(index:GLuint, v:UnsafePointer<GLdouble>) {glVertexAttribL3dv_P(index, v)}
var glVertexAttribL3dv_P:@convention(c)(GLuint, UnsafePointer<GLdouble>) -> Void = glVertexAttribL3dv_L
public func glVertexAttribL3dvEXT(_ index:GLuint, _ v:UnsafePointer<GLdouble>) {glVertexAttribL3dvEXT_P(index, v)}
public func glVertexAttribL3dvEXT(index:GLuint, v:UnsafePointer<GLdouble>) {glVertexAttribL3dvEXT_P(index, v)}
var glVertexAttribL3dvEXT_P:@convention(c)(GLuint, UnsafePointer<GLdouble>) -> Void = glVertexAttribL3dvEXT_L
public func glVertexAttribL3i64NV(_ index:GLuint, _ x:GLint64EXT, _ y:GLint64EXT, _ z:GLint64EXT) {glVertexAttribL3i64NV_P(index, x, y, z)}
public func glVertexAttribL3i64NV(index:GLuint, x:GLint64EXT, y:GLint64EXT, z:GLint64EXT) {glVertexAttribL3i64NV_P(index, x, y, z)}
var glVertexAttribL3i64NV_P:@convention(c)(GLuint, GLint64EXT, GLint64EXT, GLint64EXT) -> Void = glVertexAttribL3i64NV_L
public func glVertexAttribL3i64vNV(_ index:GLuint, _ v:UnsafePointer<GLint64EXT>) {glVertexAttribL3i64vNV_P(index, v)}
public func glVertexAttribL3i64vNV(index:GLuint, v:UnsafePointer<GLint64EXT>) {glVertexAttribL3i64vNV_P(index, v)}
var glVertexAttribL3i64vNV_P:@convention(c)(GLuint, UnsafePointer<GLint64EXT>) -> Void = glVertexAttribL3i64vNV_L
public func glVertexAttribL3ui64NV(_ index:GLuint, _ x:GLuint64EXT, _ y:GLuint64EXT, _ z:GLuint64EXT) {glVertexAttribL3ui64NV_P(index, x, y, z)}
public func glVertexAttribL3ui64NV(index:GLuint, x:GLuint64EXT, y:GLuint64EXT, z:GLuint64EXT) {glVertexAttribL3ui64NV_P(index, x, y, z)}
var glVertexAttribL3ui64NV_P:@convention(c)(GLuint, GLuint64EXT, GLuint64EXT, GLuint64EXT) -> Void = glVertexAttribL3ui64NV_L
public func glVertexAttribL3ui64vNV(_ index:GLuint, _ v:UnsafePointer<GLuint64EXT>) {glVertexAttribL3ui64vNV_P(index, v)}
public func glVertexAttribL3ui64vNV(index:GLuint, v:UnsafePointer<GLuint64EXT>) {glVertexAttribL3ui64vNV_P(index, v)}
var glVertexAttribL3ui64vNV_P:@convention(c)(GLuint, UnsafePointer<GLuint64EXT>) -> Void = glVertexAttribL3ui64vNV_L
public func glVertexAttribL4d(_ index:GLuint, _ x:GLdouble, _ y:GLdouble, _ z:GLdouble, _ w:GLdouble) {glVertexAttribL4d_P(index, x, y, z, w)}
public func glVertexAttribL4d(index:GLuint, x:GLdouble, y:GLdouble, z:GLdouble, w:GLdouble) {glVertexAttribL4d_P(index, x, y, z, w)}
var glVertexAttribL4d_P:@convention(c)(GLuint, GLdouble, GLdouble, GLdouble, GLdouble) -> Void = glVertexAttribL4d_L
public func glVertexAttribL4dEXT(_ index:GLuint, _ x:GLdouble, _ y:GLdouble, _ z:GLdouble, _ w:GLdouble) {glVertexAttribL4dEXT_P(index, x, y, z, w)}
public func glVertexAttribL4dEXT(index:GLuint, x:GLdouble, y:GLdouble, z:GLdouble, w:GLdouble) {glVertexAttribL4dEXT_P(index, x, y, z, w)}
var glVertexAttribL4dEXT_P:@convention(c)(GLuint, GLdouble, GLdouble, GLdouble, GLdouble) -> Void = glVertexAttribL4dEXT_L
public func glVertexAttribL4dv(_ index:GLuint, _ v:UnsafePointer<GLdouble>) {glVertexAttribL4dv_P(index, v)}
public func glVertexAttribL4dv(index:GLuint, v:UnsafePointer<GLdouble>) {glVertexAttribL4dv_P(index, v)}
var glVertexAttribL4dv_P:@convention(c)(GLuint, UnsafePointer<GLdouble>) -> Void = glVertexAttribL4dv_L
public func glVertexAttribL4dvEXT(_ index:GLuint, _ v:UnsafePointer<GLdouble>) {glVertexAttribL4dvEXT_P(index, v)}
public func glVertexAttribL4dvEXT(index:GLuint, v:UnsafePointer<GLdouble>) {glVertexAttribL4dvEXT_P(index, v)}
var glVertexAttribL4dvEXT_P:@convention(c)(GLuint, UnsafePointer<GLdouble>) -> Void = glVertexAttribL4dvEXT_L
public func glVertexAttribL4i64NV(_ index:GLuint, _ x:GLint64EXT, _ y:GLint64EXT, _ z:GLint64EXT, _ w:GLint64EXT) {glVertexAttribL4i64NV_P(index, x, y, z, w)}
public func glVertexAttribL4i64NV(index:GLuint, x:GLint64EXT, y:GLint64EXT, z:GLint64EXT, w:GLint64EXT) {glVertexAttribL4i64NV_P(index, x, y, z, w)}
var glVertexAttribL4i64NV_P:@convention(c)(GLuint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT) -> Void = glVertexAttribL4i64NV_L
public func glVertexAttribL4i64vNV(_ index:GLuint, _ v:UnsafePointer<GLint64EXT>) {glVertexAttribL4i64vNV_P(index, v)}
public func glVertexAttribL4i64vNV(index:GLuint, v:UnsafePointer<GLint64EXT>) {glVertexAttribL4i64vNV_P(index, v)}
var glVertexAttribL4i64vNV_P:@convention(c)(GLuint, UnsafePointer<GLint64EXT>) -> Void = glVertexAttribL4i64vNV_L
public func glVertexAttribL4ui64NV(_ index:GLuint, _ x:GLuint64EXT, _ y:GLuint64EXT, _ z:GLuint64EXT, _ w:GLuint64EXT) {glVertexAttribL4ui64NV_P(index, x, y, z, w)}
public func glVertexAttribL4ui64NV(index:GLuint, x:GLuint64EXT, y:GLuint64EXT, z:GLuint64EXT, w:GLuint64EXT) {glVertexAttribL4ui64NV_P(index, x, y, z, w)}
var glVertexAttribL4ui64NV_P:@convention(c)(GLuint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT) -> Void = glVertexAttribL4ui64NV_L
public func glVertexAttribL4ui64vNV(_ index:GLuint, _ v:UnsafePointer<GLuint64EXT>) {glVertexAttribL4ui64vNV_P(index, v)}
public func glVertexAttribL4ui64vNV(index:GLuint, v:UnsafePointer<GLuint64EXT>) {glVertexAttribL4ui64vNV_P(index, v)}
var glVertexAttribL4ui64vNV_P:@convention(c)(GLuint, UnsafePointer<GLuint64EXT>) -> Void = glVertexAttribL4ui64vNV_L
public func glVertexAttribLFormat(_ attribindex:GLuint, _ size:GLint, _ type:GLenum, _ relativeoffset:GLuint) {glVertexAttribLFormat_P(attribindex, size, type, relativeoffset)}
public func glVertexAttribLFormat(attribindex:GLuint, size:GLint, type:GLenum, relativeoffset:GLuint) {glVertexAttribLFormat_P(attribindex, size, type, relativeoffset)}
var glVertexAttribLFormat_P:@convention(c)(GLuint, GLint, GLenum, GLuint) -> Void = glVertexAttribLFormat_L
public func glVertexAttribLFormatNV(_ index:GLuint, _ size:GLint, _ type:GLenum, _ stride:GLsizei) {glVertexAttribLFormatNV_P(index, size, type, stride)}
public func glVertexAttribLFormatNV(index:GLuint, size:GLint, type:GLenum, stride:GLsizei) {glVertexAttribLFormatNV_P(index, size, type, stride)}
var glVertexAttribLFormatNV_P:@convention(c)(GLuint, GLint, GLenum, GLsizei) -> Void = glVertexAttribLFormatNV_L
public func glVertexAttribLPointer(_ index:GLuint, _ size:GLint, _ type:GLenum, _ stride:GLsizei, _ pointer:UnsafeRawPointer) {glVertexAttribLPointer_P(index, size, type, stride, pointer)}
public func glVertexAttribLPointer(index:GLuint, size:GLint, type:GLenum, stride:GLsizei, pointer:UnsafeRawPointer) {glVertexAttribLPointer_P(index, size, type, stride, pointer)}
var glVertexAttribLPointer_P:@convention(c)(GLuint, GLint, GLenum, GLsizei, UnsafeRawPointer) -> Void = glVertexAttribLPointer_L
public func glVertexAttribLPointerEXT(_ index:GLuint, _ size:GLint, _ type:GLenum, _ stride:GLsizei, _ pointer:UnsafeRawPointer) {glVertexAttribLPointerEXT_P(index, size, type, stride, pointer)}
public func glVertexAttribLPointerEXT(index:GLuint, size:GLint, type:GLenum, stride:GLsizei, pointer:UnsafeRawPointer) {glVertexAttribLPointerEXT_P(index, size, type, stride, pointer)}
var glVertexAttribLPointerEXT_P:@convention(c)(GLuint, GLint, GLenum, GLsizei, UnsafeRawPointer) -> Void = glVertexAttribLPointerEXT_L
public func glVertexAttribP1ui(_ index:GLuint, _ type:GLenum, _ normalized:GLboolean, _ value:GLuint) {glVertexAttribP1ui_P(index, type, normalized, value)}
public func glVertexAttribP1ui(index:GLuint, type:GLenum, normalized:GLboolean, value:GLuint) {glVertexAttribP1ui_P(index, type, normalized, value)}
var glVertexAttribP1ui_P:@convention(c)(GLuint, GLenum, GLboolean, GLuint) -> Void = glVertexAttribP1ui_L
public func glVertexAttribP1uiv(_ index:GLuint, _ type:GLenum, _ normalized:GLboolean, _ value:UnsafePointer<GLuint>) {glVertexAttribP1uiv_P(index, type, normalized, value)}
public func glVertexAttribP1uiv(index:GLuint, type:GLenum, normalized:GLboolean, value:UnsafePointer<GLuint>) {glVertexAttribP1uiv_P(index, type, normalized, value)}
var glVertexAttribP1uiv_P:@convention(c)(GLuint, GLenum, GLboolean, UnsafePointer<GLuint>) -> Void = glVertexAttribP1uiv_L
public func glVertexAttribP2ui(_ index:GLuint, _ type:GLenum, _ normalized:GLboolean, _ value:GLuint) {glVertexAttribP2ui_P(index, type, normalized, value)}
public func glVertexAttribP2ui(index:GLuint, type:GLenum, normalized:GLboolean, value:GLuint) {glVertexAttribP2ui_P(index, type, normalized, value)}
var glVertexAttribP2ui_P:@convention(c)(GLuint, GLenum, GLboolean, GLuint) -> Void = glVertexAttribP2ui_L
public func glVertexAttribP2uiv(_ index:GLuint, _ type:GLenum, _ normalized:GLboolean, _ value:UnsafePointer<GLuint>) {glVertexAttribP2uiv_P(index, type, normalized, value)}
public func glVertexAttribP2uiv(index:GLuint, type:GLenum, normalized:GLboolean, value:UnsafePointer<GLuint>) {glVertexAttribP2uiv_P(index, type, normalized, value)}
var glVertexAttribP2uiv_P:@convention(c)(GLuint, GLenum, GLboolean, UnsafePointer<GLuint>) -> Void = glVertexAttribP2uiv_L
public func glVertexAttribP3ui(_ index:GLuint, _ type:GLenum, _ normalized:GLboolean, _ value:GLuint) {glVertexAttribP3ui_P(index, type, normalized, value)}
public func glVertexAttribP3ui(index:GLuint, type:GLenum, normalized:GLboolean, value:GLuint) {glVertexAttribP3ui_P(index, type, normalized, value)}
var glVertexAttribP3ui_P:@convention(c)(GLuint, GLenum, GLboolean, GLuint) -> Void = glVertexAttribP3ui_L
public func glVertexAttribP3uiv(_ index:GLuint, _ type:GLenum, _ normalized:GLboolean, _ value:UnsafePointer<GLuint>) {glVertexAttribP3uiv_P(index, type, normalized, value)}
public func glVertexAttribP3uiv(index:GLuint, type:GLenum, normalized:GLboolean, value:UnsafePointer<GLuint>) {glVertexAttribP3uiv_P(index, type, normalized, value)}
var glVertexAttribP3uiv_P:@convention(c)(GLuint, GLenum, GLboolean, UnsafePointer<GLuint>) -> Void = glVertexAttribP3uiv_L
public func glVertexAttribP4ui(_ index:GLuint, _ type:GLenum, _ normalized:GLboolean, _ value:GLuint) {glVertexAttribP4ui_P(index, type, normalized, value)}
public func glVertexAttribP4ui(index:GLuint, type:GLenum, normalized:GLboolean, value:GLuint) {glVertexAttribP4ui_P(index, type, normalized, value)}
var glVertexAttribP4ui_P:@convention(c)(GLuint, GLenum, GLboolean, GLuint) -> Void = glVertexAttribP4ui_L
public func glVertexAttribP4uiv(_ index:GLuint, _ type:GLenum, _ normalized:GLboolean, _ value:UnsafePointer<GLuint>) {glVertexAttribP4uiv_P(index, type, normalized, value)}
public func glVertexAttribP4uiv(index:GLuint, type:GLenum, normalized:GLboolean, value:UnsafePointer<GLuint>) {glVertexAttribP4uiv_P(index, type, normalized, value)}
var glVertexAttribP4uiv_P:@convention(c)(GLuint, GLenum, GLboolean, UnsafePointer<GLuint>) -> Void = glVertexAttribP4uiv_L
public func glVertexAttribParameteriAMD(_ index:GLuint, _ pname:GLenum, _ param:GLint) {glVertexAttribParameteriAMD_P(index, pname, param)}
public func glVertexAttribParameteriAMD(index:GLuint, pname:GLenum, param:GLint) {glVertexAttribParameteriAMD_P(index, pname, param)}
var glVertexAttribParameteriAMD_P:@convention(c)(GLuint, GLenum, GLint) -> Void = glVertexAttribParameteriAMD_L
public func glVertexAttribPointer(_ index:GLuint, _ size:GLint, _ type:GLenum, _ normalized:GLboolean, _ stride:GLsizei, _ pointer:UnsafeRawPointer) {glVertexAttribPointer_P(index, size, type, normalized, stride, pointer)}
public func glVertexAttribPointer(index:GLuint, size:GLint, type:GLenum, normalized:GLboolean, stride:GLsizei, pointer:UnsafeRawPointer) {glVertexAttribPointer_P(index, size, type, normalized, stride, pointer)}
var glVertexAttribPointer_P:@convention(c)(GLuint, GLint, GLenum, GLboolean, GLsizei, UnsafeRawPointer) -> Void = glVertexAttribPointer_L
public func glVertexAttribPointerARB(_ index:GLuint, _ size:GLint, _ type:GLenum, _ normalized:GLboolean, _ stride:GLsizei, _ pointer:UnsafeRawPointer) {glVertexAttribPointerARB_P(index, size, type, normalized, stride, pointer)}
public func glVertexAttribPointerARB(index:GLuint, size:GLint, type:GLenum, normalized:GLboolean, stride:GLsizei, pointer:UnsafeRawPointer) {glVertexAttribPointerARB_P(index, size, type, normalized, stride, pointer)}
var glVertexAttribPointerARB_P:@convention(c)(GLuint, GLint, GLenum, GLboolean, GLsizei, UnsafeRawPointer) -> Void = glVertexAttribPointerARB_L
public func glVertexAttribPointerNV(_ index:GLuint, _ fsize:GLint, _ type:GLenum, _ stride:GLsizei, _ pointer:UnsafeRawPointer) {glVertexAttribPointerNV_P(index, fsize, type, stride, pointer)}
public func glVertexAttribPointerNV(index:GLuint, fsize:GLint, type:GLenum, stride:GLsizei, pointer:UnsafeRawPointer) {glVertexAttribPointerNV_P(index, fsize, type, stride, pointer)}
var glVertexAttribPointerNV_P:@convention(c)(GLuint, GLint, GLenum, GLsizei, UnsafeRawPointer) -> Void = glVertexAttribPointerNV_L
public func glVertexAttribs1dvNV(_ index:GLuint, _ count:GLsizei, _ v:UnsafePointer<GLdouble>) {glVertexAttribs1dvNV_P(index, count, v)}
public func glVertexAttribs1dvNV(index:GLuint, count:GLsizei, v:UnsafePointer<GLdouble>) {glVertexAttribs1dvNV_P(index, count, v)}
var glVertexAttribs1dvNV_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLdouble>) -> Void = glVertexAttribs1dvNV_L
public func glVertexAttribs1fvNV(_ index:GLuint, _ count:GLsizei, _ v:UnsafePointer<GLfloat>) {glVertexAttribs1fvNV_P(index, count, v)}
public func glVertexAttribs1fvNV(index:GLuint, count:GLsizei, v:UnsafePointer<GLfloat>) {glVertexAttribs1fvNV_P(index, count, v)}
var glVertexAttribs1fvNV_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLfloat>) -> Void = glVertexAttribs1fvNV_L
public func glVertexAttribs1hvNV(_ index:GLuint, _ n:GLsizei, _ v:UnsafePointer<GLhalfNV>) {glVertexAttribs1hvNV_P(index, n, v)}
public func glVertexAttribs1hvNV(index:GLuint, n:GLsizei, v:UnsafePointer<GLhalfNV>) {glVertexAttribs1hvNV_P(index, n, v)}
var glVertexAttribs1hvNV_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLhalfNV>) -> Void = glVertexAttribs1hvNV_L
public func glVertexAttribs1svNV(_ index:GLuint, _ count:GLsizei, _ v:UnsafePointer<GLshort>) {glVertexAttribs1svNV_P(index, count, v)}
public func glVertexAttribs1svNV(index:GLuint, count:GLsizei, v:UnsafePointer<GLshort>) {glVertexAttribs1svNV_P(index, count, v)}
var glVertexAttribs1svNV_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLshort>) -> Void = glVertexAttribs1svNV_L
public func glVertexAttribs2dvNV(_ index:GLuint, _ count:GLsizei, _ v:UnsafePointer<GLdouble>) {glVertexAttribs2dvNV_P(index, count, v)}
public func glVertexAttribs2dvNV(index:GLuint, count:GLsizei, v:UnsafePointer<GLdouble>) {glVertexAttribs2dvNV_P(index, count, v)}
var glVertexAttribs2dvNV_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLdouble>) -> Void = glVertexAttribs2dvNV_L
public func glVertexAttribs2fvNV(_ index:GLuint, _ count:GLsizei, _ v:UnsafePointer<GLfloat>) {glVertexAttribs2fvNV_P(index, count, v)}
public func glVertexAttribs2fvNV(index:GLuint, count:GLsizei, v:UnsafePointer<GLfloat>) {glVertexAttribs2fvNV_P(index, count, v)}
var glVertexAttribs2fvNV_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLfloat>) -> Void = glVertexAttribs2fvNV_L
public func glVertexAttribs2hvNV(_ index:GLuint, _ n:GLsizei, _ v:UnsafePointer<GLhalfNV>) {glVertexAttribs2hvNV_P(index, n, v)}
public func glVertexAttribs2hvNV(index:GLuint, n:GLsizei, v:UnsafePointer<GLhalfNV>) {glVertexAttribs2hvNV_P(index, n, v)}
var glVertexAttribs2hvNV_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLhalfNV>) -> Void = glVertexAttribs2hvNV_L
public func glVertexAttribs2svNV(_ index:GLuint, _ count:GLsizei, _ v:UnsafePointer<GLshort>) {glVertexAttribs2svNV_P(index, count, v)}
public func glVertexAttribs2svNV(index:GLuint, count:GLsizei, v:UnsafePointer<GLshort>) {glVertexAttribs2svNV_P(index, count, v)}
var glVertexAttribs2svNV_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLshort>) -> Void = glVertexAttribs2svNV_L
public func glVertexAttribs3dvNV(_ index:GLuint, _ count:GLsizei, _ v:UnsafePointer<GLdouble>) {glVertexAttribs3dvNV_P(index, count, v)}
public func glVertexAttribs3dvNV(index:GLuint, count:GLsizei, v:UnsafePointer<GLdouble>) {glVertexAttribs3dvNV_P(index, count, v)}
var glVertexAttribs3dvNV_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLdouble>) -> Void = glVertexAttribs3dvNV_L
public func glVertexAttribs3fvNV(_ index:GLuint, _ count:GLsizei, _ v:UnsafePointer<GLfloat>) {glVertexAttribs3fvNV_P(index, count, v)}
public func glVertexAttribs3fvNV(index:GLuint, count:GLsizei, v:UnsafePointer<GLfloat>) {glVertexAttribs3fvNV_P(index, count, v)}
var glVertexAttribs3fvNV_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLfloat>) -> Void = glVertexAttribs3fvNV_L
public func glVertexAttribs3hvNV(_ index:GLuint, _ n:GLsizei, _ v:UnsafePointer<GLhalfNV>) {glVertexAttribs3hvNV_P(index, n, v)}
public func glVertexAttribs3hvNV(index:GLuint, n:GLsizei, v:UnsafePointer<GLhalfNV>) {glVertexAttribs3hvNV_P(index, n, v)}
var glVertexAttribs3hvNV_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLhalfNV>) -> Void = glVertexAttribs3hvNV_L
public func glVertexAttribs3svNV(_ index:GLuint, _ count:GLsizei, _ v:UnsafePointer<GLshort>) {glVertexAttribs3svNV_P(index, count, v)}
public func glVertexAttribs3svNV(index:GLuint, count:GLsizei, v:UnsafePointer<GLshort>) {glVertexAttribs3svNV_P(index, count, v)}
var glVertexAttribs3svNV_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLshort>) -> Void = glVertexAttribs3svNV_L
public func glVertexAttribs4dvNV(_ index:GLuint, _ count:GLsizei, _ v:UnsafePointer<GLdouble>) {glVertexAttribs4dvNV_P(index, count, v)}
public func glVertexAttribs4dvNV(index:GLuint, count:GLsizei, v:UnsafePointer<GLdouble>) {glVertexAttribs4dvNV_P(index, count, v)}
var glVertexAttribs4dvNV_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLdouble>) -> Void = glVertexAttribs4dvNV_L
public func glVertexAttribs4fvNV(_ index:GLuint, _ count:GLsizei, _ v:UnsafePointer<GLfloat>) {glVertexAttribs4fvNV_P(index, count, v)}
public func glVertexAttribs4fvNV(index:GLuint, count:GLsizei, v:UnsafePointer<GLfloat>) {glVertexAttribs4fvNV_P(index, count, v)}
var glVertexAttribs4fvNV_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLfloat>) -> Void = glVertexAttribs4fvNV_L
public func glVertexAttribs4hvNV(_ index:GLuint, _ n:GLsizei, _ v:UnsafePointer<GLhalfNV>) {glVertexAttribs4hvNV_P(index, n, v)}
public func glVertexAttribs4hvNV(index:GLuint, n:GLsizei, v:UnsafePointer<GLhalfNV>) {glVertexAttribs4hvNV_P(index, n, v)}
var glVertexAttribs4hvNV_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLhalfNV>) -> Void = glVertexAttribs4hvNV_L
public func glVertexAttribs4svNV(_ index:GLuint, _ count:GLsizei, _ v:UnsafePointer<GLshort>) {glVertexAttribs4svNV_P(index, count, v)}
public func glVertexAttribs4svNV(index:GLuint, count:GLsizei, v:UnsafePointer<GLshort>) {glVertexAttribs4svNV_P(index, count, v)}
var glVertexAttribs4svNV_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLshort>) -> Void = glVertexAttribs4svNV_L
public func glVertexAttribs4ubvNV(_ index:GLuint, _ count:GLsizei, _ v:UnsafePointer<GLubyte>) {glVertexAttribs4ubvNV_P(index, count, v)}
public func glVertexAttribs4ubvNV(index:GLuint, count:GLsizei, v:UnsafePointer<GLubyte>) {glVertexAttribs4ubvNV_P(index, count, v)}
var glVertexAttribs4ubvNV_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLubyte>) -> Void = glVertexAttribs4ubvNV_L
public func glVertexBindingDivisor(_ bindingindex:GLuint, _ divisor:GLuint) {glVertexBindingDivisor_P(bindingindex, divisor)}
public func glVertexBindingDivisor(bindingindex:GLuint, divisor:GLuint) {glVertexBindingDivisor_P(bindingindex, divisor)}
var glVertexBindingDivisor_P:@convention(c)(GLuint, GLuint) -> Void = glVertexBindingDivisor_L
public func glVertexBlendARB(_ count:GLint) {glVertexBlendARB_P(count)}
public func glVertexBlendARB(count:GLint) {glVertexBlendARB_P(count)}
var glVertexBlendARB_P:@convention(c)(GLint) -> Void = glVertexBlendARB_L
public func glVertexBlendEnvfATI(_ pname:GLenum, _ param:GLfloat) {glVertexBlendEnvfATI_P(pname, param)}
public func glVertexBlendEnvfATI(pname:GLenum, param:GLfloat) {glVertexBlendEnvfATI_P(pname, param)}
var glVertexBlendEnvfATI_P:@convention(c)(GLenum, GLfloat) -> Void = glVertexBlendEnvfATI_L
public func glVertexBlendEnviATI(_ pname:GLenum, _ param:GLint) {glVertexBlendEnviATI_P(pname, param)}
public func glVertexBlendEnviATI(pname:GLenum, param:GLint) {glVertexBlendEnviATI_P(pname, param)}
var glVertexBlendEnviATI_P:@convention(c)(GLenum, GLint) -> Void = glVertexBlendEnviATI_L
public func glVertexFormatNV(_ size:GLint, _ type:GLenum, _ stride:GLsizei) {glVertexFormatNV_P(size, type, stride)}
public func glVertexFormatNV(size:GLint, type:GLenum, stride:GLsizei) {glVertexFormatNV_P(size, type, stride)}
var glVertexFormatNV_P:@convention(c)(GLint, GLenum, GLsizei) -> Void = glVertexFormatNV_L
public func glVertexP2ui(_ type:GLenum, _ value:GLuint) {glVertexP2ui_P(type, value)}
public func glVertexP2ui(type:GLenum, value:GLuint) {glVertexP2ui_P(type, value)}
var glVertexP2ui_P:@convention(c)(GLenum, GLuint) -> Void = glVertexP2ui_L
public func glVertexP2uiv(_ type:GLenum, _ value:UnsafePointer<GLuint>) {glVertexP2uiv_P(type, value)}
public func glVertexP2uiv(type:GLenum, value:UnsafePointer<GLuint>) {glVertexP2uiv_P(type, value)}
var glVertexP2uiv_P:@convention(c)(GLenum, UnsafePointer<GLuint>) -> Void = glVertexP2uiv_L
public func glVertexP3ui(_ type:GLenum, _ value:GLuint) {glVertexP3ui_P(type, value)}
public func glVertexP3ui(type:GLenum, value:GLuint) {glVertexP3ui_P(type, value)}
var glVertexP3ui_P:@convention(c)(GLenum, GLuint) -> Void = glVertexP3ui_L
public func glVertexP3uiv(_ type:GLenum, _ value:UnsafePointer<GLuint>) {glVertexP3uiv_P(type, value)}
public func glVertexP3uiv(type:GLenum, value:UnsafePointer<GLuint>) {glVertexP3uiv_P(type, value)}
var glVertexP3uiv_P:@convention(c)(GLenum, UnsafePointer<GLuint>) -> Void = glVertexP3uiv_L
public func glVertexP4ui(_ type:GLenum, _ value:GLuint) {glVertexP4ui_P(type, value)}
public func glVertexP4ui(type:GLenum, value:GLuint) {glVertexP4ui_P(type, value)}
var glVertexP4ui_P:@convention(c)(GLenum, GLuint) -> Void = glVertexP4ui_L
public func glVertexP4uiv(_ type:GLenum, _ value:UnsafePointer<GLuint>) {glVertexP4uiv_P(type, value)}
public func glVertexP4uiv(type:GLenum, value:UnsafePointer<GLuint>) {glVertexP4uiv_P(type, value)}
var glVertexP4uiv_P:@convention(c)(GLenum, UnsafePointer<GLuint>) -> Void = glVertexP4uiv_L
public func glVertexPointer(_ size:GLint, _ type:GLenum, _ stride:GLsizei, _ pointer:UnsafeRawPointer) {glVertexPointer_P(size, type, stride, pointer)}
public func glVertexPointer(size:GLint, type:GLenum, stride:GLsizei, pointer:UnsafeRawPointer) {glVertexPointer_P(size, type, stride, pointer)}
var glVertexPointer_P:@convention(c)(GLint, GLenum, GLsizei, UnsafeRawPointer) -> Void = glVertexPointer_L
public func glVertexPointerEXT(_ size:GLint, _ type:GLenum, _ stride:GLsizei, _ count:GLsizei, _ pointer:UnsafeRawPointer) {glVertexPointerEXT_P(size, type, stride, count, pointer)}
public func glVertexPointerEXT(size:GLint, type:GLenum, stride:GLsizei, count:GLsizei, pointer:UnsafeRawPointer) {glVertexPointerEXT_P(size, type, stride, count, pointer)}
var glVertexPointerEXT_P:@convention(c)(GLint, GLenum, GLsizei, GLsizei, UnsafeRawPointer) -> Void = glVertexPointerEXT_L
public func glVertexPointerListIBM(_ size:GLint, _ type:GLenum, _ stride:GLint, _ pointer:UnsafeMutablePointer<UnsafeRawPointer>, _ ptrstride:GLint) {glVertexPointerListIBM_P(size, type, stride, pointer, ptrstride)}
public func glVertexPointerListIBM(size:GLint, type:GLenum, stride:GLint, pointer:UnsafeMutablePointer<UnsafeRawPointer>, ptrstride:GLint) {glVertexPointerListIBM_P(size, type, stride, pointer, ptrstride)}
var glVertexPointerListIBM_P:@convention(c)(GLint, GLenum, GLint, UnsafeMutablePointer<UnsafeRawPointer>, GLint) -> Void = glVertexPointerListIBM_L
public func glVertexPointervINTEL(_ size:GLint, _ type:GLenum, _ pointer:UnsafeMutablePointer<UnsafeRawPointer>) {glVertexPointervINTEL_P(size, type, pointer)}
public func glVertexPointervINTEL(size:GLint, type:GLenum, pointer:UnsafeMutablePointer<UnsafeRawPointer>) {glVertexPointervINTEL_P(size, type, pointer)}
var glVertexPointervINTEL_P:@convention(c)(GLint, GLenum, UnsafeMutablePointer<UnsafeRawPointer>) -> Void = glVertexPointervINTEL_L
public func glVertexStream1dATI(_ stream:GLenum, _ x:GLdouble) {glVertexStream1dATI_P(stream, x)}
public func glVertexStream1dATI(stream:GLenum, x:GLdouble) {glVertexStream1dATI_P(stream, x)}
var glVertexStream1dATI_P:@convention(c)(GLenum, GLdouble) -> Void = glVertexStream1dATI_L
public func glVertexStream1dvATI(_ stream:GLenum, _ coords:UnsafePointer<GLdouble>) {glVertexStream1dvATI_P(stream, coords)}
public func glVertexStream1dvATI(stream:GLenum, coords:UnsafePointer<GLdouble>) {glVertexStream1dvATI_P(stream, coords)}
var glVertexStream1dvATI_P:@convention(c)(GLenum, UnsafePointer<GLdouble>) -> Void = glVertexStream1dvATI_L
public func glVertexStream1fATI(_ stream:GLenum, _ x:GLfloat) {glVertexStream1fATI_P(stream, x)}
public func glVertexStream1fATI(stream:GLenum, x:GLfloat) {glVertexStream1fATI_P(stream, x)}
var glVertexStream1fATI_P:@convention(c)(GLenum, GLfloat) -> Void = glVertexStream1fATI_L
public func glVertexStream1fvATI(_ stream:GLenum, _ coords:UnsafePointer<GLfloat>) {glVertexStream1fvATI_P(stream, coords)}
public func glVertexStream1fvATI(stream:GLenum, coords:UnsafePointer<GLfloat>) {glVertexStream1fvATI_P(stream, coords)}
var glVertexStream1fvATI_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glVertexStream1fvATI_L
public func glVertexStream1iATI(_ stream:GLenum, _ x:GLint) {glVertexStream1iATI_P(stream, x)}
public func glVertexStream1iATI(stream:GLenum, x:GLint) {glVertexStream1iATI_P(stream, x)}
var glVertexStream1iATI_P:@convention(c)(GLenum, GLint) -> Void = glVertexStream1iATI_L
public func glVertexStream1ivATI(_ stream:GLenum, _ coords:UnsafePointer<GLint>) {glVertexStream1ivATI_P(stream, coords)}
public func glVertexStream1ivATI(stream:GLenum, coords:UnsafePointer<GLint>) {glVertexStream1ivATI_P(stream, coords)}
var glVertexStream1ivATI_P:@convention(c)(GLenum, UnsafePointer<GLint>) -> Void = glVertexStream1ivATI_L
public func glVertexStream1sATI(_ stream:GLenum, _ x:GLshort) {glVertexStream1sATI_P(stream, x)}
public func glVertexStream1sATI(stream:GLenum, x:GLshort) {glVertexStream1sATI_P(stream, x)}
var glVertexStream1sATI_P:@convention(c)(GLenum, GLshort) -> Void = glVertexStream1sATI_L
public func glVertexStream1svATI(_ stream:GLenum, _ coords:UnsafePointer<GLshort>) {glVertexStream1svATI_P(stream, coords)}
public func glVertexStream1svATI(stream:GLenum, coords:UnsafePointer<GLshort>) {glVertexStream1svATI_P(stream, coords)}
var glVertexStream1svATI_P:@convention(c)(GLenum, UnsafePointer<GLshort>) -> Void = glVertexStream1svATI_L
public func glVertexStream2dATI(_ stream:GLenum, _ x:GLdouble, _ y:GLdouble) {glVertexStream2dATI_P(stream, x, y)}
public func glVertexStream2dATI(stream:GLenum, x:GLdouble, y:GLdouble) {glVertexStream2dATI_P(stream, x, y)}
var glVertexStream2dATI_P:@convention(c)(GLenum, GLdouble, GLdouble) -> Void = glVertexStream2dATI_L
public func glVertexStream2dvATI(_ stream:GLenum, _ coords:UnsafePointer<GLdouble>) {glVertexStream2dvATI_P(stream, coords)}
public func glVertexStream2dvATI(stream:GLenum, coords:UnsafePointer<GLdouble>) {glVertexStream2dvATI_P(stream, coords)}
var glVertexStream2dvATI_P:@convention(c)(GLenum, UnsafePointer<GLdouble>) -> Void = glVertexStream2dvATI_L
public func glVertexStream2fATI(_ stream:GLenum, _ x:GLfloat, _ y:GLfloat) {glVertexStream2fATI_P(stream, x, y)}
public func glVertexStream2fATI(stream:GLenum, x:GLfloat, y:GLfloat) {glVertexStream2fATI_P(stream, x, y)}
var glVertexStream2fATI_P:@convention(c)(GLenum, GLfloat, GLfloat) -> Void = glVertexStream2fATI_L
public func glVertexStream2fvATI(_ stream:GLenum, _ coords:UnsafePointer<GLfloat>) {glVertexStream2fvATI_P(stream, coords)}
public func glVertexStream2fvATI(stream:GLenum, coords:UnsafePointer<GLfloat>) {glVertexStream2fvATI_P(stream, coords)}
var glVertexStream2fvATI_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glVertexStream2fvATI_L
public func glVertexStream2iATI(_ stream:GLenum, _ x:GLint, _ y:GLint) {glVertexStream2iATI_P(stream, x, y)}
public func glVertexStream2iATI(stream:GLenum, x:GLint, y:GLint) {glVertexStream2iATI_P(stream, x, y)}
var glVertexStream2iATI_P:@convention(c)(GLenum, GLint, GLint) -> Void = glVertexStream2iATI_L
public func glVertexStream2ivATI(_ stream:GLenum, _ coords:UnsafePointer<GLint>) {glVertexStream2ivATI_P(stream, coords)}
public func glVertexStream2ivATI(stream:GLenum, coords:UnsafePointer<GLint>) {glVertexStream2ivATI_P(stream, coords)}
var glVertexStream2ivATI_P:@convention(c)(GLenum, UnsafePointer<GLint>) -> Void = glVertexStream2ivATI_L
public func glVertexStream2sATI(_ stream:GLenum, _ x:GLshort, _ y:GLshort) {glVertexStream2sATI_P(stream, x, y)}
public func glVertexStream2sATI(stream:GLenum, x:GLshort, y:GLshort) {glVertexStream2sATI_P(stream, x, y)}
var glVertexStream2sATI_P:@convention(c)(GLenum, GLshort, GLshort) -> Void = glVertexStream2sATI_L
public func glVertexStream2svATI(_ stream:GLenum, _ coords:UnsafePointer<GLshort>) {glVertexStream2svATI_P(stream, coords)}
public func glVertexStream2svATI(stream:GLenum, coords:UnsafePointer<GLshort>) {glVertexStream2svATI_P(stream, coords)}
var glVertexStream2svATI_P:@convention(c)(GLenum, UnsafePointer<GLshort>) -> Void = glVertexStream2svATI_L
public func glVertexStream3dATI(_ stream:GLenum, _ x:GLdouble, _ y:GLdouble, _ z:GLdouble) {glVertexStream3dATI_P(stream, x, y, z)}
public func glVertexStream3dATI(stream:GLenum, x:GLdouble, y:GLdouble, z:GLdouble) {glVertexStream3dATI_P(stream, x, y, z)}
var glVertexStream3dATI_P:@convention(c)(GLenum, GLdouble, GLdouble, GLdouble) -> Void = glVertexStream3dATI_L
public func glVertexStream3dvATI(_ stream:GLenum, _ coords:UnsafePointer<GLdouble>) {glVertexStream3dvATI_P(stream, coords)}
public func glVertexStream3dvATI(stream:GLenum, coords:UnsafePointer<GLdouble>) {glVertexStream3dvATI_P(stream, coords)}
var glVertexStream3dvATI_P:@convention(c)(GLenum, UnsafePointer<GLdouble>) -> Void = glVertexStream3dvATI_L
public func glVertexStream3fATI(_ stream:GLenum, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat) {glVertexStream3fATI_P(stream, x, y, z)}
public func glVertexStream3fATI(stream:GLenum, x:GLfloat, y:GLfloat, z:GLfloat) {glVertexStream3fATI_P(stream, x, y, z)}
var glVertexStream3fATI_P:@convention(c)(GLenum, GLfloat, GLfloat, GLfloat) -> Void = glVertexStream3fATI_L
public func glVertexStream3fvATI(_ stream:GLenum, _ coords:UnsafePointer<GLfloat>) {glVertexStream3fvATI_P(stream, coords)}
public func glVertexStream3fvATI(stream:GLenum, coords:UnsafePointer<GLfloat>) {glVertexStream3fvATI_P(stream, coords)}
var glVertexStream3fvATI_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glVertexStream3fvATI_L
public func glVertexStream3iATI(_ stream:GLenum, _ x:GLint, _ y:GLint, _ z:GLint) {glVertexStream3iATI_P(stream, x, y, z)}
public func glVertexStream3iATI(stream:GLenum, x:GLint, y:GLint, z:GLint) {glVertexStream3iATI_P(stream, x, y, z)}
var glVertexStream3iATI_P:@convention(c)(GLenum, GLint, GLint, GLint) -> Void = glVertexStream3iATI_L
public func glVertexStream3ivATI(_ stream:GLenum, _ coords:UnsafePointer<GLint>) {glVertexStream3ivATI_P(stream, coords)}
public func glVertexStream3ivATI(stream:GLenum, coords:UnsafePointer<GLint>) {glVertexStream3ivATI_P(stream, coords)}
var glVertexStream3ivATI_P:@convention(c)(GLenum, UnsafePointer<GLint>) -> Void = glVertexStream3ivATI_L
public func glVertexStream3sATI(_ stream:GLenum, _ x:GLshort, _ y:GLshort, _ z:GLshort) {glVertexStream3sATI_P(stream, x, y, z)}
public func glVertexStream3sATI(stream:GLenum, x:GLshort, y:GLshort, z:GLshort) {glVertexStream3sATI_P(stream, x, y, z)}
var glVertexStream3sATI_P:@convention(c)(GLenum, GLshort, GLshort, GLshort) -> Void = glVertexStream3sATI_L
public func glVertexStream3svATI(_ stream:GLenum, _ coords:UnsafePointer<GLshort>) {glVertexStream3svATI_P(stream, coords)}
public func glVertexStream3svATI(stream:GLenum, coords:UnsafePointer<GLshort>) {glVertexStream3svATI_P(stream, coords)}
var glVertexStream3svATI_P:@convention(c)(GLenum, UnsafePointer<GLshort>) -> Void = glVertexStream3svATI_L
public func glVertexStream4dATI(_ stream:GLenum, _ x:GLdouble, _ y:GLdouble, _ z:GLdouble, _ w:GLdouble) {glVertexStream4dATI_P(stream, x, y, z, w)}
public func glVertexStream4dATI(stream:GLenum, x:GLdouble, y:GLdouble, z:GLdouble, w:GLdouble) {glVertexStream4dATI_P(stream, x, y, z, w)}
var glVertexStream4dATI_P:@convention(c)(GLenum, GLdouble, GLdouble, GLdouble, GLdouble) -> Void = glVertexStream4dATI_L
public func glVertexStream4dvATI(_ stream:GLenum, _ coords:UnsafePointer<GLdouble>) {glVertexStream4dvATI_P(stream, coords)}
public func glVertexStream4dvATI(stream:GLenum, coords:UnsafePointer<GLdouble>) {glVertexStream4dvATI_P(stream, coords)}
var glVertexStream4dvATI_P:@convention(c)(GLenum, UnsafePointer<GLdouble>) -> Void = glVertexStream4dvATI_L
public func glVertexStream4fATI(_ stream:GLenum, _ x:GLfloat, _ y:GLfloat, _ z:GLfloat, _ w:GLfloat) {glVertexStream4fATI_P(stream, x, y, z, w)}
public func glVertexStream4fATI(stream:GLenum, x:GLfloat, y:GLfloat, z:GLfloat, w:GLfloat) {glVertexStream4fATI_P(stream, x, y, z, w)}
var glVertexStream4fATI_P:@convention(c)(GLenum, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glVertexStream4fATI_L
public func glVertexStream4fvATI(_ stream:GLenum, _ coords:UnsafePointer<GLfloat>) {glVertexStream4fvATI_P(stream, coords)}
public func glVertexStream4fvATI(stream:GLenum, coords:UnsafePointer<GLfloat>) {glVertexStream4fvATI_P(stream, coords)}
var glVertexStream4fvATI_P:@convention(c)(GLenum, UnsafePointer<GLfloat>) -> Void = glVertexStream4fvATI_L
public func glVertexStream4iATI(_ stream:GLenum, _ x:GLint, _ y:GLint, _ z:GLint, _ w:GLint) {glVertexStream4iATI_P(stream, x, y, z, w)}
public func glVertexStream4iATI(stream:GLenum, x:GLint, y:GLint, z:GLint, w:GLint) {glVertexStream4iATI_P(stream, x, y, z, w)}
var glVertexStream4iATI_P:@convention(c)(GLenum, GLint, GLint, GLint, GLint) -> Void = glVertexStream4iATI_L
public func glVertexStream4ivATI(_ stream:GLenum, _ coords:UnsafePointer<GLint>) {glVertexStream4ivATI_P(stream, coords)}
public func glVertexStream4ivATI(stream:GLenum, coords:UnsafePointer<GLint>) {glVertexStream4ivATI_P(stream, coords)}
var glVertexStream4ivATI_P:@convention(c)(GLenum, UnsafePointer<GLint>) -> Void = glVertexStream4ivATI_L
public func glVertexStream4sATI(_ stream:GLenum, _ x:GLshort, _ y:GLshort, _ z:GLshort, _ w:GLshort) {glVertexStream4sATI_P(stream, x, y, z, w)}
public func glVertexStream4sATI(stream:GLenum, x:GLshort, y:GLshort, z:GLshort, w:GLshort) {glVertexStream4sATI_P(stream, x, y, z, w)}
var glVertexStream4sATI_P:@convention(c)(GLenum, GLshort, GLshort, GLshort, GLshort) -> Void = glVertexStream4sATI_L
public func glVertexStream4svATI(_ stream:GLenum, _ coords:UnsafePointer<GLshort>) {glVertexStream4svATI_P(stream, coords)}
public func glVertexStream4svATI(stream:GLenum, coords:UnsafePointer<GLshort>) {glVertexStream4svATI_P(stream, coords)}
var glVertexStream4svATI_P:@convention(c)(GLenum, UnsafePointer<GLshort>) -> Void = glVertexStream4svATI_L
public func glVertexWeightPointerEXT(_ size:GLint, _ type:GLenum, _ stride:GLsizei, _ pointer:UnsafeRawPointer) {glVertexWeightPointerEXT_P(size, type, stride, pointer)}
public func glVertexWeightPointerEXT(size:GLint, type:GLenum, stride:GLsizei, pointer:UnsafeRawPointer) {glVertexWeightPointerEXT_P(size, type, stride, pointer)}
var glVertexWeightPointerEXT_P:@convention(c)(GLint, GLenum, GLsizei, UnsafeRawPointer) -> Void = glVertexWeightPointerEXT_L
public func glVertexWeightfEXT(_ weight:GLfloat) {glVertexWeightfEXT_P(weight)}
public func glVertexWeightfEXT(weight:GLfloat) {glVertexWeightfEXT_P(weight)}
var glVertexWeightfEXT_P:@convention(c)(GLfloat) -> Void = glVertexWeightfEXT_L
public func glVertexWeightfvEXT(_ weight:UnsafePointer<GLfloat>) {glVertexWeightfvEXT_P(weight)}
public func glVertexWeightfvEXT(weight:UnsafePointer<GLfloat>) {glVertexWeightfvEXT_P(weight)}
var glVertexWeightfvEXT_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glVertexWeightfvEXT_L
public func glVertexWeighthNV(_ weight:GLhalfNV) {glVertexWeighthNV_P(weight)}
public func glVertexWeighthNV(weight:GLhalfNV) {glVertexWeighthNV_P(weight)}
var glVertexWeighthNV_P:@convention(c)(GLhalfNV) -> Void = glVertexWeighthNV_L
public func glVertexWeighthvNV(_ weight:UnsafePointer<GLhalfNV>) {glVertexWeighthvNV_P(weight)}
public func glVertexWeighthvNV(weight:UnsafePointer<GLhalfNV>) {glVertexWeighthvNV_P(weight)}
var glVertexWeighthvNV_P:@convention(c)(UnsafePointer<GLhalfNV>) -> Void = glVertexWeighthvNV_L
public func glVideoCaptureNV(_ video_capture_slot:GLuint, _ sequence_num:UnsafeMutablePointer<GLuint>, _ capture_time:UnsafeMutablePointer<GLuint64EXT>) -> GLenum {return glVideoCaptureNV_P(video_capture_slot, sequence_num, capture_time)}
public func glVideoCaptureNV(video_capture_slot:GLuint, sequence_num:UnsafeMutablePointer<GLuint>, capture_time:UnsafeMutablePointer<GLuint64EXT>) -> GLenum {return glVideoCaptureNV_P(video_capture_slot, sequence_num, capture_time)}
var glVideoCaptureNV_P:@convention(c)(GLuint, UnsafeMutablePointer<GLuint>, UnsafeMutablePointer<GLuint64EXT>) -> GLenum = glVideoCaptureNV_L
public func glVideoCaptureStreamParameterdvNV(_ video_capture_slot:GLuint, _ stream:GLuint, _ pname:GLenum, _ params:UnsafePointer<GLdouble>) {glVideoCaptureStreamParameterdvNV_P(video_capture_slot, stream, pname, params)}
public func glVideoCaptureStreamParameterdvNV(video_capture_slot:GLuint, stream:GLuint, pname:GLenum, params:UnsafePointer<GLdouble>) {glVideoCaptureStreamParameterdvNV_P(video_capture_slot, stream, pname, params)}
var glVideoCaptureStreamParameterdvNV_P:@convention(c)(GLuint, GLuint, GLenum, UnsafePointer<GLdouble>) -> Void = glVideoCaptureStreamParameterdvNV_L
public func glVideoCaptureStreamParameterfvNV(_ video_capture_slot:GLuint, _ stream:GLuint, _ pname:GLenum, _ params:UnsafePointer<GLfloat>) {glVideoCaptureStreamParameterfvNV_P(video_capture_slot, stream, pname, params)}
public func glVideoCaptureStreamParameterfvNV(video_capture_slot:GLuint, stream:GLuint, pname:GLenum, params:UnsafePointer<GLfloat>) {glVideoCaptureStreamParameterfvNV_P(video_capture_slot, stream, pname, params)}
var glVideoCaptureStreamParameterfvNV_P:@convention(c)(GLuint, GLuint, GLenum, UnsafePointer<GLfloat>) -> Void = glVideoCaptureStreamParameterfvNV_L
public func glVideoCaptureStreamParameterivNV(_ video_capture_slot:GLuint, _ stream:GLuint, _ pname:GLenum, _ params:UnsafePointer<GLint>) {glVideoCaptureStreamParameterivNV_P(video_capture_slot, stream, pname, params)}
public func glVideoCaptureStreamParameterivNV(video_capture_slot:GLuint, stream:GLuint, pname:GLenum, params:UnsafePointer<GLint>) {glVideoCaptureStreamParameterivNV_P(video_capture_slot, stream, pname, params)}
var glVideoCaptureStreamParameterivNV_P:@convention(c)(GLuint, GLuint, GLenum, UnsafePointer<GLint>) -> Void = glVideoCaptureStreamParameterivNV_L
public func glViewport(_ x:GLint, _ y:GLint, _ width:GLsizei, _ height:GLsizei) {glViewport_P(x, y, width, height)}
public func glViewport(x:GLint, y:GLint, width:GLsizei, height:GLsizei) {glViewport_P(x, y, width, height)}
var glViewport_P:@convention(c)(GLint, GLint, GLsizei, GLsizei) -> Void = glViewport_L
public func glViewportArrayv(_ first:GLuint, _ count:GLsizei, _ v:UnsafePointer<GLfloat>) {glViewportArrayv_P(first, count, v)}
public func glViewportArrayv(first:GLuint, count:GLsizei, v:UnsafePointer<GLfloat>) {glViewportArrayv_P(first, count, v)}
var glViewportArrayv_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLfloat>) -> Void = glViewportArrayv_L
public func glViewportArrayvNV(_ first:GLuint, _ count:GLsizei, _ v:UnsafePointer<GLfloat>) {glViewportArrayvNV_P(first, count, v)}
public func glViewportArrayvNV(first:GLuint, count:GLsizei, v:UnsafePointer<GLfloat>) {glViewportArrayvNV_P(first, count, v)}
var glViewportArrayvNV_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLfloat>) -> Void = glViewportArrayvNV_L
public func glViewportIndexedf(_ index:GLuint, _ x:GLfloat, _ y:GLfloat, _ w:GLfloat, _ h:GLfloat) {glViewportIndexedf_P(index, x, y, w, h)}
public func glViewportIndexedf(index:GLuint, x:GLfloat, y:GLfloat, w:GLfloat, h:GLfloat) {glViewportIndexedf_P(index, x, y, w, h)}
var glViewportIndexedf_P:@convention(c)(GLuint, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glViewportIndexedf_L
public func glViewportIndexedfNV(_ index:GLuint, _ x:GLfloat, _ y:GLfloat, _ w:GLfloat, _ h:GLfloat) {glViewportIndexedfNV_P(index, x, y, w, h)}
public func glViewportIndexedfNV(index:GLuint, x:GLfloat, y:GLfloat, w:GLfloat, h:GLfloat) {glViewportIndexedfNV_P(index, x, y, w, h)}
var glViewportIndexedfNV_P:@convention(c)(GLuint, GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glViewportIndexedfNV_L
public func glViewportIndexedfv(_ index:GLuint, _ v:UnsafePointer<GLfloat>) {glViewportIndexedfv_P(index, v)}
public func glViewportIndexedfv(index:GLuint, v:UnsafePointer<GLfloat>) {glViewportIndexedfv_P(index, v)}
var glViewportIndexedfv_P:@convention(c)(GLuint, UnsafePointer<GLfloat>) -> Void = glViewportIndexedfv_L
public func glViewportIndexedfvNV(_ index:GLuint, _ v:UnsafePointer<GLfloat>) {glViewportIndexedfvNV_P(index, v)}
public func glViewportIndexedfvNV(index:GLuint, v:UnsafePointer<GLfloat>) {glViewportIndexedfvNV_P(index, v)}
var glViewportIndexedfvNV_P:@convention(c)(GLuint, UnsafePointer<GLfloat>) -> Void = glViewportIndexedfvNV_L
public func glWaitSync(_ sync:GLsync, _ flags:GLbitfield, _ timeout:GLuint64) {glWaitSync_P(sync, flags, timeout)}
public func glWaitSync(sync:GLsync, flags:GLbitfield, timeout:GLuint64) {glWaitSync_P(sync, flags, timeout)}
var glWaitSync_P:@convention(c)(GLsync, GLbitfield, GLuint64) -> Void = glWaitSync_L
public func glWaitSyncAPPLE(_ sync:GLsync, _ flags:GLbitfield, _ timeout:GLuint64) {glWaitSyncAPPLE_P(sync, flags, timeout)}
public func glWaitSyncAPPLE(sync:GLsync, flags:GLbitfield, timeout:GLuint64) {glWaitSyncAPPLE_P(sync, flags, timeout)}
var glWaitSyncAPPLE_P:@convention(c)(GLsync, GLbitfield, GLuint64) -> Void = glWaitSyncAPPLE_L
public func glWeightPathsNV(_ resultPath:GLuint, _ numPaths:GLsizei, _ paths:UnsafePointer<GLuint>, _ weights:UnsafePointer<GLfloat>) {glWeightPathsNV_P(resultPath, numPaths, paths, weights)}
public func glWeightPathsNV(resultPath:GLuint, numPaths:GLsizei, paths:UnsafePointer<GLuint>, weights:UnsafePointer<GLfloat>) {glWeightPathsNV_P(resultPath, numPaths, paths, weights)}
var glWeightPathsNV_P:@convention(c)(GLuint, GLsizei, UnsafePointer<GLuint>, UnsafePointer<GLfloat>) -> Void = glWeightPathsNV_L
public func glWeightPointerARB(_ size:GLint, _ type:GLenum, _ stride:GLsizei, _ pointer:UnsafeRawPointer) {glWeightPointerARB_P(size, type, stride, pointer)}
public func glWeightPointerARB(size:GLint, type:GLenum, stride:GLsizei, pointer:UnsafeRawPointer) {glWeightPointerARB_P(size, type, stride, pointer)}
var glWeightPointerARB_P:@convention(c)(GLint, GLenum, GLsizei, UnsafeRawPointer) -> Void = glWeightPointerARB_L
public func glWeightPointerOES(_ size:GLint, _ type:GLenum, _ stride:GLsizei, _ pointer:UnsafeRawPointer) {glWeightPointerOES_P(size, type, stride, pointer)}
public func glWeightPointerOES(size:GLint, type:GLenum, stride:GLsizei, pointer:UnsafeRawPointer) {glWeightPointerOES_P(size, type, stride, pointer)}
var glWeightPointerOES_P:@convention(c)(GLint, GLenum, GLsizei, UnsafeRawPointer) -> Void = glWeightPointerOES_L
public func glWeightbvARB(_ size:GLint, _ weights:UnsafePointer<GLbyte>) {glWeightbvARB_P(size, weights)}
public func glWeightbvARB(size:GLint, weights:UnsafePointer<GLbyte>) {glWeightbvARB_P(size, weights)}
var glWeightbvARB_P:@convention(c)(GLint, UnsafePointer<GLbyte>) -> Void = glWeightbvARB_L
public func glWeightdvARB(_ size:GLint, _ weights:UnsafePointer<GLdouble>) {glWeightdvARB_P(size, weights)}
public func glWeightdvARB(size:GLint, weights:UnsafePointer<GLdouble>) {glWeightdvARB_P(size, weights)}
var glWeightdvARB_P:@convention(c)(GLint, UnsafePointer<GLdouble>) -> Void = glWeightdvARB_L
public func glWeightfvARB(_ size:GLint, _ weights:UnsafePointer<GLfloat>) {glWeightfvARB_P(size, weights)}
public func glWeightfvARB(size:GLint, weights:UnsafePointer<GLfloat>) {glWeightfvARB_P(size, weights)}
var glWeightfvARB_P:@convention(c)(GLint, UnsafePointer<GLfloat>) -> Void = glWeightfvARB_L
public func glWeightivARB(_ size:GLint, _ weights:UnsafePointer<GLint>) {glWeightivARB_P(size, weights)}
public func glWeightivARB(size:GLint, weights:UnsafePointer<GLint>) {glWeightivARB_P(size, weights)}
var glWeightivARB_P:@convention(c)(GLint, UnsafePointer<GLint>) -> Void = glWeightivARB_L
public func glWeightsvARB(_ size:GLint, _ weights:UnsafePointer<GLshort>) {glWeightsvARB_P(size, weights)}
public func glWeightsvARB(size:GLint, weights:UnsafePointer<GLshort>) {glWeightsvARB_P(size, weights)}
var glWeightsvARB_P:@convention(c)(GLint, UnsafePointer<GLshort>) -> Void = glWeightsvARB_L
public func glWeightubvARB(_ size:GLint, _ weights:UnsafePointer<GLubyte>) {glWeightubvARB_P(size, weights)}
public func glWeightubvARB(size:GLint, weights:UnsafePointer<GLubyte>) {glWeightubvARB_P(size, weights)}
var glWeightubvARB_P:@convention(c)(GLint, UnsafePointer<GLubyte>) -> Void = glWeightubvARB_L
public func glWeightuivARB(_ size:GLint, _ weights:UnsafePointer<GLuint>) {glWeightuivARB_P(size, weights)}
public func glWeightuivARB(size:GLint, weights:UnsafePointer<GLuint>) {glWeightuivARB_P(size, weights)}
var glWeightuivARB_P:@convention(c)(GLint, UnsafePointer<GLuint>) -> Void = glWeightuivARB_L
public func glWeightusvARB(_ size:GLint, _ weights:UnsafePointer<GLushort>) {glWeightusvARB_P(size, weights)}
public func glWeightusvARB(size:GLint, weights:UnsafePointer<GLushort>) {glWeightusvARB_P(size, weights)}
var glWeightusvARB_P:@convention(c)(GLint, UnsafePointer<GLushort>) -> Void = glWeightusvARB_L
public func glWindowPos2d(_ x:GLdouble, _ y:GLdouble) {glWindowPos2d_P(x, y)}
public func glWindowPos2d(x:GLdouble, y:GLdouble) {glWindowPos2d_P(x, y)}
var glWindowPos2d_P:@convention(c)(GLdouble, GLdouble) -> Void = glWindowPos2d_L
public func glWindowPos2dARB(_ x:GLdouble, _ y:GLdouble) {glWindowPos2dARB_P(x, y)}
public func glWindowPos2dARB(x:GLdouble, y:GLdouble) {glWindowPos2dARB_P(x, y)}
var glWindowPos2dARB_P:@convention(c)(GLdouble, GLdouble) -> Void = glWindowPos2dARB_L
public func glWindowPos2dMESA(_ x:GLdouble, _ y:GLdouble) {glWindowPos2dMESA_P(x, y)}
public func glWindowPos2dMESA(x:GLdouble, y:GLdouble) {glWindowPos2dMESA_P(x, y)}
var glWindowPos2dMESA_P:@convention(c)(GLdouble, GLdouble) -> Void = glWindowPos2dMESA_L
public func glWindowPos2dv(_ v:UnsafePointer<GLdouble>) {glWindowPos2dv_P(v)}
public func glWindowPos2dv(v:UnsafePointer<GLdouble>) {glWindowPos2dv_P(v)}
var glWindowPos2dv_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glWindowPos2dv_L
public func glWindowPos2dvARB(_ v:UnsafePointer<GLdouble>) {glWindowPos2dvARB_P(v)}
public func glWindowPos2dvARB(v:UnsafePointer<GLdouble>) {glWindowPos2dvARB_P(v)}
var glWindowPos2dvARB_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glWindowPos2dvARB_L
public func glWindowPos2dvMESA(_ v:UnsafePointer<GLdouble>) {glWindowPos2dvMESA_P(v)}
public func glWindowPos2dvMESA(v:UnsafePointer<GLdouble>) {glWindowPos2dvMESA_P(v)}
var glWindowPos2dvMESA_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glWindowPos2dvMESA_L
public func glWindowPos2f(_ x:GLfloat, _ y:GLfloat) {glWindowPos2f_P(x, y)}
public func glWindowPos2f(x:GLfloat, y:GLfloat) {glWindowPos2f_P(x, y)}
var glWindowPos2f_P:@convention(c)(GLfloat, GLfloat) -> Void = glWindowPos2f_L
public func glWindowPos2fARB(_ x:GLfloat, _ y:GLfloat) {glWindowPos2fARB_P(x, y)}
public func glWindowPos2fARB(x:GLfloat, y:GLfloat) {glWindowPos2fARB_P(x, y)}
var glWindowPos2fARB_P:@convention(c)(GLfloat, GLfloat) -> Void = glWindowPos2fARB_L
public func glWindowPos2fMESA(_ x:GLfloat, _ y:GLfloat) {glWindowPos2fMESA_P(x, y)}
public func glWindowPos2fMESA(x:GLfloat, y:GLfloat) {glWindowPos2fMESA_P(x, y)}
var glWindowPos2fMESA_P:@convention(c)(GLfloat, GLfloat) -> Void = glWindowPos2fMESA_L
public func glWindowPos2fv(_ v:UnsafePointer<GLfloat>) {glWindowPos2fv_P(v)}
public func glWindowPos2fv(v:UnsafePointer<GLfloat>) {glWindowPos2fv_P(v)}
var glWindowPos2fv_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glWindowPos2fv_L
public func glWindowPos2fvARB(_ v:UnsafePointer<GLfloat>) {glWindowPos2fvARB_P(v)}
public func glWindowPos2fvARB(v:UnsafePointer<GLfloat>) {glWindowPos2fvARB_P(v)}
var glWindowPos2fvARB_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glWindowPos2fvARB_L
public func glWindowPos2fvMESA(_ v:UnsafePointer<GLfloat>) {glWindowPos2fvMESA_P(v)}
public func glWindowPos2fvMESA(v:UnsafePointer<GLfloat>) {glWindowPos2fvMESA_P(v)}
var glWindowPos2fvMESA_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glWindowPos2fvMESA_L
public func glWindowPos2i(_ x:GLint, _ y:GLint) {glWindowPos2i_P(x, y)}
public func glWindowPos2i(x:GLint, y:GLint) {glWindowPos2i_P(x, y)}
var glWindowPos2i_P:@convention(c)(GLint, GLint) -> Void = glWindowPos2i_L
public func glWindowPos2iARB(_ x:GLint, _ y:GLint) {glWindowPos2iARB_P(x, y)}
public func glWindowPos2iARB(x:GLint, y:GLint) {glWindowPos2iARB_P(x, y)}
var glWindowPos2iARB_P:@convention(c)(GLint, GLint) -> Void = glWindowPos2iARB_L
public func glWindowPos2iMESA(_ x:GLint, _ y:GLint) {glWindowPos2iMESA_P(x, y)}
public func glWindowPos2iMESA(x:GLint, y:GLint) {glWindowPos2iMESA_P(x, y)}
var glWindowPos2iMESA_P:@convention(c)(GLint, GLint) -> Void = glWindowPos2iMESA_L
public func glWindowPos2iv(_ v:UnsafePointer<GLint>) {glWindowPos2iv_P(v)}
public func glWindowPos2iv(v:UnsafePointer<GLint>) {glWindowPos2iv_P(v)}
var glWindowPos2iv_P:@convention(c)(UnsafePointer<GLint>) -> Void = glWindowPos2iv_L
public func glWindowPos2ivARB(_ v:UnsafePointer<GLint>) {glWindowPos2ivARB_P(v)}
public func glWindowPos2ivARB(v:UnsafePointer<GLint>) {glWindowPos2ivARB_P(v)}
var glWindowPos2ivARB_P:@convention(c)(UnsafePointer<GLint>) -> Void = glWindowPos2ivARB_L
public func glWindowPos2ivMESA(_ v:UnsafePointer<GLint>) {glWindowPos2ivMESA_P(v)}
public func glWindowPos2ivMESA(v:UnsafePointer<GLint>) {glWindowPos2ivMESA_P(v)}
var glWindowPos2ivMESA_P:@convention(c)(UnsafePointer<GLint>) -> Void = glWindowPos2ivMESA_L
public func glWindowPos2s(_ x:GLshort, _ y:GLshort) {glWindowPos2s_P(x, y)}
public func glWindowPos2s(x:GLshort, y:GLshort) {glWindowPos2s_P(x, y)}
var glWindowPos2s_P:@convention(c)(GLshort, GLshort) -> Void = glWindowPos2s_L
public func glWindowPos2sARB(_ x:GLshort, _ y:GLshort) {glWindowPos2sARB_P(x, y)}
public func glWindowPos2sARB(x:GLshort, y:GLshort) {glWindowPos2sARB_P(x, y)}
var glWindowPos2sARB_P:@convention(c)(GLshort, GLshort) -> Void = glWindowPos2sARB_L
public func glWindowPos2sMESA(_ x:GLshort, _ y:GLshort) {glWindowPos2sMESA_P(x, y)}
public func glWindowPos2sMESA(x:GLshort, y:GLshort) {glWindowPos2sMESA_P(x, y)}
var glWindowPos2sMESA_P:@convention(c)(GLshort, GLshort) -> Void = glWindowPos2sMESA_L
public func glWindowPos2sv(_ v:UnsafePointer<GLshort>) {glWindowPos2sv_P(v)}
public func glWindowPos2sv(v:UnsafePointer<GLshort>) {glWindowPos2sv_P(v)}
var glWindowPos2sv_P:@convention(c)(UnsafePointer<GLshort>) -> Void = glWindowPos2sv_L
public func glWindowPos2svARB(_ v:UnsafePointer<GLshort>) {glWindowPos2svARB_P(v)}
public func glWindowPos2svARB(v:UnsafePointer<GLshort>) {glWindowPos2svARB_P(v)}
var glWindowPos2svARB_P:@convention(c)(UnsafePointer<GLshort>) -> Void = glWindowPos2svARB_L
public func glWindowPos2svMESA(_ v:UnsafePointer<GLshort>) {glWindowPos2svMESA_P(v)}
public func glWindowPos2svMESA(v:UnsafePointer<GLshort>) {glWindowPos2svMESA_P(v)}
var glWindowPos2svMESA_P:@convention(c)(UnsafePointer<GLshort>) -> Void = glWindowPos2svMESA_L
public func glWindowPos3d(_ x:GLdouble, _ y:GLdouble, _ z:GLdouble) {glWindowPos3d_P(x, y, z)}
public func glWindowPos3d(x:GLdouble, y:GLdouble, z:GLdouble) {glWindowPos3d_P(x, y, z)}
var glWindowPos3d_P:@convention(c)(GLdouble, GLdouble, GLdouble) -> Void = glWindowPos3d_L
public func glWindowPos3dARB(_ x:GLdouble, _ y:GLdouble, _ z:GLdouble) {glWindowPos3dARB_P(x, y, z)}
public func glWindowPos3dARB(x:GLdouble, y:GLdouble, z:GLdouble) {glWindowPos3dARB_P(x, y, z)}
var glWindowPos3dARB_P:@convention(c)(GLdouble, GLdouble, GLdouble) -> Void = glWindowPos3dARB_L
public func glWindowPos3dMESA(_ x:GLdouble, _ y:GLdouble, _ z:GLdouble) {glWindowPos3dMESA_P(x, y, z)}
public func glWindowPos3dMESA(x:GLdouble, y:GLdouble, z:GLdouble) {glWindowPos3dMESA_P(x, y, z)}
var glWindowPos3dMESA_P:@convention(c)(GLdouble, GLdouble, GLdouble) -> Void = glWindowPos3dMESA_L
public func glWindowPos3dv(_ v:UnsafePointer<GLdouble>) {glWindowPos3dv_P(v)}
public func glWindowPos3dv(v:UnsafePointer<GLdouble>) {glWindowPos3dv_P(v)}
var glWindowPos3dv_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glWindowPos3dv_L
public func glWindowPos3dvARB(_ v:UnsafePointer<GLdouble>) {glWindowPos3dvARB_P(v)}
public func glWindowPos3dvARB(v:UnsafePointer<GLdouble>) {glWindowPos3dvARB_P(v)}
var glWindowPos3dvARB_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glWindowPos3dvARB_L
public func glWindowPos3dvMESA(_ v:UnsafePointer<GLdouble>) {glWindowPos3dvMESA_P(v)}
public func glWindowPos3dvMESA(v:UnsafePointer<GLdouble>) {glWindowPos3dvMESA_P(v)}
var glWindowPos3dvMESA_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glWindowPos3dvMESA_L
public func glWindowPos3f(_ x:GLfloat, _ y:GLfloat, _ z:GLfloat) {glWindowPos3f_P(x, y, z)}
public func glWindowPos3f(x:GLfloat, y:GLfloat, z:GLfloat) {glWindowPos3f_P(x, y, z)}
var glWindowPos3f_P:@convention(c)(GLfloat, GLfloat, GLfloat) -> Void = glWindowPos3f_L
public func glWindowPos3fARB(_ x:GLfloat, _ y:GLfloat, _ z:GLfloat) {glWindowPos3fARB_P(x, y, z)}
public func glWindowPos3fARB(x:GLfloat, y:GLfloat, z:GLfloat) {glWindowPos3fARB_P(x, y, z)}
var glWindowPos3fARB_P:@convention(c)(GLfloat, GLfloat, GLfloat) -> Void = glWindowPos3fARB_L
public func glWindowPos3fMESA(_ x:GLfloat, _ y:GLfloat, _ z:GLfloat) {glWindowPos3fMESA_P(x, y, z)}
public func glWindowPos3fMESA(x:GLfloat, y:GLfloat, z:GLfloat) {glWindowPos3fMESA_P(x, y, z)}
var glWindowPos3fMESA_P:@convention(c)(GLfloat, GLfloat, GLfloat) -> Void = glWindowPos3fMESA_L
public func glWindowPos3fv(_ v:UnsafePointer<GLfloat>) {glWindowPos3fv_P(v)}
public func glWindowPos3fv(v:UnsafePointer<GLfloat>) {glWindowPos3fv_P(v)}
var glWindowPos3fv_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glWindowPos3fv_L
public func glWindowPos3fvARB(_ v:UnsafePointer<GLfloat>) {glWindowPos3fvARB_P(v)}
public func glWindowPos3fvARB(v:UnsafePointer<GLfloat>) {glWindowPos3fvARB_P(v)}
var glWindowPos3fvARB_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glWindowPos3fvARB_L
public func glWindowPos3fvMESA(_ v:UnsafePointer<GLfloat>) {glWindowPos3fvMESA_P(v)}
public func glWindowPos3fvMESA(v:UnsafePointer<GLfloat>) {glWindowPos3fvMESA_P(v)}
var glWindowPos3fvMESA_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glWindowPos3fvMESA_L
public func glWindowPos3i(_ x:GLint, _ y:GLint, _ z:GLint) {glWindowPos3i_P(x, y, z)}
public func glWindowPos3i(x:GLint, y:GLint, z:GLint) {glWindowPos3i_P(x, y, z)}
var glWindowPos3i_P:@convention(c)(GLint, GLint, GLint) -> Void = glWindowPos3i_L
public func glWindowPos3iARB(_ x:GLint, _ y:GLint, _ z:GLint) {glWindowPos3iARB_P(x, y, z)}
public func glWindowPos3iARB(x:GLint, y:GLint, z:GLint) {glWindowPos3iARB_P(x, y, z)}
var glWindowPos3iARB_P:@convention(c)(GLint, GLint, GLint) -> Void = glWindowPos3iARB_L
public func glWindowPos3iMESA(_ x:GLint, _ y:GLint, _ z:GLint) {glWindowPos3iMESA_P(x, y, z)}
public func glWindowPos3iMESA(x:GLint, y:GLint, z:GLint) {glWindowPos3iMESA_P(x, y, z)}
var glWindowPos3iMESA_P:@convention(c)(GLint, GLint, GLint) -> Void = glWindowPos3iMESA_L
public func glWindowPos3iv(_ v:UnsafePointer<GLint>) {glWindowPos3iv_P(v)}
public func glWindowPos3iv(v:UnsafePointer<GLint>) {glWindowPos3iv_P(v)}
var glWindowPos3iv_P:@convention(c)(UnsafePointer<GLint>) -> Void = glWindowPos3iv_L
public func glWindowPos3ivARB(_ v:UnsafePointer<GLint>) {glWindowPos3ivARB_P(v)}
public func glWindowPos3ivARB(v:UnsafePointer<GLint>) {glWindowPos3ivARB_P(v)}
var glWindowPos3ivARB_P:@convention(c)(UnsafePointer<GLint>) -> Void = glWindowPos3ivARB_L
public func glWindowPos3ivMESA(_ v:UnsafePointer<GLint>) {glWindowPos3ivMESA_P(v)}
public func glWindowPos3ivMESA(v:UnsafePointer<GLint>) {glWindowPos3ivMESA_P(v)}
var glWindowPos3ivMESA_P:@convention(c)(UnsafePointer<GLint>) -> Void = glWindowPos3ivMESA_L
public func glWindowPos3s(_ x:GLshort, _ y:GLshort, _ z:GLshort) {glWindowPos3s_P(x, y, z)}
public func glWindowPos3s(x:GLshort, y:GLshort, z:GLshort) {glWindowPos3s_P(x, y, z)}
var glWindowPos3s_P:@convention(c)(GLshort, GLshort, GLshort) -> Void = glWindowPos3s_L
public func glWindowPos3sARB(_ x:GLshort, _ y:GLshort, _ z:GLshort) {glWindowPos3sARB_P(x, y, z)}
public func glWindowPos3sARB(x:GLshort, y:GLshort, z:GLshort) {glWindowPos3sARB_P(x, y, z)}
var glWindowPos3sARB_P:@convention(c)(GLshort, GLshort, GLshort) -> Void = glWindowPos3sARB_L
public func glWindowPos3sMESA(_ x:GLshort, _ y:GLshort, _ z:GLshort) {glWindowPos3sMESA_P(x, y, z)}
public func glWindowPos3sMESA(x:GLshort, y:GLshort, z:GLshort) {glWindowPos3sMESA_P(x, y, z)}
var glWindowPos3sMESA_P:@convention(c)(GLshort, GLshort, GLshort) -> Void = glWindowPos3sMESA_L
public func glWindowPos3sv(_ v:UnsafePointer<GLshort>) {glWindowPos3sv_P(v)}
public func glWindowPos3sv(v:UnsafePointer<GLshort>) {glWindowPos3sv_P(v)}
var glWindowPos3sv_P:@convention(c)(UnsafePointer<GLshort>) -> Void = glWindowPos3sv_L
public func glWindowPos3svARB(_ v:UnsafePointer<GLshort>) {glWindowPos3svARB_P(v)}
public func glWindowPos3svARB(v:UnsafePointer<GLshort>) {glWindowPos3svARB_P(v)}
var glWindowPos3svARB_P:@convention(c)(UnsafePointer<GLshort>) -> Void = glWindowPos3svARB_L
public func glWindowPos3svMESA(_ v:UnsafePointer<GLshort>) {glWindowPos3svMESA_P(v)}
public func glWindowPos3svMESA(v:UnsafePointer<GLshort>) {glWindowPos3svMESA_P(v)}
var glWindowPos3svMESA_P:@convention(c)(UnsafePointer<GLshort>) -> Void = glWindowPos3svMESA_L
public func glWindowPos4dMESA(_ x:GLdouble, _ y:GLdouble, _ z:GLdouble, _ w:GLdouble) {glWindowPos4dMESA_P(x, y, z, w)}
public func glWindowPos4dMESA(x:GLdouble, y:GLdouble, z:GLdouble, w:GLdouble) {glWindowPos4dMESA_P(x, y, z, w)}
var glWindowPos4dMESA_P:@convention(c)(GLdouble, GLdouble, GLdouble, GLdouble) -> Void = glWindowPos4dMESA_L
public func glWindowPos4dvMESA(_ v:UnsafePointer<GLdouble>) {glWindowPos4dvMESA_P(v)}
public func glWindowPos4dvMESA(v:UnsafePointer<GLdouble>) {glWindowPos4dvMESA_P(v)}
var glWindowPos4dvMESA_P:@convention(c)(UnsafePointer<GLdouble>) -> Void = glWindowPos4dvMESA_L
public func glWindowPos4fMESA(_ x:GLfloat, _ y:GLfloat, _ z:GLfloat, _ w:GLfloat) {glWindowPos4fMESA_P(x, y, z, w)}
public func glWindowPos4fMESA(x:GLfloat, y:GLfloat, z:GLfloat, w:GLfloat) {glWindowPos4fMESA_P(x, y, z, w)}
var glWindowPos4fMESA_P:@convention(c)(GLfloat, GLfloat, GLfloat, GLfloat) -> Void = glWindowPos4fMESA_L
public func glWindowPos4fvMESA(_ v:UnsafePointer<GLfloat>) {glWindowPos4fvMESA_P(v)}
public func glWindowPos4fvMESA(v:UnsafePointer<GLfloat>) {glWindowPos4fvMESA_P(v)}
var glWindowPos4fvMESA_P:@convention(c)(UnsafePointer<GLfloat>) -> Void = glWindowPos4fvMESA_L
public func glWindowPos4iMESA(_ x:GLint, _ y:GLint, _ z:GLint, _ w:GLint) {glWindowPos4iMESA_P(x, y, z, w)}
public func glWindowPos4iMESA(x:GLint, y:GLint, z:GLint, w:GLint) {glWindowPos4iMESA_P(x, y, z, w)}
var glWindowPos4iMESA_P:@convention(c)(GLint, GLint, GLint, GLint) -> Void = glWindowPos4iMESA_L
public func glWindowPos4ivMESA(_ v:UnsafePointer<GLint>) {glWindowPos4ivMESA_P(v)}
public func glWindowPos4ivMESA(v:UnsafePointer<GLint>) {glWindowPos4ivMESA_P(v)}
var glWindowPos4ivMESA_P:@convention(c)(UnsafePointer<GLint>) -> Void = glWindowPos4ivMESA_L
public func glWindowPos4sMESA(_ x:GLshort, _ y:GLshort, _ z:GLshort, _ w:GLshort) {glWindowPos4sMESA_P(x, y, z, w)}
public func glWindowPos4sMESA(x:GLshort, y:GLshort, z:GLshort, w:GLshort) {glWindowPos4sMESA_P(x, y, z, w)}
var glWindowPos4sMESA_P:@convention(c)(GLshort, GLshort, GLshort, GLshort) -> Void = glWindowPos4sMESA_L
public func glWindowPos4svMESA(_ v:UnsafePointer<GLshort>) {glWindowPos4svMESA_P(v)}
public func glWindowPos4svMESA(v:UnsafePointer<GLshort>) {glWindowPos4svMESA_P(v)}
var glWindowPos4svMESA_P:@convention(c)(UnsafePointer<GLshort>) -> Void = glWindowPos4svMESA_L
public func glWriteMaskEXT(_ res:GLuint, _ input:GLuint, _ outX:GLenum, _ outY:GLenum, _ outZ:GLenum, _ outW:GLenum) {glWriteMaskEXT_P(res, input, outX, outY, outZ, outW)}
public func glWriteMaskEXT(res:GLuint, input:GLuint, outX:GLenum, outY:GLenum, outZ:GLenum, outW:GLenum) {glWriteMaskEXT_P(res, input, outX, outY, outZ, outW)}
var glWriteMaskEXT_P:@convention(c)(GLuint, GLuint, GLenum, GLenum, GLenum, GLenum) -> Void = glWriteMaskEXT_L
